/**
 *
 * Variables and functions for keeping track of info injected into the importing go program at build time
 * To use this code, import it and then add the relevant logic to your build script
 *
 */
package buildinfo

import "fmt"

// Contains information on the version built
type Version struct {
	Tag    string
	Commit string
	Build  string
}

var BuildVersion Version

// The following variables should be assigned at build time by passing values to the linker
// i.e. go build -ldflags "-X flexgen.BuildVersion.gitTag=$tag"
// The git tag of the build, assigned by the linker
var gitTag string = "Git tag not assigned"

// The git commit of the build, assigned by the linker
var gitCommit string = "Git commit not assigned"

// The git build number of the build, assigned by the linker
var gitBuild string = "Git build not assigned"

// Build the version struct from the version info generated by build
func init() {
	// Assign the linked versioning info
	BuildVersion.Tag = gitTag
	BuildVersion.Commit = gitCommit
	BuildVersion.Build = gitBuild
}

// Print the configured version info
func PrintVersion() {
	fmt.Printf("build: %s\n", BuildVersion.Build)
	fmt.Printf("commit: %s\n", BuildVersion.Commit)
	fmt.Printf("tag: %s\n", BuildVersion.Tag)
}
