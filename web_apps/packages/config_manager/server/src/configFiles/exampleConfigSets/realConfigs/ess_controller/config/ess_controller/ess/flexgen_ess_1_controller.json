{
    "/doc/flexgen_ess_1_controller": {
        "note1": "This is the ess controller config file",
        "note1a": "/config/ess                - defines configurable variables used in the ESS Controller source code",
        "note1b": "/master/ess_1_hs             - defines the interface for retrieving data from the ESS modbus server and converting the data into a useable format (ex.: scaling, remap, etc.)",
        "note1c": "/links/ess                 - defines mapping of external interface components to internal variables",
        "note1d": "/schedule/wake_monitor/ess - periodically runs a function for a particular variable (default to 100ms; wake_monitor to be removed)",
        "note2": "To retrieve data from the ESS modbus server, set up the modbus server (flexgen_ess_modbus_server.json)",
        "note2a": "The ESS modbus client (flexgen_ess_modbus_client.json) can then connect to the ESS modbus server to allow data interchange between the ESS Controller and the Site Controller or other external management systems"
    },

    "/config/ess_1": {
        "LogDir": "/var/log/ess_controller",
        "EventSourceFormat": {
            "value": "full",
            "sep": "/"
        },
        "essCommsFaultTimeout": 10,
        "essHeartbeatFaultTimeout": 15,
        "essCommsAlarmTimeout": 7,
        "essCommsRecoverTimeout": 5,
        "AlarmDestination": "/assets/ess/summary:alarms",
        "FaultDestination": "/assets/ess/summary:faults",
        "pChargeTbl": "p_charge_tbl.csv",
        "pDischargeTbl": "p_discharge_tbl.csv",
        "enable": false
    },

    "/links/ess_1": {
        "Heartbeat": {
            "value": "/master/ess_1_ls:life_signal"
        },
        "life": {
            "value": "/master/ess_1_hs:life"
        }
    },

    "/assets/ess/ess_1": {
        "version": {"name": "Version",   "value": "version","enabled": true}
    },

    "/vlinks/ess_1": {
        "note1":" these two assetVars share a common set of values via the linkVar (vlink) pointer",
        "active_power_ess_1_ui":            { "value": "/assets/ess/ess_1:active_power",                     "vlink": "/components/pcs_registers_fast:active_power"},
        "active_power_ess_summary_ui":      { "value": "/assets/ess/summary:active_power",                   "vlink": "/components/pcs_registers_fast:active_power"},
        "active_power_setpoint_ess_1_ui":   { "value": "/assets/ess/ess_1:active_power_setpoint",            "vlink": "/controls/ess_1:ActivePowerSetpoint"},
        "active_power_setpoint_ess_sum_ui": { "value": "/assets/ess/summary:active_power_setpoint",          "vlink": "/controls/ess_1:ActivePowerSetpoint"},
        "soc_ess_1_ui":                     { "value": "/assets/ess/ess_1:soc",                              "vlink": "/status/bms:BMSSOC"},
        "soc_ess_summary_ui":               { "value": "/assets/ess/summary:soc",                            "vlink": "/status/bms:BMSSOC"},
        "soh_ess_1_ui":                     { "value": "/assets/ess/ess_1:soh",                              "vlink": "/components/catl_mbmu_summary_r:mbmu_soh"},
        "soh_ess_summary_ui":               { "value": "/assets/ess/summary:soh",                            "vlink": "/components/catl_mbmu_summary_r:mbmu_soh"},
        "version_ess_1_ui":                 { "value": "/assets/ess/ess_1:version",                          "vlink": "/status/ess_1:build"},
        "version_ess_summary_ui":           { "value": "/assets/ess/summary:version",                        "vlink": "/status/ess_1:build"},
        "max_charge_power_ess_summary":     { "value": "/assets/ess/summary:max_charge_power",               "vlink": "/status/ess_1:MaxESSChargePower"},
        "max_charge_power_ess_1":           { "value": "/assets/ess/ess_1:max_charge_power",                 "vlink": "/status/ess_1:MaxESSChargePower"},
        "max_discharge_power_ess_summary":  { "value": "/assets/ess/summary:max_discharge_power",            "vlink": "/status/ess_1:MaxESSDischargePower"},
        "max_discharge_power_ess_1":        { "value": "/assets/ess/ess_1:max_discharge_power",              "vlink": "/status/ess_1:MaxESSDischargePower"},
        "system_state_ess_summary":         { "value": "/assets/ess/summary:status",                         "vlink": "/status/pcs:SystemState"}, 
        "system_state_ess_1":               { "value": "/assets/ess/ess_1:status",                           "vlink": "/status/pcs:SystemState"},    

        "site_max_charge_power":            { "value": "/master/ess_1_ls:chargeable_power",                    "vlink": "/limits/ess_1:MaxChargePower"},
        "site_max_discharge_power":         { "value": "/master/ess_1_ls:dischargeable_power",                 "vlink": "/limits/ess_1:MaxDischargePower"},
        "site_ess_fault_active":            { "value": "/master/ess_1_ls:ess_fault_active",                    "vlink": "/status/ess_1:IsFaulted"}
    }, 

    "/system/commands": {
        "runESSOpts": {
            "value": false,
            "enabled": false,
            "targav": "/system/commands:run",
            "options": [
                {"uri":"/sched/ess_1:pubESS_hs",      "aname":"ess_1", "value":0, "every":0.2},
                {"uri":"/sched/ess_1:pubESS_ls",      "aname":"ess_1", "value":0, "every":0.2},
                {"uri":"/sched/ess_1:pubAssets_ess",  "aname":"ess_1", "value":0, "every":1},
                {"uri":"/sched/ess_1:runMonitor_ess", "aname":"ess_1", "value":0, "every":0.1},
                {"uri":"/sched/ess_1:every100ms_ess", "aname":"ess_1", "value":0, "every":0.1},
                {"uri":"/sched/ess_1:every1000ms_ess","aname":"ess_1", "value":0, "every":1}
            ],
            "actions": {
                "onSet":[{"func":[{"amap": "ess_1", "func":"SchedItemOpts"}]}]
            }
        }
    },
    
    "/sched/ess_1": {
        "pubESS_hs": {
            "value": 0,
            "note": "Publish /master/ess_1_hs every 200ms",
            "enable": "/config/ess_1:enable",
            "mode": "naked",
            "table": "/master/ess_1_hs",
            "actions": {
                "onSet":[{"func":[{"amap": "ess_1", "func":"RunPub"}]}]
            }
        },
        "pubESS_ls": {
            "value": 0,
            "note": "Publish /master/ess_1_ls every 200ms",
            "enable": "/config/ess_1:enable",
            "mode": "naked",
            "table": "/master/ess_1_ls",
            "actions": {
                "onSet":[{"func":[{"amap": "ess_1", "func":"RunPub"}]}]
            }
        },
        "pubAssets_ess": {
            "value": 0,
            "note": "Publish /assets/ess/ess_1 to display UI data every second",
            "enable": "/config/ess_1:enable",
            "mode": "ui",
            "table": "/assets/ess/ess_1",
            "actions": {
                "onSet":[{"func":[{"amap": "ess_1", "func":"RunPub"}]}]
            }
        },
        "runMonitor_ess": {
            "value":1,
            "note": "Run list of functions defined in /schedule/wake_monitor/ess_1 every 100ms",
            "enable": "/config/ess_1:enable",
            "monitor":"wake_monitor",
            "aname":"ess_1",
            "actions":{
                "onSet":[{"func":[{"amap": "ess_1", "func":"RunMonitor"}]}]
            }
        },
        "every100ms_ess":{
            "value":1,
            "note": "Run power command handler and update system time every 100ms",
            "enable": "/config/ess_1:enable",
            "ess": "ess_1",
            "actions":{
                "onSet":[{
                    "func":[
                        {"amap": "ess_1", "func":"HandlePowerCmd"},
                        {"amap": "ess_1", "func":"UpdateSysTime"}
                    ]
                }]
            }
        },
        "every1000ms_ess":{
            "value":1,
            "note": "Check CPU statistics every second",
            "enable": "/config/ess_1:enable",
            "actions":{
                "onSet":[{
                    "func":[
                        {"amap": "ess_1", "func":"Every1000mS"}
                    ]
                }]
            }
        }
    },

    "/schedule/wake_monitor/ess_1": {
        "/status/ess_1:IsFaulted": { "enable": true, "amap": "ess_1", "func":"CalculateVar" }
    },
    "/controls/ess_1": {
        "ReactivePowerSetpoint": 0,
        "ActivePowerSetpoint": 0,
        "PowerPriority": "q",
        "Start": {
            "value": 0,
            "note": "Start the PCS if /controls/ess_1:start_stop is set to 1",
            "enable": "/config/ess_1:enable",
            "ifChanged": false,
            "actions": {
                "onSet": [{
                    "remap": [
                        {"uri": "/controls/pcs:SelectStartMode", "outValue": 0}
                    ],
                    "func": [
                        {"func": "LogInfo",      "amap": "ess_1"},
                        {"func": "CalculateVar", "amap": "ess_1", "inAv": "/controls/pcs:SelectStartMode"}
                    ]
                }]
            }
        },
        "Standby": {
            "value": 0,
            "note": "Put the PCS in standby if /controls/ess_1:start_stop is set to 2",
            "enable": "/config/ess_1:enable",
            "ifChanged": false,
            "actions": {
                "onSet": [{
                    "remap": [
                        {"uri": "/controls/pcs:ActivePowerSetpoint",   "outValue": 0},
                        {"uri": "/controls/pcs:ReactivePowerSetpoint", "outValue": 0},
                        {"uri": "/external/pcs:ActivePowerSetpoint",     "outValue": 0, "fims": "set", "note": "Broadcast 0 kW command to other ESS's"},
                        {"uri": "/external/pcs:ReactivePowerSetpoint",   "outValue": 0, "fims": "set", "note": "Broadcast 0 kVAr command to other ESS's"},
                        {"uri": "/controls/pcs:SelectShutdownMode",    "outValue": 0},
                        {"uri": "/controls/pcs:Standby@triggerCmd",    "outValue": true},
                        {"uri": "/controls/pcs:Standby",               "outValue": 1}
                    ],
                    "func": [
                        {"func": "LogInfo", "amap": "ess_1"}
                    ]
                }]
            }
        },
        "Shutdown": {
            "value": 0,
            "note": "Shutdown the PCS if /controls/ess_1:start_stop is set to 0",
            "enable": "/config/ess_1:enable",
            "ifChanged": false,
            "actions": {
                "onSet": [{
                    "remap": [
                        {"uri": "/controls/pcs:ActivePowerSetpoint",   "outValue": 0},
                        {"uri": "/controls/pcs:ReactivePowerSetpoint", "outValue": 0},
                        {"uri": "/external/pcs:ActivePowerSetpoint",     "outValue": 0, "fims": "set", "note": "Broadcast 0 kW command to other ESS's"},
                        {"uri": "/external/pcs:ReactivePowerSetpoint",   "outValue": 0, "fims": "set", "note": "Broadcast 0 kVAr command to other ESS's"},
                        {"uri": "/controls/pcs:SelectShutdownMode",    "outValue": 0}
                    ],
                    "func": [
                        {"func": "LogInfo",      "amap": "ess_1"},
                        {"func": "CalculateVar", "amap": "ess_1", "inAv": "/controls/pcs:SelectShutdownMode"}
                    ]
                }]
            }
        }
    },
    "/status/ess_1": {
        "ReactivePower": 0,
        "active_power": 1234.5,
        "UiStartup": false,
        "MaxChargePower": 0 ,
        "MaxDischargePower": 0 ,
        "MaxESSChargePower": 0 ,
        "MaxESSDischargePower": 0,
        "FaultShutdown": {
            "value": false,
            "note": "When the ESS faults, we'll shutdown the PCS",
            "ifChanged": true,
            "actions": { 
                "onSet":[{
                    "remap": [
                        {"uri": "/master/ess_1_ls:fault_shutdown", "note": "Pass fault shutdown state up to ESS Controller main"}
                    ],
                    "func": [
                        {"func": "LogInfo", "amap": "ess_1"}
                    ]
                }]
            }
        },
        "FaultCnt": 0,
        "AlarmCnt": 0,
        "IsFaulted": {
            "value": false,
            "useExpr": true,
            "numVars": 3,
            "variable1": "/status/bms:BMSFaultCnt",
            "variable2": "/status/pcs:PCSFaultCnt",
            "variable3": "/status/ess_1:FaultCnt",
            "expression": "{1} > 0 or {2} > 0 or {3} > 0"
        }
    },
    "/master/ess_1_hs": {
        "life": {
            "value": 0,
            "EnableStateCheck": false,
            "EnableCommsCheck": true,
            "Type": "int",
            "AlarmTimeout": 5,
            "FaultTimeout": 10,
            "RecoverTimeout": 1
        },
        "start_stop": {
            "value": 0,
            "note": "Log start, stop, or standby command first (LogInfo), then trigger start, stop, or standby routine (remap)",
            "ifChanged": false,
            "enable": "/config/ess_1:enable",
            "actions": {
                "onSet": [{
                    "remap": [
                        {"inValue": 1, "uri": "/controls/ess_1:Start"},
                        {"inValue": 2, "uri": "/controls/ess_1:Standby"},
                        {"inValue": 0, "uri": "/controls/ess_1:Shutdown"}
                    ]
                }]
            }
        },
        "bms_dc_contactors": {
            "value": 0,
            "note": "Trigger command handler that will open or close BMS DC contactors",
            "ifChanged": false,
            "enable": "/config/ess_1:enable",
            "actions": {
                "onSet": [{
                    "func": [
                        {"func": "LogInfo", "amap": "ess_1"}
                    ],
                    "remap": [
                        {"inValue": 3, "uri": "/controls/bms:OpenContactors@triggerCmd",  "outValue": true},
                        {"inValue": 3, "uri": "/controls/bms:OpenContactors",             "outValue": 3, "note": "Send open contactors command to BMS"},

                        {"inValue": 2, "uri": "/controls/bms:CloseContactors@triggerCmd", "outValue": true},
                        {"inValue": 2, "uri": "/controls/bms:CloseContactors",            "outValue": 2, "note": "Send close contactors command to BMS"}
                    ]
                }]
            }
        },
        "active_power_setpoint": {
            "value": 0,
            "enable": "/config/ess_1:enable",
            "actions": {
                "onSet": [{
                    "remap": [
                        {"uri": "/controls/pcs:ActivePowerSetpoint"}
                    ]
                }]
            }
        },
        "reactive_power_setpoint": {
            "value": 0,
            "enable": "/config/ess_1:enable",
            "actions": {
                "onSet": [{
                    "remap": [
                        {"uri": "/controls/pcs:ReactivePowerSetpoint"}
                    ]
                }]
            }
        },
        "clear_faults": {
            "value": 0,
            "ifChanged": false,
            "enable": "/config/ess_1:enable",
            "actions":	{
                "onSet": [{
                    "func": [
                        {"func": "LogInfo", "amap": "ess_1"}
                    ],
                    "remap": [
                        {"inValue": 1, "outValue": 0, "uri": "/master/ess_1_ls:ems_alarms"},
                        {"inValue": 1, "outValue": 0, "uri": "/master/ess_1_ls:ess_faults"},
                        {"inValue": 1, "outValue": 0, "uri": "/master/ess_1_ls:ess_alarms"},
                        
                        {"inValue": 1, "uri": "/controls/bms:ClearFaults@triggerCmd", "outValue": true},
                        {"inValue": 1, "uri": "/controls/bms:ClearFaults",            "outValue": 1, "note": "Send clear faults command to BMS"},
                        {"inValue": 1, "uri": "/controls/pcs:ClearFaults@triggerCmd", "outValue": true},
                        {"inValue": 1, "uri": "/controls/pcs:ClearFaults",            "outValue": 1, "note": "Send clear faults command to PCS"}
                    ]
                }]
            }
        }
    }
}
