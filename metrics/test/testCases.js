module.exports = {
  configureMdoTestFilepaths: () => {
    return {
      sample1: {
        filePath: "./test/samples/sample1.json",
        expectedMdo: {
          "/metrics/watchdog": {
            heartbeat2watchdog: {
              operation: "echo",
              naked: true,
              outputs: [{ uri: "/site/operation", id: "watchdog_pet" }],
              value: 0,
              inputs: { "/site/operation/heartbeat_counter": 0 },
            },
          },
          "/example": {
            off_by_one: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/example/off_by_one": 1 },
            },
            load_shed_offset_control: {
              operation: "sum",
              naked: true,
              value: 0,
              inputs: {
                "/example/load_shed_control": 0,
                "/example/off_by_one": 0,
              },
            },
            load_setting_0: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/example/load_setting_0": -200 },
            },
            load_setting_1: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/example/load_setting_1": -150 },
            },
            load_setting_2: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/example/load_setting_2": -100 },
            },
            load_setting_3: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/example/load_setting_3": -50 },
            },
            load_setting_4: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/example/load_setting_4": 0 },
            },
            load_shed_output: {
              operation: "selectn",
              naked: true,
              outputs: [{ uri: "/components/load_fixed", id: "pcmd" }],
              value: 0,
              inputs: {
                "/example/load_shed_offset_control": 4,
                "/example/load_setting_0": 4,
                "/example/load_setting_1": 4,
                "/example/load_setting_2": 4,
                "/example/load_setting_3": 4,
                "/example/load_setting_4": 4,
              },
            },
            actual_load: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/components/load_fixed/pcmd": 0 },
            },
          },
          "/metrics/timestamp": {
            FM_timestamp: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/metrics/timestamp/FM_timestamp": 0 },
            },
            FM_time_UTC: {
              operation: "echo",
              naked: true,
              param: { operation: "zulu" },
              value: 0,
              inputs: { "/metrics/timestamp/FM_timestamp": 0 },
            },
          },
        },
        subscribesOutput: [
          "/site/operation",
          "/example",
          "/components/load_fixed",
          "/metrics/timestamp",
          "/metrics/watchdog",
        ],
      },
      problemChild: {
        filePath: "./test/samples/problemChild.json",
        expectedMdo: {
          "/metrics/input_sources": {
            ui: {
              operation: "echo",
              naked: false,
              outputs: [{ uri: "/site/input_sources", id: "ui" }],
              value: 0,
              inputs: { "/site/configuration/reserved_bool_11": 0 },
            },
          },
          "/metrics/timestamp": {
            FM_timestamp: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/metrics/timestamp/FM_timestamp": 0 },
            },
            FM_time_UTC: {
              operation: "echo",
              naked: true,
              param: { operation: "zulu" },
              value: 0,
              inputs: { "/metrics/timestamp/FM_timestamp": 0 },
            },
          },
          "/components/test_controller": {
            under_frequency_offset: {
              operation: "echo",
              naked: "true",
              value: 0,
              inputs: {
                "/components/test_controller/under_frequency_offset": -0.03,
              },
            },
            over_frequency_offset: {
              operation: "echo",
              naked: "true",
              value: 0,
              inputs: {
                "/components/test_controller/over_frequency_offset": 0.03,
              },
            },
            under_frequency_offset_trigger: {
              operation: "echo",
              naked: "true",
              value: 0,
              inputs: {
                "/components/test_controller/under_frequency_offset_trigger": 0,
              },
            },
            over_frequency_offset_trigger: {
              operation: "echo",
              naked: "true",
              value: 0,
              inputs: {
                "/components/test_controller/over_frequency_offset_trigger": 0,
              },
            },
            under_frequency_offset_setter: {
              operation: "select",
              naked: "true",
              outputs: [
                { uri: "/features/active_power", id: "fr_freq_offset_hz" },
              ],
              param: { falseCase: 0 },
              value: 0,
              inputs: {
                "/components/test_controller/under_frequency_offset_trigger": 0,
                "/components/test_controller/under_frequency_offset": 0,
              },
            },
            over_frequency_offset_setter: {
              operation: "select",
              naked: "true",
              outputs: [
                { uri: "/features/active_power", id: "fr_freq_offset_hz" },
              ],
              param: { falseCase: 0 },
              value: 0,
              inputs: {
                "/components/test_controller/over_frequency_offset_trigger": 0,
                "/components/test_controller/over_frequency_offset": 0,
              },
            },
          },
          "/components/feed_1_dummy": {
            alarms: {
              name: "ESS Alarms",
              ui_type: "none",
              type: "enum",
              options: [],
              operation: "bitfield",
              naked: "true",
              param: {
                position: [0, 1, 2],
                string: ["Door is Open", "HVAC Alarm - NO", "HVAC Alarm - NC"],
                invertMask: [false, true, false],
              },
              value: [],
              inputs: {
                "/components/brainbox_ed538/intrusion_detection": false,
                "/components/brainbox_ed538/HVAC_normally_open": false,
                "/components/brainbox_ed538/HVAC_normally_close": false,
              },
            },
          },
          "/components/dummy_ess_01": {
            bms_dc_contactors_closed: {
              operation: "compare",
              naked: "true",
              param: { operation: "gte", reference: 1 },
              value: false,
              inputs: { "/components/clou_ess_01/racks_in_service": [] },
            },
            dc_contactors_closed: {
              operation: "compare",
              naked: "true",
              param: { reference: true },
              value: false,
              inputs: {
                "/components/dummy_ess_01/bms_dc_contactors_closed": [],
              },
            },
            total_racks: {
              ui_type: "status",
              type: "Int",
              operation: "echo",
              naked: "true",
              value: 0,
              inputs: { "/components/dummy_ess_01/total_racks": 11 },
            },
          },
          "/components/dummy_ess_02": {
            bms_dc_contactors_closed: {
              operation: "compare",
              naked: "true",
              param: { operation: "gte", reference: 1 },
              value: false,
              inputs: { "/components/clou_ess_02/racks_in_service": [] },
            },
            dc_contactors_closed: {
              operation: "compare",
              naked: "true",
              param: { reference: true },
              value: false,
              inputs: {
                "/components/dummy_ess_02/bms_dc_contactors_closed": [],
              },
            },
            total_racks: {
              ui_type: "status",
              type: "Int",
              operation: "echo",
              naked: "true",
              value: 0,
              inputs: { "/components/dummy_ess_02/total_racks": 11 },
            },
          },
          "/components/dummy_ess_03": {
            bms_dc_contactors_closed: {
              operation: "compare",
              naked: "true",
              param: { operation: "gte", reference: 1 },
              value: false,
              inputs: { "/components/clou_ess_03/racks_in_service": [] },
            },
            dc_contactors_closed: {
              operation: "compare",
              naked: "true",
              param: { reference: true },
              value: false,
              inputs: {
                "/components/dummy_ess_03/bms_dc_contactors_closed": [],
              },
            },
            total_racks: {
              ui_type: "status",
              type: "Int",
              operation: "echo",
              naked: "true",
              value: 0,
              inputs: { "/components/dummy_ess_03/total_racks": 11 },
            },
          },
          "/components/dummy_ess_04": {
            bms_dc_contactors_closed: {
              operation: "compare",
              naked: "true",
              param: { operation: "gte", reference: 1 },
              value: false,
              inputs: { "/components/clou_ess_04/racks_in_service": [] },
            },
            dc_contactors_closed: {
              operation: "compare",
              naked: "true",
              param: { reference: true },
              value: false,
              inputs: {
                "/components/dummy_ess_04/bms_dc_contactors_closed": [],
              },
            },
            total_racks: {
              ui_type: "status",
              type: "Int",
              operation: "echo",
              naked: "true",
              value: 0,
              inputs: { "/components/dummy_ess_04/total_racks": 11 },
            },
          },
          "/components/site_ups_dummy": {
            soc_check: {
              operation: "compare",
              naked: "true",
              outputs: [{ uri: "/site/configuration", id: "reserved_bool_15" }],
              param: { operation: "lt", reference: 50 },
              value: false,
              inputs: { "/components/apc_ups/soc": [] },
            },
          },
          "/metrics/latency_test": {
            ess_1_active_power_setpoint: {
              operation: "echo",
              naked: "false",
              value: 0,
              inputs: { "/components/clou_ess_01_hs/active_power_setpoint": 0 },
            },
            ess_2_active_power_setpoint: {
              operation: "echo",
              naked: "false",
              value: 0,
              inputs: { "/components/clou_ess_02_hs/active_power_setpoint": 0 },
            },
            ess_3_active_power_setpoint: {
              operation: "echo",
              naked: "false",
              value: 0,
              inputs: { "/components/clou_ess_03_hs/active_power_setpoint": 0 },
            },
            ess_4_active_power_setpoint: {
              operation: "echo",
              naked: "false",
              value: 0,
              inputs: { "/components/clou_ess_04_hs/active_power_setpoint": 0 },
            },
            ess_1_reactive_power_setpoint: {
              operation: "echo",
              naked: "false",
              value: 0,
              inputs: {
                "/components/clou_ess_01_hs/reactive_power_setpoint": 0,
              },
            },
            ess_2_reactive_power_setpoint: {
              operation: "echo",
              naked: "false",
              value: 0,
              inputs: {
                "/components/clou_ess_02_hs/reactive_power_setpoint": 0,
              },
            },
            ess_3_reactive_power_setpoint: {
              operation: "echo",
              naked: "false",
              value: 0,
              inputs: {
                "/components/clou_ess_03_hs/reactive_power_setpoint": 0,
              },
            },
            ess_4_reactive_power_setpoint: {
              operation: "echo",
              naked: "false",
              value: 0,
              inputs: {
                "/components/clou_ess_04_hs/reactive_power_setpoint": 0,
              },
            },
            ess_1_heartbeat: {
              operation: "echo",
              naked: "false",
              value: 0,
              inputs: { "/components/clou_ess_01_hs/modbus_heartbeat": 0 },
            },
            ess_2_heartbeat: {
              operation: "echo",
              naked: "false",
              value: 0,
              inputs: { "/components/clou_ess_02_hs/modbus_heartbeat": 0 },
            },
            ess_3_heartbeat: {
              operation: "echo",
              naked: "false",
              value: 0,
              inputs: { "/components/clou_ess_03_hs/modbus_heartbeat": 0 },
            },
            ess_4_heartbeat: {
              operation: "echo",
              naked: "false",
              value: 0,
              inputs: { "/components/clou_ess_04_hs/modbus_heartbeat": 0 },
            },
          },
          "/components/test_sel_3530_rtac": {
            frequency_offset: {
              operation: "echo",
              naked: "true",
              value: 0,
              inputs: { "/components/test_sel_3530_rtac/frequency_offset": 0 },
            },
            frequency_nominal: {
              operation: "echo",
              naked: "true",
              value: 60,
              inputs: {
                "/components/test_sel_3530_rtac/frequency_nominal": 60,
              },
            },
            frequency_3: {
              operation: "sum",
              naked: "true",
              param: { operations: "++" },
              value: 0,
              inputs: {
                "/components/test_sel_3530_rtac/frequency_nominal": 0,
                "/components/test_sel_3530_rtac/frequency_offset": 0,
              },
            },
          },
          "/metrics/active_power": {
            fr_enable_mask: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/features/active_power/fr_enable_mask": 0 },
            },
            fr_baseload_cmd_kw: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/features/active_power/fr_baseload_cmd_kw": 0 },
            },
            uf_ffr_inactive_cmd_kw: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/features/active_power/uf_ffr_inactive_cmd_kw": 0 },
            },
            uf_frrs_inactive_cmd_kw: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/features/active_power/uf_frrs_inactive_cmd_kw": 0 },
            },
            of_frrs_inactive_cmd_kw: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/features/active_power/of_frrs_inactive_cmd_kw": 0 },
            },
            uf_frrs_active_cmd_kw: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/features/active_power/uf_frrs_active_cmd_kw": 0 },
            },
            of_frrs_active_cmd_kw: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/features/active_power/of_frrs_active_cmd_kw": 0 },
            },
            uf_ffr_active_cmd_kw: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/features/active_power/uf_ffr_active_cmd_kw": 0 },
            },
            uf_pfr_active_cmd_kw: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/features/active_power/uf_pfr_active_cmd_kw": 0 },
            },
            of_pfr_active_cmd_kw: {
              operation: "echo",
              naked: true,
              value: 0,
              inputs: { "/features/active_power/of_pfr_active_cmd_kw": 0 },
            },
          },
        },
        subscribesOutput: [
          "/metrics/input_sources",
          "/metrics/timestamp",
          "/components/test_controller",
          "/components/feed_1_dummy",
          "/components/dummy_ess_01",
          "/components/dummy_ess_02",
          "/components/dummy_ess_03",
          "/components/dummy_ess_04",
          "/components/site_ups_dummy",
          "/metrics/latency_test",
          "/components/test_sel_3530_rtac",
          "/metrics/active_power",
          "/site/configuration",
          "/features/active_power",
          "/components/brainbox_ed538",
          "/components/clou_ess_01",
          "/components/clou_ess_02",
          "/components/clou_ess_03",
          "/components/clou_ess_04",
          "/components/apc_ups",
          "/components/clou_ess_01_hs",
          "/components/clou_ess_02_hs",
          "/components/clou_ess_03_hs",
          "/components/clou_ess_04_hs",
        ],
      },
      empty: {
        filePath: "./test/samples/empty_metrics.json",
        expectedMdo: {},
        subscribesOutput: [],
      },
    };
  },

  subscribeShadowTestCases: () => {
    return {
      noConflicts: {
        inputs: [
          "/assets/ess/ess_1",
          "/components",
          "/sites",
          "/ui/dbi/other_stuff",
          "/musphelheim",
          "/asgard/thor/thrud",
          "/svartalheim/brok",
          "/jotunheim/loki",
          "/vanaheim/freya",
        ],
        output: [
          "/assets/ess/ess_1",
          "/components",
          "/sites",
          "/ui/dbi/other_stuff",
          "/musphelheim",
          "/asgard/thor/thrud",
          "/svartalheim/brok",
          "/jotunheim/loki",
          "/vanaheim/freya",
        ],
      },
      normalConflicts: {
        inputs: [
          "/assets/ess/ess_1",
          "/components",
          "/assets/ess",
          "/components/component_1",
          "/sites/raleigh",
          "/sites",
          "/sites/durham",
          "/ui/dbi/other_stuff",
          "/musphelheim",
          "/musphelheim/surtr",
          "/asgard/thor/thrud",
          "/svartalheim/brok",
          "/jotunheim/loki",
          "/jotunheim",
        ],
        output: [
          "/components",
          "/assets/ess",
          "/sites",
          "/ui/dbi/other_stuff",
          "/musphelheim",
          "/asgard/thor/thrud",
          "/svartalheim/brok",
          "/jotunheim",
        ],
      },
      unexpectedConflicts: {
        inputs: [
          "/musphelheim/surtr",
          "/sparta/kratos",
          "/sparta",
          "/asgard/thor",
          "/asgard/odin",
          "/valhalla/einherjar_warrior",
          "/valhalla/einherjar_warrior_2",
          "/valhalla/einherjar_warrior_3",
          "/valhalla/einherjar",
          "/assets/ess/ess",
          "/assets/ess/ess_2",
          "/sites/durham",
          "/sites",
          "sel_rtac_3530_test",
          "sel_rtac_3530",
          "/asset_test",
          "/asset",
        ],
        output: [
          "/musphelheim/surtr",
          "/sparta",
          "/asgard/thor",
          "/asgard/odin",
          "/valhalla/einherjar_warrior",
          "/valhalla/einherjar_warrior_2",
          "/valhalla/einherjar_warrior_3",
          "/valhalla/einherjar",
          "/assets/ess/ess",
          "/assets/ess/ess_2",
          "/sites",
          "sel_rtac_3530_test",
          "sel_rtac_3530",
          "/asset_test",
          "/asset",
        ],
      },
      brp_ffra_tx10_clou: {
        inputs: ["/components/clou_ess_01", "/components/clou_ess_01_hs"],
        output: ["/components/clou_ess_01", "/components/clou_ess_01_hs"],
      },
    };
  },

  uriIsRootOfUriTestCases: () => {
    return [
      { uri: "/a", root: "/a", expected: true },
      { uri: "/a", root: "/a/", expected: true },
      { uri: "/a", root: "/a/b", expected: false },
      { uri: "/a/b", root: "/a", expected: true },
      { uri: "/a/b", root: "/a/", expected: true },
      { uri: "/a/b", root: "/a/b", expected: true },
      { uri: "/a/b", root: "/a/b/", expected: true },
      { uri: "/a/b", root: "/a/b/c", expected: false },
      { uri: "/a/b/c", root: "/a", expected: true },
      { uri: "/a/b/c", root: "/a/", expected: true },
      { uri: "/a/b/c", root: "/a/b", expected: true },
      { uri: "/a/b/c", root: "/a/b/", expected: true },
      { uri: "/a/b/c", root: "/a/b/c", expected: true },
      { uri: "/a/b/c", root: "/a/b/c/", expected: true },
      { uri: "/a/b/c", root: "/a/b/c/d", expected: false },
      { uri: "/a/b/c", root: "/", expected: true },
      { uri: "/a/b/c", root: "", expected: true },
      { uri: "/a/b/c", root: "a", expected: false },
      { uri: "/a/b/c", root: "a/", expected: false },
      { uri: "/a/b/c", root: "a/b", expected: false },
      { uri: "/a/b/c", root: "/a/b/cd", expected: false },
      { uri: "/a", root: "/abc", expected: false },
      { uri: "/a/bc", root: "/a/bcd", expected: false },
      { uri: "/assets/ess/ess_1", root: "/assets/ess", expected: true },
      { uri: "/assets/ess/ess_1", root: "/assets/ess/ess", expected: false },
      {
        uri: "/components/clou_ess_01_hs",
        root: "/components/clou_ess_01",
        expected: false,
      },
      {
        uri: "/sel_rtac_3530_test",
        root: "/sel_rtac_3530",
        expected: false,
      },
    ];
  },
};
