{
    "/config/bms": {
        "AlarmDestination": "/assets/bms/summary:alarms",
        "CurrentBeforeStopThreshold": 35,
        "FaultDestination": "/assets/bms/summary:faults",
        "NoAlarmMsg": "Normal",
        "NoFaultMsg": "Normal",
        "enable": false,
        "enum_opt": false
    },
    "/links/bms": {
        "ChargeCurrentLimit": {
            "value": "/limits/bms:ChargeCurrentLimit"
        },
        "ChargePowerLimit": {
            "value": "/limits/bms:ChargePowerLimit"
        },
        "DischargeCurrentLimit": {
            "value": "/limits/bms:DischargeCurrentLimit"
        },
        "DischargePowerLimit": {
            "value": "/limits/bms:DischargePowerLimit"
        }
    },
    "/sched/bms": {
        "pubAssetsSummary_bms": {
            "actions": {
                "onSet": [
                    {
                        "func": [
                            {
                                "amap": "bms",
                                "func": "RunPub"
                            }
                        ]
                    }
                ]
            },
            "enable": "/config/bms:enable",
            "mode": "ui",
            "note": "Publishes UI summary data (/assets/bms/summary)",
            "table": "/assets/bms/summary",
            "value": 1
        },
        "runMonitor_bms": {
            "actions": {
                "onSet": [
                    {
                        "func": [
                            {
                                "amap": "bms",
                                "func": "RunMonitor"
                            }
                        ]
                    }
                ]
            },
            "aname": "bms",
            "enable": "/config/bms:enable",
            "monitor": "wake_monitor",
            "note": "Periodically runs functions for variables defined in /schedule/wake_monitor/bms",
            "value": 1
        },
        "updateHeartbeatWrite_bms": {
            "actions": {
                "onSet": [
                    {
                        "func": [
                            {
                                "amap": "bms",
                                "func": "CalculateVar",
                                "inAv": "/status/bms:HeartbeatWrite"
                            }
                        ]
                    }
                ]
            },
            "enable": "/config/bms:enable",
            "note": "Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite",
            "value": 1
        }
    },
    "/schedule/wake_monitor/bms": {
        "/status/bms:CellTempDelta_Calculated": {
            "amap": "bms",
            "func": "CalculateVar"
        },
        "/status/bms:CellVoltageDelta_Calculated": {
            "amap": "bms",
            "func": "CalculateVar"
        },
        "/status/bms:DCCharging": {
            "amap": "bms",
            "func": "CalculateVar"
        },
        "/status/bms:DCDischarging": {
            "amap": "bms",
            "func": "CalculateVar"
        }
    },
    "/status/bms": {
        "CellTempDelta_Calculated": {
            "actions": {
                "onSet": [
                    {
                        "remap": [
                            {
                                "uri": "/status/bms:CellTempDelta"
                            }
                        ]
                    }
                ]
            },
            "expression": "{2} - {1}",
            "note": "Calculates the difference between the max and min cell temperatures",
            "numVars": 2,
            "useExpr": true,
            "value": 0,
            "variable1": "/status/bms:MinCellTemp",
            "variable2": "/status/bms:MaxCellTemp"
        },
        "CellVoltageDelta_Calculated": {
            "actions": {
                "onSet": [
                    {
                        "remap": [
                            {
                                "uri": "/status/bms:CellVoltageDelta"
                            }
                        ]
                    }
                ]
            },
            "expression": "{2} - {1}",
            "note": "Calculates the difference between the max and min cell voltages",
            "numVars": 2,
            "useExpr": true,
            "value": 0,
            "variable1": "/status/bms:MinCellVoltage",
            "variable2": "/status/bms:MaxCellVoltage"
        },
        "CommsOK": {
            "actions": {
                "onSet": [
                    {
                        "remap": [
                            {
                                "inValue": false,
                                "outValue": true,
                                "uri": "/site/ess:comms_faults[1]"
                            }
                        ]
                    }
                ]
            },
            "note": "Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable",
            "value": true
        },
        "DCCharging": {
            "expression": "{1} < 0",
            "note": "Determines if the BMS is charging",
            "numVars": 1,
            "useExpr": true,
            "value": false,
            "variable1": "/status/bms:DCCurrent"
        },
        "DCClosed": {
            "actions": {
                "onSet": [
                    {
                        "remap": [
                            {
                                "uri": "/status/bms:DCCurrent@EnableMaxValCheck"
                            },
                            {
                                "uri": "/status/bms:DCCurrent@EnableMinValCheck"
                            },
                            {
                                "uri": "/status/bms:NumRacksOnline@EnableMinValCheck"
                            },
                            {
                                "uri": "/status/bms:SOH@EnableMinValCheck"
                            },
                            {
                                "uri": "/status/bms:MaxCellVoltage@EnableMaxValCheck"
                            },
                            {
                                "uri": "/status/bms:MinCellVoltage@EnableMinValCheck"
                            },
                            {
                                "uri": "/status/bms:MaxCellTemp@EnableMaxValCheck"
                            },
                            {
                                "uri": "/status/bms:MinCellTemp@EnableMinValCheck"
                            }
                        ]
                    }
                ]
            },
            "enable": "/config/bms:enable",
            "note1": "Enables/disables monitoring variables if BMS DC contactors are closed/opened",
            "note2": "Also reports the BMS DC contactor status to the UI",
            "note3": "TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
            "value": false
        },
        "DCDischarging": {
            "expression": "{1} > 0",
            "note": "Determines if the BMS is discharging",
            "numVars": 1,
            "useExpr": true,
            "value": false,
            "variable1": "/status/bms:DCCurrent"
        },
        "HeartbeatWrite": {
            "actions": {
                "onSet": [
                    {
                        "remap": [
                            {
                                "fims": "set",
                                "uri": "/components/bms:heartbeat_write"
                            }
                        ]
                    }
                ]
            },
            "enable": "/config/bms:enable",
            "excludeFromDefaultSched": true,
            "expression": "if (({1} >= 59), 0, ({1} + 1))",
            "note": "Updates and then sends the heartbeat write value",
            "numVars": 1,
            "useExpr": true,
            "value": 0,
            "variable1": "/status/bms:HeartbeatWrite"
        },
        "NumRacksTotal": 9,
        "Status": "INIT"
    },
    "/system/commands": {
        "runOpts_bms": {
            "actions": {
                "onSet": [
                    {
                        "func": [
                            {
                                "amap": "bms",
                                "func": "SchedItemOpts"
                            }
                        ]
                    }
                ]
            },
            "enabled": false,
            "note1": "Sets schedule variables (defined in /sched/bms) to /system/commands:run",
            "note2": "This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
            "options": [
                {
                    "aname": "bms",
                    "every": 1,
                    "uri": "/sched/bms:pubAssetsSummary_bms",
                    "value": 1
                },
                {
                    "aname": "bms",
                    "every": 0.1,
                    "uri": "/sched/bms:runMonitor_bms",
                    "value": 1
                },
                {
                    "aname": "bms",
                    "every": 1,
                    "uri": "/sched/bms:checkInputs_bms",
                    "value": 1
                },
                {
                    "aname": "bms",
                    "every": 1,
                    "uri": "/sched/bms:updateHeartbeatWrite_bms",
                    "value": 1
                }
            ],
            "targav": "/system/commands:run",
            "value": false
        }
    }
}