1468 mongod --config /etc/mongod.conf
1475 dbi
ess_controller
Loading catl_bms_init.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_manager.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_manager_client_interface.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_manager_controls.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_manager_faults.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_manager_server_interface.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_manager_ui.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_rack.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_rack_client_interface.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_rack_controls.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_rack_faults.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_rack_server_interface.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_rack_ui.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading ess_controller.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/ess to database...
Loading ess_controller_server_interface.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/ess to database...
Loading ess_controller_ui.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/ess to database...
Loading ess_final.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/ess to database...
Loading ess_init.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/ess to database...
Loading ess_file.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller to database...
Loading pe_pcs_init.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_manager.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_manager_client_interface.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_manager_controls.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_manager_faults.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_manager_server_interface.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_manager_ui.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_module.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_module_client_interface.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_module_controls.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_module_faults.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_module_server_interface.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_module_ui.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
web_ui
Loading assets.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/web_ui to database...
Loading dashboard.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/web_ui to database...
Loading layout.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/web_ui to database...
Loading web_ui.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/web_ui to database...
./scripts/functional_ess_controller/test/startup_113.sh: line 53: /usr/local/bin/web_server: No such file or directory
PSM: 2023/12/21 17:05:31 Configuring
PSM: 2023/12/21 17:05:31 Attempting to read configurations from dbi
PSM: 2023/12/21 17:05:31 Could not read tree structure from dbi.
PSM: 2023/12/21 17:05:31 Unable to receive psm asset tree. Attempting to configure using local configuration file.
PSM: 2023/12/21 17:05:31 Attempting to configure from local file...

2023-12-21T17:05:31Z  [GO_METRICS] | STARTUP |
 	Caller: logger.go:190
 	Message: File Logger startup!


2023-12-21T17:05:31Z  [GO_METRICS] | INFO  |
 	Caller: main.go:70
 	Message: Starting go_metrics

/components/catl_ems_bms_rw
1000

2023-12-21T17:05:31Z  [GO_METRICS] | INFO  |
 	Caller: main.go:79
 	Message: go_metrics 
	Tag:11.3.0.alpha.3.component 
	Version:310
	Commit: 5e05914


PSM: 2023/12/21 17:05:31 Reading in local file: /home/docker/config/vfakeco/config/lima/psm/config/psm/psm.json
{
	"/components/catl_bms_ems_r": {
		"Forward": {
			"bms_heartbeat": {
				"Uri": "/components/bms_1",
				"Register": "heart_heartbeat"
			},
			"bms_max_charge_allowed": {
				"Uri": "/components/bms_1",
				"Register": "pmax"
			},
			"bms_max_discharge_allowed": {
				"Uri": "/components/bms_1",
				"Register": "pmax"
			},
			"bms_poweron": {
				"Uri": "/components/bms_1",
				"Register": "status_0_value"
			},
			"bms_remain_charge_energy": {
				"Uri": "/components/bms_1",
				"Register": "echarge"
			},
			"bms_remain_discharge_energy": {
				"Uri": "/components/bms_1",
				"Register": "edischarge"
			},
			"num_hv_subsystem": {
				"Uri": "/components/bms_1",
				"Register": "numracks"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"bms_heartbeat": "heart_heartbeat",
				"bms_max_charge_allowed": "pmax",
				"bms_max_discharge_allowed": "pmax",
				"bms_poweron": "status_0_value",
				"bms_remain_charge_energy": "echarge",
				"bms_remain_discharge_energy": "edischarge",
				"num_hv_subsystem": "numracks"
			}
		}
	},
	"/components/catl_ems_bms_rw": {
		"Forward": {
			"ems_cmd": {
				"Uri": "/components/bms_1",
				"Register": "ctrlword1"
			},
			"ems_rtc_day": {
				"Uri": "/components/bms_1",
				"Register": "heart_day"
			},
			"ems_rtc_hour": {
				"Uri": "/components/bms_1",
				"Register": "heart_hour"
			},
			"ems_rtc_minute": {
				"Uri": "/components/bms_1",
				"Register": "heart_minute"
			},
			"ems_rtc_month": {
				"Uri": "/components/bms_1",
				"Register": "heart_month"
			},
			"ems_rtc_second": {
				"Uri": "/components/bms_1",
				"Register": "heart_second"
			},
			"ems_rtc_year": {
				"Uri": "/components/bms_1",
				"Register": "heart_year"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"ems_cmd": "ctrlword1",
				"ems_rtc_day": "heart_day",
				"ems_rtc_hour": "heart_hour",
				"ems_rtc_minute": "heart_minute",
				"ems_rtc_month": "heart_month",
				"ems_rtc_second": "heart_second",
				"ems_rtc_year": "heart_year"
			}
		}
	},
	"/components/catl_mbmu_stat_r": {
		"Forward": {},
		"Backward": {}
	},
	"/components/catl_mbmu_sum_r": {
		"Forward": {},
		"Backward": {}
	},
	"/components/catl_mbmu_summary_r": {
		"Forward": {
			"mbmu_avg_cell_temperature": {
				"Uri": "/components/bms_1",
				"Register": "avgcelltemp"
			},
			"mbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "avgcellvolt"
			},
			"mbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "idc_value"
			},
			"mbmu_max_cell_temperature": {
				"Uri": "/components/bms_1",
				"Register": "maxcelltemp_value"
			},
			"mbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "maxcellvolt_value"
			},
			"mbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "icharge"
			},
			"mbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "idischarge"
			},
			"mbmu_min_cell_temperature": {
				"Uri": "/components/bms_1",
				"Register": "mincelltemp_value"
			},
			"mbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "mincellvolt_value"
			},
			"mbmu_power": {
				"Uri": "/components/bms_1",
				"Register": "p"
			},
			"mbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "soc_value"
			},
			"mbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "soh"
			},
			"mbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "vdc_value"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"mbmu_avg_cell_temperature": "avgcelltemp",
				"mbmu_avg_cell_voltage": "avgcellvolt",
				"mbmu_current": "idc_value",
				"mbmu_max_cell_temperature": "maxcelltemp_value",
				"mbmu_max_cell_voltage": "maxcellvolt_value",
				"mbmu_max_charge_current": "icharge",
				"mbmu_max_discharge_current": "idischarge",
				"mbmu_min_cell_temperature": "mincelltemp_value",
				"mbmu_min_cell_voltage": "mincellvolt_value",
				"mbmu_power": "p",
				"mbmu_soc": "soc_value",
				"mbmu_soh": "soh",
				"mbmu_voltage": "vdc_value"
			}
		}
	},
	"/components/catl_rack_1": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_0_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_0_avgcellvolt",
				"sbmu_current": "sbmu_0_idc_value",
				"sbmu_master_negative": "sbmu_0_dccontactor",
				"sbmu_master_positive": "sbmu_0_dccontactor",
				"sbmu_max_cell_temp": "sbmu_0_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_0_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_0_icharge",
				"sbmu_max_discharge_current": "sbmu_0_idischarge",
				"sbmu_min_cell_temp": "sbmu_0_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_0_mincellvolt_value",
				"sbmu_soc": "sbmu_0_soc_value",
				"sbmu_soh": "sbmu_0_soh",
				"sbmu_voltage": "sbmu_0_vdc"
			}
		}
	},
	"/components/catl_rack_2": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_1_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_1_avgcellvolt",
				"sbmu_current": "sbmu_1_idc_value",
				"sbmu_master_negative": "sbmu_1_dccontactor",
				"sbmu_master_positive": "sbmu_1_dccontactor",
				"sbmu_max_cell_temp": "sbmu_1_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_1_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_1_icharge",
				"sbmu_max_discharge_current": "sbmu_1_idischarge",
				"sbmu_min_cell_temp": "sbmu_1_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_1_mincellvolt_value",
				"sbmu_soc": "sbmu_1_soc_value",
				"sbmu_soh": "sbmu_1_soh",
				"sbmu_voltage": "sbmu_1_vdc"
			}
		}
	},
	"/components/catl_rack_3": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_2_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_2_avgcellvolt",
				"sbmu_current": "sbmu_2_idc_value",
				"sbmu_master_negative": "sbmu_2_dccontactor",
				"sbmu_master_positive": "sbmu_2_dccontactor",
				"sbmu_max_cell_temp": "sbmu_2_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_2_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_2_icharge",
				"sbmu_max_discharge_current": "sbmu_2_idischarge",
				"sbmu_min_cell_temp": "sbmu_2_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_2_mincellvolt_value",
				"sbmu_soc": "sbmu_2_soc_value",
				"sbmu_soh": "sbmu_2_soh",
				"sbmu_voltage": "sbmu_2_vdc"
			}
		}
	},
	"/components/catl_rack_4": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_3_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_3_avgcellvolt",
				"sbmu_current": "sbmu_3_idc_value",
				"sbmu_master_negative": "sbmu_3_dccontactor",
				"sbmu_master_positive": "sbmu_3_dccontactor",
				"sbmu_max_cell_temp": "sbmu_3_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_3_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_3_icharge",
				"sbmu_max_discharge_current": "sbmu_3_idischarge",
				"sbmu_min_cell_temp": "sbmu_3_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_3_mincellvolt_value",
				"sbmu_soc": "sbmu_3_soc_value",
				"sbmu_soh": "sbmu_3_soh",
				"sbmu_voltage": "sbmu_3_vdc"
			}
		}
	},
	"/components/catl_rack_5": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_4_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_4_avgcellvolt",
				"sbmu_current": "sbmu_4_idc_value",
				"sbmu_master_negative": "sbmu_4_dccontactor",
				"sbmu_master_positive": "sbmu_4_dccontactor",
				"sbmu_max_cell_temp": "sbmu_4_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_4_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_4_icharge",
				"sbmu_max_discharge_current": "sbmu_4_idischarge",
				"sbmu_min_cell_temp": "sbmu_4_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_4_mincellvolt_value",
				"sbmu_soc": "sbmu_4_soc_value",
				"sbmu_soh": "sbmu_4_soh",
				"sbmu_voltage": "sbmu_4_vdc"
			}
		}
	},
	"/components/catl_rack_6": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_5_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_5_avgcellvolt",
				"sbmu_current": "sbmu_5_idc_value",
				"sbmu_master_negative": "sbmu_5_dccontactor",
				"sbmu_master_positive": "sbmu_5_dccontactor",
				"sbmu_max_cell_temp": "sbmu_5_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_5_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_5_icharge",
				"sbmu_max_discharge_current": "sbmu_5_idischarge",
				"sbmu_min_cell_temp": "sbmu_5_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_5_mincellvolt_value",
				"sbmu_soc": "sbmu_5_soc_value",
				"sbmu_soh": "sbmu_5_soh",
				"sbmu_voltage": "sbmu_5_vdc"
			}
		}
	},
	"/components/catl_rack_7": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_6_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_6_avgcellvolt",
				"sbmu_current": "sbmu_6_idc_value",
				"sbmu_master_negative": "sbmu_6_dccontactor",
				"sbmu_master_positive": "sbmu_6_dccontactor",
				"sbmu_max_cell_temp": "sbmu_6_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_6_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_6_icharge",
				"sbmu_max_discharge_current": "sbmu_6_idischarge",
				"sbmu_min_cell_temp": "sbmu_6_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_6_mincellvolt_value",
				"sbmu_soc": "sbmu_6_soc_value",
				"sbmu_soh": "sbmu_6_soh",
				"sbmu_voltage": "sbmu_6_vdc"
			}
		}
	},
	"/components/catl_rack_8": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_7_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_7_avgcellvolt",
				"sbmu_current": "sbmu_7_idc_value",
				"sbmu_master_negative": "sbmu_7_dccontactor",
				"sbmu_master_positive": "sbmu_7_dccontactor",
				"sbmu_max_cell_temp": "sbmu_7_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_7_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_7_icharge",
				"sbmu_max_discharge_current": "sbmu_7_idischarge",
				"sbmu_min_cell_temp": "sbmu_7_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_7_mincellvolt_value",
				"sbmu_soc": "sbmu_7_soc_value",
				"sbmu_soh": "sbmu_7_soh",
				"sbmu_voltage": "sbmu_7_vdc"
			}
		}
	},
	"/components/catl_rack_9": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_8_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_8_avgcellvolt",
				"sbmu_current": "sbmu_8_idc_value",
				"sbmu_master_negative": "sbmu_8_dccontactor",
				"sbmu_master_positive": "sbmu_8_dccontactor",
				"sbmu_max_cell_temp": "sbmu_8_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_8_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_8_icharge",
				"sbmu_max_discharge_current": "sbmu_8_idischarge",
				"sbmu_min_cell_temp": "sbmu_8_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_8_mincellvolt_value",
				"sbmu_soc": "sbmu_8_soc_value",
				"sbmu_soh": "sbmu_8_soh",
				"sbmu_voltage": "sbmu_8_vdc"
			}
		}
	}
}
PSM: 2023/12/21 17:05:31 transmission_line: Transformer magnetizing reactive power calculated from x.Mag, x.Eff, and X.Zpu is zero. Increase x.Mag.
PSM: 2023/12/21 17:05:31 tx_ess_1: Transformer magnetizing reactive power calculated from x.Mag, x.Eff, and X.Zpu is zero. Increase x.Mag.
PSM: 2023/12/21 17:05:31 tx_ess_2: Transformer magnetizing reactive power calculated from x.Mag, x.Eff, and X.Zpu is zero. Increase x.Mag.
PSM: 2023/12/21 17:05:31 tx_ess_3: Transformer magnetizing reactive power calculated from x.Mag, x.Eff, and X.Zpu is zero. Increase x.Mag.

2023-12-21T17:05:31Z  [GO_METRICS] | WARN  |
 	Caller: initialization.go:1638
 	Message: Error unmarshaling json file: 
[] echo > {} 1 > {} echo > selector_status: default value for echo input register 'selector_status' was not specified and echo object does not contain field 'null_value_default' to override the null register value; setting default value of register to 0 (warning only)



2023-12-21T17:05:31Z  [GO_METRICS] | INFO  |
 	Caller: eval.go:38
 	Message: Subscribed to:
		/go_metrics
		/components/pcs_1
		/components/twins_sel_735
		/components/bms_1
		/components/pcs_registers_fast
		/components/pcs_registers_slow


PSM: 2023/12/21 17:05:31 Configured 15 assets
PSM: 2023/12/21 17:05:31 Starting main loop
launching last ess ess_file with configs...
[0.00013515s] [info    ] [main_test_new_e]  -f option -> setup FlexCfile [ess_file]

[0.000618775s] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"Config":	"ess_init",
	"EssName":	"ess",
	"Subs":	":/assets:/site:/components:"
}].
tsc_ghz:2.8031980370456537
rdns_latency: 27 tmp: 2593958275845994149
[1.01325s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [ess_init]
[1.01387s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [ess_init]
[1.01535s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [ess]
[1.01607s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [ess]
[1.01678s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [:/assets:/site:/components:]
[1.01737s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [:/assets:/site:/components:]
[1.01795s  ] [info    ] [scheduler      ] hello scheduler [essSched]
[1.07579s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [ess]
[1.07618s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [ess]
[1.0764s   ] [info    ] [setFunc        ] Note: adding aname [ess] to funMap av 0x7f32ba2da900
[1.07653s  ] [info    ] [setFunc        ] Note: adding aname [bms] to funMap av 0x7f32ba2da900
[1.07672s  ] [info    ] [setFunc        ] Note: adding aname [pcs] to funMap av 0x7f32ba2da900
[1.07704s  ] [info    ] [setFunc        ] Note: adding aname [flex] to funMap av 0x7f32ba3423a0
[1.07739s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [decode value bits  into a number  of different values]
[1.07757s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [decode value bits  into a number  of different values]
[1.07778s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [set or clear a bit in an output var]
[1.0781s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [set or clear a bit in an output var]
[1.07841s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [decode a value into a number of different values]
[1.07871s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [decode a value into a number of different values]
[1.07901s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [forward a value to a different uri]
[1.07927s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [forward a value to a different uri]
[1.0797s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [set limits on a value]
[1.08001s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [set limits on a value]
[1.0803s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [run a func using an assetVar as an argument]
[1.08061s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [run a func using an assetVar as an argument]
[1.08091s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [use a bitmap to set the output variable]
[1.08116s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [use a bitmap to set the output variable]
[1.08163s  ] [info    ] [showVecList    ] [0] :: [/ess]
[1.08204s  ] [info    ] [showVecList    ] [1] :: [/assets]
[1.08236s  ] [info    ] [showVecList    ] [2] :: [/site]
[1.08276s  ] [info    ] [showVecList    ] [3] :: [/components]
[1.08321s  ] [info    ] [getVecListbyNam] no entry in vecs for [Subs]
[1.0835s   ] [info    ] [main_test_new_e] recovered  [ess]  Subs [0x0] len  [0]
[1.08384s  ] [info    ] [main_test_new_e]  flex_man >> No Subs found in flex config
[1.08406s  ] [info    ] [fimsSetup      ] FIMSSETUP size of subs = 4
[1.08444s  ] [info    ] [fimsSetup      ] name FlexSched connected to FIMS at attempt 0
[1.08475s  ] [info    ] [fimsSetup      ] name FlexSched subscribed to FIMS [true] connected [true]
[1.08503s  ] [info    ] [main_test_new_e]  flex_man >> p_fims [0x7b6540]  sched [0x7b6540]
[1.08551s  ] [info    ] [write_cjson    ] Wrote 4736 bytes to file /var/log/ess_controller/run_configs/ess_after_assets.json
 main_test_new_ess >> aV [/config/system:ess]
[1.08634s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"ess starting  at 0.064","severity":1}]
[1.0867s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [ACO-122-ESSC-PCS-Start-Stop-Standby]
[1.08709s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [ACO-122-ESSC-PCS-Start-Stop-Standby]
[1.08735s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [e34227b]
[1.08763s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [e34227b]
[1.08784s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [v11.3.0-alpha.2-327]
[1.08814s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [v11.3.0-alpha.2-327]
[1.08849s  ] [info    ] [runConfig      ]  requesting cfile [ess_init] 
[1.08881s  ] [info    ] [requestCfile   ] Getting from DBI ess_init
[1.08909s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [ess_config]
[1.0893s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [ess_config]
[1.08962s  ] [info    ] [handleCfile    ]  Running Loader 
[1.09054s  ] [info    ] [setupControls  ] Created Fims var [/sched/fims:dummy]
[1.0909s   ] [info    ] [setupControls  ] Created Runvar var [/control/ess:runTime]
[1.09115s  ] [info    ] [setupControls  ] Created Stop var [/control/ess:stopTime]
[1.09141s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_SchedPerf]
[1.09164s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_SchedPerf]
[1.09204s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:ess_init]  am at start [ess]
[1.09235s  ] [info    ] [configure_vmapS] process file seeking header stuff am [ess] ai [no ai]
[1.09264s  ] [info    ] [configure_vmapS] body: {"/config/load":{"ess_controller":{"aname":"ess","file":"ess_controller","final":"ess_final","new_options":[{"aname":"ess","file":"ess_controller_server_interface","pname":"ess"},{"aname":"ess","file":"ess_controller_ui","pname":"ess"},{"aname":"bms","load":"catl_bms_init","pname":"ess"},{"aname":"pcs","load":"pe_pcs_init","pname":"ess"}],"note1":"Loads ess_controller first. Then, configs defined in new_options, if any, are loaded next","note2":"Once all files are loaded, then ess_final is loaded","value":false}}}
[1.09295s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[1.09322s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ess_controller":	{
		"aname":	"ess",
		"file":	"ess_controller",
		"final":	"ess_final",
		"new_options":	[{
				"aname":	"ess",
				"file":	"ess_controller_server_interface",
				"pname":	"ess"
			}, {
				"aname":	"ess",
				"file":	"ess_controller_ui",
				"pname":	"ess"
			}, {
				"aname":	"bms",
				"load":	"catl_bms_init",
				"pname":	"ess"
			}, {
				"aname":	"pcs",
				"load":	"pe_pcs_init",
				"pname":	"ess"
			}],
		"note1":	"Loads ess_controller first. Then, configs defined in new_options, if any, are loaded next",
		"note2":	"Once all files are loaded, then ess_final is loaded",
		"value":	false
	}
}].
[1.09364s  ] [info    ] [schedThread    ] this is a replacement schedItem 0x7cc7f0 id ess_config uri /config/control:ess_config
[1.09393s  ] [info    ] [schedThread    ] schedItem deleted, seting repTime to 0.0
[1.98191s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [grid]
[1.98252s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [grid]
[1.98313s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_sel_3530_rtac]
[1.98364s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_sel_3530_rtac]
[1.98404s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_sel_651r]
[1.98456s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_sel_651r]
[1.98511s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_sel_735]
[1.98544s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_sel_735]
[1.98606s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_sel_3530_rtac]
[1.98635s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_sel_3530_rtac]
[1.98687s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_sel_651r]
[1.98727s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_sel_651r]
[1.98782s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_sel_735]
[1.98818s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_sel_735]
[1.98905s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_acuvim]
[1.98954s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_acuvim]
[1.99043s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [tx_ess_2]
[1.99086s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [tx_ess_2]
[1.99293s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[1.99338s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[1.99384s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[1.99409s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[1.99433s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[1.99473s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[1.99505s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[1.99528s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[1.99578s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [bms_1]
[1.9961s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [bms_1]
[2.00376s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Stopped]
[2.00424s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Stopped]
[2.00471s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.00508s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.00558s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.00596s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.00726s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [tx_ess_1]
[2.00775s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [tx_ess_1]
[2.00859s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.00885s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.00924s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.00953s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.0099s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standbycmd]
[2.01033s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standbycmd]
[2.01077s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.01106s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.01158s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.01204s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.01239s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standbycmd]
[2.01275s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standbycmd]
[2.01301s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.01343s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.01389s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.01414s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.01439s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standbycmd]
[2.01458s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standbycmd]
[2.01512s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pcs_1]
[2.01533s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pcs_1]
[2.0159s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Stopped]
[2.01612s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Stopped]
[2.01637s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Not Standby]
[2.01656s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Not Standby]
[2.01681s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.01702s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.01721s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.01742s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.01769s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standby]
[2.01788s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standby]
[2.0181s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standby]
[2.01831s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standby]
[2.01976s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.02005s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.02026s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.02043s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.02063s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.02084s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.02106s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.02121s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.02158s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [bms_2]
[2.02178s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [bms_2]
[2.02994s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Stopped]
[2.03019s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Stopped]
[2.03045s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.03072s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.03099s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.03115s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.03283s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.03302s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.0332s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.03335s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.03365s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.03388s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.03409s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.03424s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.03461s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [bms_3]
[2.03478s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [bms_3]
[2.04235s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Stopped]
[2.04278s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Stopped]
[2.04327s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.04367s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.04401s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.0443s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.04531s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_sel_3530_rtac]
[2.04567s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_sel_3530_rtac]
[2.046s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_sel_651r]
[2.04629s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_sel_651r]
[2.04711s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_sel_735]
[2.04753s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_sel_735]
[2.04835s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [transmission_line]
[2.04883s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [transmission_line]
[2.04976s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.05004s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.05029s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.05061s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.05087s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standbycmd]
[2.05118s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standbycmd]
[2.05147s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.05165s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.05186s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.05231s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.05254s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standbycmd]
[2.05273s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standbycmd]
[2.05304s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.05322s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.05344s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.05374s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.05413s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standbycmd]
[2.05435s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standbycmd]
[2.05495s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pcs_2]
[2.05533s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pcs_2]
[2.05642s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Stopped]
[2.05672s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Stopped]
[2.05703s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Standby]
[2.0574s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Standby]
[2.05768s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.05801s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.05833s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.05872s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.05897s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.05952s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.06005s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [aux_load]
[2.06092s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [aux_load]
[2.06163s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [tx_aux]
[2.0619s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [tx_aux]
[2.06252s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [tx_ess_3]
[2.0629s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [tx_ess_3]
[2.06391s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.0643s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.06471s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.0652s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.06559s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standbycmd]
[2.0658s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standbycmd]
[2.06667s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.06724s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.06793s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.06821s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.06855s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standbycmd]
[2.06884s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standbycmd]
[2.06934s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.06956s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.06996s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.07038s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.07085s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standbycmd]
[2.07121s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standbycmd]
[2.0722s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pcs_3]
[2.07288s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pcs_3]
[2.07378s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Stopped]
[2.07414s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Stopped]
[2.07461s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Standby]
[2.07497s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Standby]
[2.07552s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.07598s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.07638s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.07659s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.07718s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.07754s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.1031s   ] [info    ] [runConfig      ]  requesting cfile [ess_controller] 
[2.10339s  ] [info    ] [requestCfile   ] Getting from DBI ess_controller
[2.10446s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:ess_controller]  am at start [ess]
[2.10484s  ] [info    ] [configure_vmapS] process file seeking header stuff am [ess] ai [no ai]
[2.10504s  ] [info    ] [configure_vmapS] body: {"/config/ess":{"AlarmDestination":"/assets/ess/ess_1:alarms","EventSourceFormat":{"value":"assetName"},"FaultDestination":"/assets/ess/ess_1:faults","LogDir":"/var/log/ess_controller","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false},"/sched/ess":{"SiteBMSContactorControl":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"SiteBMSContactorControl"}]}]},"every":0.5,"value":"SiteBMSContactorControl"},"SitePCSStatusControl":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"SitePCSStatusControl"}]}]},"every":0.5,"value":"SitePCSStatusControl"},"SiteRunCmd":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"SiteRunCmd"}]}]},"every":0.5,"value":"SiteRunCmd"},"every1000ms_ess":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"Every1000mS"}]}]},"enable":"/config/ess:enable","note1":"Periodically runs Every1000mS, which is useful for reporting CPU statistics","note2":"Also useful for writing currently loaded ESS Controller variables to /var/log/ess_controller/run_configs folder","value":1},"pubAssets_ess":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"RunPub"}]}]},"enable":"/config/ess:enable","mode":"ui","note":"Publishes UI asset data (/assets/ess/ess_1)","table":"/assets/ess/ess_1","value":1},"pubESS":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"RunPub"}]}]},"enable":"/config/ess:enable","mode":"naked","note":"Publishes ESS Controller data (/site/ess)","table":"/site/ess","value":1},"runMonitor_ess":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"RunMonitor"}]}]},"aname":"ess","enable":"/config/ess:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/ess","value":1},"updateHeartbeatWrite_ess":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"CalculateVar","inAv":"/status/ess:HeartbeatWrite"}]}]},"enable":"/config/ess:enable","note":"Periodically updates the heartbeat write variable defined in /status/ess:HeartbeatWrite","value":1}},"/schedule/wake_monitor/ess":{"/status/ess:IsAlarming":{"amap":"ess","func":"CalculateVar"},"/status/ess:IsFaulted":{"amap":"ess","func":"CalculateVar"}},"/status/ess":{"AlarmCnt":0,"CommsOK":false,"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"value":false},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"uri":"/site/ess:heartbeat_from_ess"}]}]},"enable":"/config/ess:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/ess:HeartbeatWrite"},"IsAlarming":{"expression":"{1} or {2} or {3} \u003e 0","numVars":3,"useExpr":true,"value":false,"variable1":"/status/bms:IsAlarming","variable2":"/status/pcs:IsAlarming","variable3":"/status/ess:AlarmCnt"},"IsFaulted":{"expression":"{1} or {2} or {3} \u003e 0","numVars":3,"useExpr":true,"value":false,"variable1":"/status/bms:IsFaulted","variable2":"/status/pcs:IsFaulted","variable3":"/status/ess:FaultCnt"}},"/system/commands":{"runOpts_ess":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/ess) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"ess","every":1,"uri":"/sched/ess:pubAssets_ess","value":1},{"aname":"ess","every":0.1,"uri":"/sched/ess:runMonitor_ess","value":1},{"aname":"ess","every":1,"uri":"/sched/ess:updateHeartbeatWrite_ess","value":1},{"aname":"ess","every":0.1,"uri":"/sched/ess:pubESS","value":1},{"aname":"ess","every":1,"uri":"/sched/ess:every1000ms_ess","value":1},{"aname":"ess","debug":0,"every":0,"offset":0,"uri":"/sched/ess:SiteRunCmd","value":0},{"aname":"ess","debug":0,"every":0,"offset":0,"uri":"/sched/ess:SiteBMSContactorControl","value":0},{"aname":"ess","debug":0,"every":0,"offset":0,"uri":"/sched/ess:SitePCSStatusControl","value":0}],"targav":"/system/commands:run","value":false}}}
[2.10545s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[2.10573s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/ess/ess_1:alarms",
	"EventSourceFormat":	{
		"value":	"assetName"
	},
	"FaultDestination":	"/assets/ess/ess_1:faults",
	"LogDir":	"/var/log/ess_controller",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false
}].
[2.10597s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:alarms]
[2.10615s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:alarms]
[2.10634s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [assetName]
[2.1065s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [assetName]
[2.10667s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:faults]
[2.10695s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:faults]
[2.10728s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/var/log/ess_controller]
[2.10758s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/var/log/ess_controller]
[2.10791s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[2.1082s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[2.10849s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[2.10876s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[2.10936s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"SiteBMSContactorControl":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"SiteBMSContactorControl"
						}]
				}]
		},
		"every":	0.5,
		"value":	"SiteBMSContactorControl"
	},
	"SitePCSStatusControl":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"SitePCSStatusControl"
						}]
				}]
		},
		"every":	0.5,
		"value":	"SitePCSStatusControl"
	},
	"SiteRunCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"SiteRunCmd"
						}]
				}]
		},
		"every":	0.5,
		"value":	"SiteRunCmd"
	},
	"every1000ms_ess":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"Every1000mS"
						}]
				}]
		},
		"enable":	"/config/ess:enable",
		"note1":	"Periodically runs Every1000mS, which is useful for reporting CPU statistics",
		"note2":	"Also useful for writing currently loaded ESS Controller variables to /var/log/ess_controller/run_configs folder",
		"value":	1
	},
	"pubAssets_ess":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/ess:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/ess/ess_1)",
		"table":	"/assets/ess/ess_1",
		"value":	1
	},
	"pubESS":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/ess:enable",
		"mode":	"naked",
		"note":	"Publishes ESS Controller data (/site/ess)",
		"table":	"/site/ess",
		"value":	1
	},
	"runMonitor_ess":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"ess",
		"enable":	"/config/ess:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/ess",
		"value":	1
	},
	"updateHeartbeatWrite_ess":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"CalculateVar",
							"inAv":	"/status/ess:HeartbeatWrite"
						}]
				}]
		},
		"enable":	"/config/ess:enable",
		"note":	"Periodically updates the heartbeat write variable defined in /status/ess:HeartbeatWrite",
		"value":	1
	}
}].
[2.10984s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [SiteBMSContactorControl]
[2.11012s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [SiteBMSContactorControl]
[2.11042s  ] [info    ] [SiteBMSContacto] SiteBMSContactorControl
[2.11073s  ] [info    ] [SiteBMSContacto] reload == 0
[2.11099s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:SiteBMSContactorControl_ess]
[2.11126s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:SiteBMSContactorControl_ess]
[2.11168s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [SitePCSStatusControl]
[2.11216s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [SitePCSStatusControl]
[2.11246s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:SitePCSStatusControl_ess]
[2.11286s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:SitePCSStatusControl_ess]
[2.11321s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [SiteRunCmd]
[2.11349s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [SiteRunCmd]
[2.11393s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:SiteRunCmd_ess]
[2.11423s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:SiteRunCmd_ess]
[2.11475s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:SiteRunCmd_maintModeBms]
[2.11526s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:SiteRunCmd_maintModeBms]
[2.11566s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:SiteRunCmd_maintModePcs]
[2.11592s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:SiteRunCmd_maintModePcs]
[2.11634s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/ess:IsAlarming":	{
		"amap":	"ess",
		"func":	"CalculateVar"
	},
	"/status/ess:IsFaulted":	{
		"amap":	"ess",
		"func":	"CalculateVar"
	}
}].
[2.11671s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"CommsOK":	false,
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ActivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ReactivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:Stop@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:Stop"
						}]
				}]
		},
		"ifChanged":	true,
		"value":	false
	},
	"HeartbeatWrite":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/site/ess:heartbeat_from_ess"
						}]
				}]
		},
		"enable":	"/config/ess:enable",
		"excludeFromDefaultSched":	true,
		"expression":	"if (({1} >= 59), 0, ({1} + 1))",
		"note":	"Updates and then sends the heartbeat write value",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/ess:HeartbeatWrite"
	},
	"IsAlarming":	{
		"expression":	"{1} or {2} or {3} > 0",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:IsAlarming",
		"variable2":	"/status/pcs:IsAlarming",
		"variable3":	"/status/ess:AlarmCnt"
	},
	"IsFaulted":	{
		"expression":	"{1} or {2} or {3} > 0",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:IsFaulted",
		"variable2":	"/status/pcs:IsFaulted",
		"variable3":	"/status/ess:FaultCnt"
	}
}].
[2.11715s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_ess":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/ess) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"ess",
				"every":	1,
				"uri":	"/sched/ess:pubAssets_ess",
				"value":	1
			}, {
				"aname":	"ess",
				"every":	0.1,
				"uri":	"/sched/ess:runMonitor_ess",
				"value":	1
			}, {
				"aname":	"ess",
				"every":	1,
				"uri":	"/sched/ess:updateHeartbeatWrite_ess",
				"value":	1
			}, {
				"aname":	"ess",
				"every":	0.1,
				"uri":	"/sched/ess:pubESS",
				"value":	1
			}, {
				"aname":	"ess",
				"every":	1,
				"uri":	"/sched/ess:every1000ms_ess",
				"value":	1
			}, {
				"aname":	"ess",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/ess:SiteRunCmd",
				"value":	0
			}, {
				"aname":	"ess",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/ess:SiteBMSContactorControl",
				"value":	0
			}, {
				"aname":	"ess",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/ess:SitePCSStatusControl",
				"value":	0
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[2.3031s   ] [info    ] [runConfig      ]  requesting cfile [ess_controller_server_interface] 
[2.30347s  ] [info    ] [requestCfile   ] Getting from DBI ess_controller_server_interface
[2.30428s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:ess_controller_server_interface]  am at start [ess]
[2.30468s  ] [info    ] [configure_vmapS] process file seeking header stuff am [ess] ai [no ai]
[2.30507s  ] [info    ] [configure_vmapS] body: {"/schedule/wake_monitor/ess":{"/site/ess:heartbeat_to_ess":{"amap":"ess","func":"CheckMonitorVar"}},"/site/ess":{"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"LogInfo"}]},{"remap":[{"inValue":1,"outValue":true,"uri":"/controls/bms:ClearFaults@triggerCmd"},{"inValue":1,"outValue":1,"uri":"/controls/bms:ClearFaults"},{"inValue":1,"outValue":true,"uri":"/controls/pcs:ClearFaults@triggerCmd"},{"inValue":1,"outValue":0,"uri":"/controls/pcs:ClearFaults"}]}]},"enable":"/config/ess:enable","ifChanged":false,"name":"Clear Faults Command","note":"Initiates BMS/PCS clear faults command routines and clears ESS Controller alarms/faults","type":"control","value":0},"comms_faults":{"bit0":"PCS Communication Failure","bit1":"BMS Commnuication Failure","name":"Comms Faults","type":"bitfield","value":0},"ess_alarm_active":{"name":"ESS Alarm Active","type":"status","value":false},"ess_fault_active":{"name":"ESS Fault Active","type":"status","value":false},"ess_max_charge_power":{"name":"ESS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"ess_max_discharge_power":{"name":"ESS Max Discharge Power","type":"status","units":"kW","value":0},"heartbeat_from_ess":{"name":"Heartbeat From ESS Controller","type":"status","value":0},"heartbeat_to_ess":{"AlarmTimeout":10,"EnableCommsCheck":true,"EnableStateCheck":true,"FaultTimeout":10,"RecoverTimeout":0.1,"Type":"int","name":"Heartbeat To ESS Controller","note":"Checks if the ESS Controller is communicating with other processes (e.g. EMS, ESS Controller)","type":"control","value":0},"site_status_control_command":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/pcs:enable","every":0.5,"ifChanged":false,"name":"Start/Stop/Standby Command","note1":"Initiates ESS start, standby, or stop command routines","note2":"0-\u003estop | 1-\u003estart | 2-\u003estandby","offset":0,"size":1,"type":"control","uri":"/sched/ess:SiteRunCmd","value":-1}},"/vlinks/ess":{"site_ess_alarm_active":{"value":"/site/ess:ess_alarm_active","vlink":"/status/ess:IsAlarming"},"site_ess_fault_active":{"value":"/site/ess:ess_fault_active","vlink":"/status/ess:IsFaulted"},"site_ess_max_charge_power":{"value":"/site/ess:ess_max_charge_power","vlink":"/limits/ess:MaxChargePower"},"site_ess_max_discharge_power":{"value":"/site/ess:ess_max_discharge_power","vlink":"/limits/ess:MaxDischargePower"}}}
[2.30526s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[2.30538s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/site/ess:heartbeat_to_ess":	{
		"amap":	"ess",
		"func":	"CheckMonitorVar"
	}
}].
[2.3056s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	1,
							"outValue":	true,
							"uri":	"/controls/bms:ClearFaults@triggerCmd"
						}, {
							"inValue":	1,
							"outValue":	1,
							"uri":	"/controls/bms:ClearFaults"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/controls/pcs:ClearFaults@triggerCmd"
						}, {
							"inValue":	1,
							"outValue":	0,
							"uri":	"/controls/pcs:ClearFaults"
						}]
				}]
		},
		"enable":	"/config/ess:enable",
		"ifChanged":	false,
		"name":	"Clear Faults Command",
		"note":	"Initiates BMS/PCS clear faults command routines and clears ESS Controller alarms/faults",
		"type":	"control",
		"value":	0
	},
	"comms_faults":	{
		"bit0":	"PCS Communication Failure",
		"bit1":	"BMS Commnuication Failure",
		"name":	"Comms Faults",
		"type":	"bitfield",
		"value":	0
	},
	"ess_alarm_active":	{
		"name":	"ESS Alarm Active",
		"type":	"status",
		"value":	false
	},
	"ess_fault_active":	{
		"name":	"ESS Fault Active",
		"type":	"status",
		"value":	false
	},
	"ess_max_charge_power":	{
		"name":	"ESS Max Charge Power",
		"signed":	true,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"ess_max_discharge_power":	{
		"name":	"ESS Max Discharge Power",
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"heartbeat_from_ess":	{
		"name":	"Heartbeat From ESS Controller",
		"type":	"status",
		"value":	0
	},
	"heartbeat_to_ess":	{
		"AlarmTimeout":	10,
		"EnableCommsCheck":	true,
		"EnableStateCheck":	true,
		"FaultTimeout":	10,
		"RecoverTimeout":	0.1,
		"Type":	"int",
		"name":	"Heartbeat To ESS Controller",
		"note":	"Checks if the ESS Controller is communicating with other processes (e.g. EMS, ESS Controller)",
		"type":	"control",
		"value":	0
	},
	"site_status_control_command":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched"
						}]
				}]
		},
		"aname":	"ess",
		"debug":	0,
		"enable":	"/config/pcs:enable",
		"every":	0.5,
		"ifChanged":	false,
		"name":	"Start/Stop/Standby Command",
		"note1":	"Initiates ESS start, standby, or stop command routines",
		"note2":	"0->stop | 1->start | 2->standby",
		"offset":	0,
		"size":	1,
		"type":	"control",
		"uri":	"/sched/ess:SiteRunCmd",
		"value":	-1
	}
}].
[2.306s    ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"site_ess_alarm_active":	{
		"value":	"/site/ess:ess_alarm_active",
		"vlink":	"/status/ess:IsAlarming"
	},
	"site_ess_fault_active":	{
		"value":	"/site/ess:ess_fault_active",
		"vlink":	"/status/ess:IsFaulted"
	},
	"site_ess_max_charge_power":	{
		"value":	"/site/ess:ess_max_charge_power",
		"vlink":	"/limits/ess:MaxChargePower"
	},
	"site_ess_max_discharge_power":	{
		"value":	"/site/ess:ess_max_discharge_power",
		"vlink":	"/limits/ess:MaxDischargePower"
	}
}].
[2.30617s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:ess_alarm_active]
[2.30631s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:ess_alarm_active]
[2.30644s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:ess_fault_active]
[2.30659s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:ess_fault_active]
[2.30676s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:ess_max_charge_power]
[2.3069s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:ess_max_charge_power]
[2.30703s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:ess_max_discharge_power]
[2.30716s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:ess_max_discharge_power]
[2.50314s  ] [info    ] [runConfig      ]  requesting cfile [ess_controller_ui] 
[2.50403s  ] [info    ] [requestCfile   ] Getting from DBI ess_controller_ui
[2.50568s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:ess_controller_ui]  am at start [ess]
[2.5064s   ] [info    ] [configure_vmapS] process file seeking header stuff am [ess] ai [no ai]
[2.50706s  ] [info    ] [configure_vmapS] body: {"/assets/ess/ess_1":{"build":{"value":"INIT"},"comms_ok":{"value":false},"curr_real_mem":{"value":0},"max_apparent_power":{"value":0},"max_charge_power":{"value":0},"max_discharge_power":{"value":0},"max_reactive_power":{"value":0},"peak_real_mem":{"value":0},"system_temp":{"value":0}},"/vlinks/ess":{"ui_build":{"value":"/assets/ess/ess_1:build","vlink":"/status/ess:build"},"ui_comms_ok":{"value":"/assets/ess/ess_1:comms_ok","vlink":"/status/ess:CommsOK"},"ui_curr_real_mem":{"value":"/assets/ess/ess_1:curr_real_mem","vlink":"/status/ess:currRealMem"},"ui_max_apparent_power":{"value":"/assets/ess/ess_1:max_apparent_power","vlink":"/limits/ess:MaxApparentPower"},"ui_max_charge_power":{"value":"/assets/ess/ess_1:max_charge_power","vlink":"/limits/ess:MaxChargePower"},"ui_max_discharge_power":{"value":"/assets/ess/ess_1:max_discharge_power","vlink":"/limits/ess:MaxDischargePower"},"ui_max_reactive_power":{"value":"/assets/ess/ess_1:max_reactive_power","vlink":"/limits/ess:MaxReactivePower"},"ui_peak_real_mem":{"value":"/assets/ess/ess_1:peak_real_mem","vlink":"/status/ess:peakRealMem"},"ui_system_temp":{"value":"/assets/ess/ess_1:system_temp","vlink":"/status/ess:system_temp"}}}
[2.50771s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[2.50811s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"build":	{
		"value":	"INIT"
	},
	"comms_ok":	{
		"value":	false
	},
	"curr_real_mem":	{
		"value":	0
	},
	"max_apparent_power":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"max_reactive_power":	{
		"value":	0
	},
	"peak_real_mem":	{
		"value":	0
	},
	"system_temp":	{
		"value":	0
	}
}].
[2.50857s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[2.50919s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[2.50989s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_build":	{
		"value":	"/assets/ess/ess_1:build",
		"vlink":	"/status/ess:build"
	},
	"ui_comms_ok":	{
		"value":	"/assets/ess/ess_1:comms_ok",
		"vlink":	"/status/ess:CommsOK"
	},
	"ui_curr_real_mem":	{
		"value":	"/assets/ess/ess_1:curr_real_mem",
		"vlink":	"/status/ess:currRealMem"
	},
	"ui_max_apparent_power":	{
		"value":	"/assets/ess/ess_1:max_apparent_power",
		"vlink":	"/limits/ess:MaxApparentPower"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/ess/ess_1:max_charge_power",
		"vlink":	"/limits/ess:MaxChargePower"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/ess/ess_1:max_discharge_power",
		"vlink":	"/limits/ess:MaxDischargePower"
	},
	"ui_max_reactive_power":	{
		"value":	"/assets/ess/ess_1:max_reactive_power",
		"vlink":	"/limits/ess:MaxReactivePower"
	},
	"ui_peak_real_mem":	{
		"value":	"/assets/ess/ess_1:peak_real_mem",
		"vlink":	"/status/ess:peakRealMem"
	},
	"ui_system_temp":	{
		"value":	"/assets/ess/ess_1:system_temp",
		"vlink":	"/status/ess:system_temp"
	}
}].
[2.51046s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:build]
[2.51066s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:build]
[2.51099s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:comms_ok]
[2.5113s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:comms_ok]
[2.51144s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:curr_real_mem]
[2.51163s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:curr_real_mem]
[2.51184s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:max_apparent_power]
[2.51202s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:max_apparent_power]
[2.51228s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:max_charge_power]
[2.51243s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:max_charge_power]
[2.51259s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:max_discharge_power]
[2.51291s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:max_discharge_power]
[2.51305s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:max_reactive_power]
[2.51325s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:max_reactive_power]
[2.51337s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:peak_real_mem]
[2.51349s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:peak_real_mem]
[2.51368s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:system_temp]
[2.5138s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:system_temp]
[2.8032s   ] [info    ] [runConfig      ]  requesting cfile [catl_bms_init] 
[2.80421s  ] [info    ] [requestCfile   ] Getting from DBI catl_bms_init
[2.80554s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:catl_bms_init]  am at start [no Am]
[2.80631s  ] [info    ] [configure_vmapS] process file seeking header stuff am [bms] ai [no ai]
[2.80711s  ] [info    ] [configure_vmapS] body: {"/config/load":{"catl_bms_init":{"aname":"bms","file":"catl_bms_init","new_options":[{"amname":"bms","from":1,"pname":"ess","reps":[{"replace":"##BMS_ID##","with":"bms_{:01d}"},{"replace":"##BMS_NUM##","with":"{:01d}"},{"replace":"##PCS_ID##","with":"pcs_{:01d}"},{"replace":"##ESS_ID##","with":"ess_{:01d}"}],"tmpls":["catl_bms_manager","catl_bms_manager_controls","catl_bms_manager_faults","catl_bms_manager_client_interface","catl_bms_manager_server_interface","catl_bms_manager_ui"],"to":1},{"ainame":"##RACK_ID##","from":1,"pname":"bms","reps":[{"replace":"##RACK_ID##","with":"rack_{:01d}"},{"replace":"##RACK_NUM##","with":"{:01d}"}],"tmpls":["catl_bms_rack","catl_bms_rack_controls","catl_bms_rack_faults","catl_bms_rack_client_interface","catl_bms_rack_server_interface","catl_bms_rack_ui"],"to":9}],"note":"Loads catl_bms_init first. Then, configs defined in new_options, if any, are loaded next","pname":"ess","value":false}}}
[2.80778s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[2.80846s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"catl_bms_init":	{
		"aname":	"bms",
		"file":	"catl_bms_init",
		"new_options":	[{
				"amname":	"bms",
				"from":	1,
				"pname":	"ess",
				"reps":	[{
						"replace":	"##BMS_ID##",
						"with":	"bms_{:01d}"
					}, {
						"replace":	"##BMS_NUM##",
						"with":	"{:01d}"
					}, {
						"replace":	"##PCS_ID##",
						"with":	"pcs_{:01d}"
					}, {
						"replace":	"##ESS_ID##",
						"with":	"ess_{:01d}"
					}],
				"tmpls":	["catl_bms_manager", "catl_bms_manager_controls", "catl_bms_manager_faults", "catl_bms_manager_client_interface", "catl_bms_manager_server_interface", "catl_bms_manager_ui"],
				"to":	1
			}, {
				"ainame":	"##RACK_ID##",
				"from":	1,
				"pname":	"bms",
				"reps":	[{
						"replace":	"##RACK_ID##",
						"with":	"rack_{:01d}"
					}, {
						"replace":	"##RACK_NUM##",
						"with":	"{:01d}"
					}],
				"tmpls":	["catl_bms_rack", "catl_bms_rack_controls", "catl_bms_rack_faults", "catl_bms_rack_client_interface", "catl_bms_rack_server_interface", "catl_bms_rack_ui"],
				"to":	9
			}],
		"note":	"Loads catl_bms_init first. Then, configs defined in new_options, if any, are loaded next",
		"pname":	"ess",
		"value":	false
	}
}].
[3.00731s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_manager] try number [1] 
[3.00794s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_manager_client_interface] try number [1] 
[3.00862s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_manager_controls] try number [1] 
[3.009s    ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_manager_faults] try number [1] 
[3.00932s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_manager_server_interface] try number [1] 
[3.00977s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_manager_ui] try number [1] 
[3.2031s   ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_rack] try number [1] 
[3.20378s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_rack_client_interface] try number [1] 
[3.20427s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_rack_controls] try number [1] 
[3.20477s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_rack_faults] try number [1] 
[3.20498s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_rack_server_interface] try number [1] 
[3.20524s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_rack_ui] try number [1] 
[3.30332s  ] [info    ] [runConfig      ]  All files loaded for loader [catl_bms_init] ready to run av [/config/load:catl_bms_init] load
[3.30401s  ] [info    ] [configLoad     ] tmpls field is found in av [/config/load:catl_bms_init]. We'll perform template expansions with tmpls instead of tmpl
[3.30439s  ] [info    ] [configLoad     ] tbody before: {"/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellTemp","variable2":"/status/bms:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellVoltage","variable2":"/status/bms:MaxCellVoltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCCharging":{"expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"NumRacksTotal":9,"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}}}
[3.30542s  ] [info    ] [configLoad     ] tbody now: "/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellTemp","variable2":"/status/bms:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellVoltage","variable2":"/status/bms:MaxCellVoltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCCharging":{"expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"NumRacksTotal":9,"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}}
[3.30638s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellTemp","variable2":"/status/bms:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellVoltage","variable2":"/status/bms:MaxCellVoltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCCharging":{"expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"NumRacksTotal":9,"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/catl_ems_bms_rw:fault_clear_cmd","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":1},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}}
[3.30704s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellTemp","variable2":"/status/bms:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellVoltage","variable2":"/status/bms:MaxCellVoltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCCharging":{"expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"NumRacksTotal":9,"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/catl_ems_bms_rw:fault_clear_cmd","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":1},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/faults/bms":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/schedule/wake_monitor/bms":{"/status/bms:AnyFireFaultActive":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CellVoltageDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CurrentBeforeStopIsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:DCVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:HeartbeatRead":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:IsAlarming":{"amap":"bms","func":"CalculateVar"},"/status/bms:IsFaulted":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MaxCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:NumRacksOnline":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:OverCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:OverCurrentFault":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:SOH":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:TotalAlarmCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:TotalFaultCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentFault":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AlarmCnt":0,"AnyFireFaultActive":{"numVars":2,"operation":"or","value":false,"variable1":"bms:AnyFireFaultActive","variable2":"/status/bms:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms:enable","expression":"{1} \u003c= {2} and {1} \u003e= (-1 * {2})","note":"Set to true if the BMS DC current is within an acceptable level before stopping the PCS","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent","variable2":"/config/bms:CurrentBeforeStopThreshold"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmTimeout":1,"MaxFaultTimeout":2.5,"MinAlarmTimeout":1,"MinFaultTimeout":2.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":true,"EnableStateCheck":true,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:SystemFault","variable2":"/status/bms:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":52,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":53,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":52,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":-0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the max alarm threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalAlarmCnt","variable2":"/status/bms:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalFaultCnt","variable2":"/status/bms:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the min alarm threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"}}
[3.30746s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellTemp","variable2":"/status/bms:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellVoltage","variable2":"/status/bms:MaxCellVoltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCCharging":{"expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"NumRacksTotal":9,"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/catl_ems_bms_rw:fault_clear_cmd","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":1},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/faults/bms":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/schedule/wake_monitor/bms":{"/status/bms:AnyFireFaultActive":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CellVoltageDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CurrentBeforeStopIsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:DCVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:HeartbeatRead":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:IsAlarming":{"amap":"bms","func":"CalculateVar"},"/status/bms:IsFaulted":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MaxCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:NumRacksOnline":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:OverCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:OverCurrentFault":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:SOH":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:TotalAlarmCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:TotalFaultCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentFault":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AlarmCnt":0,"AnyFireFaultActive":{"numVars":2,"operation":"or","value":false,"variable1":"bms:AnyFireFaultActive","variable2":"/status/bms:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms:enable","expression":"{1} \u003c= {2} and {1} \u003e= (-1 * {2})","note":"Set to true if the BMS DC current is within an acceptable level before stopping the PCS","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent","variable2":"/config/bms:CurrentBeforeStopThreshold"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmTimeout":1,"MaxFaultTimeout":2.5,"MinAlarmTimeout":1,"MinFaultTimeout":2.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":true,"EnableStateCheck":true,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:SystemFault","variable2":"/status/bms:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":52,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":53,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":52,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":-0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the max alarm threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalAlarmCnt","variable2":"/status/bms:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalFaultCnt","variable2":"/status/bms:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the min alarm threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"}},"/components/catl_bms_ems_r":{"bms_poweron":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":1,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":2,"outValue":"On Fault","uri":"/status/bms:Status"},{"inValue":3,"outValue":"Off Fault","uri":"/status/bms:Status"},{"inValue":0,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/bms:DCClosed"},{"inValue":2,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":3,"outValue":true,"uri":"/status/bms:DCClosed"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:status@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms":{"checkInputs_bms":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms:status@ifChanged"}]}]},"enable":"/config/bms:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms":{"avg_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_temperature","vlink":"/status/bms:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"dc_charge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"dc_charge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_charge_energy","vlink":"/status/bms:ChargeableEnergy"},"dc_charge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_charge_allowed","vlink":"/limits/bms:ChargePowerLimit"},"dc_current":{"value":"/components/catl_mbmu_summary_r:mbmu_current","vlink":"/status/bms:DCCurrent"},"dc_discharge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"dc_discharge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_discharge_energy","vlink":"/status/bms:DischargeableEnergy"},"dc_discharge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_discharge_allowed","vlink":"/limits/bms:DischargePowerLimit"},"dc_power":{"value":"/components/catl_mbmu_summary_r:mbmu_power","vlink":"/status/bms:DCPower"},"dc_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_voltage","vlink":"/status/bms:DCVoltage"},"heartbeat_read":{"value":"/components/catl_bms_ems_r:bms_heartbeat","vlink":"/status/bms:HeartbeatRead"},"max_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_temperature","vlink":"/status/bms:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"min_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_temperature","vlink":"/status/bms:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"num_online_racks":{"value":"/components/catl_bms_ems_r:num_hv_subsystem","vlink":"/status/bms:NumRacksOnline"},"soc":{"value":"/components/catl_mbmu_summary_r:mbmu_soc","vlink":"/status/bms:SOC"},"soh":{"value":"/components/catl_mbmu_summary_r:mbmu_soh","vlink":"/status/bms:SOH"}}
[3.30787s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellTemp","variable2":"/status/bms:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellVoltage","variable2":"/status/bms:MaxCellVoltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCCharging":{"expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"NumRacksTotal":9,"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/catl_ems_bms_rw:fault_clear_cmd","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":1},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/faults/bms":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/schedule/wake_monitor/bms":{"/status/bms:AnyFireFaultActive":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CellVoltageDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CurrentBeforeStopIsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:DCVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:HeartbeatRead":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:IsAlarming":{"amap":"bms","func":"CalculateVar"},"/status/bms:IsFaulted":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MaxCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:NumRacksOnline":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:OverCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:OverCurrentFault":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:SOH":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:TotalAlarmCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:TotalFaultCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentFault":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AlarmCnt":0,"AnyFireFaultActive":{"numVars":2,"operation":"or","value":false,"variable1":"bms:AnyFireFaultActive","variable2":"/status/bms:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms:enable","expression":"{1} \u003c= {2} and {1} \u003e= (-1 * {2})","note":"Set to true if the BMS DC current is within an acceptable level before stopping the PCS","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent","variable2":"/config/bms:CurrentBeforeStopThreshold"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmTimeout":1,"MaxFaultTimeout":2.5,"MinAlarmTimeout":1,"MinFaultTimeout":2.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":true,"EnableStateCheck":true,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:SystemFault","variable2":"/status/bms:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":52,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":53,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":52,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":-0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the max alarm threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalAlarmCnt","variable2":"/status/bms:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalFaultCnt","variable2":"/status/bms:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the min alarm threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"}},"/components/catl_bms_ems_r":{"bms_poweron":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":1,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":2,"outValue":"On Fault","uri":"/status/bms:Status"},{"inValue":3,"outValue":"Off Fault","uri":"/status/bms:Status"},{"inValue":0,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/bms:DCClosed"},{"inValue":2,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":3,"outValue":true,"uri":"/status/bms:DCClosed"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:status@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms":{"checkInputs_bms":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms:status@ifChanged"}]}]},"enable":"/config/bms:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms":{"avg_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_temperature","vlink":"/status/bms:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"dc_charge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"dc_charge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_charge_energy","vlink":"/status/bms:ChargeableEnergy"},"dc_charge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_charge_allowed","vlink":"/limits/bms:ChargePowerLimit"},"dc_current":{"value":"/components/catl_mbmu_summary_r:mbmu_current","vlink":"/status/bms:DCCurrent"},"dc_discharge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"dc_discharge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_discharge_energy","vlink":"/status/bms:DischargeableEnergy"},"dc_discharge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_discharge_allowed","vlink":"/limits/bms:DischargePowerLimit"},"dc_power":{"value":"/components/catl_mbmu_summary_r:mbmu_power","vlink":"/status/bms:DCPower"},"dc_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_voltage","vlink":"/status/bms:DCVoltage"},"heartbeat_read":{"value":"/components/catl_bms_ems_r:bms_heartbeat","vlink":"/status/bms:HeartbeatRead"},"max_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_temperature","vlink":"/status/bms:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"min_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_temperature","vlink":"/status/bms:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"num_online_racks":{"value":"/components/catl_bms_ems_r:num_hv_subsystem","vlink":"/status/bms:NumRacksOnline"},"soc":{"value":"/components/catl_mbmu_summary_r:mbmu_soc","vlink":"/status/bms:SOC"},"soh":{"value":"/components/catl_mbmu_summary_r:mbmu_soh","vlink":"/status/bms:SOH"}},"/site/ess":{"bms_alarm_active":{"name":"BMS Alarm Active","type":"status","value":false},"bms_avg_cell_temp":{"name":"BMS Avg Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_avg_cell_voltage":{"name":"BMS Avg Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_cell_temp_delta":{"name":"BMS Cell Temperature Delta","scale":100,"type":"status","units":"°C","value":0},"bms_cell_voltage_delta":{"name":"BMS Cell Voltage Delta","scale":10000,"type":"status","units":"V","value":0},"bms_chargeable_energy":{"name":"BMS Chargeable Energy","scale":10,"type":"status","units":"kWh","value":0},"bms_close_contactors_enabled":{"excludeFromFile":true,"name":"BMS Close Contactors Enabled","type":"status","value":false},"bms_comms_ok":{"name":"BMS Comms OK","type":"status","value":false},"bms_control_alarms":{"bit0":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit2":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","bit4":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","name":"BMS Control Alarms","type":"bitfield","value":0},"bms_current_before_stop_is_ok":{"excludeFromFile":true,"name":"BMS Current Before Stop is OK","type":"status","value":false},"bms_dc_charging":{"name":"BMS DC Charging","type":"status","value":false},"bms_dc_contactor_control":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/pcs:enable","every":0.5,"ifChanged":false,"name":"BMS Contactor Control Command","note1":"Initiates BMS close and open contactors","note2":"2-\u003eclose contactors | 3-\u003eopen contactors","offset":0,"size":1,"type":"control","uri":"/sched/ess:SiteBMSContactorControl","value":0},"bms_dc_contactors_closed":{"name":"BMS DC Contactors Closed","type":"status","value":false},"bms_dc_current":{"name":"BMS DC Current","scale":10,"signed":true,"type":"status","units":"A","value":0},"bms_dc_discharging":{"name":"BMS DC Discharging","type":"status","value":false},"bms_dc_power":{"name":"BMS DC Power","scale":10,"signed":true,"type":"status","units":"kW","value":0},"bms_dc_voltage":{"name":"BMS DC Voltage","scale":10,"signed":true,"type":"status","units":"V","value":0},"bms_dischargeable_energy":{"name":"BMS Dischargeable Energy","scale":10,"type":"status","units":"kWh","value":0},"bms_fault_active":{"name":"BMS Fault Active","type":"status","value":false},"bms_fire_fault_active":{"name":"BMS Fire Fault Active","type":"status","value":false},"bms_max_cell_temp":{"name":"BMS Max Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_max_cell_voltage":{"name":"BMS Max Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_max_charge_current":{"name":"BMS Max Charge Current","signed":true,"type":"status","units":"A","value":0},"bms_max_charge_power":{"name":"BMS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"bms_max_discharge_current":{"name":"BMS Max Discharge Current","type":"status","units":"A","value":0},"bms_max_discharge_power":{"name":"BMS Max Discharge Power","type":"status","units":"kW","value":0},"bms_min_cell_temp":{"name":"BMS Min Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_min_cell_voltage":{"name":"BMS Min Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_monitor_alarms":{"bit0":"BMS DC Current Max Threshold Exceeded","bit1":"BMS DC Current Min Threshold Exceeded","bit10":"BMS SOC Min Threshold Exceeded","bit11":"BMS Cell Voltage Delta Max Threshold Exceeded","bit12":"BMS Cell Temperature Delta Max Threshold Exceeded","bit13":"BMS Number of Racks Online Below Min Threshold","bit2":"BMS Max Cell Temperature Threshold Exceeded","bit3":"BMS Max Cell Voltage Threshold Exceeded","bit4":"BMS Min Cell Temperature Threshold Exceeded","bit5":"BMS Min Cell Voltage Threshold Exceeded","bit6":"BMS State of Health Below Threshold","bit7":"BMS DC Voltage Max Threshold Exceeded","bit8":"BMS DC Voltage Min Threshold Exceeded","bit9":"BMS SOC Max Threshold Exceeded","name":"BMS Monitor Alarms","type":"bitfield","value":0},"bms_monitor_faults":{"bit0":"BMS DC Current Max Threshold Exceeded","bit1":"BMS DC Current Min Threshold Exceeded","bit10":"BMS SOC Min Threshold Exceeded","bit11":"BMS Cell Voltage Delta Max Threshold Exceeded","bit12":"BMS Cell Temperature Delta Max Threshold Exceeded","bit13":"BMS Number of Racks Online Below Min Threshold","bit2":"BMS Max Cell Temperature Threshold Exceeded","bit3":"BMS Max Cell Voltage Threshold Exceeded","bit4":"BMS Min Cell Temperature Threshold Exceeded","bit5":"BMS Min Cell Voltage Threshold Exceeded","bit6":"BMS State of Health Below Threshold","bit7":"BMS DC Voltage Max Threshold Exceeded","bit8":"BMS DC Voltage Min Threshold Exceeded","bit9":"BMS SOC Max Threshold Exceeded","name":"BMS Monitor Faults","type":"bitfield","value":0},"bms_num_racks_online":{"name":"BMS Number of Racks Online","type":"status","value":0},"bms_num_racks_total":{"name":"BMS Number of Racks Total","type":"status","value":0},"bms_open_contactors_enabled":{"excludeFromFile":true,"name":"BMS Open Contactors Enabled","type":"status","value":false},"bms_soc":{"name":"BMS State of Charge (SOC)","scale":10,"type":"status","units":"%","value":0},"bms_soh":{"name":"BMS State of Health (SOH)","scale":10,"type":"status","units":"%","value":0},"bms_status":{"excludeFromFile":true,"name":"BMS Status","type":"status","value":"INIT"}},"/vlinks/bms":{"site_bms_alarm_active":{"value":"/site/ess:bms_alarm_active","vlink":"/status/bms:IsAlarming"},"site_bms_avg_cell_temp":{"value":"/site/ess:bms_avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"site_bms_avg_cell_voltage":{"value":"/site/ess:bms_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"site_bms_cell_temp_delta":{"value":"/site/ess:bms_cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"site_bms_cell_voltage_delta":{"value":"/site/ess:bms_cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"site_bms_chargeable_energy":{"value":"/site/ess:bms_chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"site_bms_close_contactors_enabled":{"value":"/site/ess:bms_close_contactors_enabled","vlink":"/status/bms:CloseContactorsEnabled"},"site_bms_comms_ok":{"value":"/site/ess:bms_comms_ok","vlink":"/status/bms:CommsOK"},"site_bms_current_before_stop_is_ok":{"value":"/site/ess:bms_current_before_stop_is_ok","vlink":"/status/bms:CurrentBeforeStopIsOK"},"site_bms_dc_charging":{"value":"/site/ess:bms_dc_charging","vlink":"/status/bms:DCCharging"},"site_bms_dc_contactors_closed":{"value":"/site/ess:bms_dc_contactors_closed","vlink":"/status/bms:DCClosed"},"site_bms_dc_current":{"value":"/site/ess:bms_dc_current","vlink":"/status/bms:DCCurrent"},"site_bms_dc_discharging":{"value":"/site/ess:bms_dc_discharging","vlink":"/status/bms:DCDischarging"},"site_bms_dc_power":{"value":"/site/ess:bms_dc_power","vlink":"/status/bms:DCPower"},"site_bms_dc_voltage":{"value":"/site/ess:bms_dc_voltage","vlink":"/status/bms:DCVoltage"},"site_bms_dischargeable_energy":{"value":"/site/ess:bms_dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"site_bms_fault_active":{"value":"/site/ess:bms_fault_active","vlink":"/status/bms:IsFaulted"},"site_bms_fire_fault_active":{"value":"/site/ess:bms_fire_fault_active","vlink":"/status/bms:AnyFireFaultActive"},"site_bms_max_cell_temp":{"value":"/site/ess:bms_max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"site_bms_max_cell_voltage":{"value":"/site/ess:bms_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"site_bms_max_charge_current":{"value":"/site/ess:bms_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"site_bms_max_charge_power":{"value":"/site/ess:bms_max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"site_bms_max_discharge_current":{"value":"/site/ess:bms_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"site_bms_max_discharge_power":{"value":"/site/ess:bms_max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"site_bms_min_cell_temp":{"value":"/site/ess:bms_min_cell_temp","vlink":"/status/bms:MinCellTemp"},"site_bms_min_cell_voltage":{"value":"/site/ess:bms_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"site_bms_num_racks_online":{"value":"/site/ess:bms_num_racks_online","vlink":"/status/bms:NumRacksOnline"},"site_bms_num_racks_total":{"value":"/site/ess:bms_num_racks_total","vlink":"/status/bms:NumRacksTotal"},"site_bms_open_contactors_enabled":{"value":"/site/ess:bms_open_contactors_enabled","vlink":"/status/bms:OpenContactorsEnabled"},"site_bms_soc":{"value":"/site/ess:bms_soc","vlink":"/status/bms:SOC"},"site_bms_soh":{"value":"/site/ess:bms_soh","vlink":"/status/bms:SOH"},"site_bms_status":{"value":"/site/ess:bms_status","vlink":"/status/bms:Status"}}
[3.3083s   ] [info    ] [configLoad     ] pi's av tbody now: "/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellTemp","variable2":"/status/bms:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellVoltage","variable2":"/status/bms:MaxCellVoltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCCharging":{"expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"NumRacksTotal":9,"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/catl_ems_bms_rw:fault_clear_cmd","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":1},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/faults/bms":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/schedule/wake_monitor/bms":{"/status/bms:AnyFireFaultActive":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CellVoltageDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CurrentBeforeStopIsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:DCVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:HeartbeatRead":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:IsAlarming":{"amap":"bms","func":"CalculateVar"},"/status/bms:IsFaulted":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MaxCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:NumRacksOnline":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:OverCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:OverCurrentFault":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:SOH":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:TotalAlarmCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:TotalFaultCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentFault":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AlarmCnt":0,"AnyFireFaultActive":{"numVars":2,"operation":"or","value":false,"variable1":"bms:AnyFireFaultActive","variable2":"/status/bms:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms:enable","expression":"{1} \u003c= {2} and {1} \u003e= (-1 * {2})","note":"Set to true if the BMS DC current is within an acceptable level before stopping the PCS","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent","variable2":"/config/bms:CurrentBeforeStopThreshold"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmTimeout":1,"MaxFaultTimeout":2.5,"MinAlarmTimeout":1,"MinFaultTimeout":2.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":true,"EnableStateCheck":true,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:SystemFault","variable2":"/status/bms:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":52,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":53,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":52,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":-0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the max alarm threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalAlarmCnt","variable2":"/status/bms:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalFaultCnt","variable2":"/status/bms:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the min alarm threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"}},"/components/catl_bms_ems_r":{"bms_poweron":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":1,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":2,"outValue":"On Fault","uri":"/status/bms:Status"},{"inValue":3,"outValue":"Off Fault","uri":"/status/bms:Status"},{"inValue":0,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/bms:DCClosed"},{"inValue":2,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":3,"outValue":true,"uri":"/status/bms:DCClosed"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:status@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms":{"checkInputs_bms":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms:status@ifChanged"}]}]},"enable":"/config/bms:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms":{"avg_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_temperature","vlink":"/status/bms:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"dc_charge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"dc_charge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_charge_energy","vlink":"/status/bms:ChargeableEnergy"},"dc_charge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_charge_allowed","vlink":"/limits/bms:ChargePowerLimit"},"dc_current":{"value":"/components/catl_mbmu_summary_r:mbmu_current","vlink":"/status/bms:DCCurrent"},"dc_discharge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"dc_discharge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_discharge_energy","vlink":"/status/bms:DischargeableEnergy"},"dc_discharge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_discharge_allowed","vlink":"/limits/bms:DischargePowerLimit"},"dc_power":{"value":"/components/catl_mbmu_summary_r:mbmu_power","vlink":"/status/bms:DCPower"},"dc_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_voltage","vlink":"/status/bms:DCVoltage"},"heartbeat_read":{"value":"/components/catl_bms_ems_r:bms_heartbeat","vlink":"/status/bms:HeartbeatRead"},"max_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_temperature","vlink":"/status/bms:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"min_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_temperature","vlink":"/status/bms:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"num_online_racks":{"value":"/components/catl_bms_ems_r:num_hv_subsystem","vlink":"/status/bms:NumRacksOnline"},"soc":{"value":"/components/catl_mbmu_summary_r:mbmu_soc","vlink":"/status/bms:SOC"},"soh":{"value":"/components/catl_mbmu_summary_r:mbmu_soh","vlink":"/status/bms:SOH"}},"/site/ess":{"bms_alarm_active":{"name":"BMS Alarm Active","type":"status","value":false},"bms_avg_cell_temp":{"name":"BMS Avg Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_avg_cell_voltage":{"name":"BMS Avg Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_cell_temp_delta":{"name":"BMS Cell Temperature Delta","scale":100,"type":"status","units":"°C","value":0},"bms_cell_voltage_delta":{"name":"BMS Cell Voltage Delta","scale":10000,"type":"status","units":"V","value":0},"bms_chargeable_energy":{"name":"BMS Chargeable Energy","scale":10,"type":"status","units":"kWh","value":0},"bms_close_contactors_enabled":{"excludeFromFile":true,"name":"BMS Close Contactors Enabled","type":"status","value":false},"bms_comms_ok":{"name":"BMS Comms OK","type":"status","value":false},"bms_control_alarms":{"bit0":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit2":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","bit4":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","name":"BMS Control Alarms","type":"bitfield","value":0},"bms_current_before_stop_is_ok":{"excludeFromFile":true,"name":"BMS Current Before Stop is OK","type":"status","value":false},"bms_dc_charging":{"name":"BMS DC Charging","type":"status","value":false},"bms_dc_contactor_control":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/pcs:enable","every":0.5,"ifChanged":false,"name":"BMS Contactor Control Command","note1":"Initiates BMS close and open contactors","note2":"2-\u003eclose contactors | 3-\u003eopen contactors","offset":0,"size":1,"type":"control","uri":"/sched/ess:SiteBMSContactorControl","value":0},"bms_dc_contactors_closed":{"name":"BMS DC Contactors Closed","type":"status","value":false},"bms_dc_current":{"name":"BMS DC Current","scale":10,"signed":true,"type":"status","units":"A","value":0},"bms_dc_discharging":{"name":"BMS DC Discharging","type":"status","value":false},"bms_dc_power":{"name":"BMS DC Power","scale":10,"signed":true,"type":"status","units":"kW","value":0},"bms_dc_voltage":{"name":"BMS DC Voltage","scale":10,"signed":true,"type":"status","units":"V","value":0},"bms_dischargeable_energy":{"name":"BMS Dischargeable Energy","scale":10,"type":"status","units":"kWh","value":0},"bms_fault_active":{"name":"BMS Fault Active","type":"status","value":false},"bms_fire_fault_active":{"name":"BMS Fire Fault Active","type":"status","value":false},"bms_max_cell_temp":{"name":"BMS Max Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_max_cell_voltage":{"name":"BMS Max Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_max_charge_current":{"name":"BMS Max Charge Current","signed":true,"type":"status","units":"A","value":0},"bms_max_charge_power":{"name":"BMS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"bms_max_discharge_current":{"name":"BMS Max Discharge Current","type":"status","units":"A","value":0},"bms_max_discharge_power":{"name":"BMS Max Discharge Power","type":"status","units":"kW","value":0},"bms_min_cell_temp":{"name":"BMS Min Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_min_cell_voltage":{"name":"BMS Min Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_monitor_alarms":{"bit0":"BMS DC Current Max Threshold Exceeded","bit1":"BMS DC Current Min Threshold Exceeded","bit10":"BMS SOC Min Threshold Exceeded","bit11":"BMS Cell Voltage Delta Max Threshold Exceeded","bit12":"BMS Cell Temperature Delta Max Threshold Exceeded","bit13":"BMS Number of Racks Online Below Min Threshold","bit2":"BMS Max Cell Temperature Threshold Exceeded","bit3":"BMS Max Cell Voltage Threshold Exceeded","bit4":"BMS Min Cell Temperature Threshold Exceeded","bit5":"BMS Min Cell Voltage Threshold Exceeded","bit6":"BMS State of Health Below Threshold","bit7":"BMS DC Voltage Max Threshold Exceeded","bit8":"BMS DC Voltage Min Threshold Exceeded","bit9":"BMS SOC Max Threshold Exceeded","name":"BMS Monitor Alarms","type":"bitfield","value":0},"bms_monitor_faults":{"bit0":"BMS DC Current Max Threshold Exceeded","bit1":"BMS DC Current Min Threshold Exceeded","bit10":"BMS SOC Min Threshold Exceeded","bit11":"BMS Cell Voltage Delta Max Threshold Exceeded","bit12":"BMS Cell Temperature Delta Max Threshold Exceeded","bit13":"BMS Number of Racks Online Below Min Threshold","bit2":"BMS Max Cell Temperature Threshold Exceeded","bit3":"BMS Max Cell Voltage Threshold Exceeded","bit4":"BMS Min Cell Temperature Threshold Exceeded","bit5":"BMS Min Cell Voltage Threshold Exceeded","bit6":"BMS State of Health Below Threshold","bit7":"BMS DC Voltage Max Threshold Exceeded","bit8":"BMS DC Voltage Min Threshold Exceeded","bit9":"BMS SOC Max Threshold Exceeded","name":"BMS Monitor Faults","type":"bitfield","value":0},"bms_num_racks_online":{"name":"BMS Number of Racks Online","type":"status","value":0},"bms_num_racks_total":{"name":"BMS Number of Racks Total","type":"status","value":0},"bms_open_contactors_enabled":{"excludeFromFile":true,"name":"BMS Open Contactors Enabled","type":"status","value":false},"bms_soc":{"name":"BMS State of Charge (SOC)","scale":10,"type":"status","units":"%","value":0},"bms_soh":{"name":"BMS State of Health (SOH)","scale":10,"type":"status","units":"%","value":0},"bms_status":{"excludeFromFile":true,"name":"BMS Status","type":"status","value":"INIT"}},"/vlinks/bms":{"site_bms_alarm_active":{"value":"/site/ess:bms_alarm_active","vlink":"/status/bms:IsAlarming"},"site_bms_avg_cell_temp":{"value":"/site/ess:bms_avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"site_bms_avg_cell_voltage":{"value":"/site/ess:bms_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"site_bms_cell_temp_delta":{"value":"/site/ess:bms_cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"site_bms_cell_voltage_delta":{"value":"/site/ess:bms_cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"site_bms_chargeable_energy":{"value":"/site/ess:bms_chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"site_bms_close_contactors_enabled":{"value":"/site/ess:bms_close_contactors_enabled","vlink":"/status/bms:CloseContactorsEnabled"},"site_bms_comms_ok":{"value":"/site/ess:bms_comms_ok","vlink":"/status/bms:CommsOK"},"site_bms_current_before_stop_is_ok":{"value":"/site/ess:bms_current_before_stop_is_ok","vlink":"/status/bms:CurrentBeforeStopIsOK"},"site_bms_dc_charging":{"value":"/site/ess:bms_dc_charging","vlink":"/status/bms:DCCharging"},"site_bms_dc_contactors_closed":{"value":"/site/ess:bms_dc_contactors_closed","vlink":"/status/bms:DCClosed"},"site_bms_dc_current":{"value":"/site/ess:bms_dc_current","vlink":"/status/bms:DCCurrent"},"site_bms_dc_discharging":{"value":"/site/ess:bms_dc_discharging","vlink":"/status/bms:DCDischarging"},"site_bms_dc_power":{"value":"/site/ess:bms_dc_power","vlink":"/status/bms:DCPower"},"site_bms_dc_voltage":{"value":"/site/ess:bms_dc_voltage","vlink":"/status/bms:DCVoltage"},"site_bms_dischargeable_energy":{"value":"/site/ess:bms_dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"site_bms_fault_active":{"value":"/site/ess:bms_fault_active","vlink":"/status/bms:IsFaulted"},"site_bms_fire_fault_active":{"value":"/site/ess:bms_fire_fault_active","vlink":"/status/bms:AnyFireFaultActive"},"site_bms_max_cell_temp":{"value":"/site/ess:bms_max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"site_bms_max_cell_voltage":{"value":"/site/ess:bms_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"site_bms_max_charge_current":{"value":"/site/ess:bms_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"site_bms_max_charge_power":{"value":"/site/ess:bms_max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"site_bms_max_discharge_current":{"value":"/site/ess:bms_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"site_bms_max_discharge_power":{"value":"/site/ess:bms_max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"site_bms_min_cell_temp":{"value":"/site/ess:bms_min_cell_temp","vlink":"/status/bms:MinCellTemp"},"site_bms_min_cell_voltage":{"value":"/site/ess:bms_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"site_bms_num_racks_online":{"value":"/site/ess:bms_num_racks_online","vlink":"/status/bms:NumRacksOnline"},"site_bms_num_racks_total":{"value":"/site/ess:bms_num_racks_total","vlink":"/status/bms:NumRacksTotal"},"site_bms_open_contactors_enabled":{"value":"/site/ess:bms_open_contactors_enabled","vlink":"/status/bms:OpenContactorsEnabled"},"site_bms_soc":{"value":"/site/ess:bms_soc","vlink":"/status/bms:SOC"},"site_bms_soh":{"value":"/site/ess:bms_soh","vlink":"/status/bms:SOH"},"site_bms_status":{"value":"/site/ess:bms_status","vlink":"/status/bms:Status"}},"/assets/bms/summary":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"chargeable_energy":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:ClearFaults@triggerCmd"},{"inValue":true,"outValue":1,"uri":"/controls/bms:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"close_contactors":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":false,"every":0.5,"name":"Close DC Contactor","note":"Enabled conditions: ![/status/bms/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode] \u0026\u0026 ![/status/bms/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/bms:LocalStartBMS","value":false},"comms_ok":{"value":false},"dc_charging":{"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_discharging":{"value":false},"dc_power":{"value":0},"dc_voltage":{"value":0},"dischargeable_energy":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/summary:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"num_racks_online":{"value":0},"num_racks_total":{"value":0},"open_contactors":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":false,"every":0.5,"name":"Open DC Contactor","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 ![/status/pcs/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/bms:LocalStopBMS","value":false},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/bms":{"ui_avg_cell_temp":{"value":"/assets/bms/summary:avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/summary:avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/summary:cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/summary:cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"ui_chargeable_energy":{"value":"/assets/bms/summary:chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"ui_comms_ok":{"value":"/assets/bms/summary:comms_ok","vlink":"/status/bms:CommsOK"},"ui_dc_charging":{"value":"/assets/bms/summary:dc_charging","vlink":"/status/bms:DCCharging"},"ui_dc_contactors_closed":{"value":"/assets/bms/summary:dc_contactors_closed","vlink":"/status/bms:DCClosed"},"ui_dc_current":{"value":"/assets/bms/summary:dc_current","vlink":"/status/bms:DCCurrent"},"ui_dc_discharging":{"value":"/assets/bms/summary:dc_discharging","vlink":"/status/bms:DCDischarging"},"ui_dc_power":{"value":"/assets/bms/summary:dc_power","vlink":"/status/bms:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/summary:dc_voltage","vlink":"/status/bms:DCVoltage"},"ui_dischargeable_energy":{"value":"/assets/bms/summary:dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"ui_max_cell_temp":{"value":"/assets/bms/summary:max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/summary:max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/summary:max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/summary:max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/summary:max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/summary:max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/summary:min_cell_temp","vlink":"/status/bms:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/summary:min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"ui_num_racks_online":{"value":"/assets/bms/summary:num_racks_online","vlink":"/status/bms:NumRacksOnline"},"ui_num_racks_total":{"value":"/assets/bms/summary:num_racks_total","vlink":"/status/bms:NumRacksTotal"},"ui_soc":{"value":"/assets/bms/summary:soc","vlink":"/status/bms:SOC"},"ui_soh":{"value":"/assets/bms/summary:soh","vlink":"/status/bms:SOH"},"ui_status":{"value":"/assets/bms/summary:status","vlink":"/status/bms:Status"}}
[3.30871s  ] [info    ] [configLoad     ] Final tbody: {"/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellTemp","variable2":"/status/bms:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellVoltage","variable2":"/status/bms:MaxCellVoltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCCharging":{"expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"NumRacksTotal":9,"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/catl_ems_bms_rw:fault_clear_cmd","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":1},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/faults/bms":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/schedule/wake_monitor/bms":{"/status/bms:AnyFireFaultActive":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CellVoltageDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CurrentBeforeStopIsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:DCVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:HeartbeatRead":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:IsAlarming":{"amap":"bms","func":"CalculateVar"},"/status/bms:IsFaulted":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MaxCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:NumRacksOnline":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:OverCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:OverCurrentFault":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:SOH":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:TotalAlarmCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:TotalFaultCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentFault":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AlarmCnt":0,"AnyFireFaultActive":{"numVars":2,"operation":"or","value":false,"variable1":"bms:AnyFireFaultActive","variable2":"/status/bms:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms:enable","expression":"{1} \u003c= {2} and {1} \u003e= (-1 * {2})","note":"Set to true if the BMS DC current is within an acceptable level before stopping the PCS","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent","variable2":"/config/bms:CurrentBeforeStopThreshold"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmTimeout":1,"MaxFaultTimeout":2.5,"MinAlarmTimeout":1,"MinFaultTimeout":2.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":true,"EnableStateCheck":true,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:SystemFault","variable2":"/status/bms:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":52,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":53,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":52,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":-0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the max alarm threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalAlarmCnt","variable2":"/status/bms:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalFaultCnt","variable2":"/status/bms:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the min alarm threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"}},"/components/catl_bms_ems_r":{"bms_poweron":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":1,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":2,"outValue":"On Fault","uri":"/status/bms:Status"},{"inValue":3,"outValue":"Off Fault","uri":"/status/bms:Status"},{"inValue":0,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/bms:DCClosed"},{"inValue":2,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":3,"outValue":true,"uri":"/status/bms:DCClosed"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:status@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms":{"checkInputs_bms":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms:status@ifChanged"}]}]},"enable":"/config/bms:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms":{"avg_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_temperature","vlink":"/status/bms:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"dc_charge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"dc_charge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_charge_energy","vlink":"/status/bms:ChargeableEnergy"},"dc_charge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_charge_allowed","vlink":"/limits/bms:ChargePowerLimit"},"dc_current":{"value":"/components/catl_mbmu_summary_r:mbmu_current","vlink":"/status/bms:DCCurrent"},"dc_discharge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"dc_discharge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_discharge_energy","vlink":"/status/bms:DischargeableEnergy"},"dc_discharge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_discharge_allowed","vlink":"/limits/bms:DischargePowerLimit"},"dc_power":{"value":"/components/catl_mbmu_summary_r:mbmu_power","vlink":"/status/bms:DCPower"},"dc_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_voltage","vlink":"/status/bms:DCVoltage"},"heartbeat_read":{"value":"/components/catl_bms_ems_r:bms_heartbeat","vlink":"/status/bms:HeartbeatRead"},"max_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_temperature","vlink":"/status/bms:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"min_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_temperature","vlink":"/status/bms:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"num_online_racks":{"value":"/components/catl_bms_ems_r:num_hv_subsystem","vlink":"/status/bms:NumRacksOnline"},"soc":{"value":"/components/catl_mbmu_summary_r:mbmu_soc","vlink":"/status/bms:SOC"},"soh":{"value":"/components/catl_mbmu_summary_r:mbmu_soh","vlink":"/status/bms:SOH"}},"/site/ess":{"bms_alarm_active":{"name":"BMS Alarm Active","type":"status","value":false},"bms_avg_cell_temp":{"name":"BMS Avg Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_avg_cell_voltage":{"name":"BMS Avg Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_cell_temp_delta":{"name":"BMS Cell Temperature Delta","scale":100,"type":"status","units":"°C","value":0},"bms_cell_voltage_delta":{"name":"BMS Cell Voltage Delta","scale":10000,"type":"status","units":"V","value":0},"bms_chargeable_energy":{"name":"BMS Chargeable Energy","scale":10,"type":"status","units":"kWh","value":0},"bms_close_contactors_enabled":{"excludeFromFile":true,"name":"BMS Close Contactors Enabled","type":"status","value":false},"bms_comms_ok":{"name":"BMS Comms OK","type":"status","value":false},"bms_control_alarms":{"bit0":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit2":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","bit4":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","name":"BMS Control Alarms","type":"bitfield","value":0},"bms_current_before_stop_is_ok":{"excludeFromFile":true,"name":"BMS Current Before Stop is OK","type":"status","value":false},"bms_dc_charging":{"name":"BMS DC Charging","type":"status","value":false},"bms_dc_contactor_control":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/pcs:enable","every":0.5,"ifChanged":false,"name":"BMS Contactor Control Command","note1":"Initiates BMS close and open contactors","note2":"2-\u003eclose contactors | 3-\u003eopen contactors","offset":0,"size":1,"type":"control","uri":"/sched/ess:SiteBMSContactorControl","value":0},"bms_dc_contactors_closed":{"name":"BMS DC Contactors Closed","type":"status","value":false},"bms_dc_current":{"name":"BMS DC Current","scale":10,"signed":true,"type":"status","units":"A","value":0},"bms_dc_discharging":{"name":"BMS DC Discharging","type":"status","value":false},"bms_dc_power":{"name":"BMS DC Power","scale":10,"signed":true,"type":"status","units":"kW","value":0},"bms_dc_voltage":{"name":"BMS DC Voltage","scale":10,"signed":true,"type":"status","units":"V","value":0},"bms_dischargeable_energy":{"name":"BMS Dischargeable Energy","scale":10,"type":"status","units":"kWh","value":0},"bms_fault_active":{"name":"BMS Fault Active","type":"status","value":false},"bms_fire_fault_active":{"name":"BMS Fire Fault Active","type":"status","value":false},"bms_max_cell_temp":{"name":"BMS Max Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_max_cell_voltage":{"name":"BMS Max Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_max_charge_current":{"name":"BMS Max Charge Current","signed":true,"type":"status","units":"A","value":0},"bms_max_charge_power":{"name":"BMS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"bms_max_discharge_current":{"name":"BMS Max Discharge Current","type":"status","units":"A","value":0},"bms_max_discharge_power":{"name":"BMS Max Discharge Power","type":"status","units":"kW","value":0},"bms_min_cell_temp":{"name":"BMS Min Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_min_cell_voltage":{"name":"BMS Min Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_monitor_alarms":{"bit0":"BMS DC Current Max Threshold Exceeded","bit1":"BMS DC Current Min Threshold Exceeded","bit10":"BMS SOC Min Threshold Exceeded","bit11":"BMS Cell Voltage Delta Max Threshold Exceeded","bit12":"BMS Cell Temperature Delta Max Threshold Exceeded","bit13":"BMS Number of Racks Online Below Min Threshold","bit2":"BMS Max Cell Temperature Threshold Exceeded","bit3":"BMS Max Cell Voltage Threshold Exceeded","bit4":"BMS Min Cell Temperature Threshold Exceeded","bit5":"BMS Min Cell Voltage Threshold Exceeded","bit6":"BMS State of Health Below Threshold","bit7":"BMS DC Voltage Max Threshold Exceeded","bit8":"BMS DC Voltage Min Threshold Exceeded","bit9":"BMS SOC Max Threshold Exceeded","name":"BMS Monitor Alarms","type":"bitfield","value":0},"bms_monitor_faults":{"bit0":"BMS DC Current Max Threshold Exceeded","bit1":"BMS DC Current Min Threshold Exceeded","bit10":"BMS SOC Min Threshold Exceeded","bit11":"BMS Cell Voltage Delta Max Threshold Exceeded","bit12":"BMS Cell Temperature Delta Max Threshold Exceeded","bit13":"BMS Number of Racks Online Below Min Threshold","bit2":"BMS Max Cell Temperature Threshold Exceeded","bit3":"BMS Max Cell Voltage Threshold Exceeded","bit4":"BMS Min Cell Temperature Threshold Exceeded","bit5":"BMS Min Cell Voltage Threshold Exceeded","bit6":"BMS State of Health Below Threshold","bit7":"BMS DC Voltage Max Threshold Exceeded","bit8":"BMS DC Voltage Min Threshold Exceeded","bit9":"BMS SOC Max Threshold Exceeded","name":"BMS Monitor Faults","type":"bitfield","value":0},"bms_num_racks_online":{"name":"BMS Number of Racks Online","type":"status","value":0},"bms_num_racks_total":{"name":"BMS Number of Racks Total","type":"status","value":0},"bms_open_contactors_enabled":{"excludeFromFile":true,"name":"BMS Open Contactors Enabled","type":"status","value":false},"bms_soc":{"name":"BMS State of Charge (SOC)","scale":10,"type":"status","units":"%","value":0},"bms_soh":{"name":"BMS State of Health (SOH)","scale":10,"type":"status","units":"%","value":0},"bms_status":{"excludeFromFile":true,"name":"BMS Status","type":"status","value":"INIT"}},"/vlinks/bms":{"site_bms_alarm_active":{"value":"/site/ess:bms_alarm_active","vlink":"/status/bms:IsAlarming"},"site_bms_avg_cell_temp":{"value":"/site/ess:bms_avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"site_bms_avg_cell_voltage":{"value":"/site/ess:bms_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"site_bms_cell_temp_delta":{"value":"/site/ess:bms_cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"site_bms_cell_voltage_delta":{"value":"/site/ess:bms_cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"site_bms_chargeable_energy":{"value":"/site/ess:bms_chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"site_bms_close_contactors_enabled":{"value":"/site/ess:bms_close_contactors_enabled","vlink":"/status/bms:CloseContactorsEnabled"},"site_bms_comms_ok":{"value":"/site/ess:bms_comms_ok","vlink":"/status/bms:CommsOK"},"site_bms_current_before_stop_is_ok":{"value":"/site/ess:bms_current_before_stop_is_ok","vlink":"/status/bms:CurrentBeforeStopIsOK"},"site_bms_dc_charging":{"value":"/site/ess:bms_dc_charging","vlink":"/status/bms:DCCharging"},"site_bms_dc_contactors_closed":{"value":"/site/ess:bms_dc_contactors_closed","vlink":"/status/bms:DCClosed"},"site_bms_dc_current":{"value":"/site/ess:bms_dc_current","vlink":"/status/bms:DCCurrent"},"site_bms_dc_discharging":{"value":"/site/ess:bms_dc_discharging","vlink":"/status/bms:DCDischarging"},"site_bms_dc_power":{"value":"/site/ess:bms_dc_power","vlink":"/status/bms:DCPower"},"site_bms_dc_voltage":{"value":"/site/ess:bms_dc_voltage","vlink":"/status/bms:DCVoltage"},"site_bms_dischargeable_energy":{"value":"/site/ess:bms_dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"site_bms_fault_active":{"value":"/site/ess:bms_fault_active","vlink":"/status/bms:IsFaulted"},"site_bms_fire_fault_active":{"value":"/site/ess:bms_fire_fault_active","vlink":"/status/bms:AnyFireFaultActive"},"site_bms_max_cell_temp":{"value":"/site/ess:bms_max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"site_bms_max_cell_voltage":{"value":"/site/ess:bms_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"site_bms_max_charge_current":{"value":"/site/ess:bms_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"site_bms_max_charge_power":{"value":"/site/ess:bms_max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"site_bms_max_discharge_current":{"value":"/site/ess:bms_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"site_bms_max_discharge_power":{"value":"/site/ess:bms_max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"site_bms_min_cell_temp":{"value":"/site/ess:bms_min_cell_temp","vlink":"/status/bms:MinCellTemp"},"site_bms_min_cell_voltage":{"value":"/site/ess:bms_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"site_bms_num_racks_online":{"value":"/site/ess:bms_num_racks_online","vlink":"/status/bms:NumRacksOnline"},"site_bms_num_racks_total":{"value":"/site/ess:bms_num_racks_total","vlink":"/status/bms:NumRacksTotal"},"site_bms_open_contactors_enabled":{"value":"/site/ess:bms_open_contactors_enabled","vlink":"/status/bms:OpenContactorsEnabled"},"site_bms_soc":{"value":"/site/ess:bms_soc","vlink":"/status/bms:SOC"},"site_bms_soh":{"value":"/site/ess:bms_soh","vlink":"/status/bms:SOH"},"site_bms_status":{"value":"/site/ess:bms_status","vlink":"/status/bms:Status"}},"/assets/bms/summary":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"chargeable_energy":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:ClearFaults@triggerCmd"},{"inValue":true,"outValue":1,"uri":"/controls/bms:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"close_contactors":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":false,"every":0.5,"name":"Close DC Contactor","note":"Enabled conditions: ![/status/bms/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode] \u0026\u0026 ![/status/bms/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/bms:LocalStartBMS","value":false},"comms_ok":{"value":false},"dc_charging":{"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_discharging":{"value":false},"dc_power":{"value":0},"dc_voltage":{"value":0},"dischargeable_energy":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/summary:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"num_racks_online":{"value":0},"num_racks_total":{"value":0},"open_contactors":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":false,"every":0.5,"name":"Open DC Contactor","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 ![/status/pcs/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/bms:LocalStopBMS","value":false},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/bms":{"ui_avg_cell_temp":{"value":"/assets/bms/summary:avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/summary:avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/summary:cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/summary:cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"ui_chargeable_energy":{"value":"/assets/bms/summary:chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"ui_comms_ok":{"value":"/assets/bms/summary:comms_ok","vlink":"/status/bms:CommsOK"},"ui_dc_charging":{"value":"/assets/bms/summary:dc_charging","vlink":"/status/bms:DCCharging"},"ui_dc_contactors_closed":{"value":"/assets/bms/summary:dc_contactors_closed","vlink":"/status/bms:DCClosed"},"ui_dc_current":{"value":"/assets/bms/summary:dc_current","vlink":"/status/bms:DCCurrent"},"ui_dc_discharging":{"value":"/assets/bms/summary:dc_discharging","vlink":"/status/bms:DCDischarging"},"ui_dc_power":{"value":"/assets/bms/summary:dc_power","vlink":"/status/bms:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/summary:dc_voltage","vlink":"/status/bms:DCVoltage"},"ui_dischargeable_energy":{"value":"/assets/bms/summary:dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"ui_max_cell_temp":{"value":"/assets/bms/summary:max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/summary:max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/summary:max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/summary:max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/summary:max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/summary:max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/summary:min_cell_temp","vlink":"/status/bms:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/summary:min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"ui_num_racks_online":{"value":"/assets/bms/summary:num_racks_online","vlink":"/status/bms:NumRacksOnline"},"ui_num_racks_total":{"value":"/assets/bms/summary:num_racks_total","vlink":"/status/bms:NumRacksTotal"},"ui_soc":{"value":"/assets/bms/summary:soc","vlink":"/status/bms:SOC"},"ui_soh":{"value":"/assets/bms/summary:soh","vlink":"/status/bms:SOH"},"ui_status":{"value":"/assets/bms/summary:status","vlink":"/status/bms:Status"}}}
[3.30912s  ] [info    ] [configLoad     ] tmpls field is found in av [/config/load:catl_bms_init]. We'll perform template expansions with tmpls instead of tmpl
[3.30931s  ] [info    ] [configLoad     ] tbody before: {"/config/##RACK_ID##":{"AlarmDestination":"/assets/bms/##RACK_ID##:alarms","FaultDestination":"/assets/bms/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##RACK_ID##:DischargePowerLimit"}},"/sched/##RACK_ID##":{"pubAssets_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##RACK_ID##)","table":"/assets/bms/##RACK_ID##","value":1},"runMonitor_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##RACK_ID##","enable":"/config/##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##RACK_ID##","value":1}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:CellTempDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellTemp","variable2":"/status/##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellVoltage","variable2":"/status/##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##RACK_ID##:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:pubAssets_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":0.1,"uri":"/sched/##RACK_ID##:runMonitor_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:checkInputs_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}}}
[3.30957s  ] [info    ] [configLoad     ] tbody now: "/config/##RACK_ID##":{"AlarmDestination":"/assets/bms/##RACK_ID##:alarms","FaultDestination":"/assets/bms/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##RACK_ID##:DischargePowerLimit"}},"/sched/##RACK_ID##":{"pubAssets_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##RACK_ID##)","table":"/assets/bms/##RACK_ID##","value":1},"runMonitor_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##RACK_ID##","enable":"/config/##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##RACK_ID##","value":1}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:CellTempDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellTemp","variable2":"/status/##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellVoltage","variable2":"/status/##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##RACK_ID##:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:pubAssets_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":0.1,"uri":"/sched/##RACK_ID##:runMonitor_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:checkInputs_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}}
[3.30975s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##RACK_ID##":{"AlarmDestination":"/assets/bms/##RACK_ID##:alarms","FaultDestination":"/assets/bms/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##RACK_ID##:DischargePowerLimit"}},"/sched/##RACK_ID##":{"pubAssets_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##RACK_ID##)","table":"/assets/bms/##RACK_ID##","value":1},"runMonitor_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##RACK_ID##","enable":"/config/##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##RACK_ID##","value":1}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:CellTempDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellTemp","variable2":"/status/##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellVoltage","variable2":"/status/##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##RACK_ID##:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:pubAssets_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":0.1,"uri":"/sched/##RACK_ID##:runMonitor_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:checkInputs_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##RACK_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##RACK_ID##":{"/controls/##RACK_ID##:ClearFaults":{"amap":"##RACK_ID##","func":"HandleCmd"}},"/status/##RACK_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##RACK_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##RACK_ID##:clear_alarms"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##RACK_ID##:clear_faults and /alarms/##RACK_ID##:clear_alarms will be set to Clear","value":false}}
[3.30996s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##RACK_ID##":{"AlarmDestination":"/assets/bms/##RACK_ID##:alarms","FaultDestination":"/assets/bms/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##RACK_ID##:DischargePowerLimit"}},"/sched/##RACK_ID##":{"pubAssets_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##RACK_ID##)","table":"/assets/bms/##RACK_ID##","value":1},"runMonitor_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##RACK_ID##","enable":"/config/##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##RACK_ID##","value":1}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:CellTempDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellTemp","variable2":"/status/##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellVoltage","variable2":"/status/##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##RACK_ID##:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:pubAssets_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":0.1,"uri":"/sched/##RACK_ID##:runMonitor_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:checkInputs_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##RACK_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##RACK_ID##":{"/controls/##RACK_ID##:ClearFaults":{"amap":"##RACK_ID##","func":"HandleCmd"}},"/status/##RACK_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##RACK_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##RACK_ID##:clear_alarms"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##RACK_ID##:clear_faults and /alarms/##RACK_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##RACK_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##RACK_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:AnyFireFaultActive":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalAlarmCnt":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalFaultCnt":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##RACK_ID##:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:FaultCnt"}}
[3.31053s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##RACK_ID##":{"AlarmDestination":"/assets/bms/##RACK_ID##:alarms","FaultDestination":"/assets/bms/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##RACK_ID##:DischargePowerLimit"}},"/sched/##RACK_ID##":{"pubAssets_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##RACK_ID##)","table":"/assets/bms/##RACK_ID##","value":1},"runMonitor_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##RACK_ID##","enable":"/config/##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##RACK_ID##","value":1}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:CellTempDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellTemp","variable2":"/status/##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellVoltage","variable2":"/status/##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##RACK_ID##:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:pubAssets_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":0.1,"uri":"/sched/##RACK_ID##:runMonitor_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:checkInputs_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##RACK_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##RACK_ID##":{"/controls/##RACK_ID##:ClearFaults":{"amap":"##RACK_ID##","func":"HandleCmd"}},"/status/##RACK_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##RACK_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##RACK_ID##:clear_alarms"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##RACK_ID##:clear_faults and /alarms/##RACK_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##RACK_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##RACK_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:AnyFireFaultActive":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalAlarmCnt":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalFaultCnt":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##RACK_ID##:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:FaultCnt"}},"/components/catl_##RACK_ID##":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/##RACK_ID##:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/##RACK_ID##:DCClosed"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/##RACK_ID##":{"avg_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_avg_cell_temp","vlink":"/status/##RACK_ID##:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_avg_cell_voltage","vlink":"/status/##RACK_ID##:AvgCellVoltage"},"dc_current":{"value":"/components/catl_##RACK_ID##:sbmu_current","vlink":"/status/##RACK_ID##:DCCurrent"},"dc_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_voltage","vlink":"/status/##RACK_ID##:DCVoltage"},"max_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_max_cell_temp","vlink":"/status/##RACK_ID##:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_max_cell_voltage","vlink":"/status/##RACK_ID##:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_min_cell_temp","vlink":"/status/##RACK_ID##:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_min_cell_voltage","vlink":"/status/##RACK_ID##:MinCellVoltage"},"soc":{"value":"/components/catl_##RACK_ID##:sbmu_soc","vlink":"/status/##RACK_ID##:SOC"},"soh":{"value":"/components/catl_##RACK_ID##:sbmu_soh","vlink":"/status/##RACK_ID##:SOH"}}
[3.31146s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##RACK_ID##":{"AlarmDestination":"/assets/bms/##RACK_ID##:alarms","FaultDestination":"/assets/bms/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##RACK_ID##:DischargePowerLimit"}},"/sched/##RACK_ID##":{"pubAssets_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##RACK_ID##)","table":"/assets/bms/##RACK_ID##","value":1},"runMonitor_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##RACK_ID##","enable":"/config/##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##RACK_ID##","value":1}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:CellTempDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellTemp","variable2":"/status/##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellVoltage","variable2":"/status/##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##RACK_ID##:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:pubAssets_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":0.1,"uri":"/sched/##RACK_ID##:runMonitor_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:checkInputs_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##RACK_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##RACK_ID##":{"/controls/##RACK_ID##:ClearFaults":{"amap":"##RACK_ID##","func":"HandleCmd"}},"/status/##RACK_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##RACK_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##RACK_ID##:clear_alarms"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##RACK_ID##:clear_faults and /alarms/##RACK_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##RACK_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##RACK_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:AnyFireFaultActive":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalAlarmCnt":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalFaultCnt":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##RACK_ID##:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:FaultCnt"}},"/components/catl_##RACK_ID##":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/##RACK_ID##:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/##RACK_ID##:DCClosed"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/##RACK_ID##":{"avg_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_avg_cell_temp","vlink":"/status/##RACK_ID##:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_avg_cell_voltage","vlink":"/status/##RACK_ID##:AvgCellVoltage"},"dc_current":{"value":"/components/catl_##RACK_ID##:sbmu_current","vlink":"/status/##RACK_ID##:DCCurrent"},"dc_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_voltage","vlink":"/status/##RACK_ID##:DCVoltage"},"max_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_max_cell_temp","vlink":"/status/##RACK_ID##:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_max_cell_voltage","vlink":"/status/##RACK_ID##:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_min_cell_temp","vlink":"/status/##RACK_ID##:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_min_cell_voltage","vlink":"/status/##RACK_ID##:MinCellVoltage"},"soc":{"value":"/components/catl_##RACK_ID##:sbmu_soc","vlink":"/status/##RACK_ID##:SOC"},"soh":{"value":"/components/catl_##RACK_ID##:sbmu_soh","vlink":"/status/##RACK_ID##:SOH"}}
[3.31203s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##RACK_ID##":{"AlarmDestination":"/assets/bms/##RACK_ID##:alarms","FaultDestination":"/assets/bms/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##RACK_ID##:DischargePowerLimit"}},"/sched/##RACK_ID##":{"pubAssets_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##RACK_ID##)","table":"/assets/bms/##RACK_ID##","value":1},"runMonitor_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##RACK_ID##","enable":"/config/##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##RACK_ID##","value":1}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:CellTempDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellTemp","variable2":"/status/##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellVoltage","variable2":"/status/##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##RACK_ID##:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:pubAssets_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":0.1,"uri":"/sched/##RACK_ID##:runMonitor_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:checkInputs_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##RACK_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##RACK_ID##":{"/controls/##RACK_ID##:ClearFaults":{"amap":"##RACK_ID##","func":"HandleCmd"}},"/status/##RACK_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##RACK_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##RACK_ID##:clear_alarms"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##RACK_ID##:clear_faults and /alarms/##RACK_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##RACK_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##RACK_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:AnyFireFaultActive":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalAlarmCnt":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalFaultCnt":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##RACK_ID##:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:FaultCnt"}},"/components/catl_##RACK_ID##":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/##RACK_ID##:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/##RACK_ID##:DCClosed"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/##RACK_ID##":{"avg_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_avg_cell_temp","vlink":"/status/##RACK_ID##:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_avg_cell_voltage","vlink":"/status/##RACK_ID##:AvgCellVoltage"},"dc_current":{"value":"/components/catl_##RACK_ID##:sbmu_current","vlink":"/status/##RACK_ID##:DCCurrent"},"dc_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_voltage","vlink":"/status/##RACK_ID##:DCVoltage"},"max_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_max_cell_temp","vlink":"/status/##RACK_ID##:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_max_cell_voltage","vlink":"/status/##RACK_ID##:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_min_cell_temp","vlink":"/status/##RACK_ID##:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_min_cell_voltage","vlink":"/status/##RACK_ID##:MinCellVoltage"},"soc":{"value":"/components/catl_##RACK_ID##:sbmu_soc","vlink":"/status/##RACK_ID##:SOC"},"soh":{"value":"/components/catl_##RACK_ID##:sbmu_soh","vlink":"/status/##RACK_ID##:SOH"}},"/assets/bms/##RACK_ID##":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##RACK_ID##:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##RACK_ID##:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/##RACK_ID##:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/##RACK_ID##":{"ui_avg_cell_temp":{"value":"/assets/bms/##RACK_ID##:avg_cell_temp","vlink":"/status/##RACK_ID##:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/##RACK_ID##:avg_cell_voltage","vlink":"/status/##RACK_ID##:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/##RACK_ID##:cell_temp_delta","vlink":"/status/##RACK_ID##:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/##RACK_ID##:cell_voltage_delta","vlink":"/status/##RACK_ID##:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/##RACK_ID##:dc_contactors_closed","vlink":"/status/##RACK_ID##:DCClosed"},"ui_dc_current":{"value":"/assets/bms/##RACK_ID##:dc_current","vlink":"/status/##RACK_ID##:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/##RACK_ID##:dc_power","vlink":"/status/##RACK_ID##:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/##RACK_ID##:dc_voltage","vlink":"/status/##RACK_ID##:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/##RACK_ID##:max_cell_temp","vlink":"/status/##RACK_ID##:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/##RACK_ID##:max_cell_voltage","vlink":"/status/##RACK_ID##:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/##RACK_ID##:max_charge_current","vlink":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/##RACK_ID##:max_charge_power","vlink":"/limits/##RACK_ID##:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/##RACK_ID##:max_discharge_current","vlink":"/limits/##RACK_ID##:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/##RACK_ID##:max_discharge_power","vlink":"/limits/##RACK_ID##:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/##RACK_ID##:min_cell_temp","vlink":"/status/##RACK_ID##:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/##RACK_ID##:min_cell_voltage","vlink":"/status/##RACK_ID##:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/##RACK_ID##:soc","vlink":"/status/##RACK_ID##:SOC"},"ui_soh":{"value":"/assets/bms/##RACK_ID##:soh","vlink":"/status/##RACK_ID##:SOH"},"ui_status":{"value":"/assets/bms/##RACK_ID##:status","vlink":"/status/##RACK_ID##:Status"}}
[3.31259s  ] [info    ] [configLoad     ] Final tbody: {"/config/##RACK_ID##":{"AlarmDestination":"/assets/bms/##RACK_ID##:alarms","FaultDestination":"/assets/bms/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##RACK_ID##:DischargePowerLimit"}},"/sched/##RACK_ID##":{"pubAssets_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##RACK_ID##)","table":"/assets/bms/##RACK_ID##","value":1},"runMonitor_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##RACK_ID##","enable":"/config/##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##RACK_ID##","value":1}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:CellTempDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellTemp","variable2":"/status/##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellVoltage","variable2":"/status/##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##RACK_ID##:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:pubAssets_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":0.1,"uri":"/sched/##RACK_ID##:runMonitor_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:checkInputs_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##RACK_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##RACK_ID##":{"/controls/##RACK_ID##:ClearFaults":{"amap":"##RACK_ID##","func":"HandleCmd"}},"/status/##RACK_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##RACK_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##RACK_ID##:clear_alarms"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##RACK_ID##:clear_faults and /alarms/##RACK_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##RACK_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##RACK_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:AnyFireFaultActive":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalAlarmCnt":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalFaultCnt":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##RACK_ID##:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:FaultCnt"}},"/components/catl_##RACK_ID##":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/##RACK_ID##:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/##RACK_ID##:DCClosed"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/##RACK_ID##":{"avg_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_avg_cell_temp","vlink":"/status/##RACK_ID##:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_avg_cell_voltage","vlink":"/status/##RACK_ID##:AvgCellVoltage"},"dc_current":{"value":"/components/catl_##RACK_ID##:sbmu_current","vlink":"/status/##RACK_ID##:DCCurrent"},"dc_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_voltage","vlink":"/status/##RACK_ID##:DCVoltage"},"max_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_max_cell_temp","vlink":"/status/##RACK_ID##:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_max_cell_voltage","vlink":"/status/##RACK_ID##:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_min_cell_temp","vlink":"/status/##RACK_ID##:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_min_cell_voltage","vlink":"/status/##RACK_ID##:MinCellVoltage"},"soc":{"value":"/components/catl_##RACK_ID##:sbmu_soc","vlink":"/status/##RACK_ID##:SOC"},"soh":{"value":"/components/catl_##RACK_ID##:sbmu_soh","vlink":"/status/##RACK_ID##:SOH"}},"/assets/bms/##RACK_ID##":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##RACK_ID##:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##RACK_ID##:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/##RACK_ID##:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/##RACK_ID##":{"ui_avg_cell_temp":{"value":"/assets/bms/##RACK_ID##:avg_cell_temp","vlink":"/status/##RACK_ID##:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/##RACK_ID##:avg_cell_voltage","vlink":"/status/##RACK_ID##:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/##RACK_ID##:cell_temp_delta","vlink":"/status/##RACK_ID##:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/##RACK_ID##:cell_voltage_delta","vlink":"/status/##RACK_ID##:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/##RACK_ID##:dc_contactors_closed","vlink":"/status/##RACK_ID##:DCClosed"},"ui_dc_current":{"value":"/assets/bms/##RACK_ID##:dc_current","vlink":"/status/##RACK_ID##:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/##RACK_ID##:dc_power","vlink":"/status/##RACK_ID##:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/##RACK_ID##:dc_voltage","vlink":"/status/##RACK_ID##:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/##RACK_ID##:max_cell_temp","vlink":"/status/##RACK_ID##:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/##RACK_ID##:max_cell_voltage","vlink":"/status/##RACK_ID##:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/##RACK_ID##:max_charge_current","vlink":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/##RACK_ID##:max_charge_power","vlink":"/limits/##RACK_ID##:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/##RACK_ID##:max_discharge_current","vlink":"/limits/##RACK_ID##:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/##RACK_ID##:max_discharge_power","vlink":"/limits/##RACK_ID##:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/##RACK_ID##:min_cell_temp","vlink":"/status/##RACK_ID##:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/##RACK_ID##:min_cell_voltage","vlink":"/status/##RACK_ID##:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/##RACK_ID##:soc","vlink":"/status/##RACK_ID##:SOC"},"ui_soh":{"value":"/assets/bms/##RACK_ID##:soh","vlink":"/status/##RACK_ID##:SOH"},"ui_status":{"value":"/assets/bms/##RACK_ID##:status","vlink":"/status/##RACK_ID##:Status"}}}
[3.31416s  ] [info    ] [configure_vmapS] process file seeking header stuff am [bms] ai [no ai]
[3.31443s  ] [info    ] [configure_vmapS] body: {"/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellTemp","variable2":"/status/bms:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellVoltage","variable2":"/status/bms:MaxCellVoltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCCharging":{"expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"NumRacksTotal":9,"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/catl_ems_bms_rw:fault_clear_cmd","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":1},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/faults/bms":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/schedule/wake_monitor/bms":{"/status/bms:AnyFireFaultActive":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CellVoltageDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CurrentBeforeStopIsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:DCVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:HeartbeatRead":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:IsAlarming":{"amap":"bms","func":"CalculateVar"},"/status/bms:IsFaulted":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MaxCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:NumRacksOnline":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:OverCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:OverCurrentFault":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:SOH":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:TotalAlarmCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:TotalFaultCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentFault":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AlarmCnt":0,"AnyFireFaultActive":{"numVars":2,"operation":"or","value":false,"variable1":"bms:AnyFireFaultActive","variable2":"/status/bms:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms:enable","expression":"{1} \u003c= {2} and {1} \u003e= (-1 * {2})","note":"Set to true if the BMS DC current is within an acceptable level before stopping the PCS","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent","variable2":"/config/bms:CurrentBeforeStopThreshold"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmTimeout":1,"MaxFaultTimeout":2.5,"MinAlarmTimeout":1,"MinFaultTimeout":2.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":true,"EnableStateCheck":true,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:SystemFault","variable2":"/status/bms:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":52,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":53,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":52,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":-0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the max alarm threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalAlarmCnt","variable2":"/status/bms:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalFaultCnt","variable2":"/status/bms:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the min alarm threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"}},"/components/catl_bms_ems_r":{"bms_poweron":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":1,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":2,"outValue":"On Fault","uri":"/status/bms:Status"},{"inValue":3,"outValue":"Off Fault","uri":"/status/bms:Status"},{"inValue":0,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/bms:DCClosed"},{"inValue":2,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":3,"outValue":true,"uri":"/status/bms:DCClosed"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:status@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms":{"checkInputs_bms":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms:status@ifChanged"}]}]},"enable":"/config/bms:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms":{"avg_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_temperature","vlink":"/status/bms:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"dc_charge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"dc_charge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_charge_energy","vlink":"/status/bms:ChargeableEnergy"},"dc_charge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_charge_allowed","vlink":"/limits/bms:ChargePowerLimit"},"dc_current":{"value":"/components/catl_mbmu_summary_r:mbmu_current","vlink":"/status/bms:DCCurrent"},"dc_discharge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"dc_discharge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_discharge_energy","vlink":"/status/bms:DischargeableEnergy"},"dc_discharge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_discharge_allowed","vlink":"/limits/bms:DischargePowerLimit"},"dc_power":{"value":"/components/catl_mbmu_summary_r:mbmu_power","vlink":"/status/bms:DCPower"},"dc_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_voltage","vlink":"/status/bms:DCVoltage"},"heartbeat_read":{"value":"/components/catl_bms_ems_r:bms_heartbeat","vlink":"/status/bms:HeartbeatRead"},"max_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_temperature","vlink":"/status/bms:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"min_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_temperature","vlink":"/status/bms:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"num_online_racks":{"value":"/components/catl_bms_ems_r:num_hv_subsystem","vlink":"/status/bms:NumRacksOnline"},"soc":{"value":"/components/catl_mbmu_summary_r:mbmu_soc","vlink":"/status/bms:SOC"},"soh":{"value":"/components/catl_mbmu_summary_r:mbmu_soh","vlink":"/status/bms:SOH"}},"/site/ess":{"bms_alarm_active":{"name":"BMS Alarm Active","type":"status","value":false},"bms_avg_cell_temp":{"name":"BMS Avg Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_avg_cell_voltage":{"name":"BMS Avg Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_cell_temp_delta":{"name":"BMS Cell Temperature Delta","scale":100,"type":"status","units":"°C","value":0},"bms_cell_voltage_delta":{"name":"BMS Cell Voltage Delta","scale":10000,"type":"status","units":"V","value":0},"bms_chargeable_energy":{"name":"BMS Chargeable Energy","scale":10,"type":"status","units":"kWh","value":0},"bms_close_contactors_enabled":{"excludeFromFile":true,"name":"BMS Close Contactors Enabled","type":"status","value":false},"bms_comms_ok":{"name":"BMS Comms OK","type":"status","value":false},"bms_control_alarms":{"bit0":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit2":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","bit4":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","name":"BMS Control Alarms","type":"bitfield","value":0},"bms_current_before_stop_is_ok":{"excludeFromFile":true,"name":"BMS Current Before Stop is OK","type":"status","value":false},"bms_dc_charging":{"name":"BMS DC Charging","type":"status","value":false},"bms_dc_contactor_control":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/pcs:enable","every":0.5,"ifChanged":false,"name":"BMS Contactor Control Command","note1":"Initiates BMS close and open contactors","note2":"2-\u003eclose contactors | 3-\u003eopen contactors","offset":0,"size":1,"type":"control","uri":"/sched/ess:SiteBMSContactorControl","value":0},"bms_dc_contactors_closed":{"name":"BMS DC Contactors Closed","type":"status","value":false},"bms_dc_current":{"name":"BMS DC Current","scale":10,"signed":true,"type":"status","units":"A","value":0},"bms_dc_discharging":{"name":"BMS DC Discharging","type":"status","value":false},"bms_dc_power":{"name":"BMS DC Power","scale":10,"signed":true,"type":"status","units":"kW","value":0},"bms_dc_voltage":{"name":"BMS DC Voltage","scale":10,"signed":true,"type":"status","units":"V","value":0},"bms_dischargeable_energy":{"name":"BMS Dischargeable Energy","scale":10,"type":"status","units":"kWh","value":0},"bms_fault_active":{"name":"BMS Fault Active","type":"status","value":false},"bms_fire_fault_active":{"name":"BMS Fire Fault Active","type":"status","value":false},"bms_max_cell_temp":{"name":"BMS Max Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_max_cell_voltage":{"name":"BMS Max Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_max_charge_current":{"name":"BMS Max Charge Current","signed":true,"type":"status","units":"A","value":0},"bms_max_charge_power":{"name":"BMS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"bms_max_discharge_current":{"name":"BMS Max Discharge Current","type":"status","units":"A","value":0},"bms_max_discharge_power":{"name":"BMS Max Discharge Power","type":"status","units":"kW","value":0},"bms_min_cell_temp":{"name":"BMS Min Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_min_cell_voltage":{"name":"BMS Min Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_monitor_alarms":{"bit0":"BMS DC Current Max Threshold Exceeded","bit1":"BMS DC Current Min Threshold Exceeded","bit10":"BMS SOC Min Threshold Exceeded","bit11":"BMS Cell Voltage Delta Max Threshold Exceeded","bit12":"BMS Cell Temperature Delta Max Threshold Exceeded","bit13":"BMS Number of Racks Online Below Min Threshold","bit2":"BMS Max Cell Temperature Threshold Exceeded","bit3":"BMS Max Cell Voltage Threshold Exceeded","bit4":"BMS Min Cell Temperature Threshold Exceeded","bit5":"BMS Min Cell Voltage Threshold Exceeded","bit6":"BMS State of Health Below Threshold","bit7":"BMS DC Voltage Max Threshold Exceeded","bit8":"BMS DC Voltage Min Threshold Exceeded","bit9":"BMS SOC Max Threshold Exceeded","name":"BMS Monitor Alarms","type":"bitfield","value":0},"bms_monitor_faults":{"bit0":"BMS DC Current Max Threshold Exceeded","bit1":"BMS DC Current Min Threshold Exceeded","bit10":"BMS SOC Min Threshold Exceeded","bit11":"BMS Cell Voltage Delta Max Threshold Exceeded","bit12":"BMS Cell Temperature Delta Max Threshold Exceeded","bit13":"BMS Number of Racks Online Below Min Threshold","bit2":"BMS Max Cell Temperature Threshold Exceeded","bit3":"BMS Max Cell Voltage Threshold Exceeded","bit4":"BMS Min Cell Temperature Threshold Exceeded","bit5":"BMS Min Cell Voltage Threshold Exceeded","bit6":"BMS State of Health Below Threshold","bit7":"BMS DC Voltage Max Threshold Exceeded","bit8":"BMS DC Voltage Min Threshold Exceeded","bit9":"BMS SOC Max Threshold Exceeded","name":"BMS Monitor Faults","type":"bitfield","value":0},"bms_num_racks_online":{"name":"BMS Number of Racks Online","type":"status","value":0},"bms_num_racks_total":{"name":"BMS Number of Racks Total","type":"status","value":0},"bms_open_contactors_enabled":{"excludeFromFile":true,"name":"BMS Open Contactors Enabled","type":"status","value":false},"bms_soc":{"name":"BMS State of Charge (SOC)","scale":10,"type":"status","units":"%","value":0},"bms_soh":{"name":"BMS State of Health (SOH)","scale":10,"type":"status","units":"%","value":0},"bms_status":{"excludeFromFile":true,"name":"BMS Status","type":"status","value":"INIT"}},"/vlinks/bms":{"site_bms_alarm_active":{"value":"/site/ess:bms_alarm_active","vlink":"/status/bms:IsAlarming"},"site_bms_avg_cell_temp":{"value":"/site/ess:bms_avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"site_bms_avg_cell_voltage":{"value":"/site/ess:bms_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"site_bms_cell_temp_delta":{"value":"/site/ess:bms_cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"site_bms_cell_voltage_delta":{"value":"/site/ess:bms_cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"site_bms_chargeable_energy":{"value":"/site/ess:bms_chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"site_bms_close_contactors_enabled":{"value":"/site/ess:bms_close_contactors_enabled","vlink":"/status/bms:CloseContactorsEnabled"},"site_bms_comms_ok":{"value":"/site/ess:bms_comms_ok","vlink":"/status/bms:CommsOK"},"site_bms_current_before_stop_is_ok":{"value":"/site/ess:bms_current_before_stop_is_ok","vlink":"/status/bms:CurrentBeforeStopIsOK"},"site_bms_dc_charging":{"value":"/site/ess:bms_dc_charging","vlink":"/status/bms:DCCharging"},"site_bms_dc_contactors_closed":{"value":"/site/ess:bms_dc_contactors_closed","vlink":"/status/bms:DCClosed"},"site_bms_dc_current":{"value":"/site/ess:bms_dc_current","vlink":"/status/bms:DCCurrent"},"site_bms_dc_discharging":{"value":"/site/ess:bms_dc_discharging","vlink":"/status/bms:DCDischarging"},"site_bms_dc_power":{"value":"/site/ess:bms_dc_power","vlink":"/status/bms:DCPower"},"site_bms_dc_voltage":{"value":"/site/ess:bms_dc_voltage","vlink":"/status/bms:DCVoltage"},"site_bms_dischargeable_energy":{"value":"/site/ess:bms_dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"site_bms_fault_active":{"value":"/site/ess:bms_fault_active","vlink":"/status/bms:IsFaulted"},"site_bms_fire_fault_active":{"value":"/site/ess:bms_fire_fault_active","vlink":"/status/bms:AnyFireFaultActive"},"site_bms_max_cell_temp":{"value":"/site/ess:bms_max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"site_bms_max_cell_voltage":{"value":"/site/ess:bms_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"site_bms_max_charge_current":{"value":"/site/ess:bms_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"site_bms_max_charge_power":{"value":"/site/ess:bms_max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"site_bms_max_discharge_current":{"value":"/site/ess:bms_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"site_bms_max_discharge_power":{"value":"/site/ess:bms_max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"site_bms_min_cell_temp":{"value":"/site/ess:bms_min_cell_temp","vlink":"/status/bms:MinCellTemp"},"site_bms_min_cell_voltage":{"value":"/site/ess:bms_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"site_bms_num_racks_online":{"value":"/site/ess:bms_num_racks_online","vlink":"/status/bms:NumRacksOnline"},"site_bms_num_racks_total":{"value":"/site/ess:bms_num_racks_total","vlink":"/status/bms:NumRacksTotal"},"site_bms_open_contactors_enabled":{"value":"/site/ess:bms_open_contactors_enabled","vlink":"/status/bms:OpenContactorsEnabled"},"site_bms_soc":{"value":"/site/ess:bms_soc","vlink":"/status/bms:SOC"},"site_bms_soh":{"value":"/site/ess:bms_soh","vlink":"/status/bms:SOH"},"site_bms_status":{"value":"/site/ess:bms_status","vlink":"/status/bms:Status"}},"/assets/bms/summary":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"chargeable_energy":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:ClearFaults@triggerCmd"},{"inValue":true,"outValue":1,"uri":"/controls/bms:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"close_contactors":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":false,"every":0.5,"name":"Close DC Contactor","note":"Enabled conditions: ![/status/bms/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode] \u0026\u0026 ![/status/bms/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/bms:LocalStartBMS","value":false},"comms_ok":{"value":false},"dc_charging":{"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_discharging":{"value":false},"dc_power":{"value":0},"dc_voltage":{"value":0},"dischargeable_energy":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/summary:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"num_racks_online":{"value":0},"num_racks_total":{"value":0},"open_contactors":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":false,"every":0.5,"name":"Open DC Contactor","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 ![/status/pcs/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/bms:LocalStopBMS","value":false},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/bms":{"ui_avg_cell_temp":{"value":"/assets/bms/summary:avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/summary:avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/summary:cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/summary:cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"ui_chargeable_energy":{"value":"/assets/bms/summary:chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"ui_comms_ok":{"value":"/assets/bms/summary:comms_ok","vlink":"/status/bms:CommsOK"},"ui_dc_charging":{"value":"/assets/bms/summary:dc_charging","vlink":"/status/bms:DCCharging"},"ui_dc_contactors_closed":{"value":"/assets/bms/summary:dc_contactors_closed","vlink":"/status/bms:DCClosed"},"ui_dc_current":{"value":"/assets/bms/summary:dc_current","vlink":"/status/bms:DCCurrent"},"ui_dc_discharging":{"value":"/assets/bms/summary:dc_discharging","vlink":"/status/bms:DCDischarging"},"ui_dc_power":{"value":"/assets/bms/summary:dc_power","vlink":"/status/bms:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/summary:dc_voltage","vlink":"/status/bms:DCVoltage"},"ui_dischargeable_energy":{"value":"/assets/bms/summary:dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"ui_max_cell_temp":{"value":"/assets/bms/summary:max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/summary:max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/summary:max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/summary:max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/summary:max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/summary:max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/summary:min_cell_temp","vlink":"/status/bms:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/summary:min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"ui_num_racks_online":{"value":"/assets/bms/summary:num_racks_online","vlink":"/status/bms:NumRacksOnline"},"ui_num_racks_total":{"value":"/assets/bms/summary:num_racks_total","vlink":"/status/bms:NumRacksTotal"},"ui_soc":{"value":"/assets/bms/summary:soc","vlink":"/status/bms:SOC"},"ui_soh":{"value":"/assets/bms/summary:soh","vlink":"/status/bms:SOH"},"ui_status":{"value":"/assets/bms/summary:status","vlink":"/status/bms:Status"}}}
[3.31515s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.31539s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/summary:alarms",
	"CurrentBeforeStopThreshold":	35,
	"FaultDestination":	"/assets/bms/summary:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[3.31563s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:alarms]
[3.31582s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:alarms]
[3.31605s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:faults]
[3.31621s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:faults]
[3.31642s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.31661s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.31682s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.31703s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.31728s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/bms:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/bms:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/bms:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/bms:DischargePowerLimit"
	}
}].
[3.31752s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms:ChargeCurrentLimit]
[3.31779s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms:ChargeCurrentLimit]
[3.31805s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms:ChargePowerLimit]
[3.31823s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms:ChargePowerLimit]
[3.31852s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms:DischargeCurrentLimit]
[3.31885s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms:DischargeCurrentLimit]
[3.3191s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms:DischargePowerLimit]
[3.31932s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms:DischargePowerLimit]
[3.31966s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CloseContactorsEnable":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CloseContactorsEnable"
						}]
				}]
		},
		"value":	"CloseContactorsEnable"
	},
	"LocalStartBMS":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"LocalStartBMS"
						}]
				}]
		},
		"every":	0.5,
		"value":	"LocalStartBMS"
	},
	"LocalStopBMS":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"LocalStopBMS"
						}]
				}]
		},
		"every":	0.5,
		"value":	"LocalStopBMS"
	},
	"OpenContactorsEnable":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"OpenContactorsEnable"
						}]
				}]
		},
		"value":	"OpenContactorsEnable"
	},
	"pubAssetsSummary_bms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"mode":	"ui",
		"note":	"Publishes UI summary data (/assets/bms/summary)",
		"table":	"/assets/bms/summary",
		"value":	1
	},
	"runMonitor_bms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"bms",
		"enable":	"/config/bms:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/bms",
		"value":	1
	},
	"updateHeartbeatWrite_bms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CalculateVar",
							"inAv":	"/status/bms:HeartbeatWrite"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite",
		"value":	1
	}
}].
[3.31995s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [CloseContactorsEnable]
[3.32041s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [CloseContactorsEnable]
[3.32114s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/bms:perf_CloseContactorsEnable]
[3.32147s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/bms:perf_CloseContactorsEnable]
[3.32182s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CloseContactorsEnable_bms]
[3.32223s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CloseContactorsEnable_bms]
[3.32263s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [LocalStartBMS]
[3.32289s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [LocalStartBMS]
[3.32322s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [LocalStopBMS]
[3.32342s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [LocalStopBMS]
[3.32379s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [OpenContactorsEnable]
[3.32403s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [OpenContactorsEnable]
[3.32428s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/bms:perf_OpenContactorsEnable]
[3.3245s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/bms:perf_OpenContactorsEnable]
[3.32471s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:OpenContactorsEnable_bms]
[3.32491s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:OpenContactorsEnable_bms]
[3.32532s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/bms:CellTempDelta_Calculated":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:CellVoltageDelta_Calculated":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:DCCharging":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:DCDischarging":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	}
}].
[3.32583s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms:MinCellTemp",
		"variable2":	"/status/bms:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms:MinCellVoltage",
		"variable2":	"/status/bms:MaxCellVoltage"
	},
	"CommsOK":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	true,
							"uri":	"/site/ess:comms_faults[1]"
						}]
				}]
		},
		"note":	"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable",
		"value":	true
	},
	"DCCharging":	{
		"expression":	"{1} < 0",
		"note":	"Determines if the BMS is charging",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:DCCurrent"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/bms:DCCurrent@EnableMinValCheck"
						}, {
							"uri":	"/status/bms:NumRacksOnline@EnableMinValCheck"
						}, {
							"uri":	"/status/bms:SOH@EnableMinValCheck"
						}, {
							"uri":	"/status/bms:MaxCellVoltage@EnableMaxValCheck"
						}, {
							"uri":	"/status/bms:MinCellVoltage@EnableMinValCheck"
						}, {
							"uri":	"/status/bms:MaxCellTemp@EnableMaxValCheck"
						}, {
							"uri":	"/status/bms:MinCellTemp@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"DCDischarging":	{
		"expression":	"{1} > 0",
		"note":	"Determines if the BMS is discharging",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:DCCurrent"
	},
	"HeartbeatWrite":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"fims":	"set",
							"uri":	"/components/bms:heartbeat_write"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"excludeFromDefaultSched":	true,
		"expression":	"if (({1} >= 59), 0, ({1} + 1))",
		"note":	"Updates and then sends the heartbeat write value",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms:HeartbeatWrite"
	},
	"NumRacksTotal":	9,
	"Status":	"INIT"
}].
[3.32653s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.32678s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.32714s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_bms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/bms) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"bms",
				"every":	1,
				"uri":	"/sched/bms:pubAssetsSummary_bms",
				"value":	1
			}, {
				"aname":	"bms",
				"every":	0.1,
				"uri":	"/sched/bms:runMonitor_bms",
				"value":	1
			}, {
				"aname":	"bms",
				"every":	1,
				"uri":	"/sched/bms:checkInputs_bms",
				"value":	1
			}, {
				"aname":	"bms",
				"every":	1,
				"uri":	"/sched/bms:updateHeartbeatWrite_bms",
				"value":	1
			}, {
				"aname":	"bms",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/bms:LocalStartBMS",
				"value":	0
			}, {
				"aname":	"bms",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/bms:LocalStopBMS",
				"value":	0
			}, {
				"aname":	"bms",
				"debug":	0,
				"every":	0.1,
				"offset":	0,
				"uri":	"/sched/bms:CloseContactorsEnable",
				"value":	0
			}, {
				"aname":	"bms",
				"debug":	0,
				"every":	0.1,
				"offset":	0,
				"uri":	"/sched/bms:OpenContactorsEnable",
				"value":	0
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[3.32756s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"/components/catl_ems_bms_rw:fault_clear_cmd",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	1
	},
	"CloseContactors":	{
		"checkCmdHoldTimeout":	2,
		"checkCmdTimeout":	2,
		"cmdVar":	"/components/catl_ems_bms_rw:ems_cmd",
		"maxCmdTries":	2,
		"value":	2
	},
	"OpenContactors":	{
		"checkCmdHoldTimeout":	2,
		"checkCmdTimeout":	2,
		"cmdVar":	"/components/catl_ems_bms_rw:ems_cmd",
		"maxCmdTries":	2,
		"value":	3
	},
	"VerifyCloseContactors":	{
		"enableAlert":	false,
		"expression":	"{1}",
		"numVars":	1,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms:DCClosed"
	},
	"VerifyOpenContactors":	{
		"enableAlert":	false,
		"expression":	"not {1}",
		"numVars":	1,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms:DCClosed"
	}
}].
[3.32794s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:HandleCmd_ClearFaults]
[3.32818s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:HandleCmd_ClearFaults]
[3.3284s   ] [info    ] [HandleCmd      ] reload first run [bms] [/controls/bms:ClearFaults]  reload 0
[3.3286s   ] [info    ] [setupCmdParams ] Setting up params for [/controls/bms:ClearFaults]
[3.32883s  ] [info    ] [HandleCmd      ] Adding [/controls/bms:ClearFaults] to amap in asset [bms]
[3.32906s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/bms:ClearFaults]
[3.32928s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/bms:ClearFaults]
[3.32959s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/bms:ClearFaults":	{
		"amap":	"bms",
		"func":	"HandleCmd"
	}
}].
[3.32996s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/bms:ClearFaults"
						}, {
							"outValue":	"Clear",
							"uri":	"/faults/bms:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/bms:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear",
		"value":	false
	},
	"CloseContactorsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/bms:VerifyCloseContactors@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/bms:VerifyCloseContactors"
						}, {
							"inValue":	false,
							"outValue":	"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/bms:CloseContactors"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note":	"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm",
		"value":	false
	},
	"OpenContactorsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/bms:VerifyOpenContactors@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/bms:VerifyOpenContactors"
						}, {
							"inValue":	false,
							"outValue":	"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/bms:OpenContactors"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note":	"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm",
		"value":	false
	},
	"VerifyCloseContactorsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/bms:VerifyCloseContactors"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note":	"If the BMS failed to close contactors after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyOpenContactorsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/bms:VerifyOpenContactors"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note":	"If the BMS failed to open contactors after an elasped time, send an alarm",
		"value":	false
	}
}].
[3.33075s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:bms_control_alarms[0]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending clear faults command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"CloseContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:bms_control_alarms[1]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending close contactors command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"HeartbeatRead":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"type":	"alarm",
		"value":	"Normal"
	},
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"HeartbeatRead_state",
							"outValue":	"BMS Communication Failure",
							"uri":	"/alarms/bms:HeartbeatRead"
						}, {
							"inValue":	"DCCurrent_limit_max",
							"note":	"Bit 0 - BMS DC Current Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[0]"
						}, {
							"inValue":	"DCCurrent_limit_min",
							"note":	"Bit 1 - BMS DC Current Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[1]"
						}, {
							"inValue":	"MaxCellTemp_limit_max",
							"note":	"Bit 2 - BMS Max Cell Temperature Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[2]"
						}, {
							"inValue":	"MaxCellVoltage_limit_max",
							"note":	"Bit 3 - BMS Max Cell Voltage Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[3]"
						}, {
							"inValue":	"MinCellTemp_limit_min",
							"note":	"Bit 4 - BMS Min Cell Temperature Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[4]"
						}, {
							"inValue":	"MinCellVoltage_limit_min",
							"note":	"Bit 5 - BMS Min Cell Voltage Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[5]"
						}, {
							"inValue":	"SOH_limit_min",
							"note":	"Bit 6 - BMS State of Health Below Threshold",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[6]"
						}, {
							"inValue":	"DCVoltage_limit_max",
							"note":	"Bit 7 - BMS DC Voltage Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[7]"
						}, {
							"inValue":	"DCVoltage_limit_min",
							"note":	"Bit 8 - BMS DC Voltage Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[8]"
						}, {
							"inValue":	"SOC_limit_max",
							"note":	"Bit 9 - BMS SOC Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[9]"
						}, {
							"inValue":	"SOC_limit_min",
							"note":	"Bit 10 - BMS SOC Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[10]"
						}, {
							"inValue":	"CellVoltageDelta_limit_max",
							"note":	"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[11]"
						}, {
							"inValue":	"CellTempDelta_limit_max",
							"note":	"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[12]"
						}, {
							"inValue":	"NumRacksOnline_limit_min",
							"note":	"Bit 13 - BMS Number of Racks Online Below Min Threshold",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[13]"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"OpenContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:bms_control_alarms[2]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending open contactors command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyCloseContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:bms_control_alarms[3]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the BMS failed to close contactors",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyOpenContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:bms_control_alarms[4]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the BMS failed to open contactors",
		"type":	"alarm",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"numVars":	12,
		"type":	"alarm",
		"value":	"Normal",
		"variable1":	"MaxCellVoltage",
		"variable10":	"CellVoltageDelta",
		"variable11":	"CellTempDelta",
		"variable12":	"NumRacksOnline",
		"variable2":	"MinCellVoltage",
		"variable3":	"MaxCellTemp",
		"variable4":	"MinCellTemp",
		"variable5":	"SOH",
		"variable6":	"HeartbeatRead",
		"variable7":	"DCVoltage",
		"variable8":	"DCCurrent",
		"variable9":	"SOC"
	}
}].
[3.33135s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.33153s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.33209s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms:FaultDestination]
[3.33235s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms:FaultDestination]
[3.33256s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms:NoFaultMsg]
[3.33273s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms:NoFaultMsg]
[3.33301s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:FaultCnt]
[3.33318s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:FaultCnt]
[3.33338s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms:AlarmDestination]
[3.33357s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms:AlarmDestination]
[3.33396s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms:NoAlarmMsg]
[3.33424s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms:NoAlarmMsg]
[3.33451s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:AlarmCnt]
[3.3347s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:AlarmCnt]
[3.33509s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.33533s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.33573s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.33609s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.33672s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.33704s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.33763s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.33793s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.33858s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.33892s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.33933s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.33968s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.34001s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.34045s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.34124s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"HeartbeatRead":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"type":	"fault",
		"value":	"Normal"
	},
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"HeartbeatRead_state",
							"outValue":	"BMS Communication Failure",
							"uri":	"/faults/bms:HeartbeatRead"
						}, {
							"inValue":	"DCCurrent_limit_max",
							"note":	"Bit 0 - BMS DC Current Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[0]"
						}, {
							"inValue":	"DCCurrent_limit_min",
							"note":	"Bit 1 - BMS DC Current Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[1]"
						}, {
							"inValue":	"MaxCellTemp_limit_max",
							"note":	"Bit 2 - BMS Max Cell Temperature Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[2]"
						}, {
							"inValue":	"MaxCellVoltage_limit_max",
							"note":	"Bit 3 - BMS Max Cell Voltage Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[3]"
						}, {
							"inValue":	"MinCellTemp_limit_min",
							"note":	"Bit 4 - BMS Min Cell Temperature Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[4]"
						}, {
							"inValue":	"MinCellVoltage_limit_min",
							"note":	"Bit 5 - BMS Min Cell Voltage Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[5]"
						}, {
							"inValue":	"SOH_limit_min",
							"note":	"Bit 6 - BMS State of Health Below Threshold",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[6]"
						}, {
							"inValue":	"DCVoltage_limit_max",
							"note":	"Bit 7 - BMS DC Voltage Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[7]"
						}, {
							"inValue":	"DCVoltage_limit_min",
							"note":	"Bit 8 - BMS DC Voltage Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[8]"
						}, {
							"inValue":	"SOC_limit_max",
							"note":	"Bit 9 - BMS SOC Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[9]"
						}, {
							"inValue":	"SOC_limit_min",
							"note":	"Bit 10 - BMS SOC Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[10]"
						}, {
							"inValue":	"CellVoltageDelta_limit_max",
							"note":	"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[11]"
						}, {
							"inValue":	"CellTempDelta_limit_max",
							"note":	"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[12]"
						}, {
							"inValue":	"NumRacksOnline_limit_min",
							"note":	"Bit 13 - BMS Number of Racks Online Below Min Threshold",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[13]"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"numVars":	12,
		"type":	"fault",
		"value":	"Normal",
		"variable1":	"MaxCellVoltage",
		"variable10":	"CellVoltageDelta",
		"variable11":	"CellTempDelta",
		"variable12":	"NumRacksOnline",
		"variable2":	"MinCellVoltage",
		"variable3":	"MaxCellTemp",
		"variable4":	"MinCellTemp",
		"variable5":	"SOH",
		"variable6":	"HeartbeatRead",
		"variable7":	"DCVoltage",
		"variable8":	"DCCurrent",
		"variable9":	"SOC"
	}
}].
[3.34202s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.34235s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.34276s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.34307s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.34371s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.34402s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.34456s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/bms:AnyFireFaultActive":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:CellTempDelta":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:CellVoltageDelta":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:CurrentBeforeStopIsOK":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:DCCurrent":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:DCVoltage":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:HeartbeatRead":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:IsAlarming":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:IsFaulted":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:MaxCellTemp":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:MaxCellVoltage":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:MinCellTemp":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:MinCellVoltage":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:NumRacksOnline":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:OverCurrentAlarm":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:OverCurrentFault":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:SOC":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:SOH":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:TotalAlarmCnt":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:TotalFaultCnt":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:UnderCurrentAlarm":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:UnderCurrentFault":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	}
}].
[3.34596s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"numVars":	2,
		"operation":	"or",
		"value":	false,
		"variable1":	"bms:AnyFireFaultActive",
		"variable2":	"/status/bms:FireFaultActive"
	},
	"CellTempDelta":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"MaxAlarmThreshold":	7,
		"MaxAlarmTimeout":	5.5,
		"MaxFaultThreshold":	10,
		"MaxFaultTimeout":	2.5,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	7,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions",
		"value":	0
	},
	"CellVoltageDelta":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"MaxAlarmThreshold":	1,
		"MaxAlarmTimeout":	5.5,
		"MaxFaultThreshold":	2,
		"MaxFaultTimeout":	2.5,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	1,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions",
		"value":	0
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	0,
							"uri":	"/site/ess:bms_monitor_faults"
						}, {
							"outValue":	0,
							"uri":	"/site/ess:bms_monitor_alarms"
						}, {
							"outValue":	0,
							"uri":	"/site/ess:bms_control_alarms"
						}]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"CurrentBeforeStopIsOK":	{
		"enable":	"/config/bms:enable",
		"expression":	"{1} <= {2} and {1} >= (-1 * {2})",
		"note":	"Set to true if the BMS DC current is within an acceptable level before stopping the PCS",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:DCCurrent",
		"variable2":	"/config/bms:CurrentBeforeStopThreshold"
	},
	"DCCurrent":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"EnableMinValCheck":	false,
		"MaxAlarmTimeout":	1,
		"MaxFaultTimeout":	2.5,
		"MinAlarmTimeout":	1,
		"MinFaultTimeout":	2.5,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over/under current conditions",
		"value":	0
	},
	"DCVoltage":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"EnableMinValCheck":	false,
		"MaxAlarmThreshold":	1450,
		"MaxAlarmTimeout":	0.5,
		"MaxFaultThreshold":	1500,
		"MaxFaultTimeout":	0.5,
		"MaxRecoverTimeout":	1.5,
		"MaxResetValue":	1400,
		"MinAlarmThreshold":	1000,
		"MinAlarmTimeout":	0.5,
		"MinFaultThreshold":	800,
		"MinFaultTimeout":	0.2,
		"MinRecoverTimeout":	1.5,
		"MinResetValue":	1300,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions",
		"value":	0
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ActivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ReactivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:Stop@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:Stop"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS",
		"value":	false
	},
	"FireFaultActive":	false,
	"HeartbeatRead":	{
		"AlarmTimeout":	10,
		"EnableAlert":	false,
		"EnableCommsCheck":	true,
		"EnableStateCheck":	true,
		"FaultTimeout":	15,
		"RecoverTimeout":	0.1,
		"Type":	"int",
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS",
		"value":	0
	},
	"IsAlarming":	{
		"expression":	"{1} > 0",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:TotalAlarmCnt"
	},
	"IsFaulted":	{
		"expression":	"{1} or {2} > 0",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:SystemFault",
		"variable2":	"/status/bms:TotalFaultCnt"
	},
	"MaxCellTemp":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"MaxAlarmThreshold":	52,
		"MaxAlarmTimeout":	2.5,
		"MaxFaultThreshold":	53,
		"MaxFaultTimeout":	1,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	52,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions",
		"value":	0
	},
	"MaxCellVoltage":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"MaxAlarmThreshold":	3.58,
		"MaxAlarmTimeout":	2.5,
		"MaxFaultThreshold":	3.6,
		"MaxFaultTimeout":	0.2,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	3.5,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions",
		"value":	0
	},
	"MinCellTemp":	{
		"EnableFaultCheck":	true,
		"EnableMinValCheck":	false,
		"MinAlarmThreshold":	10,
		"MinAlarmTimeout":	2.5,
		"MinFaultThreshold":	-0.1,
		"MinFaultTimeout":	0.5,
		"MinRecoverTimeout":	1.4,
		"MinResetValue":	10,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions",
		"value":	0
	},
	"MinCellVoltage":	{
		"EnableFaultCheck":	true,
		"EnableMinValCheck":	false,
		"MinAlarmThreshold":	2.85,
		"MinAlarmTimeout":	2.5,
		"MinFaultThreshold":	2.8,
		"MinFaultTimeout":	0,
		"MinRecoverTimeout":	1.4,
		"MinResetValue":	2.85,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions",
		"value":	0
	},
	"NumRacksOnline":	{
		"EnableFaultCheck":	true,
		"EnableMinValCheck":	false,
		"MinAlarmThreshold":	5,
		"MinAlarmTimeout":	5,
		"MinFaultThreshold":	2,
		"MinFaultTimeout":	10,
		"MinRecoverTimeout":	1,
		"MinResetValue":	5,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for under num instances condition",
		"note2":	"TODO: Update min alarm/fault/reset thresholds and timeouts",
		"note3":	"TODO: Decode or calculate num instances online and remap/link value to this variable",
		"value":	0
	},
	"OverCurrentAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:DCCurrent@MaxAlarmThreshold"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"expression":	"{1}",
		"note":	"Adjusts the max alarm threshold for BMS DC current monitoring variable depending on the discharge current limit",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/limits/bms:DischargeCurrentLimit"
	},
	"OverCurrentFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:DCCurrent@MaxFaultThreshold"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"expression":	"{1} * 1.05",
		"note":	"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/limits/bms:DischargeCurrentLimit"
	},
	"SOC":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"EnableMinValCheck":	false,
		"MaxAlarmThreshold":	99.9,
		"MaxAlarmTimeout":	5.5,
		"MaxFaultThreshold":	100,
		"MaxFaultTimeout":	2.5,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	99,
		"MinAlarmThreshold":	6,
		"MinAlarmTimeout":	5.5,
		"MinFaultThreshold":	1,
		"MinFaultTimeout":	2.5,
		"MinRecoverTimeout":	1.4,
		"MinResetValue":	8,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over/under soc conditions",
		"value":	0
	},
	"SOH":	{
		"EnableFaultCheck":	true,
		"EnableMinValCheck":	false,
		"MinAlarmThreshold":	30,
		"MinAlarmTimeout":	5.5,
		"MinFaultThreshold":	25,
		"MinFaultTimeout":	2.5,
		"MinRecoverTimeout":	1.4,
		"MinResetValue":	30,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for under soh conditions",
		"value":	0
	},
	"SystemFault":	false,
	"TotalAlarmCnt":	{
		"numVars":	2,
		"operation":	"+",
		"value":	0,
		"variable1":	"bms:TotalAlarmCnt",
		"variable2":	"/status/bms:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"numVars":	2,
		"operation":	"+",
		"value":	0,
		"variable1":	"bms:TotalFaultCnt",
		"variable2":	"/status/bms:FaultCnt"
	},
	"UnderCurrentAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:DCCurrent@MinAlarmThreshold"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"expression":	"{1}",
		"note":	"Adjusts the min alarm threshold for BMS DC current monitoring variable depending on the charge current limit",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/limits/bms:ChargeCurrentLimit"
	},
	"UnderCurrentFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:DCCurrent@MinFaultThreshold"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"expression":	"{1} * 1.05",
		"note":	"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/limits/bms:ChargeCurrentLimit"
	}
}].
[3.34803s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CellTempDelta_reload]
[3.34948s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CellTempDelta_reload]
[3.34996s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/alarms/bms:MonitorVarAlarm]
[3.35056s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/alarms/bms:MonitorVarAlarm]
[3.35101s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/faults/bms:MonitorVarFault]
[3.35165s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/faults/bms:MonitorVarFault]
[3.35195s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:CellTempDelta is /assets/bms/summary:faults
[3.35218s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:CellTempDelta is /assets/bms/summary:alarms
[3.35243s  ] [info    ] [CheckMonitorVar] Not set up for [CellTempDelta] reloadStr [CellTempDelta_reload]
[3.35297s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CellVoltageDelta_reload]
[3.35328s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CellVoltageDelta_reload]
[3.35371s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:CellVoltageDelta is /assets/bms/summary:faults
[3.35407s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:CellVoltageDelta is /assets/bms/summary:alarms
[3.35453s  ] [info    ] [CheckMonitorVar] Not set up for [CellVoltageDelta] reloadStr [CellVoltageDelta_reload]
[3.35759s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:DCCurrent_reload]
[3.35811s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:DCCurrent_reload]
[3.35864s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:DCCurrent is /assets/bms/summary:faults
[3.35887s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:DCCurrent is /assets/bms/summary:alarms
[3.35924s  ] [info    ] [CheckMonitorVar] Not set up for [DCCurrent] reloadStr [DCCurrent_reload]
[3.35988s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:DCVoltage_reload]
[3.36007s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:DCVoltage_reload]
[3.36048s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:DCVoltage is /assets/bms/summary:faults
[3.36069s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:DCVoltage is /assets/bms/summary:alarms
[3.3609s   ] [info    ] [CheckMonitorVar] Not set up for [DCVoltage] reloadStr [DCVoltage_reload]
[3.36167s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:HeartbeatRead_reload]
[3.3619s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:HeartbeatRead_reload]
[3.36225s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:HeartbeatRead is /assets/bms/summary:faults
[3.36254s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:HeartbeatRead is /assets/bms/summary:alarms
[3.36283s  ] [info    ] [CheckMonitorVar] Not set up for [HeartbeatRead] reloadStr [HeartbeatRead_reload]
[3.36324s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:MaxCellTemp_reload]
[3.36343s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:MaxCellTemp_reload]
[3.36371s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:MaxCellTemp is /assets/bms/summary:faults
[3.36401s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:MaxCellTemp is /assets/bms/summary:alarms
[3.36434s  ] [info    ] [CheckMonitorVar] Not set up for [MaxCellTemp] reloadStr [MaxCellTemp_reload]
[3.36475s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:MaxCellVoltage_reload]
[3.36501s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:MaxCellVoltage_reload]
[3.36532s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:MaxCellVoltage is /assets/bms/summary:faults
[3.36563s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:MaxCellVoltage is /assets/bms/summary:alarms
[3.36582s  ] [info    ] [CheckMonitorVar] Not set up for [MaxCellVoltage] reloadStr [MaxCellVoltage_reload]
[3.36669s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:MinCellTemp_reload]
[3.36705s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:MinCellTemp_reload]
[3.36741s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:MinCellTemp is /assets/bms/summary:faults
[3.36775s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:MinCellTemp is /assets/bms/summary:alarms
[3.36815s  ] [info    ] [CheckMonitorVar] Not set up for [MinCellTemp] reloadStr [MinCellTemp_reload]
[3.36905s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:MinCellVoltage_reload]
[3.36955s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:MinCellVoltage_reload]
[3.36995s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:MinCellVoltage is /assets/bms/summary:faults
[3.37038s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:MinCellVoltage is /assets/bms/summary:alarms
[3.37074s  ] [info    ] [CheckMonitorVar] Not set up for [MinCellVoltage] reloadStr [MinCellVoltage_reload]
[3.37182s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:NumRacksOnline_reload]
[3.37228s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:NumRacksOnline_reload]
[3.37289s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:NumRacksOnline is /assets/bms/summary:faults
[3.37394s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:NumRacksOnline is /assets/bms/summary:alarms
[3.37425s  ] [info    ] [CheckMonitorVar] Not set up for [NumRacksOnline] reloadStr [NumRacksOnline_reload]
[3.37531s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:SOC_reload]
[3.37564s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:SOC_reload]
[3.37608s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:SOC is /assets/bms/summary:faults
[3.37642s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:SOC is /assets/bms/summary:alarms
[3.37685s  ] [info    ] [CheckMonitorVar] Not set up for [SOC] reloadStr [SOC_reload]
[3.37736s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:SOH_reload]
[3.37763s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:SOH_reload]
[3.37807s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:SOH is /assets/bms/summary:faults
[3.37843s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:SOH is /assets/bms/summary:alarms
[3.3788s   ] [info    ] [CheckMonitorVar] Not set up for [SOH] reloadStr [SOH_reload]
[3.37969s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"bms_poweron":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	"Normal",
							"uri":	"/status/bms:Status"
						}, {
							"inValue":	1,
							"outValue":	"Normal",
							"uri":	"/status/bms:Status"
						}, {
							"inValue":	2,
							"outValue":	"On Fault",
							"uri":	"/status/bms:Status"
						}, {
							"inValue":	3,
							"outValue":	"Off Fault",
							"uri":	"/status/bms:Status"
						}, {
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/bms:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/bms:DCClosed"
						}, {
							"inValue":	2,
							"outValue":	false,
							"uri":	"/status/bms:DCClosed"
						}, {
							"inValue":	3,
							"outValue":	true,
							"uri":	"/status/bms:DCClosed"
						}, {
							"enable":	"/config/bms:enum_opt",
							"outValue":	true,
							"uri":	"/components/bms:status@ifChanged",
							"useAv":	true
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[3.38031s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"checkInputs_bms":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	false,
							"uri":	"/components/bms:status@ifChanged"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change",
		"value":	0
	}
}].
[3.38114s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temperature":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_avg_cell_temperature",
		"vlink":	"/status/bms:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_avg_cell_voltage",
		"vlink":	"/status/bms:AvgCellVoltage"
	},
	"dc_charge_current_limit":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_max_charge_current",
		"vlink":	"/limits/bms:ChargeCurrentLimit"
	},
	"dc_charge_energy_limit":	{
		"value":	"/components/catl_bms_ems_r:bms_remain_charge_energy",
		"vlink":	"/status/bms:ChargeableEnergy"
	},
	"dc_charge_power_limit":	{
		"value":	"/components/catl_bms_ems_r:bms_max_charge_allowed",
		"vlink":	"/limits/bms:ChargePowerLimit"
	},
	"dc_current":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_current",
		"vlink":	"/status/bms:DCCurrent"
	},
	"dc_discharge_current_limit":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_max_discharge_current",
		"vlink":	"/limits/bms:DischargeCurrentLimit"
	},
	"dc_discharge_energy_limit":	{
		"value":	"/components/catl_bms_ems_r:bms_remain_discharge_energy",
		"vlink":	"/status/bms:DischargeableEnergy"
	},
	"dc_discharge_power_limit":	{
		"value":	"/components/catl_bms_ems_r:bms_max_discharge_allowed",
		"vlink":	"/limits/bms:DischargePowerLimit"
	},
	"dc_power":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_power",
		"vlink":	"/status/bms:DCPower"
	},
	"dc_voltage":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_voltage",
		"vlink":	"/status/bms:DCVoltage"
	},
	"heartbeat_read":	{
		"value":	"/components/catl_bms_ems_r:bms_heartbeat",
		"vlink":	"/status/bms:HeartbeatRead"
	},
	"max_cell_temperature":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_max_cell_temperature",
		"vlink":	"/status/bms:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_max_cell_voltage",
		"vlink":	"/status/bms:MaxCellVoltage"
	},
	"min_cell_temperature":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_min_cell_temperature",
		"vlink":	"/status/bms:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_min_cell_voltage",
		"vlink":	"/status/bms:MinCellVoltage"
	},
	"num_online_racks":	{
		"value":	"/components/catl_bms_ems_r:num_hv_subsystem",
		"vlink":	"/status/bms:NumRacksOnline"
	},
	"soc":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_soc",
		"vlink":	"/status/bms:SOC"
	},
	"soh":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_soh",
		"vlink":	"/status/bms:SOH"
	}
}].
[3.38158s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_avg_cell_temperature]
[3.38187s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_avg_cell_temperature]
[3.38237s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_avg_cell_voltage]
[3.38273s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_avg_cell_voltage]
[3.38324s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_max_charge_current]
[3.38372s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_max_charge_current]
[3.38417s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_bms_ems_r:bms_remain_charge_energy]
[3.38451s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_bms_ems_r:bms_remain_charge_energy]
[3.38498s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_bms_ems_r:bms_max_charge_allowed]
[3.38541s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_bms_ems_r:bms_max_charge_allowed]
[3.38585s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_current]
[3.38626s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_current]
[3.38653s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_max_discharge_current]
[3.38681s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_max_discharge_current]
[3.38718s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_bms_ems_r:bms_remain_discharge_energy]
[3.38746s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_bms_ems_r:bms_remain_discharge_energy]
[3.38781s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_bms_ems_r:bms_max_discharge_allowed]
[3.38822s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_bms_ems_r:bms_max_discharge_allowed]
[3.38868s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_power]
[3.38904s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_power]
[3.38934s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_voltage]
[3.38962s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_voltage]
[3.39s     ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_bms_ems_r:bms_heartbeat]
[3.39033s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_bms_ems_r:bms_heartbeat]
[3.39062s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_max_cell_temperature]
[3.39087s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_max_cell_temperature]
[3.39123s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_max_cell_voltage]
[3.39152s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_max_cell_voltage]
[3.39175s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_min_cell_temperature]
[3.39198s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_min_cell_temperature]
[3.3924s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_min_cell_voltage]
[3.39274s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_min_cell_voltage]
[3.39298s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_bms_ems_r:num_hv_subsystem]
[3.3932s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_bms_ems_r:num_hv_subsystem]
[3.39356s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_soc]
[3.39405s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_soc]
[3.39454s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_soh]
[3.39492s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_soh]
[3.39564s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"bms_alarm_active":	{
		"name":	"BMS Alarm Active",
		"type":	"status",
		"value":	false
	},
	"bms_avg_cell_temp":	{
		"name":	"BMS Avg Cell Temperature",
		"scale":	100,
		"type":	"status",
		"units":	"°C",
		"value":	0
	},
	"bms_avg_cell_voltage":	{
		"name":	"BMS Avg Cell Voltage",
		"scale":	10000,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"bms_cell_temp_delta":	{
		"name":	"BMS Cell Temperature Delta",
		"scale":	100,
		"type":	"status",
		"units":	"°C",
		"value":	0
	},
	"bms_cell_voltage_delta":	{
		"name":	"BMS Cell Voltage Delta",
		"scale":	10000,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"bms_chargeable_energy":	{
		"name":	"BMS Chargeable Energy",
		"scale":	10,
		"type":	"status",
		"units":	"kWh",
		"value":	0
	},
	"bms_close_contactors_enabled":	{
		"excludeFromFile":	true,
		"name":	"BMS Close Contactors Enabled",
		"type":	"status",
		"value":	false
	},
	"bms_comms_ok":	{
		"name":	"BMS Comms OK",
		"type":	"status",
		"value":	false
	},
	"bms_control_alarms":	{
		"bit0":	"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit1":	"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit2":	"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit3":	"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout",
		"bit4":	"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout",
		"name":	"BMS Control Alarms",
		"type":	"bitfield",
		"value":	0
	},
	"bms_current_before_stop_is_ok":	{
		"excludeFromFile":	true,
		"name":	"BMS Current Before Stop is OK",
		"type":	"status",
		"value":	false
	},
	"bms_dc_charging":	{
		"name":	"BMS DC Charging",
		"type":	"status",
		"value":	false
	},
	"bms_dc_contactor_control":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched"
						}]
				}]
		},
		"aname":	"ess",
		"debug":	0,
		"enable":	"/config/pcs:enable",
		"every":	0.5,
		"ifChanged":	false,
		"name":	"BMS Contactor Control Command",
		"note1":	"Initiates BMS close and open contactors",
		"note2":	"2->close contactors | 3->open contactors",
		"offset":	0,
		"size":	1,
		"type":	"control",
		"uri":	"/sched/ess:SiteBMSContactorControl",
		"value":	0
	},
	"bms_dc_contactors_closed":	{
		"name":	"BMS DC Contactors Closed",
		"type":	"status",
		"value":	false
	},
	"bms_dc_current":	{
		"name":	"BMS DC Current",
		"scale":	10,
		"signed":	true,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"bms_dc_discharging":	{
		"name":	"BMS DC Discharging",
		"type":	"status",
		"value":	false
	},
	"bms_dc_power":	{
		"name":	"BMS DC Power",
		"scale":	10,
		"signed":	true,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"bms_dc_voltage":	{
		"name":	"BMS DC Voltage",
		"scale":	10,
		"signed":	true,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"bms_dischargeable_energy":	{
		"name":	"BMS Dischargeable Energy",
		"scale":	10,
		"type":	"status",
		"units":	"kWh",
		"value":	0
	},
	"bms_fault_active":	{
		"name":	"BMS Fault Active",
		"type":	"status",
		"value":	false
	},
	"bms_fire_fault_active":	{
		"name":	"BMS Fire Fault Active",
		"type":	"status",
		"value":	false
	},
	"bms_max_cell_temp":	{
		"name":	"BMS Max Cell Temperature",
		"scale":	100,
		"type":	"status",
		"units":	"°C",
		"value":	0
	},
	"bms_max_cell_voltage":	{
		"name":	"BMS Max Cell Voltage",
		"scale":	10000,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"bms_max_charge_current":	{
		"name":	"BMS Max Charge Current",
		"signed":	true,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"bms_max_charge_power":	{
		"name":	"BMS Max Charge Power",
		"signed":	true,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"bms_max_discharge_current":	{
		"name":	"BMS Max Discharge Current",
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"bms_max_discharge_power":	{
		"name":	"BMS Max Discharge Power",
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"bms_min_cell_temp":	{
		"name":	"BMS Min Cell Temperature",
		"scale":	100,
		"type":	"status",
		"units":	"°C",
		"value":	0
	},
	"bms_min_cell_voltage":	{
		"name":	"BMS Min Cell Voltage",
		"scale":	10000,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"bms_monitor_alarms":	{
		"bit0":	"BMS DC Current Max Threshold Exceeded",
		"bit1":	"BMS DC Current Min Threshold Exceeded",
		"bit10":	"BMS SOC Min Threshold Exceeded",
		"bit11":	"BMS Cell Voltage Delta Max Threshold Exceeded",
		"bit12":	"BMS Cell Temperature Delta Max Threshold Exceeded",
		"bit13":	"BMS Number of Racks Online Below Min Threshold",
		"bit2":	"BMS Max Cell Temperature Threshold Exceeded",
		"bit3":	"BMS Max Cell Voltage Threshold Exceeded",
		"bit4":	"BMS Min Cell Temperature Threshold Exceeded",
		"bit5":	"BMS Min Cell Voltage Threshold Exceeded",
		"bit6":	"BMS State of Health Below Threshold",
		"bit7":	"BMS DC Voltage Max Threshold Exceeded",
		"bit8":	"BMS DC Voltage Min Threshold Exceeded",
		"bit9":	"BMS SOC Max Threshold Exceeded",
		"name":	"BMS Monitor Alarms",
		"type":	"bitfield",
		"value":	0
	},
	"bms_monitor_faults":	{
		"bit0":	"BMS DC Current Max Threshold Exceeded",
		"bit1":	"BMS DC Current Min Threshold Exceeded",
		"bit10":	"BMS SOC Min Threshold Exceeded",
		"bit11":	"BMS Cell Voltage Delta Max Threshold Exceeded",
		"bit12":	"BMS Cell Temperature Delta Max Threshold Exceeded",
		"bit13":	"BMS Number of Racks Online Below Min Threshold",
		"bit2":	"BMS Max Cell Temperature Threshold Exceeded",
		"bit3":	"BMS Max Cell Voltage Threshold Exceeded",
		"bit4":	"BMS Min Cell Temperature Threshold Exceeded",
		"bit5":	"BMS Min Cell Voltage Threshold Exceeded",
		"bit6":	"BMS State of Health Below Threshold",
		"bit7":	"BMS DC Voltage Max Threshold Exceeded",
		"bit8":	"BMS DC Voltage Min Threshold Exceeded",
		"bit9":	"BMS SOC Max Threshold Exceeded",
		"name":	"BMS Monitor Faults",
		"type":	"bitfield",
		"value":	0
	},
	"bms_num_racks_online":	{
		"name":	"BMS Number of Racks Online",
		"type":	"status",
		"value":	0
	},
	"bms_num_racks_total":	{
		"name":	"BMS Number of Racks Total",
		"type":	"status",
		"value":	0
	},
	"bms_open_contactors_enabled":	{
		"excludeFromFile":	true,
		"name":	"BMS Open Contactors Enabled",
		"type":	"status",
		"value":	false
	},
	"bms_soc":	{
		"name":	"BMS State of Charge (SOC)",
		"scale":	10,
		"type":	"status",
		"units":	"%",
		"value":	0
	},
	"bms_soh":	{
		"name":	"BMS State of Health (SOH)",
		"scale":	10,
		"type":	"status",
		"units":	"%",
		"value":	0
	},
	"bms_status":	{
		"excludeFromFile":	true,
		"name":	"BMS Status",
		"type":	"status",
		"value":	"INIT"
	}
}].
[3.39693s  ] [info    ] [SiteBMSContacto] SiteBMSContactorControl
[3.39735s  ] [info    ] [SiteBMSContacto] Right before reload == 1
[3.39785s  ] [info    ] [PrintAssetVar  ] 
{
  "/site/ess:bms_dc_contactor_control": {
    "value": 0,
    "note2": "2->close contactors | 3->open contactors",
    "every": 0.5,
    "offset": 0,
    "uri": "/sched/ess:SiteBMSContactorControl",
    "size": 1,
    "debug": 0,
    "name": "BMS Contactor Control Command",
    "aname": "ess",
    "type": "control",
    "note1": "Initiates BMS close and open contactors",
    "enable": "/config/pcs:enable",
    "ifChanged": false
  }
}


[3.39822s  ] [info    ] [SiteBMSContacto] reload == 1
[3.39847s  ] [info    ] [PullOffSchedule] PullOffScheduler
[3.39881s  ] [info    ] [PrintAssetVar  ] 
{
  "/site/ess:bms_dc_contactor_control": {
    "value": 0,
    "note2": "2->close contactors | 3->open contactors",
    "every": 0.5,
    "offset": 0,
    "uri": "/sched/ess:SiteBMSContactorControl",
    "size": 1,
    "debug": 0,
    "name": "BMS Contactor Control Command",
    "aname": "ess",
    "type": "control",
    "note1": "Initiates BMS close and open contactors",
    "enable": "/config/pcs:enable",
    "ifChanged": false
  }
}


[3.39979s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.40004s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.40051s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"site_bms_alarm_active":	{
		"value":	"/site/ess:bms_alarm_active",
		"vlink":	"/status/bms:IsAlarming"
	},
	"site_bms_avg_cell_temp":	{
		"value":	"/site/ess:bms_avg_cell_temp",
		"vlink":	"/status/bms:AvgCellTemp"
	},
	"site_bms_avg_cell_voltage":	{
		"value":	"/site/ess:bms_avg_cell_voltage",
		"vlink":	"/status/bms:AvgCellVoltage"
	},
	"site_bms_cell_temp_delta":	{
		"value":	"/site/ess:bms_cell_temp_delta",
		"vlink":	"/status/bms:CellTempDelta"
	},
	"site_bms_cell_voltage_delta":	{
		"value":	"/site/ess:bms_cell_voltage_delta",
		"vlink":	"/status/bms:CellVoltageDelta"
	},
	"site_bms_chargeable_energy":	{
		"value":	"/site/ess:bms_chargeable_energy",
		"vlink":	"/status/bms:ChargeableEnergy"
	},
	"site_bms_close_contactors_enabled":	{
		"value":	"/site/ess:bms_close_contactors_enabled",
		"vlink":	"/status/bms:CloseContactorsEnabled"
	},
	"site_bms_comms_ok":	{
		"value":	"/site/ess:bms_comms_ok",
		"vlink":	"/status/bms:CommsOK"
	},
	"site_bms_current_before_stop_is_ok":	{
		"value":	"/site/ess:bms_current_before_stop_is_ok",
		"vlink":	"/status/bms:CurrentBeforeStopIsOK"
	},
	"site_bms_dc_charging":	{
		"value":	"/site/ess:bms_dc_charging",
		"vlink":	"/status/bms:DCCharging"
	},
	"site_bms_dc_contactors_closed":	{
		"value":	"/site/ess:bms_dc_contactors_closed",
		"vlink":	"/status/bms:DCClosed"
	},
	"site_bms_dc_current":	{
		"value":	"/site/ess:bms_dc_current",
		"vlink":	"/status/bms:DCCurrent"
	},
	"site_bms_dc_discharging":	{
		"value":	"/site/ess:bms_dc_discharging",
		"vlink":	"/status/bms:DCDischarging"
	},
	"site_bms_dc_power":	{
		"value":	"/site/ess:bms_dc_power",
		"vlink":	"/status/bms:DCPower"
	},
	"site_bms_dc_voltage":	{
		"value":	"/site/ess:bms_dc_voltage",
		"vlink":	"/status/bms:DCVoltage"
	},
	"site_bms_dischargeable_energy":	{
		"value":	"/site/ess:bms_dischargeable_energy",
		"vlink":	"/status/bms:DischargeableEnergy"
	},
	"site_bms_fault_active":	{
		"value":	"/site/ess:bms_fault_active",
		"vlink":	"/status/bms:IsFaulted"
	},
	"site_bms_fire_fault_active":	{
		"value":	"/site/ess:bms_fire_fault_active",
		"vlink":	"/status/bms:AnyFireFaultActive"
	},
	"site_bms_max_cell_temp":	{
		"value":	"/site/ess:bms_max_cell_temp",
		"vlink":	"/status/bms:MaxCellTemp"
	},
	"site_bms_max_cell_voltage":	{
		"value":	"/site/ess:bms_max_cell_voltage",
		"vlink":	"/status/bms:MaxCellVoltage"
	},
	"site_bms_max_charge_current":	{
		"value":	"/site/ess:bms_max_charge_current",
		"vlink":	"/limits/bms:ChargeCurrentLimit"
	},
	"site_bms_max_charge_power":	{
		"value":	"/site/ess:bms_max_charge_power",
		"vlink":	"/limits/bms:ChargePowerLimit"
	},
	"site_bms_max_discharge_current":	{
		"value":	"/site/ess:bms_max_discharge_current",
		"vlink":	"/limits/bms:DischargeCurrentLimit"
	},
	"site_bms_max_discharge_power":	{
		"value":	"/site/ess:bms_max_discharge_power",
		"vlink":	"/limits/bms:DischargePowerLimit"
	},
	"site_bms_min_cell_temp":	{
		"value":	"/site/ess:bms_min_cell_temp",
		"vlink":	"/status/bms:MinCellTemp"
	},
	"site_bms_min_cell_voltage":	{
		"value":	"/site/ess:bms_min_cell_voltage",
		"vlink":	"/status/bms:MinCellVoltage"
	},
	"site_bms_num_racks_online":	{
		"value":	"/site/ess:bms_num_racks_online",
		"vlink":	"/status/bms:NumRacksOnline"
	},
	"site_bms_num_racks_total":	{
		"value":	"/site/ess:bms_num_racks_total",
		"vlink":	"/status/bms:NumRacksTotal"
	},
	"site_bms_open_contactors_enabled":	{
		"value":	"/site/ess:bms_open_contactors_enabled",
		"vlink":	"/status/bms:OpenContactorsEnabled"
	},
	"site_bms_soc":	{
		"value":	"/site/ess:bms_soc",
		"vlink":	"/status/bms:SOC"
	},
	"site_bms_soh":	{
		"value":	"/site/ess:bms_soh",
		"vlink":	"/status/bms:SOH"
	},
	"site_bms_status":	{
		"value":	"/site/ess:bms_status",
		"vlink":	"/status/bms:Status"
	}
}].
[3.40081s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_alarm_active]
[3.40101s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_alarm_active]
[3.40123s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_avg_cell_temp]
[3.40141s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_avg_cell_temp]
[3.40161s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_avg_cell_voltage]
[3.4018s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_avg_cell_voltage]
[3.40202s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_cell_temp_delta]
[3.40222s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_cell_temp_delta]
[3.40245s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_cell_voltage_delta]
[3.40262s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_cell_voltage_delta]
[3.40283s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_chargeable_energy]
[3.40304s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_chargeable_energy]
[3.40324s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_close_contactors_enabled]
[3.40342s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_close_contactors_enabled]
[3.40364s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_comms_ok]
[3.40385s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_comms_ok]
[3.4041s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_current_before_stop_is_ok]
[3.40429s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_current_before_stop_is_ok]
[3.40454s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dc_charging]
[3.40478s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dc_charging]
[3.40512s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dc_contactors_closed]
[3.40548s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dc_contactors_closed]
[3.40574s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dc_current]
[3.40594s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dc_current]
[3.40621s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dc_discharging]
[3.40647s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dc_discharging]
[3.40671s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dc_power]
[3.40694s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dc_power]
[3.40717s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dc_voltage]
[3.40742s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dc_voltage]
[3.40771s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dischargeable_energy]
[3.40793s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dischargeable_energy]
[3.40815s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_fault_active]
[3.40838s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_fault_active]
[3.40862s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_fire_fault_active]
[3.40884s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_fire_fault_active]
[3.40911s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_max_cell_temp]
[3.4093s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_max_cell_temp]
[3.40957s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_max_cell_voltage]
[3.4098s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_max_cell_voltage]
[3.41003s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_max_charge_current]
[3.41026s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_max_charge_current]
[3.41056s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_max_charge_power]
[3.4108s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_max_charge_power]
[3.41109s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_max_discharge_current]
[3.41136s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_max_discharge_current]
[3.41165s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_max_discharge_power]
[3.41185s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_max_discharge_power]
[3.41212s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_min_cell_temp]
[3.41228s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_min_cell_temp]
[3.41252s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_min_cell_voltage]
[3.41348s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_min_cell_voltage]
[3.41435s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_num_racks_online]
[3.41461s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_num_racks_online]
[3.41511s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_num_racks_total]
[3.41543s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_num_racks_total]
[3.41578s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_open_contactors_enabled]
[3.41607s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_open_contactors_enabled]
[3.41636s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_soc]
[3.41663s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_soc]
[3.41697s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_soh]
[3.41723s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_soh]
[3.41751s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_status]
[3.41785s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_status]
[3.41846s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"chargeable_energy":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/bms:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	1,
							"uri":	"/controls/bms:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"close_contactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched",
							"inValue":	true
						}]
				}]
		},
		"aname":	"bms",
		"debug":	0,
		"enabled":	false,
		"every":	0.5,
		"name":	"Close DC Contactor",
		"note":	"Enabled conditions: ![/status/bms/DCClosed] && [/assets/bms/summary/maint_mode] && ![/status/bms/IsFaulted]",
		"offset":	0,
		"scaler":	0,
		"type":	"enum_button",
		"ui_type":	"control",
		"unit":	"",
		"uri":	"/sched/bms:LocalStartBMS",
		"value":	false
	},
	"comms_ok":	{
		"value":	false
	},
	"dc_charging":	{
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_discharging":	{
		"value":	false
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"dischargeable_energy":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/summary:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"num_racks_online":	{
		"value":	0
	},
	"num_racks_total":	{
		"value":	0
	},
	"open_contactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched",
							"inValue":	true
						}]
				}]
		},
		"aname":	"bms",
		"debug":	0,
		"enabled":	false,
		"every":	0.5,
		"name":	"Open DC Contactor",
		"note":	"Enabled conditions: [/status/bms/DCClosed] && ![/status/pcs/DCClosed] && [/assets/bms/summary/maint_mode]",
		"offset":	0,
		"scaler":	0,
		"type":	"enum_button",
		"ui_type":	"control",
		"unit":	"",
		"uri":	"/sched/bms:LocalStopBMS",
		"value":	false
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[3.41909s  ] [info    ] [LogInfo        ] [/assets/bms/summary:maint_mode] received a value of [false]
[3.41993s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.42028s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.42073s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/summary:avg_cell_temp",
		"vlink":	"/status/bms:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/summary:avg_cell_voltage",
		"vlink":	"/status/bms:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/summary:cell_temp_delta",
		"vlink":	"/status/bms:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/summary:cell_voltage_delta",
		"vlink":	"/status/bms:CellVoltageDelta"
	},
	"ui_chargeable_energy":	{
		"value":	"/assets/bms/summary:chargeable_energy",
		"vlink":	"/status/bms:ChargeableEnergy"
	},
	"ui_comms_ok":	{
		"value":	"/assets/bms/summary:comms_ok",
		"vlink":	"/status/bms:CommsOK"
	},
	"ui_dc_charging":	{
		"value":	"/assets/bms/summary:dc_charging",
		"vlink":	"/status/bms:DCCharging"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/summary:dc_contactors_closed",
		"vlink":	"/status/bms:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/summary:dc_current",
		"vlink":	"/status/bms:DCCurrent"
	},
	"ui_dc_discharging":	{
		"value":	"/assets/bms/summary:dc_discharging",
		"vlink":	"/status/bms:DCDischarging"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/summary:dc_power",
		"vlink":	"/status/bms:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/summary:dc_voltage",
		"vlink":	"/status/bms:DCVoltage"
	},
	"ui_dischargeable_energy":	{
		"value":	"/assets/bms/summary:dischargeable_energy",
		"vlink":	"/status/bms:DischargeableEnergy"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/summary:max_cell_temp",
		"vlink":	"/status/bms:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/summary:max_cell_voltage",
		"vlink":	"/status/bms:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/summary:max_charge_current",
		"vlink":	"/limits/bms:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/summary:max_charge_power",
		"vlink":	"/limits/bms:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/summary:max_discharge_current",
		"vlink":	"/limits/bms:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/summary:max_discharge_power",
		"vlink":	"/limits/bms:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/summary:min_cell_temp",
		"vlink":	"/status/bms:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/summary:min_cell_voltage",
		"vlink":	"/status/bms:MinCellVoltage"
	},
	"ui_num_racks_online":	{
		"value":	"/assets/bms/summary:num_racks_online",
		"vlink":	"/status/bms:NumRacksOnline"
	},
	"ui_num_racks_total":	{
		"value":	"/assets/bms/summary:num_racks_total",
		"vlink":	"/status/bms:NumRacksTotal"
	},
	"ui_soc":	{
		"value":	"/assets/bms/summary:soc",
		"vlink":	"/status/bms:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/summary:soh",
		"vlink":	"/status/bms:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/summary:status",
		"vlink":	"/status/bms:Status"
	}
}].
[3.42107s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:avg_cell_temp]
[3.42138s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:avg_cell_temp]
[3.42168s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:avg_cell_voltage]
[3.42192s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:avg_cell_voltage]
[3.42242s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:cell_temp_delta]
[3.42274s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:cell_temp_delta]
[3.42308s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:cell_voltage_delta]
[3.4234s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:cell_voltage_delta]
[3.42387s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:chargeable_energy]
[3.42424s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:chargeable_energy]
[3.42473s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:comms_ok]
[3.42498s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:comms_ok]
[3.42537s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dc_charging]
[3.42572s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dc_charging]
[3.42599s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dc_contactors_closed]
[3.42656s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dc_contactors_closed]
[3.42715s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dc_current]
[3.42745s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dc_current]
[3.4278s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dc_discharging]
[3.42812s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dc_discharging]
[3.42854s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dc_power]
[3.42894s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dc_power]
[3.42929s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dc_voltage]
[3.42959s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dc_voltage]
[3.42994s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dischargeable_energy]
[3.43035s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dischargeable_energy]
[3.43075s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:max_cell_temp]
[3.43102s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:max_cell_temp]
[3.4314s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:max_cell_voltage]
[3.43173s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:max_cell_voltage]
[3.43208s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:max_charge_current]
[3.43247s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:max_charge_current]
[3.43277s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:max_charge_power]
[3.43298s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:max_charge_power]
[3.43333s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:max_discharge_current]
[3.43366s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:max_discharge_current]
[3.434s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:max_discharge_power]
[3.43423s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:max_discharge_power]
[3.43453s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:min_cell_temp]
[3.43477s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:min_cell_temp]
[3.43506s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:min_cell_voltage]
[3.43554s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:min_cell_voltage]
[3.43589s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:num_racks_online]
[3.43609s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:num_racks_online]
[3.43636s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:num_racks_total]
[3.43661s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:num_racks_total]
[3.43695s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:soc]
[3.43714s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:soc]
[3.43746s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:soh]
[3.43774s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:soh]
[3.43804s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:status]
[3.43832s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:status]
[3.4393s   ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [rack_1]
[3.43982s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [rack_1] parent am [bms] 
[3.44056s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [rack_1]
[3.4409s   ] [info    ] [configure_vmapS] body: {"/config/rack_1":{"AlarmDestination":"/assets/bms/rack_1:alarms","FaultDestination":"/assets/bms/rack_1:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/rack_1":{"ChargeCurrentLimit":{"value":"/limits/rack_1:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/rack_1:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/rack_1:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/rack_1:DischargePowerLimit"}},"/sched/rack_1":{"pubAssets_rack_1":{"actions":{"onSet":[{"func":[{"amap":"rack_1","func":"RunPub"}]}]},"enable":"/config/rack_1:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/rack_1)","table":"/assets/bms/rack_1","value":1},"runMonitor_rack_1":{"actions":{"onSet":[{"func":[{"amap":"rack_1","func":"RunMonitor"}]}]},"aname":"rack_1","enable":"/config/rack_1:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_1","value":1}},"/schedule/wake_monitor/rack_1":{"/status/rack_1:CellTempDelta_Calculated":{"amap":"rack_1","func":"CalculateVar"},"/status/rack_1:CellVoltageDelta_Calculated":{"amap":"rack_1","func":"CalculateVar"}},"/status/rack_1":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_1:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_1:MinCellTemp","variable2":"/status/rack_1:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_1:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_1:MinCellVoltage","variable2":"/status/rack_1:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_1:DCCurrent@EnableMaxValCheck"},{"uri":"/status/rack_1:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/rack_1:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"rack_1","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/rack_1) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"rack_1","every":1,"uri":"/sched/rack_1:pubAssets_rack_1","value":1},{"aname":"rack_1","every":0.1,"uri":"/sched/rack_1:runMonitor_rack_1","value":1},{"aname":"rack_1","every":1,"uri":"/sched/rack_1:checkInputs_rack_1","value":1}],"targav":"/system/commands:run","value":false}},"/controls/rack_1":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"rack_1","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/rack_1":{"/controls/rack_1:ClearFaults":{"amap":"rack_1","func":"HandleCmd"}},"/status/rack_1":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/rack_1:clear_faults"},{"outValue":"Clear","uri":"/alarms/rack_1:clear_alarms"}]}]},"enable":"/config/rack_1:enable","ifChanged":false,"note":"When this variable is set, /faults/rack_1:clear_faults and /alarms/rack_1:clear_alarms will be set to Clear","value":false}},"/alarms/rack_1":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"rack_1","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_1) will be reset to the normal state (defined in /config/rack_1:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/rack_1":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_1","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/rack_1) will be reset to the normal state (defined in /config/rack_1:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/rack_1":{"/status/rack_1:AnyFireFaultActive":{"amap":"rack_1","func":"CalculateVar"},"/status/rack_1:TotalAlarmCnt":{"amap":"rack_1","func":"CalculateVar"},"/status/rack_1:TotalFaultCnt":{"amap":"rack_1","func":"CalculateVar"}},"/status/rack_1":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/rack_1:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"rack_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_1:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_1:FaultCnt"}},"/components/catl_rack_1":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/rack_1:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/rack_1:DCClosed"}]}]},"enable":"/config/rack_1:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/rack_1":{"avg_cell_temp":{"value":"/components/catl_rack_1:sbmu_avg_cell_temp","vlink":"/status/rack_1:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_rack_1:sbmu_avg_cell_voltage","vlink":"/status/rack_1:AvgCellVoltage"},"dc_current":{"value":"/components/catl_rack_1:sbmu_current","vlink":"/status/rack_1:DCCurrent"},"dc_voltage":{"value":"/components/catl_rack_1:sbmu_voltage","vlink":"/status/rack_1:DCVoltage"},"max_cell_temp":{"value":"/components/catl_rack_1:sbmu_max_cell_temp","vlink":"/status/rack_1:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_rack_1:sbmu_max_cell_voltage","vlink":"/status/rack_1:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_rack_1:sbmu_min_cell_temp","vlink":"/status/rack_1:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_rack_1:sbmu_min_cell_voltage","vlink":"/status/rack_1:MinCellVoltage"},"soc":{"value":"/components/catl_rack_1:sbmu_soc","vlink":"/status/rack_1:SOC"},"soh":{"value":"/components/catl_rack_1:sbmu_soh","vlink":"/status/rack_1:SOH"}},"/assets/bms/rack_1":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/rack_1:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/rack_1:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"rack_1","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/rack_1:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/rack_1":{"ui_avg_cell_temp":{"value":"/assets/bms/rack_1:avg_cell_temp","vlink":"/status/rack_1:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/rack_1:avg_cell_voltage","vlink":"/status/rack_1:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/rack_1:cell_temp_delta","vlink":"/status/rack_1:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/rack_1:cell_voltage_delta","vlink":"/status/rack_1:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/rack_1:dc_contactors_closed","vlink":"/status/rack_1:DCClosed"},"ui_dc_current":{"value":"/assets/bms/rack_1:dc_current","vlink":"/status/rack_1:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/rack_1:dc_power","vlink":"/status/rack_1:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/rack_1:dc_voltage","vlink":"/status/rack_1:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/rack_1:max_cell_temp","vlink":"/status/rack_1:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/rack_1:max_cell_voltage","vlink":"/status/rack_1:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/rack_1:max_charge_current","vlink":"/limits/rack_1:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/rack_1:max_charge_power","vlink":"/limits/rack_1:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/rack_1:max_discharge_current","vlink":"/limits/rack_1:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/rack_1:max_discharge_power","vlink":"/limits/rack_1:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/rack_1:min_cell_temp","vlink":"/status/rack_1:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/rack_1:min_cell_voltage","vlink":"/status/rack_1:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/rack_1:soc","vlink":"/status/rack_1:SOC"},"ui_soh":{"value":"/assets/bms/rack_1:soh","vlink":"/status/rack_1:SOH"},"ui_status":{"value":"/assets/bms/rack_1:status","vlink":"/status/rack_1:Status"}}}
[3.4419s   ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.44233s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/rack_1:alarms",
	"FaultDestination":	"/assets/bms/rack_1:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[3.4427s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:alarms]
[3.44292s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:alarms]
[3.44345s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:faults]
[3.4438s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:faults]
[3.44411s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.4444s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.44461s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.44483s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.44519s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/rack_1:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/rack_1:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/rack_1:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/rack_1:DischargePowerLimit"
	}
}].
[3.44557s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_1:ChargeCurrentLimit]
[3.44593s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_1:ChargeCurrentLimit]
[3.44636s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_1:ChargePowerLimit]
[3.4466s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_1:ChargePowerLimit]
[3.44688s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_1:DischargeCurrentLimit]
[3.44712s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_1:DischargeCurrentLimit]
[3.44738s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_1:DischargePowerLimit]
[3.4476s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_1:DischargePowerLimit]
[3.44796s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_rack_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_1",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/rack_1:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/rack_1)",
		"table":	"/assets/bms/rack_1",
		"value":	1
	},
	"runMonitor_rack_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_1",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"rack_1",
		"enable":	"/config/rack_1:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_1",
		"value":	1
	}
}].
[3.4484s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_1:CellTempDelta_Calculated":	{
		"amap":	"rack_1",
		"func":	"CalculateVar"
	},
	"/status/rack_1:CellVoltageDelta_Calculated":	{
		"amap":	"rack_1",
		"func":	"CalculateVar"
	}
}].
[3.4488s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_1:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_1:MinCellTemp",
		"variable2":	"/status/rack_1:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_1:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_1:MinCellVoltage",
		"variable2":	"/status/rack_1:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_1:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/rack_1:DCCurrent@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/rack_1:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[3.44923s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.44943s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.44981s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_1",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/rack_1) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"rack_1",
				"every":	1,
				"uri":	"/sched/rack_1:pubAssets_rack_1",
				"value":	1
			}, {
				"aname":	"rack_1",
				"every":	0.1,
				"uri":	"/sched/rack_1:runMonitor_rack_1",
				"value":	1
			}, {
				"aname":	"rack_1",
				"every":	1,
				"uri":	"/sched/rack_1:checkInputs_rack_1",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[3.45021s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[3.45055s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_1:HandleCmd_ClearFaults]
[3.45076s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_1:HandleCmd_ClearFaults]
[3.45107s  ] [info    ] [HandleCmd      ] reload first run [rack_1] [/controls/rack_1:ClearFaults]  reload 0
[3.4514s   ] [info    ] [setupCmdParams ] Setting up params for [/controls/rack_1:ClearFaults]
[3.45177s  ] [info    ] [HandleCmd      ] Adding [/controls/rack_1:ClearFaults] to amap in asset [rack_1]
[3.45208s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/rack_1:ClearFaults]
[3.45244s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/rack_1:ClearFaults]
[3.45273s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/rack_1:ClearFaults":	{
		"amap":	"rack_1",
		"func":	"HandleCmd"
	}
}].
[3.45309s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/rack_1:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/rack_1:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/rack_1:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/rack_1:clear_faults and /alarms/rack_1:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[3.4535s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_1",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_1) will be reset to the normal state (defined in /config/rack_1:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[3.45409s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.45442s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.45485s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.45513s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.45551s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_1:FaultDestination]
[3.4559s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_1:FaultDestination]
[3.45626s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_1:NoFaultMsg]
[3.4566s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_1:NoFaultMsg]
[3.45691s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_1:FaultCnt]
[3.45719s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_1:FaultCnt]
[3.45761s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_1:AlarmDestination]
[3.45785s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_1:AlarmDestination]
[3.4584s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_1:NoAlarmMsg]
[3.45894s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_1:NoAlarmMsg]
[3.45926s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_1:AlarmCnt]
[3.45965s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_1:AlarmCnt]
[3.46007s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_1",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/rack_1) will be reset to the normal state (defined in /config/rack_1:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[3.46038s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.4606s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.46093s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.46139s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.46173s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_1:AnyFireFaultActive":	{
		"amap":	"rack_1",
		"func":	"CalculateVar"
	},
	"/status/rack_1:TotalAlarmCnt":	{
		"amap":	"rack_1",
		"func":	"CalculateVar"
	},
	"/status/rack_1:TotalFaultCnt":	{
		"amap":	"rack_1",
		"func":	"CalculateVar"
	}
}].
[3.46216s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/rack_1:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_1:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_1:FaultCnt"
	}
}].
[3.46287s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sbmu_master_negative":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/rack_1:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/rack_1:DCClosed"
						}]
				}]
		},
		"enable":	"/config/rack_1:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[3.46339s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"value":	"/components/catl_rack_1:sbmu_avg_cell_temp",
		"vlink":	"/status/rack_1:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_rack_1:sbmu_avg_cell_voltage",
		"vlink":	"/status/rack_1:AvgCellVoltage"
	},
	"dc_current":	{
		"value":	"/components/catl_rack_1:sbmu_current",
		"vlink":	"/status/rack_1:DCCurrent"
	},
	"dc_voltage":	{
		"value":	"/components/catl_rack_1:sbmu_voltage",
		"vlink":	"/status/rack_1:DCVoltage"
	},
	"max_cell_temp":	{
		"value":	"/components/catl_rack_1:sbmu_max_cell_temp",
		"vlink":	"/status/rack_1:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_rack_1:sbmu_max_cell_voltage",
		"vlink":	"/status/rack_1:MaxCellVoltage"
	},
	"min_cell_temp":	{
		"value":	"/components/catl_rack_1:sbmu_min_cell_temp",
		"vlink":	"/status/rack_1:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_rack_1:sbmu_min_cell_voltage",
		"vlink":	"/status/rack_1:MinCellVoltage"
	},
	"soc":	{
		"value":	"/components/catl_rack_1:sbmu_soc",
		"vlink":	"/status/rack_1:SOC"
	},
	"soh":	{
		"value":	"/components/catl_rack_1:sbmu_soh",
		"vlink":	"/status/rack_1:SOH"
	}
}].
[3.46374s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_avg_cell_temp]
[3.46403s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_avg_cell_temp]
[3.46452s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_avg_cell_voltage]
[3.46478s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_avg_cell_voltage]
[3.46506s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_current]
[3.46537s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_current]
[3.46564s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_voltage]
[3.46599s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_voltage]
[3.46638s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_max_cell_temp]
[3.46667s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_max_cell_temp]
[3.46697s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_max_cell_voltage]
[3.46716s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_max_cell_voltage]
[3.46748s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_min_cell_temp]
[3.46778s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_min_cell_temp]
[3.46807s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_min_cell_voltage]
[3.46835s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_min_cell_voltage]
[3.46867s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_soc]
[3.46894s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_soc]
[3.46927s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_soh]
[3.46959s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_soh]
[3.47011s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/rack_1:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/rack_1:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/rack_1:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[3.47064s  ] [info    ] [LogInfo        ] [/assets/bms/rack_1:maint_mode] received a value of [false]
[3.47113s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.47136s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.47195s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/rack_1:avg_cell_temp",
		"vlink":	"/status/rack_1:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/rack_1:avg_cell_voltage",
		"vlink":	"/status/rack_1:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/rack_1:cell_temp_delta",
		"vlink":	"/status/rack_1:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/rack_1:cell_voltage_delta",
		"vlink":	"/status/rack_1:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/rack_1:dc_contactors_closed",
		"vlink":	"/status/rack_1:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/rack_1:dc_current",
		"vlink":	"/status/rack_1:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/rack_1:dc_power",
		"vlink":	"/status/rack_1:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/rack_1:dc_voltage",
		"vlink":	"/status/rack_1:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/rack_1:max_cell_temp",
		"vlink":	"/status/rack_1:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/rack_1:max_cell_voltage",
		"vlink":	"/status/rack_1:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/rack_1:max_charge_current",
		"vlink":	"/limits/rack_1:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/rack_1:max_charge_power",
		"vlink":	"/limits/rack_1:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/rack_1:max_discharge_current",
		"vlink":	"/limits/rack_1:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/rack_1:max_discharge_power",
		"vlink":	"/limits/rack_1:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/rack_1:min_cell_temp",
		"vlink":	"/status/rack_1:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/rack_1:min_cell_voltage",
		"vlink":	"/status/rack_1:MinCellVoltage"
	},
	"ui_soc":	{
		"value":	"/assets/bms/rack_1:soc",
		"vlink":	"/status/rack_1:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/rack_1:soh",
		"vlink":	"/status/rack_1:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/rack_1:status",
		"vlink":	"/status/rack_1:Status"
	}
}].
[3.47228s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:avg_cell_temp]
[3.47253s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:avg_cell_temp]
[3.47288s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:avg_cell_voltage]
[3.47319s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:avg_cell_voltage]
[3.47354s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:cell_temp_delta]
[3.47387s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:cell_temp_delta]
[3.47419s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:cell_voltage_delta]
[3.47452s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:cell_voltage_delta]
[3.4748s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:dc_contactors_closed]
[3.4751s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:dc_contactors_closed]
[3.47535s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:dc_current]
[3.47557s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:dc_current]
[3.4758s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:dc_power]
[3.47606s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:dc_power]
[3.47639s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:dc_voltage]
[3.4767s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:dc_voltage]
[3.47709s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:max_cell_temp]
[3.47747s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:max_cell_temp]
[3.47791s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:max_cell_voltage]
[3.47823s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:max_cell_voltage]
[3.47871s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:max_charge_current]
[3.47928s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:max_charge_current]
[3.47958s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:max_charge_power]
[3.47987s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:max_charge_power]
[3.48025s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:max_discharge_current]
[3.48058s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:max_discharge_current]
[3.48085s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:max_discharge_power]
[3.48121s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:max_discharge_power]
[3.48154s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:min_cell_temp]
[3.48177s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:min_cell_temp]
[3.48203s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:min_cell_voltage]
[3.48223s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:min_cell_voltage]
[3.48255s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:soc]
[3.48285s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:soc]
[3.48319s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:soh]
[3.48347s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:soh]
[3.48373s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:status]
[3.48398s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:status]
[3.48465s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [rack_2]
[3.48489s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [rack_2] parent am [bms] 
[3.48551s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [rack_2]
[3.48583s  ] [info    ] [configure_vmapS] body: {"/config/rack_2":{"AlarmDestination":"/assets/bms/rack_2:alarms","FaultDestination":"/assets/bms/rack_2:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/rack_2":{"ChargeCurrentLimit":{"value":"/limits/rack_2:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/rack_2:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/rack_2:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/rack_2:DischargePowerLimit"}},"/sched/rack_2":{"pubAssets_rack_2":{"actions":{"onSet":[{"func":[{"amap":"rack_2","func":"RunPub"}]}]},"enable":"/config/rack_2:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/rack_2)","table":"/assets/bms/rack_2","value":1},"runMonitor_rack_2":{"actions":{"onSet":[{"func":[{"amap":"rack_2","func":"RunMonitor"}]}]},"aname":"rack_2","enable":"/config/rack_2:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_2","value":1}},"/schedule/wake_monitor/rack_2":{"/status/rack_2:CellTempDelta_Calculated":{"amap":"rack_2","func":"CalculateVar"},"/status/rack_2:CellVoltageDelta_Calculated":{"amap":"rack_2","func":"CalculateVar"}},"/status/rack_2":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_2:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_2:MinCellTemp","variable2":"/status/rack_2:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_2:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_2:MinCellVoltage","variable2":"/status/rack_2:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_2:DCCurrent@EnableMaxValCheck"},{"uri":"/status/rack_2:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/rack_2:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"rack_2","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/rack_2) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"rack_2","every":1,"uri":"/sched/rack_2:pubAssets_rack_2","value":1},{"aname":"rack_2","every":0.1,"uri":"/sched/rack_2:runMonitor_rack_2","value":1},{"aname":"rack_2","every":1,"uri":"/sched/rack_2:checkInputs_rack_2","value":1}],"targav":"/system/commands:run","value":false}},"/controls/rack_2":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"rack_2","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/rack_2":{"/controls/rack_2:ClearFaults":{"amap":"rack_2","func":"HandleCmd"}},"/status/rack_2":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/rack_2:clear_faults"},{"outValue":"Clear","uri":"/alarms/rack_2:clear_alarms"}]}]},"enable":"/config/rack_2:enable","ifChanged":false,"note":"When this variable is set, /faults/rack_2:clear_faults and /alarms/rack_2:clear_alarms will be set to Clear","value":false}},"/alarms/rack_2":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"rack_2","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_2) will be reset to the normal state (defined in /config/rack_2:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/rack_2":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_2","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/rack_2) will be reset to the normal state (defined in /config/rack_2:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/rack_2":{"/status/rack_2:AnyFireFaultActive":{"amap":"rack_2","func":"CalculateVar"},"/status/rack_2:TotalAlarmCnt":{"amap":"rack_2","func":"CalculateVar"},"/status/rack_2:TotalFaultCnt":{"amap":"rack_2","func":"CalculateVar"}},"/status/rack_2":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/rack_2:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"rack_2","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_2:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_2:FaultCnt"}},"/components/catl_rack_2":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/rack_2:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/rack_2:DCClosed"}]}]},"enable":"/config/rack_2:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/rack_2":{"avg_cell_temp":{"value":"/components/catl_rack_2:sbmu_avg_cell_temp","vlink":"/status/rack_2:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_rack_2:sbmu_avg_cell_voltage","vlink":"/status/rack_2:AvgCellVoltage"},"dc_current":{"value":"/components/catl_rack_2:sbmu_current","vlink":"/status/rack_2:DCCurrent"},"dc_voltage":{"value":"/components/catl_rack_2:sbmu_voltage","vlink":"/status/rack_2:DCVoltage"},"max_cell_temp":{"value":"/components/catl_rack_2:sbmu_max_cell_temp","vlink":"/status/rack_2:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_rack_2:sbmu_max_cell_voltage","vlink":"/status/rack_2:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_rack_2:sbmu_min_cell_temp","vlink":"/status/rack_2:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_rack_2:sbmu_min_cell_voltage","vlink":"/status/rack_2:MinCellVoltage"},"soc":{"value":"/components/catl_rack_2:sbmu_soc","vlink":"/status/rack_2:SOC"},"soh":{"value":"/components/catl_rack_2:sbmu_soh","vlink":"/status/rack_2:SOH"}},"/assets/bms/rack_2":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_2","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/rack_2:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/rack_2:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"rack_2","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/rack_2:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/rack_2":{"ui_avg_cell_temp":{"value":"/assets/bms/rack_2:avg_cell_temp","vlink":"/status/rack_2:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/rack_2:avg_cell_voltage","vlink":"/status/rack_2:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/rack_2:cell_temp_delta","vlink":"/status/rack_2:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/rack_2:cell_voltage_delta","vlink":"/status/rack_2:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/rack_2:dc_contactors_closed","vlink":"/status/rack_2:DCClosed"},"ui_dc_current":{"value":"/assets/bms/rack_2:dc_current","vlink":"/status/rack_2:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/rack_2:dc_power","vlink":"/status/rack_2:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/rack_2:dc_voltage","vlink":"/status/rack_2:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/rack_2:max_cell_temp","vlink":"/status/rack_2:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/rack_2:max_cell_voltage","vlink":"/status/rack_2:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/rack_2:max_charge_current","vlink":"/limits/rack_2:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/rack_2:max_charge_power","vlink":"/limits/rack_2:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/rack_2:max_discharge_current","vlink":"/limits/rack_2:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/rack_2:max_discharge_power","vlink":"/limits/rack_2:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/rack_2:min_cell_temp","vlink":"/status/rack_2:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/rack_2:min_cell_voltage","vlink":"/status/rack_2:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/rack_2:soc","vlink":"/status/rack_2:SOC"},"ui_soh":{"value":"/assets/bms/rack_2:soh","vlink":"/status/rack_2:SOH"},"ui_status":{"value":"/assets/bms/rack_2:status","vlink":"/status/rack_2:Status"}}}
[3.48789s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.48952s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/rack_2:alarms",
	"FaultDestination":	"/assets/bms/rack_2:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[3.51965s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:alarms]
[3.52084s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:alarms]
[3.52467s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:faults]
[3.53056s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:faults]
[3.53275s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.53661s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.54727s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.54793s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.5486s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/rack_2:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/rack_2:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/rack_2:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/rack_2:DischargePowerLimit"
	}
}].
[3.54893s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_2:ChargeCurrentLimit]
[3.54926s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_2:ChargeCurrentLimit]
[3.54971s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_2:ChargePowerLimit]
[3.55715s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_2:ChargePowerLimit]
[3.55932s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_2:DischargeCurrentLimit]
[3.55975s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_2:DischargeCurrentLimit]
[3.56011s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_2:DischargePowerLimit]
[3.56033s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_2:DischargePowerLimit]
[3.56069s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_rack_2":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_2",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/rack_2:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/rack_2)",
		"table":	"/assets/bms/rack_2",
		"value":	1
	},
	"runMonitor_rack_2":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_2",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"rack_2",
		"enable":	"/config/rack_2:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_2",
		"value":	1
	}
}].
[3.56112s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_2:CellTempDelta_Calculated":	{
		"amap":	"rack_2",
		"func":	"CalculateVar"
	},
	"/status/rack_2:CellVoltageDelta_Calculated":	{
		"amap":	"rack_2",
		"func":	"CalculateVar"
	}
}].
[3.56154s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_2:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_2:MinCellTemp",
		"variable2":	"/status/rack_2:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_2:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_2:MinCellVoltage",
		"variable2":	"/status/rack_2:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_2:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/rack_2:DCCurrent@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/rack_2:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[3.56199s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.56224s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.56256s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_2",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/rack_2) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"rack_2",
				"every":	1,
				"uri":	"/sched/rack_2:pubAssets_rack_2",
				"value":	1
			}, {
				"aname":	"rack_2",
				"every":	0.1,
				"uri":	"/sched/rack_2:runMonitor_rack_2",
				"value":	1
			}, {
				"aname":	"rack_2",
				"every":	1,
				"uri":	"/sched/rack_2:checkInputs_rack_2",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[3.56297s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_2",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[3.56329s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_2:HandleCmd_ClearFaults]
[3.56347s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_2:HandleCmd_ClearFaults]
[3.56387s  ] [info    ] [HandleCmd      ] reload first run [rack_2] [/controls/rack_2:ClearFaults]  reload 0
[3.56426s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/rack_2:ClearFaults]
[3.56464s  ] [info    ] [HandleCmd      ] Adding [/controls/rack_2:ClearFaults] to amap in asset [rack_2]
[3.56494s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/rack_2:ClearFaults]
[3.56532s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/rack_2:ClearFaults]
[3.57053s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/rack_2:ClearFaults":	{
		"amap":	"rack_2",
		"func":	"HandleCmd"
	}
}].
[3.57205s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/rack_2:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/rack_2:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/rack_2:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/rack_2:clear_faults and /alarms/rack_2:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[3.57792s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_2",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_2) will be reset to the normal state (defined in /config/rack_2:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[3.579s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.57967s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.58024s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.58065s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.58113s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_2:FaultDestination]
[3.58195s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_2:FaultDestination]
[3.58243s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_2:NoFaultMsg]
[3.58293s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_2:NoFaultMsg]
[3.58498s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_2:FaultCnt]
[3.58537s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_2:FaultCnt]
[3.58596s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_2:AlarmDestination]
[3.58638s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_2:AlarmDestination]
[3.58685s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_2:NoAlarmMsg]
[3.58724s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_2:NoAlarmMsg]
[3.5878s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_2:AlarmCnt]
[3.58826s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_2:AlarmCnt]
[3.5892s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_2",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/rack_2) will be reset to the normal state (defined in /config/rack_2:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[3.58967s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.59016s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.5912s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.59161s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.592s    ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_2:AnyFireFaultActive":	{
		"amap":	"rack_2",
		"func":	"CalculateVar"
	},
	"/status/rack_2:TotalAlarmCnt":	{
		"amap":	"rack_2",
		"func":	"CalculateVar"
	},
	"/status/rack_2:TotalFaultCnt":	{
		"amap":	"rack_2",
		"func":	"CalculateVar"
	}
}].
[3.59245s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/rack_2:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_2",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_2:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_2:FaultCnt"
	}
}].
[3.59368s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sbmu_master_negative":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/rack_2:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/rack_2:DCClosed"
						}]
				}]
		},
		"enable":	"/config/rack_2:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[3.59423s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"value":	"/components/catl_rack_2:sbmu_avg_cell_temp",
		"vlink":	"/status/rack_2:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_rack_2:sbmu_avg_cell_voltage",
		"vlink":	"/status/rack_2:AvgCellVoltage"
	},
	"dc_current":	{
		"value":	"/components/catl_rack_2:sbmu_current",
		"vlink":	"/status/rack_2:DCCurrent"
	},
	"dc_voltage":	{
		"value":	"/components/catl_rack_2:sbmu_voltage",
		"vlink":	"/status/rack_2:DCVoltage"
	},
	"max_cell_temp":	{
		"value":	"/components/catl_rack_2:sbmu_max_cell_temp",
		"vlink":	"/status/rack_2:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_rack_2:sbmu_max_cell_voltage",
		"vlink":	"/status/rack_2:MaxCellVoltage"
	},
	"min_cell_temp":	{
		"value":	"/components/catl_rack_2:sbmu_min_cell_temp",
		"vlink":	"/status/rack_2:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_rack_2:sbmu_min_cell_voltage",
		"vlink":	"/status/rack_2:MinCellVoltage"
	},
	"soc":	{
		"value":	"/components/catl_rack_2:sbmu_soc",
		"vlink":	"/status/rack_2:SOC"
	},
	"soh":	{
		"value":	"/components/catl_rack_2:sbmu_soh",
		"vlink":	"/status/rack_2:SOH"
	}
}].
[3.5947s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_avg_cell_temp]
[3.59515s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_avg_cell_temp]
[3.59556s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_avg_cell_voltage]
[3.59589s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_avg_cell_voltage]
[3.59637s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_current]
[3.59689s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_current]
[3.59727s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_voltage]
[3.59757s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_voltage]
[3.59789s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_max_cell_temp]
[3.59816s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_max_cell_temp]
[3.59855s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_max_cell_voltage]
[3.59879s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_max_cell_voltage]
[3.59921s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_min_cell_temp]
[3.59961s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_min_cell_temp]
[3.60001s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_min_cell_voltage]
[3.60021s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_min_cell_voltage]
[3.6005s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_soc]
[3.60108s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_soc]
[3.60133s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_soh]
[3.60162s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_soh]
[3.60224s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_2",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/rack_2:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/rack_2:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_2",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/rack_2:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[3.60381s  ] [info    ] [LogInfo        ] [/assets/bms/rack_2:maint_mode] received a value of [false]
[3.60458s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.60496s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.60561s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/rack_2:avg_cell_temp",
		"vlink":	"/status/rack_2:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/rack_2:avg_cell_voltage",
		"vlink":	"/status/rack_2:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/rack_2:cell_temp_delta",
		"vlink":	"/status/rack_2:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/rack_2:cell_voltage_delta",
		"vlink":	"/status/rack_2:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/rack_2:dc_contactors_closed",
		"vlink":	"/status/rack_2:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/rack_2:dc_current",
		"vlink":	"/status/rack_2:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/rack_2:dc_power",
		"vlink":	"/status/rack_2:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/rack_2:dc_voltage",
		"vlink":	"/status/rack_2:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/rack_2:max_cell_temp",
		"vlink":	"/status/rack_2:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/rack_2:max_cell_voltage",
		"vlink":	"/status/rack_2:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/rack_2:max_charge_current",
		"vlink":	"/limits/rack_2:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/rack_2:max_charge_power",
		"vlink":	"/limits/rack_2:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/rack_2:max_discharge_current",
		"vlink":	"/limits/rack_2:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/rack_2:max_discharge_power",
		"vlink":	"/limits/rack_2:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/rack_2:min_cell_temp",
		"vlink":	"/status/rack_2:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/rack_2:min_cell_voltage",
		"vlink":	"/status/rack_2:MinCellVoltage"
	},
	"ui_soc":	{
		"value":	"/assets/bms/rack_2:soc",
		"vlink":	"/status/rack_2:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/rack_2:soh",
		"vlink":	"/status/rack_2:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/rack_2:status",
		"vlink":	"/status/rack_2:Status"
	}
}].
[3.60617s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:avg_cell_temp]
[3.60649s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:avg_cell_temp]
[3.60679s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:avg_cell_voltage]
[3.60703s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:avg_cell_voltage]
[3.60731s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:cell_temp_delta]
[3.60754s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:cell_temp_delta]
[3.60775s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:cell_voltage_delta]
[3.60798s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:cell_voltage_delta]
[3.60823s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:dc_contactors_closed]
[3.6084s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:dc_contactors_closed]
[3.6086s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:dc_current]
[3.6088s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:dc_current]
[3.60901s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:dc_power]
[3.60918s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:dc_power]
[3.6094s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:dc_voltage]
[3.60956s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:dc_voltage]
[3.60977s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:max_cell_temp]
[3.60993s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:max_cell_temp]
[3.61009s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:max_cell_voltage]
[3.61025s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:max_cell_voltage]
[3.61046s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:max_charge_current]
[3.61061s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:max_charge_current]
[3.61079s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:max_charge_power]
[3.61096s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:max_charge_power]
[3.61111s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:max_discharge_current]
[3.61126s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:max_discharge_current]
[3.61147s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:max_discharge_power]
[3.61164s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:max_discharge_power]
[3.61186s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:min_cell_temp]
[3.61213s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:min_cell_temp]
[3.61244s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:min_cell_voltage]
[3.61267s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:min_cell_voltage]
[3.61291s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:soc]
[3.61311s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:soc]
[3.61331s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:soh]
[3.61352s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:soh]
[3.6139s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:status]
[3.61411s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:status]
[3.61476s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [rack_3]
[3.615s    ] [info    ] [setVecAmAi     ]  ainame Setting ai  [rack_3] parent am [bms] 
[3.61567s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [rack_3]
[3.616s    ] [info    ] [configure_vmapS] body: {"/config/rack_3":{"AlarmDestination":"/assets/bms/rack_3:alarms","FaultDestination":"/assets/bms/rack_3:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/rack_3":{"ChargeCurrentLimit":{"value":"/limits/rack_3:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/rack_3:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/rack_3:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/rack_3:DischargePowerLimit"}},"/sched/rack_3":{"pubAssets_rack_3":{"actions":{"onSet":[{"func":[{"amap":"rack_3","func":"RunPub"}]}]},"enable":"/config/rack_3:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/rack_3)","table":"/assets/bms/rack_3","value":1},"runMonitor_rack_3":{"actions":{"onSet":[{"func":[{"amap":"rack_3","func":"RunMonitor"}]}]},"aname":"rack_3","enable":"/config/rack_3:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_3","value":1}},"/schedule/wake_monitor/rack_3":{"/status/rack_3:CellTempDelta_Calculated":{"amap":"rack_3","func":"CalculateVar"},"/status/rack_3:CellVoltageDelta_Calculated":{"amap":"rack_3","func":"CalculateVar"}},"/status/rack_3":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_3:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_3:MinCellTemp","variable2":"/status/rack_3:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_3:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_3:MinCellVoltage","variable2":"/status/rack_3:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_3:DCCurrent@EnableMaxValCheck"},{"uri":"/status/rack_3:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/rack_3:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"rack_3","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/rack_3) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"rack_3","every":1,"uri":"/sched/rack_3:pubAssets_rack_3","value":1},{"aname":"rack_3","every":0.1,"uri":"/sched/rack_3:runMonitor_rack_3","value":1},{"aname":"rack_3","every":1,"uri":"/sched/rack_3:checkInputs_rack_3","value":1}],"targav":"/system/commands:run","value":false}},"/controls/rack_3":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"rack_3","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/rack_3":{"/controls/rack_3:ClearFaults":{"amap":"rack_3","func":"HandleCmd"}},"/status/rack_3":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/rack_3:clear_faults"},{"outValue":"Clear","uri":"/alarms/rack_3:clear_alarms"}]}]},"enable":"/config/rack_3:enable","ifChanged":false,"note":"When this variable is set, /faults/rack_3:clear_faults and /alarms/rack_3:clear_alarms will be set to Clear","value":false}},"/alarms/rack_3":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"rack_3","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_3) will be reset to the normal state (defined in /config/rack_3:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/rack_3":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_3","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/rack_3) will be reset to the normal state (defined in /config/rack_3:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/rack_3":{"/status/rack_3:AnyFireFaultActive":{"amap":"rack_3","func":"CalculateVar"},"/status/rack_3:TotalAlarmCnt":{"amap":"rack_3","func":"CalculateVar"},"/status/rack_3:TotalFaultCnt":{"amap":"rack_3","func":"CalculateVar"}},"/status/rack_3":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/rack_3:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"rack_3","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_3:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_3:FaultCnt"}},"/components/catl_rack_3":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/rack_3:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/rack_3:DCClosed"}]}]},"enable":"/config/rack_3:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/rack_3":{"avg_cell_temp":{"value":"/components/catl_rack_3:sbmu_avg_cell_temp","vlink":"/status/rack_3:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_rack_3:sbmu_avg_cell_voltage","vlink":"/status/rack_3:AvgCellVoltage"},"dc_current":{"value":"/components/catl_rack_3:sbmu_current","vlink":"/status/rack_3:DCCurrent"},"dc_voltage":{"value":"/components/catl_rack_3:sbmu_voltage","vlink":"/status/rack_3:DCVoltage"},"max_cell_temp":{"value":"/components/catl_rack_3:sbmu_max_cell_temp","vlink":"/status/rack_3:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_rack_3:sbmu_max_cell_voltage","vlink":"/status/rack_3:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_rack_3:sbmu_min_cell_temp","vlink":"/status/rack_3:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_rack_3:sbmu_min_cell_voltage","vlink":"/status/rack_3:MinCellVoltage"},"soc":{"value":"/components/catl_rack_3:sbmu_soc","vlink":"/status/rack_3:SOC"},"soh":{"value":"/components/catl_rack_3:sbmu_soh","vlink":"/status/rack_3:SOH"}},"/assets/bms/rack_3":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_3","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/rack_3:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/rack_3:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"rack_3","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/rack_3:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/rack_3":{"ui_avg_cell_temp":{"value":"/assets/bms/rack_3:avg_cell_temp","vlink":"/status/rack_3:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/rack_3:avg_cell_voltage","vlink":"/status/rack_3:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/rack_3:cell_temp_delta","vlink":"/status/rack_3:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/rack_3:cell_voltage_delta","vlink":"/status/rack_3:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/rack_3:dc_contactors_closed","vlink":"/status/rack_3:DCClosed"},"ui_dc_current":{"value":"/assets/bms/rack_3:dc_current","vlink":"/status/rack_3:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/rack_3:dc_power","vlink":"/status/rack_3:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/rack_3:dc_voltage","vlink":"/status/rack_3:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/rack_3:max_cell_temp","vlink":"/status/rack_3:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/rack_3:max_cell_voltage","vlink":"/status/rack_3:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/rack_3:max_charge_current","vlink":"/limits/rack_3:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/rack_3:max_charge_power","vlink":"/limits/rack_3:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/rack_3:max_discharge_current","vlink":"/limits/rack_3:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/rack_3:max_discharge_power","vlink":"/limits/rack_3:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/rack_3:min_cell_temp","vlink":"/status/rack_3:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/rack_3:min_cell_voltage","vlink":"/status/rack_3:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/rack_3:soc","vlink":"/status/rack_3:SOC"},"ui_soh":{"value":"/assets/bms/rack_3:soh","vlink":"/status/rack_3:SOH"},"ui_status":{"value":"/assets/bms/rack_3:status","vlink":"/status/rack_3:Status"}}}
[3.61737s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.61769s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/rack_3:alarms",
	"FaultDestination":	"/assets/bms/rack_3:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[3.61791s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:alarms]
[3.61819s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:alarms]
[3.61837s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:faults]
[3.61865s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:faults]
[3.61882s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.61913s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.61931s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.61962s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.61984s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/rack_3:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/rack_3:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/rack_3:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/rack_3:DischargePowerLimit"
	}
}].
[3.62021s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_3:ChargeCurrentLimit]
[3.62044s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_3:ChargeCurrentLimit]
[3.62072s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_3:ChargePowerLimit]
[3.62095s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_3:ChargePowerLimit]
[3.62118s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_3:DischargeCurrentLimit]
[3.6214s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_3:DischargeCurrentLimit]
[3.62188s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_3:DischargePowerLimit]
[3.62225s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_3:DischargePowerLimit]
[3.62264s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_rack_3":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_3",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/rack_3:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/rack_3)",
		"table":	"/assets/bms/rack_3",
		"value":	1
	},
	"runMonitor_rack_3":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_3",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"rack_3",
		"enable":	"/config/rack_3:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_3",
		"value":	1
	}
}].
[3.62304s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_3:CellTempDelta_Calculated":	{
		"amap":	"rack_3",
		"func":	"CalculateVar"
	},
	"/status/rack_3:CellVoltageDelta_Calculated":	{
		"amap":	"rack_3",
		"func":	"CalculateVar"
	}
}].
[3.62346s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_3:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_3:MinCellTemp",
		"variable2":	"/status/rack_3:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_3:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_3:MinCellVoltage",
		"variable2":	"/status/rack_3:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_3:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/rack_3:DCCurrent@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/rack_3:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[3.62406s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.62425s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.62449s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_3",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/rack_3) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"rack_3",
				"every":	1,
				"uri":	"/sched/rack_3:pubAssets_rack_3",
				"value":	1
			}, {
				"aname":	"rack_3",
				"every":	0.1,
				"uri":	"/sched/rack_3:runMonitor_rack_3",
				"value":	1
			}, {
				"aname":	"rack_3",
				"every":	1,
				"uri":	"/sched/rack_3:checkInputs_rack_3",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[3.62485s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_3",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[3.62531s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_3:HandleCmd_ClearFaults]
[3.62566s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_3:HandleCmd_ClearFaults]
[3.62598s  ] [info    ] [HandleCmd      ] reload first run [rack_3] [/controls/rack_3:ClearFaults]  reload 0
[3.62628s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/rack_3:ClearFaults]
[3.62667s  ] [info    ] [HandleCmd      ] Adding [/controls/rack_3:ClearFaults] to amap in asset [rack_3]
[3.62694s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/rack_3:ClearFaults]
[3.6272s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/rack_3:ClearFaults]
[3.6275s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/rack_3:ClearFaults":	{
		"amap":	"rack_3",
		"func":	"HandleCmd"
	}
}].
[3.62781s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/rack_3:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/rack_3:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/rack_3:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/rack_3:clear_faults and /alarms/rack_3:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[3.62824s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_3",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_3) will be reset to the normal state (defined in /config/rack_3:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[3.62845s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.62863s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.62881s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.62896s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.62915s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_3:FaultDestination]
[3.62928s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_3:FaultDestination]
[3.62944s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_3:NoFaultMsg]
[3.62965s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_3:NoFaultMsg]
[3.62981s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_3:FaultCnt]
[3.62998s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_3:FaultCnt]
[3.6302s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_3:AlarmDestination]
[3.6304s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_3:AlarmDestination]
[3.63057s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_3:NoAlarmMsg]
[3.63073s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_3:NoAlarmMsg]
[3.63087s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_3:AlarmCnt]
[3.63102s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_3:AlarmCnt]
[3.63127s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_3",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/rack_3) will be reset to the normal state (defined in /config/rack_3:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[3.63151s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.63167s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.63185s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.63199s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.63224s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_3:AnyFireFaultActive":	{
		"amap":	"rack_3",
		"func":	"CalculateVar"
	},
	"/status/rack_3:TotalAlarmCnt":	{
		"amap":	"rack_3",
		"func":	"CalculateVar"
	},
	"/status/rack_3:TotalFaultCnt":	{
		"amap":	"rack_3",
		"func":	"CalculateVar"
	}
}].
[3.63253s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/rack_3:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_3",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_3:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_3:FaultCnt"
	}
}].
[3.63289s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sbmu_master_negative":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/rack_3:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/rack_3:DCClosed"
						}]
				}]
		},
		"enable":	"/config/rack_3:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[3.63316s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"value":	"/components/catl_rack_3:sbmu_avg_cell_temp",
		"vlink":	"/status/rack_3:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_rack_3:sbmu_avg_cell_voltage",
		"vlink":	"/status/rack_3:AvgCellVoltage"
	},
	"dc_current":	{
		"value":	"/components/catl_rack_3:sbmu_current",
		"vlink":	"/status/rack_3:DCCurrent"
	},
	"dc_voltage":	{
		"value":	"/components/catl_rack_3:sbmu_voltage",
		"vlink":	"/status/rack_3:DCVoltage"
	},
	"max_cell_temp":	{
		"value":	"/components/catl_rack_3:sbmu_max_cell_temp",
		"vlink":	"/status/rack_3:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_rack_3:sbmu_max_cell_voltage",
		"vlink":	"/status/rack_3:MaxCellVoltage"
	},
	"min_cell_temp":	{
		"value":	"/components/catl_rack_3:sbmu_min_cell_temp",
		"vlink":	"/status/rack_3:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_rack_3:sbmu_min_cell_voltage",
		"vlink":	"/status/rack_3:MinCellVoltage"
	},
	"soc":	{
		"value":	"/components/catl_rack_3:sbmu_soc",
		"vlink":	"/status/rack_3:SOC"
	},
	"soh":	{
		"value":	"/components/catl_rack_3:sbmu_soh",
		"vlink":	"/status/rack_3:SOH"
	}
}].
[3.63338s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_avg_cell_temp]
[3.63355s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_avg_cell_temp]
[3.63377s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_avg_cell_voltage]
[3.634s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_avg_cell_voltage]
[3.63414s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_current]
[3.63431s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_current]
[3.63451s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_voltage]
[3.63471s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_voltage]
[3.63487s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_max_cell_temp]
[3.63504s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_max_cell_temp]
[3.63523s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_max_cell_voltage]
[3.63536s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_max_cell_voltage]
[3.63553s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_min_cell_temp]
[3.63569s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_min_cell_temp]
[3.63584s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_min_cell_voltage]
[3.63599s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_min_cell_voltage]
[3.63617s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_soc]
[3.63632s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_soc]
[3.63651s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_soh]
[3.63667s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_soh]
[3.63703s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_3",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/rack_3:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/rack_3:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_3",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/rack_3:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[3.63757s  ] [info    ] [LogInfo        ] [/assets/bms/rack_3:maint_mode] received a value of [false]
[3.63799s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.63827s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.63863s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/rack_3:avg_cell_temp",
		"vlink":	"/status/rack_3:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/rack_3:avg_cell_voltage",
		"vlink":	"/status/rack_3:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/rack_3:cell_temp_delta",
		"vlink":	"/status/rack_3:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/rack_3:cell_voltage_delta",
		"vlink":	"/status/rack_3:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/rack_3:dc_contactors_closed",
		"vlink":	"/status/rack_3:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/rack_3:dc_current",
		"vlink":	"/status/rack_3:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/rack_3:dc_power",
		"vlink":	"/status/rack_3:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/rack_3:dc_voltage",
		"vlink":	"/status/rack_3:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/rack_3:max_cell_temp",
		"vlink":	"/status/rack_3:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/rack_3:max_cell_voltage",
		"vlink":	"/status/rack_3:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/rack_3:max_charge_current",
		"vlink":	"/limits/rack_3:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/rack_3:max_charge_power",
		"vlink":	"/limits/rack_3:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/rack_3:max_discharge_current",
		"vlink":	"/limits/rack_3:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/rack_3:max_discharge_power",
		"vlink":	"/limits/rack_3:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/rack_3:min_cell_temp",
		"vlink":	"/status/rack_3:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/rack_3:min_cell_voltage",
		"vlink":	"/status/rack_3:MinCellVoltage"
	},
	"ui_soc":	{
		"value":	"/assets/bms/rack_3:soc",
		"vlink":	"/status/rack_3:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/rack_3:soh",
		"vlink":	"/status/rack_3:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/rack_3:status",
		"vlink":	"/status/rack_3:Status"
	}
}].
[3.63892s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:avg_cell_temp]
[3.63912s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:avg_cell_temp]
[3.63934s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:avg_cell_voltage]
[3.63958s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:avg_cell_voltage]
[3.63985s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:cell_temp_delta]
[3.64006s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:cell_temp_delta]
[3.64031s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:cell_voltage_delta]
[3.64054s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:cell_voltage_delta]
[3.64076s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:dc_contactors_closed]
[3.64095s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:dc_contactors_closed]
[3.64117s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:dc_current]
[3.64141s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:dc_current]
[3.6416s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:dc_power]
[3.64179s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:dc_power]
[3.64201s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:dc_voltage]
[3.6422s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:dc_voltage]
[3.64238s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:max_cell_temp]
[3.64256s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:max_cell_temp]
[3.6428s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:max_cell_voltage]
[3.64302s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:max_cell_voltage]
[3.64325s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:max_charge_current]
[3.64344s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:max_charge_current]
[3.64381s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:max_charge_power]
[3.64404s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:max_charge_power]
[3.64427s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:max_discharge_current]
[3.64444s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:max_discharge_current]
[3.64471s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:max_discharge_power]
[3.6449s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:max_discharge_power]
[3.64513s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:min_cell_temp]
[3.64535s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:min_cell_temp]
[3.64556s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:min_cell_voltage]
[3.64575s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:min_cell_voltage]
[3.646s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:soc]
[3.64618s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:soc]
[3.64637s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:soh]
[3.64652s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:soh]
[3.64676s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:status]
[3.64693s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:status]
[3.64737s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [rack_4]
[3.64755s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [rack_4] parent am [bms] 
[3.64796s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [rack_4]
[3.64816s  ] [info    ] [configure_vmapS] body: {"/config/rack_4":{"AlarmDestination":"/assets/bms/rack_4:alarms","FaultDestination":"/assets/bms/rack_4:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/rack_4":{"ChargeCurrentLimit":{"value":"/limits/rack_4:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/rack_4:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/rack_4:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/rack_4:DischargePowerLimit"}},"/sched/rack_4":{"pubAssets_rack_4":{"actions":{"onSet":[{"func":[{"amap":"rack_4","func":"RunPub"}]}]},"enable":"/config/rack_4:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/rack_4)","table":"/assets/bms/rack_4","value":1},"runMonitor_rack_4":{"actions":{"onSet":[{"func":[{"amap":"rack_4","func":"RunMonitor"}]}]},"aname":"rack_4","enable":"/config/rack_4:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_4","value":1}},"/schedule/wake_monitor/rack_4":{"/status/rack_4:CellTempDelta_Calculated":{"amap":"rack_4","func":"CalculateVar"},"/status/rack_4:CellVoltageDelta_Calculated":{"amap":"rack_4","func":"CalculateVar"}},"/status/rack_4":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_4:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_4:MinCellTemp","variable2":"/status/rack_4:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_4:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_4:MinCellVoltage","variable2":"/status/rack_4:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_4:DCCurrent@EnableMaxValCheck"},{"uri":"/status/rack_4:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/rack_4:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"rack_4","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/rack_4) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"rack_4","every":1,"uri":"/sched/rack_4:pubAssets_rack_4","value":1},{"aname":"rack_4","every":0.1,"uri":"/sched/rack_4:runMonitor_rack_4","value":1},{"aname":"rack_4","every":1,"uri":"/sched/rack_4:checkInputs_rack_4","value":1}],"targav":"/system/commands:run","value":false}},"/controls/rack_4":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"rack_4","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/rack_4":{"/controls/rack_4:ClearFaults":{"amap":"rack_4","func":"HandleCmd"}},"/status/rack_4":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/rack_4:clear_faults"},{"outValue":"Clear","uri":"/alarms/rack_4:clear_alarms"}]}]},"enable":"/config/rack_4:enable","ifChanged":false,"note":"When this variable is set, /faults/rack_4:clear_faults and /alarms/rack_4:clear_alarms will be set to Clear","value":false}},"/alarms/rack_4":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"rack_4","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_4) will be reset to the normal state (defined in /config/rack_4:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/rack_4":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_4","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/rack_4) will be reset to the normal state (defined in /config/rack_4:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/rack_4":{"/status/rack_4:AnyFireFaultActive":{"amap":"rack_4","func":"CalculateVar"},"/status/rack_4:TotalAlarmCnt":{"amap":"rack_4","func":"CalculateVar"},"/status/rack_4:TotalFaultCnt":{"amap":"rack_4","func":"CalculateVar"}},"/status/rack_4":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/rack_4:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"rack_4","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_4:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_4:FaultCnt"}},"/components/catl_rack_4":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/rack_4:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/rack_4:DCClosed"}]}]},"enable":"/config/rack_4:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/rack_4":{"avg_cell_temp":{"value":"/components/catl_rack_4:sbmu_avg_cell_temp","vlink":"/status/rack_4:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_rack_4:sbmu_avg_cell_voltage","vlink":"/status/rack_4:AvgCellVoltage"},"dc_current":{"value":"/components/catl_rack_4:sbmu_current","vlink":"/status/rack_4:DCCurrent"},"dc_voltage":{"value":"/components/catl_rack_4:sbmu_voltage","vlink":"/status/rack_4:DCVoltage"},"max_cell_temp":{"value":"/components/catl_rack_4:sbmu_max_cell_temp","vlink":"/status/rack_4:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_rack_4:sbmu_max_cell_voltage","vlink":"/status/rack_4:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_rack_4:sbmu_min_cell_temp","vlink":"/status/rack_4:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_rack_4:sbmu_min_cell_voltage","vlink":"/status/rack_4:MinCellVoltage"},"soc":{"value":"/components/catl_rack_4:sbmu_soc","vlink":"/status/rack_4:SOC"},"soh":{"value":"/components/catl_rack_4:sbmu_soh","vlink":"/status/rack_4:SOH"}},"/assets/bms/rack_4":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_4","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/rack_4:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/rack_4:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"rack_4","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/rack_4:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/rack_4":{"ui_avg_cell_temp":{"value":"/assets/bms/rack_4:avg_cell_temp","vlink":"/status/rack_4:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/rack_4:avg_cell_voltage","vlink":"/status/rack_4:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/rack_4:cell_temp_delta","vlink":"/status/rack_4:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/rack_4:cell_voltage_delta","vlink":"/status/rack_4:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/rack_4:dc_contactors_closed","vlink":"/status/rack_4:DCClosed"},"ui_dc_current":{"value":"/assets/bms/rack_4:dc_current","vlink":"/status/rack_4:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/rack_4:dc_power","vlink":"/status/rack_4:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/rack_4:dc_voltage","vlink":"/status/rack_4:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/rack_4:max_cell_temp","vlink":"/status/rack_4:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/rack_4:max_cell_voltage","vlink":"/status/rack_4:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/rack_4:max_charge_current","vlink":"/limits/rack_4:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/rack_4:max_charge_power","vlink":"/limits/rack_4:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/rack_4:max_discharge_current","vlink":"/limits/rack_4:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/rack_4:max_discharge_power","vlink":"/limits/rack_4:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/rack_4:min_cell_temp","vlink":"/status/rack_4:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/rack_4:min_cell_voltage","vlink":"/status/rack_4:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/rack_4:soc","vlink":"/status/rack_4:SOC"},"ui_soh":{"value":"/assets/bms/rack_4:soh","vlink":"/status/rack_4:SOH"},"ui_status":{"value":"/assets/bms/rack_4:status","vlink":"/status/rack_4:Status"}}}
[3.64863s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.64884s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/rack_4:alarms",
	"FaultDestination":	"/assets/bms/rack_4:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[3.64901s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:alarms]
[3.64918s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:alarms]
[3.64934s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:faults]
[3.6495s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:faults]
[3.64971s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.64985s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.65004s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.65021s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.65041s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/rack_4:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/rack_4:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/rack_4:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/rack_4:DischargePowerLimit"
	}
}].
[3.65059s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_4:ChargeCurrentLimit]
[3.65076s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_4:ChargeCurrentLimit]
[3.65093s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_4:ChargePowerLimit]
[3.65109s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_4:ChargePowerLimit]
[3.65133s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_4:DischargeCurrentLimit]
[3.65149s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_4:DischargeCurrentLimit]
[3.65166s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_4:DischargePowerLimit]
[3.65185s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_4:DischargePowerLimit]
[3.65209s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_rack_4":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_4",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/rack_4:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/rack_4)",
		"table":	"/assets/bms/rack_4",
		"value":	1
	},
	"runMonitor_rack_4":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_4",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"rack_4",
		"enable":	"/config/rack_4:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_4",
		"value":	1
	}
}].
[3.65235s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_4:CellTempDelta_Calculated":	{
		"amap":	"rack_4",
		"func":	"CalculateVar"
	},
	"/status/rack_4:CellVoltageDelta_Calculated":	{
		"amap":	"rack_4",
		"func":	"CalculateVar"
	}
}].
[3.65261s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_4:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_4:MinCellTemp",
		"variable2":	"/status/rack_4:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_4:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_4:MinCellVoltage",
		"variable2":	"/status/rack_4:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_4:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/rack_4:DCCurrent@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/rack_4:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[3.65294s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.6531s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.65333s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_4",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/rack_4) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"rack_4",
				"every":	1,
				"uri":	"/sched/rack_4:pubAssets_rack_4",
				"value":	1
			}, {
				"aname":	"rack_4",
				"every":	0.1,
				"uri":	"/sched/rack_4:runMonitor_rack_4",
				"value":	1
			}, {
				"aname":	"rack_4",
				"every":	1,
				"uri":	"/sched/rack_4:checkInputs_rack_4",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[3.65358s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_4",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[3.65386s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_4:HandleCmd_ClearFaults]
[3.65404s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_4:HandleCmd_ClearFaults]
[3.65425s  ] [info    ] [HandleCmd      ] reload first run [rack_4] [/controls/rack_4:ClearFaults]  reload 0
[3.65442s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/rack_4:ClearFaults]
[3.65466s  ] [info    ] [HandleCmd      ] Adding [/controls/rack_4:ClearFaults] to amap in asset [rack_4]
[3.65487s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/rack_4:ClearFaults]
[3.6551s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/rack_4:ClearFaults]
[3.65545s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/rack_4:ClearFaults":	{
		"amap":	"rack_4",
		"func":	"HandleCmd"
	}
}].
[3.65576s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/rack_4:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/rack_4:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/rack_4:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/rack_4:clear_faults and /alarms/rack_4:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[3.65612s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_4",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_4) will be reset to the normal state (defined in /config/rack_4:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[3.65644s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.65669s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.65697s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.65715s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.65733s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_4:FaultDestination]
[3.65752s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_4:FaultDestination]
[3.65784s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_4:NoFaultMsg]
[3.65803s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_4:NoFaultMsg]
[3.65825s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_4:FaultCnt]
[3.65839s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_4:FaultCnt]
[3.6587s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_4:AlarmDestination]
[3.65894s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_4:AlarmDestination]
[3.65918s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_4:NoAlarmMsg]
[3.65935s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_4:NoAlarmMsg]
[3.65959s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_4:AlarmCnt]
[3.65984s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_4:AlarmCnt]
[3.66022s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_4",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/rack_4) will be reset to the normal state (defined in /config/rack_4:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[3.66064s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.66098s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.66147s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.66183s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.66215s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_4:AnyFireFaultActive":	{
		"amap":	"rack_4",
		"func":	"CalculateVar"
	},
	"/status/rack_4:TotalAlarmCnt":	{
		"amap":	"rack_4",
		"func":	"CalculateVar"
	},
	"/status/rack_4:TotalFaultCnt":	{
		"amap":	"rack_4",
		"func":	"CalculateVar"
	}
}].
[3.66251s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/rack_4:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_4",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_4:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_4:FaultCnt"
	}
}].
[3.66304s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sbmu_master_negative":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/rack_4:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/rack_4:DCClosed"
						}]
				}]
		},
		"enable":	"/config/rack_4:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[3.66345s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"value":	"/components/catl_rack_4:sbmu_avg_cell_temp",
		"vlink":	"/status/rack_4:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_rack_4:sbmu_avg_cell_voltage",
		"vlink":	"/status/rack_4:AvgCellVoltage"
	},
	"dc_current":	{
		"value":	"/components/catl_rack_4:sbmu_current",
		"vlink":	"/status/rack_4:DCCurrent"
	},
	"dc_voltage":	{
		"value":	"/components/catl_rack_4:sbmu_voltage",
		"vlink":	"/status/rack_4:DCVoltage"
	},
	"max_cell_temp":	{
		"value":	"/components/catl_rack_4:sbmu_max_cell_temp",
		"vlink":	"/status/rack_4:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_rack_4:sbmu_max_cell_voltage",
		"vlink":	"/status/rack_4:MaxCellVoltage"
	},
	"min_cell_temp":	{
		"value":	"/components/catl_rack_4:sbmu_min_cell_temp",
		"vlink":	"/status/rack_4:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_rack_4:sbmu_min_cell_voltage",
		"vlink":	"/status/rack_4:MinCellVoltage"
	},
	"soc":	{
		"value":	"/components/catl_rack_4:sbmu_soc",
		"vlink":	"/status/rack_4:SOC"
	},
	"soh":	{
		"value":	"/components/catl_rack_4:sbmu_soh",
		"vlink":	"/status/rack_4:SOH"
	}
}].
[3.66378s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_avg_cell_temp]
[3.66424s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_avg_cell_temp]
[3.66466s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_avg_cell_voltage]
[3.66493s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_avg_cell_voltage]
[3.6653s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_current]
[3.66552s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_current]
[3.66588s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_voltage]
[3.66614s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_voltage]
[3.66656s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_max_cell_temp]
[3.66676s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_max_cell_temp]
[3.6671s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_max_cell_voltage]
[3.66725s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_max_cell_voltage]
[3.66759s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_min_cell_temp]
[3.66774s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_min_cell_temp]
[3.66808s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_min_cell_voltage]
[3.66829s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_min_cell_voltage]
[3.66847s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_soc]
[3.66879s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_soc]
[3.66895s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_soh]
[3.66917s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_soh]
[3.66952s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_4",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/rack_4:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/rack_4:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_4",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/rack_4:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[3.67009s  ] [info    ] [LogInfo        ] [/assets/bms/rack_4:maint_mode] received a value of [false]
[3.67043s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.67082s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.67115s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/rack_4:avg_cell_temp",
		"vlink":	"/status/rack_4:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/rack_4:avg_cell_voltage",
		"vlink":	"/status/rack_4:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/rack_4:cell_temp_delta",
		"vlink":	"/status/rack_4:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/rack_4:cell_voltage_delta",
		"vlink":	"/status/rack_4:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/rack_4:dc_contactors_closed",
		"vlink":	"/status/rack_4:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/rack_4:dc_current",
		"vlink":	"/status/rack_4:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/rack_4:dc_power",
		"vlink":	"/status/rack_4:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/rack_4:dc_voltage",
		"vlink":	"/status/rack_4:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/rack_4:max_cell_temp",
		"vlink":	"/status/rack_4:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/rack_4:max_cell_voltage",
		"vlink":	"/status/rack_4:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/rack_4:max_charge_current",
		"vlink":	"/limits/rack_4:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/rack_4:max_charge_power",
		"vlink":	"/limits/rack_4:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/rack_4:max_discharge_current",
		"vlink":	"/limits/rack_4:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/rack_4:max_discharge_power",
		"vlink":	"/limits/rack_4:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/rack_4:min_cell_temp",
		"vlink":	"/status/rack_4:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/rack_4:min_cell_voltage",
		"vlink":	"/status/rack_4:MinCellVoltage"
	},
	"ui_soc":	{
		"value":	"/assets/bms/rack_4:soc",
		"vlink":	"/status/rack_4:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/rack_4:soh",
		"vlink":	"/status/rack_4:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/rack_4:status",
		"vlink":	"/status/rack_4:Status"
	}
}].
[3.67175s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:avg_cell_temp]
[3.67216s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:avg_cell_temp]
[3.67268s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:avg_cell_voltage]
[3.67299s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:avg_cell_voltage]
[3.67342s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:cell_temp_delta]
[3.67424s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:cell_temp_delta]
[3.67462s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:cell_voltage_delta]
[3.67644s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:cell_voltage_delta]
[3.67699s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:dc_contactors_closed]
[3.67717s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:dc_contactors_closed]
[3.67736s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:dc_current]
[3.67752s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:dc_current]
[3.67778s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:dc_power]
[3.67802s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:dc_power]
[3.67818s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:dc_voltage]
[3.67836s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:dc_voltage]
[3.67854s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:max_cell_temp]
[3.67876s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:max_cell_temp]
[3.6791s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:max_cell_voltage]
[3.6793s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:max_cell_voltage]
[3.67949s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:max_charge_current]
[3.67976s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:max_charge_current]
[3.68004s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:max_charge_power]
[3.68031s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:max_charge_power]
[3.6805s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:max_discharge_current]
[3.68067s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:max_discharge_current]
[3.68092s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:max_discharge_power]
[3.68116s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:max_discharge_power]
[3.68137s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:min_cell_temp]
[3.68154s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:min_cell_temp]
[3.6818s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:min_cell_voltage]
[3.68201s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:min_cell_voltage]
[3.68222s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:soc]
[3.68238s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:soc]
[3.68288s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:soh]
[3.68308s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:soh]
[3.68324s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:status]
[3.68339s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:status]
[3.68389s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [rack_5]
[3.68405s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [rack_5] parent am [bms] 
[3.68449s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [rack_5]
[3.68468s  ] [info    ] [configure_vmapS] body: {"/config/rack_5":{"AlarmDestination":"/assets/bms/rack_5:alarms","FaultDestination":"/assets/bms/rack_5:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/rack_5":{"ChargeCurrentLimit":{"value":"/limits/rack_5:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/rack_5:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/rack_5:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/rack_5:DischargePowerLimit"}},"/sched/rack_5":{"pubAssets_rack_5":{"actions":{"onSet":[{"func":[{"amap":"rack_5","func":"RunPub"}]}]},"enable":"/config/rack_5:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/rack_5)","table":"/assets/bms/rack_5","value":1},"runMonitor_rack_5":{"actions":{"onSet":[{"func":[{"amap":"rack_5","func":"RunMonitor"}]}]},"aname":"rack_5","enable":"/config/rack_5:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_5","value":1}},"/schedule/wake_monitor/rack_5":{"/status/rack_5:CellTempDelta_Calculated":{"amap":"rack_5","func":"CalculateVar"},"/status/rack_5:CellVoltageDelta_Calculated":{"amap":"rack_5","func":"CalculateVar"}},"/status/rack_5":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_5:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_5:MinCellTemp","variable2":"/status/rack_5:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_5:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_5:MinCellVoltage","variable2":"/status/rack_5:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_5:DCCurrent@EnableMaxValCheck"},{"uri":"/status/rack_5:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/rack_5:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"rack_5","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/rack_5) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"rack_5","every":1,"uri":"/sched/rack_5:pubAssets_rack_5","value":1},{"aname":"rack_5","every":0.1,"uri":"/sched/rack_5:runMonitor_rack_5","value":1},{"aname":"rack_5","every":1,"uri":"/sched/rack_5:checkInputs_rack_5","value":1}],"targav":"/system/commands:run","value":false}},"/controls/rack_5":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"rack_5","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/rack_5":{"/controls/rack_5:ClearFaults":{"amap":"rack_5","func":"HandleCmd"}},"/status/rack_5":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/rack_5:clear_faults"},{"outValue":"Clear","uri":"/alarms/rack_5:clear_alarms"}]}]},"enable":"/config/rack_5:enable","ifChanged":false,"note":"When this variable is set, /faults/rack_5:clear_faults and /alarms/rack_5:clear_alarms will be set to Clear","value":false}},"/alarms/rack_5":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"rack_5","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_5) will be reset to the normal state (defined in /config/rack_5:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/rack_5":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_5","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/rack_5) will be reset to the normal state (defined in /config/rack_5:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/rack_5":{"/status/rack_5:AnyFireFaultActive":{"amap":"rack_5","func":"CalculateVar"},"/status/rack_5:TotalAlarmCnt":{"amap":"rack_5","func":"CalculateVar"},"/status/rack_5:TotalFaultCnt":{"amap":"rack_5","func":"CalculateVar"}},"/status/rack_5":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/rack_5:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"rack_5","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_5:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_5:FaultCnt"}},"/components/catl_rack_5":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/rack_5:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/rack_5:DCClosed"}]}]},"enable":"/config/rack_5:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/rack_5":{"avg_cell_temp":{"value":"/components/catl_rack_5:sbmu_avg_cell_temp","vlink":"/status/rack_5:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_rack_5:sbmu_avg_cell_voltage","vlink":"/status/rack_5:AvgCellVoltage"},"dc_current":{"value":"/components/catl_rack_5:sbmu_current","vlink":"/status/rack_5:DCCurrent"},"dc_voltage":{"value":"/components/catl_rack_5:sbmu_voltage","vlink":"/status/rack_5:DCVoltage"},"max_cell_temp":{"value":"/components/catl_rack_5:sbmu_max_cell_temp","vlink":"/status/rack_5:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_rack_5:sbmu_max_cell_voltage","vlink":"/status/rack_5:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_rack_5:sbmu_min_cell_temp","vlink":"/status/rack_5:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_rack_5:sbmu_min_cell_voltage","vlink":"/status/rack_5:MinCellVoltage"},"soc":{"value":"/components/catl_rack_5:sbmu_soc","vlink":"/status/rack_5:SOC"},"soh":{"value":"/components/catl_rack_5:sbmu_soh","vlink":"/status/rack_5:SOH"}},"/assets/bms/rack_5":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_5","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/rack_5:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/rack_5:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"rack_5","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/rack_5:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/rack_5":{"ui_avg_cell_temp":{"value":"/assets/bms/rack_5:avg_cell_temp","vlink":"/status/rack_5:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/rack_5:avg_cell_voltage","vlink":"/status/rack_5:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/rack_5:cell_temp_delta","vlink":"/status/rack_5:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/rack_5:cell_voltage_delta","vlink":"/status/rack_5:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/rack_5:dc_contactors_closed","vlink":"/status/rack_5:DCClosed"},"ui_dc_current":{"value":"/assets/bms/rack_5:dc_current","vlink":"/status/rack_5:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/rack_5:dc_power","vlink":"/status/rack_5:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/rack_5:dc_voltage","vlink":"/status/rack_5:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/rack_5:max_cell_temp","vlink":"/status/rack_5:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/rack_5:max_cell_voltage","vlink":"/status/rack_5:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/rack_5:max_charge_current","vlink":"/limits/rack_5:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/rack_5:max_charge_power","vlink":"/limits/rack_5:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/rack_5:max_discharge_current","vlink":"/limits/rack_5:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/rack_5:max_discharge_power","vlink":"/limits/rack_5:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/rack_5:min_cell_temp","vlink":"/status/rack_5:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/rack_5:min_cell_voltage","vlink":"/status/rack_5:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/rack_5:soc","vlink":"/status/rack_5:SOC"},"ui_soh":{"value":"/assets/bms/rack_5:soh","vlink":"/status/rack_5:SOH"},"ui_status":{"value":"/assets/bms/rack_5:status","vlink":"/status/rack_5:Status"}}}
[3.68532s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.6855s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/rack_5:alarms",
	"FaultDestination":	"/assets/bms/rack_5:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[3.68574s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:alarms]
[3.686s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:alarms]
[3.6862s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:faults]
[3.68638s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:faults]
[3.68667s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.68691s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.68711s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.68732s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.68754s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/rack_5:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/rack_5:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/rack_5:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/rack_5:DischargePowerLimit"
	}
}].
[3.68781s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_5:ChargeCurrentLimit]
[3.68801s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_5:ChargeCurrentLimit]
[3.6882s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_5:ChargePowerLimit]
[3.6884s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_5:ChargePowerLimit]
[3.68858s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_5:DischargeCurrentLimit]
[3.68874s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_5:DischargeCurrentLimit]
[3.689s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_5:DischargePowerLimit]
[3.68932s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_5:DischargePowerLimit]
[3.6896s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_rack_5":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_5",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/rack_5:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/rack_5)",
		"table":	"/assets/bms/rack_5",
		"value":	1
	},
	"runMonitor_rack_5":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_5",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"rack_5",
		"enable":	"/config/rack_5:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_5",
		"value":	1
	}
}].
[3.68987s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_5:CellTempDelta_Calculated":	{
		"amap":	"rack_5",
		"func":	"CalculateVar"
	},
	"/status/rack_5:CellVoltageDelta_Calculated":	{
		"amap":	"rack_5",
		"func":	"CalculateVar"
	}
}].
[3.69033s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_5:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_5:MinCellTemp",
		"variable2":	"/status/rack_5:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_5:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_5:MinCellVoltage",
		"variable2":	"/status/rack_5:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_5:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/rack_5:DCCurrent@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/rack_5:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[3.69101s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.69122s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.69154s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_5",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/rack_5) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"rack_5",
				"every":	1,
				"uri":	"/sched/rack_5:pubAssets_rack_5",
				"value":	1
			}, {
				"aname":	"rack_5",
				"every":	0.1,
				"uri":	"/sched/rack_5:runMonitor_rack_5",
				"value":	1
			}, {
				"aname":	"rack_5",
				"every":	1,
				"uri":	"/sched/rack_5:checkInputs_rack_5",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[3.69188s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_5",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[3.69214s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_5:HandleCmd_ClearFaults]
[3.69234s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_5:HandleCmd_ClearFaults]
[3.6926s   ] [info    ] [HandleCmd      ] reload first run [rack_5] [/controls/rack_5:ClearFaults]  reload 0
[3.69282s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/rack_5:ClearFaults]
[3.69306s  ] [info    ] [HandleCmd      ] Adding [/controls/rack_5:ClearFaults] to amap in asset [rack_5]
[3.69334s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/rack_5:ClearFaults]
[3.69351s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/rack_5:ClearFaults]
[3.69383s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/rack_5:ClearFaults":	{
		"amap":	"rack_5",
		"func":	"HandleCmd"
	}
}].
[3.69414s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/rack_5:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/rack_5:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/rack_5:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/rack_5:clear_faults and /alarms/rack_5:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[3.69443s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_5",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_5) will be reset to the normal state (defined in /config/rack_5:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[3.69468s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.69483s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.69512s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.69532s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.69551s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_5:FaultDestination]
[3.69566s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_5:FaultDestination]
[3.69588s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_5:NoFaultMsg]
[3.6961s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_5:NoFaultMsg]
[3.69626s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_5:FaultCnt]
[3.69642s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_5:FaultCnt]
[3.69668s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_5:AlarmDestination]
[3.69688s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_5:AlarmDestination]
[3.69711s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_5:NoAlarmMsg]
[3.69734s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_5:NoAlarmMsg]
[3.6975s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_5:AlarmCnt]
[3.69764s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_5:AlarmCnt]
[3.69791s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_5",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/rack_5) will be reset to the normal state (defined in /config/rack_5:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[3.69815s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.69834s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.69861s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.69882s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.69903s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_5:AnyFireFaultActive":	{
		"amap":	"rack_5",
		"func":	"CalculateVar"
	},
	"/status/rack_5:TotalAlarmCnt":	{
		"amap":	"rack_5",
		"func":	"CalculateVar"
	},
	"/status/rack_5:TotalFaultCnt":	{
		"amap":	"rack_5",
		"func":	"CalculateVar"
	}
}].
[3.6993s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/rack_5:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_5",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_5:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_5:FaultCnt"
	}
}].
[3.69977s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sbmu_master_negative":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/rack_5:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/rack_5:DCClosed"
						}]
				}]
		},
		"enable":	"/config/rack_5:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[3.70012s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"value":	"/components/catl_rack_5:sbmu_avg_cell_temp",
		"vlink":	"/status/rack_5:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_rack_5:sbmu_avg_cell_voltage",
		"vlink":	"/status/rack_5:AvgCellVoltage"
	},
	"dc_current":	{
		"value":	"/components/catl_rack_5:sbmu_current",
		"vlink":	"/status/rack_5:DCCurrent"
	},
	"dc_voltage":	{
		"value":	"/components/catl_rack_5:sbmu_voltage",
		"vlink":	"/status/rack_5:DCVoltage"
	},
	"max_cell_temp":	{
		"value":	"/components/catl_rack_5:sbmu_max_cell_temp",
		"vlink":	"/status/rack_5:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_rack_5:sbmu_max_cell_voltage",
		"vlink":	"/status/rack_5:MaxCellVoltage"
	},
	"min_cell_temp":	{
		"value":	"/components/catl_rack_5:sbmu_min_cell_temp",
		"vlink":	"/status/rack_5:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_rack_5:sbmu_min_cell_voltage",
		"vlink":	"/status/rack_5:MinCellVoltage"
	},
	"soc":	{
		"value":	"/components/catl_rack_5:sbmu_soc",
		"vlink":	"/status/rack_5:SOC"
	},
	"soh":	{
		"value":	"/components/catl_rack_5:sbmu_soh",
		"vlink":	"/status/rack_5:SOH"
	}
}].
[3.70031s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_avg_cell_temp]
[3.70047s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_avg_cell_temp]
[3.70062s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_avg_cell_voltage]
[3.70076s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_avg_cell_voltage]
[3.70093s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_current]
[3.70107s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_current]
[3.70125s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_voltage]
[3.70139s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_voltage]
[3.70153s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_max_cell_temp]
[3.70167s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_max_cell_temp]
[3.70186s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_max_cell_voltage]
[3.70199s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_max_cell_voltage]
[3.7022s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_min_cell_temp]
[3.70235s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_min_cell_temp]
[3.70252s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_min_cell_voltage]
[3.70269s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_min_cell_voltage]
[3.70284s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_soc]
[3.70301s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_soc]
[3.7032s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_soh]
[3.70332s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_soh]
[3.7036s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_5",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/rack_5:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/rack_5:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_5",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/rack_5:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[3.70415s  ] [info    ] [LogInfo        ] [/assets/bms/rack_5:maint_mode] received a value of [false]
[3.70454s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.70474s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.70508s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/rack_5:avg_cell_temp",
		"vlink":	"/status/rack_5:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/rack_5:avg_cell_voltage",
		"vlink":	"/status/rack_5:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/rack_5:cell_temp_delta",
		"vlink":	"/status/rack_5:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/rack_5:cell_voltage_delta",
		"vlink":	"/status/rack_5:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/rack_5:dc_contactors_closed",
		"vlink":	"/status/rack_5:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/rack_5:dc_current",
		"vlink":	"/status/rack_5:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/rack_5:dc_power",
		"vlink":	"/status/rack_5:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/rack_5:dc_voltage",
		"vlink":	"/status/rack_5:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/rack_5:max_cell_temp",
		"vlink":	"/status/rack_5:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/rack_5:max_cell_voltage",
		"vlink":	"/status/rack_5:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/rack_5:max_charge_current",
		"vlink":	"/limits/rack_5:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/rack_5:max_charge_power",
		"vlink":	"/limits/rack_5:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/rack_5:max_discharge_current",
		"vlink":	"/limits/rack_5:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/rack_5:max_discharge_power",
		"vlink":	"/limits/rack_5:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/rack_5:min_cell_temp",
		"vlink":	"/status/rack_5:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/rack_5:min_cell_voltage",
		"vlink":	"/status/rack_5:MinCellVoltage"
	},
	"ui_soc":	{
		"value":	"/assets/bms/rack_5:soc",
		"vlink":	"/status/rack_5:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/rack_5:soh",
		"vlink":	"/status/rack_5:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/rack_5:status",
		"vlink":	"/status/rack_5:Status"
	}
}].
[3.70534s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:avg_cell_temp]
[3.70552s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:avg_cell_temp]
[3.7057s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:avg_cell_voltage]
[3.70587s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:avg_cell_voltage]
[3.7061s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:cell_temp_delta]
[3.70628s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:cell_temp_delta]
[3.70646s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:cell_voltage_delta]
[3.70665s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:cell_voltage_delta]
[3.70681s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:dc_contactors_closed]
[3.70698s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:dc_contactors_closed]
[3.7072s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:dc_current]
[3.70739s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:dc_current]
[3.70758s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:dc_power]
[3.70776s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:dc_power]
[3.70801s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:dc_voltage]
[3.70817s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:dc_voltage]
[3.70839s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:max_cell_temp]
[3.70859s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:max_cell_temp]
[3.70878s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:max_cell_voltage]
[3.70898s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:max_cell_voltage]
[3.70917s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:max_charge_current]
[3.70934s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:max_charge_current]
[3.70956s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:max_charge_power]
[3.70973s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:max_charge_power]
[3.70991s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:max_discharge_current]
[3.71006s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:max_discharge_current]
[3.71021s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:max_discharge_power]
[3.71039s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:max_discharge_power]
[3.71059s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:min_cell_temp]
[3.71076s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:min_cell_temp]
[3.71095s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:min_cell_voltage]
[3.71111s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:min_cell_voltage]
[3.71128s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:soc]
[3.71145s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:soc]
[3.71161s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:soh]
[3.71178s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:soh]
[3.712s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:status]
[3.71215s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:status]
[3.71264s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [rack_6]
[3.71281s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [rack_6] parent am [bms] 
[3.71319s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [rack_6]
[3.71336s  ] [info    ] [configure_vmapS] body: {"/config/rack_6":{"AlarmDestination":"/assets/bms/rack_6:alarms","FaultDestination":"/assets/bms/rack_6:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/rack_6":{"ChargeCurrentLimit":{"value":"/limits/rack_6:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/rack_6:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/rack_6:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/rack_6:DischargePowerLimit"}},"/sched/rack_6":{"pubAssets_rack_6":{"actions":{"onSet":[{"func":[{"amap":"rack_6","func":"RunPub"}]}]},"enable":"/config/rack_6:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/rack_6)","table":"/assets/bms/rack_6","value":1},"runMonitor_rack_6":{"actions":{"onSet":[{"func":[{"amap":"rack_6","func":"RunMonitor"}]}]},"aname":"rack_6","enable":"/config/rack_6:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_6","value":1}},"/schedule/wake_monitor/rack_6":{"/status/rack_6:CellTempDelta_Calculated":{"amap":"rack_6","func":"CalculateVar"},"/status/rack_6:CellVoltageDelta_Calculated":{"amap":"rack_6","func":"CalculateVar"}},"/status/rack_6":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_6:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_6:MinCellTemp","variable2":"/status/rack_6:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_6:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_6:MinCellVoltage","variable2":"/status/rack_6:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_6:DCCurrent@EnableMaxValCheck"},{"uri":"/status/rack_6:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/rack_6:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"rack_6","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/rack_6) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"rack_6","every":1,"uri":"/sched/rack_6:pubAssets_rack_6","value":1},{"aname":"rack_6","every":0.1,"uri":"/sched/rack_6:runMonitor_rack_6","value":1},{"aname":"rack_6","every":1,"uri":"/sched/rack_6:checkInputs_rack_6","value":1}],"targav":"/system/commands:run","value":false}},"/controls/rack_6":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"rack_6","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/rack_6":{"/controls/rack_6:ClearFaults":{"amap":"rack_6","func":"HandleCmd"}},"/status/rack_6":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/rack_6:clear_faults"},{"outValue":"Clear","uri":"/alarms/rack_6:clear_alarms"}]}]},"enable":"/config/rack_6:enable","ifChanged":false,"note":"When this variable is set, /faults/rack_6:clear_faults and /alarms/rack_6:clear_alarms will be set to Clear","value":false}},"/alarms/rack_6":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"rack_6","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_6) will be reset to the normal state (defined in /config/rack_6:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/rack_6":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_6","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/rack_6) will be reset to the normal state (defined in /config/rack_6:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/rack_6":{"/status/rack_6:AnyFireFaultActive":{"amap":"rack_6","func":"CalculateVar"},"/status/rack_6:TotalAlarmCnt":{"amap":"rack_6","func":"CalculateVar"},"/status/rack_6:TotalFaultCnt":{"amap":"rack_6","func":"CalculateVar"}},"/status/rack_6":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/rack_6:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"rack_6","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_6:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_6:FaultCnt"}},"/components/catl_rack_6":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/rack_6:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/rack_6:DCClosed"}]}]},"enable":"/config/rack_6:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/rack_6":{"avg_cell_temp":{"value":"/components/catl_rack_6:sbmu_avg_cell_temp","vlink":"/status/rack_6:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_rack_6:sbmu_avg_cell_voltage","vlink":"/status/rack_6:AvgCellVoltage"},"dc_current":{"value":"/components/catl_rack_6:sbmu_current","vlink":"/status/rack_6:DCCurrent"},"dc_voltage":{"value":"/components/catl_rack_6:sbmu_voltage","vlink":"/status/rack_6:DCVoltage"},"max_cell_temp":{"value":"/components/catl_rack_6:sbmu_max_cell_temp","vlink":"/status/rack_6:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_rack_6:sbmu_max_cell_voltage","vlink":"/status/rack_6:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_rack_6:sbmu_min_cell_temp","vlink":"/status/rack_6:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_rack_6:sbmu_min_cell_voltage","vlink":"/status/rack_6:MinCellVoltage"},"soc":{"value":"/components/catl_rack_6:sbmu_soc","vlink":"/status/rack_6:SOC"},"soh":{"value":"/components/catl_rack_6:sbmu_soh","vlink":"/status/rack_6:SOH"}},"/assets/bms/rack_6":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_6","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/rack_6:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/rack_6:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"rack_6","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/rack_6:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/rack_6":{"ui_avg_cell_temp":{"value":"/assets/bms/rack_6:avg_cell_temp","vlink":"/status/rack_6:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/rack_6:avg_cell_voltage","vlink":"/status/rack_6:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/rack_6:cell_temp_delta","vlink":"/status/rack_6:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/rack_6:cell_voltage_delta","vlink":"/status/rack_6:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/rack_6:dc_contactors_closed","vlink":"/status/rack_6:DCClosed"},"ui_dc_current":{"value":"/assets/bms/rack_6:dc_current","vlink":"/status/rack_6:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/rack_6:dc_power","vlink":"/status/rack_6:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/rack_6:dc_voltage","vlink":"/status/rack_6:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/rack_6:max_cell_temp","vlink":"/status/rack_6:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/rack_6:max_cell_voltage","vlink":"/status/rack_6:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/rack_6:max_charge_current","vlink":"/limits/rack_6:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/rack_6:max_charge_power","vlink":"/limits/rack_6:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/rack_6:max_discharge_current","vlink":"/limits/rack_6:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/rack_6:max_discharge_power","vlink":"/limits/rack_6:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/rack_6:min_cell_temp","vlink":"/status/rack_6:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/rack_6:min_cell_voltage","vlink":"/status/rack_6:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/rack_6:soc","vlink":"/status/rack_6:SOC"},"ui_soh":{"value":"/assets/bms/rack_6:soh","vlink":"/status/rack_6:SOH"},"ui_status":{"value":"/assets/bms/rack_6:status","vlink":"/status/rack_6:Status"}}}
[3.71399s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.71418s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/rack_6:alarms",
	"FaultDestination":	"/assets/bms/rack_6:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[3.71434s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:alarms]
[3.71449s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:alarms]
[3.71467s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:faults]
[3.71487s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:faults]
[3.71504s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.7152s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.71536s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.71551s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.71574s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/rack_6:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/rack_6:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/rack_6:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/rack_6:DischargePowerLimit"
	}
}].
[3.71592s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_6:ChargeCurrentLimit]
[3.71605s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_6:ChargeCurrentLimit]
[3.71622s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_6:ChargePowerLimit]
[3.71638s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_6:ChargePowerLimit]
[3.71654s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_6:DischargeCurrentLimit]
[3.71668s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_6:DischargeCurrentLimit]
[3.71688s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_6:DischargePowerLimit]
[3.71704s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_6:DischargePowerLimit]
[3.71724s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_rack_6":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_6",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/rack_6:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/rack_6)",
		"table":	"/assets/bms/rack_6",
		"value":	1
	},
	"runMonitor_rack_6":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_6",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"rack_6",
		"enable":	"/config/rack_6:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_6",
		"value":	1
	}
}].
[3.71749s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_6:CellTempDelta_Calculated":	{
		"amap":	"rack_6",
		"func":	"CalculateVar"
	},
	"/status/rack_6:CellVoltageDelta_Calculated":	{
		"amap":	"rack_6",
		"func":	"CalculateVar"
	}
}].
[3.71776s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_6:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_6:MinCellTemp",
		"variable2":	"/status/rack_6:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_6:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_6:MinCellVoltage",
		"variable2":	"/status/rack_6:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_6:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/rack_6:DCCurrent@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/rack_6:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[3.71807s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.71826s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.71849s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_6",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/rack_6) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"rack_6",
				"every":	1,
				"uri":	"/sched/rack_6:pubAssets_rack_6",
				"value":	1
			}, {
				"aname":	"rack_6",
				"every":	0.1,
				"uri":	"/sched/rack_6:runMonitor_rack_6",
				"value":	1
			}, {
				"aname":	"rack_6",
				"every":	1,
				"uri":	"/sched/rack_6:checkInputs_rack_6",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[3.71873s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_6",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[3.71896s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_6:HandleCmd_ClearFaults]
[3.71912s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_6:HandleCmd_ClearFaults]
[3.71932s  ] [info    ] [HandleCmd      ] reload first run [rack_6] [/controls/rack_6:ClearFaults]  reload 0
[3.71946s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/rack_6:ClearFaults]
[3.71964s  ] [info    ] [HandleCmd      ] Adding [/controls/rack_6:ClearFaults] to amap in asset [rack_6]
[3.71981s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/rack_6:ClearFaults]
[3.72003s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/rack_6:ClearFaults]
[3.72029s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/rack_6:ClearFaults":	{
		"amap":	"rack_6",
		"func":	"HandleCmd"
	}
}].
[3.72056s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/rack_6:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/rack_6:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/rack_6:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/rack_6:clear_faults and /alarms/rack_6:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[3.72085s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_6",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_6) will be reset to the normal state (defined in /config/rack_6:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[3.72109s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.7213s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.72164s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.72188s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.72239s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_6:FaultDestination]
[3.72279s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_6:FaultDestination]
[3.72316s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_6:NoFaultMsg]
[3.72349s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_6:NoFaultMsg]
[3.72391s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_6:FaultCnt]
[3.72409s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_6:FaultCnt]
[3.72435s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_6:AlarmDestination]
[3.72458s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_6:AlarmDestination]
[3.72473s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_6:NoAlarmMsg]
[3.72492s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_6:NoAlarmMsg]
[3.72506s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_6:AlarmCnt]
[3.72521s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_6:AlarmCnt]
[3.72543s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_6",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/rack_6) will be reset to the normal state (defined in /config/rack_6:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[3.7257s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.72588s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.72617s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.72656s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.727s    ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_6:AnyFireFaultActive":	{
		"amap":	"rack_6",
		"func":	"CalculateVar"
	},
	"/status/rack_6:TotalAlarmCnt":	{
		"amap":	"rack_6",
		"func":	"CalculateVar"
	},
	"/status/rack_6:TotalFaultCnt":	{
		"amap":	"rack_6",
		"func":	"CalculateVar"
	}
}].
[3.72795s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/rack_6:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_6",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_6:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_6:FaultCnt"
	}
}].
[3.72861s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sbmu_master_negative":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/rack_6:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/rack_6:DCClosed"
						}]
				}]
		},
		"enable":	"/config/rack_6:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[3.72912s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"value":	"/components/catl_rack_6:sbmu_avg_cell_temp",
		"vlink":	"/status/rack_6:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_rack_6:sbmu_avg_cell_voltage",
		"vlink":	"/status/rack_6:AvgCellVoltage"
	},
	"dc_current":	{
		"value":	"/components/catl_rack_6:sbmu_current",
		"vlink":	"/status/rack_6:DCCurrent"
	},
	"dc_voltage":	{
		"value":	"/components/catl_rack_6:sbmu_voltage",
		"vlink":	"/status/rack_6:DCVoltage"
	},
	"max_cell_temp":	{
		"value":	"/components/catl_rack_6:sbmu_max_cell_temp",
		"vlink":	"/status/rack_6:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_rack_6:sbmu_max_cell_voltage",
		"vlink":	"/status/rack_6:MaxCellVoltage"
	},
	"min_cell_temp":	{
		"value":	"/components/catl_rack_6:sbmu_min_cell_temp",
		"vlink":	"/status/rack_6:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_rack_6:sbmu_min_cell_voltage",
		"vlink":	"/status/rack_6:MinCellVoltage"
	},
	"soc":	{
		"value":	"/components/catl_rack_6:sbmu_soc",
		"vlink":	"/status/rack_6:SOC"
	},
	"soh":	{
		"value":	"/components/catl_rack_6:sbmu_soh",
		"vlink":	"/status/rack_6:SOH"
	}
}].
[3.72945s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_avg_cell_temp]
[3.72973s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_avg_cell_temp]
[3.73004s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_avg_cell_voltage]
[3.73031s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_avg_cell_voltage]
[3.73066s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_current]
[3.73089s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_current]
[3.73113s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_voltage]
[3.7314s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_voltage]
[3.73167s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_max_cell_temp]
[3.73191s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_max_cell_temp]
[3.73228s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_max_cell_voltage]
[3.7325s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_max_cell_voltage]
[3.73276s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_min_cell_temp]
[3.73301s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_min_cell_temp]
[3.73327s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_min_cell_voltage]
[3.73348s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_min_cell_voltage]
[3.73382s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_soc]
[3.73414s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_soc]
[3.73439s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_soh]
[3.73456s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_soh]
[3.73494s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_6",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/rack_6:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/rack_6:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_6",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/rack_6:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[3.73557s  ] [info    ] [LogInfo        ] [/assets/bms/rack_6:maint_mode] received a value of [false]
[3.736s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.73625s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.7367s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/rack_6:avg_cell_temp",
		"vlink":	"/status/rack_6:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/rack_6:avg_cell_voltage",
		"vlink":	"/status/rack_6:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/rack_6:cell_temp_delta",
		"vlink":	"/status/rack_6:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/rack_6:cell_voltage_delta",
		"vlink":	"/status/rack_6:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/rack_6:dc_contactors_closed",
		"vlink":	"/status/rack_6:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/rack_6:dc_current",
		"vlink":	"/status/rack_6:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/rack_6:dc_power",
		"vlink":	"/status/rack_6:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/rack_6:dc_voltage",
		"vlink":	"/status/rack_6:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/rack_6:max_cell_temp",
		"vlink":	"/status/rack_6:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/rack_6:max_cell_voltage",
		"vlink":	"/status/rack_6:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/rack_6:max_charge_current",
		"vlink":	"/limits/rack_6:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/rack_6:max_charge_power",
		"vlink":	"/limits/rack_6:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/rack_6:max_discharge_current",
		"vlink":	"/limits/rack_6:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/rack_6:max_discharge_power",
		"vlink":	"/limits/rack_6:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/rack_6:min_cell_temp",
		"vlink":	"/status/rack_6:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/rack_6:min_cell_voltage",
		"vlink":	"/status/rack_6:MinCellVoltage"
	},
	"ui_soc":	{
		"value":	"/assets/bms/rack_6:soc",
		"vlink":	"/status/rack_6:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/rack_6:soh",
		"vlink":	"/status/rack_6:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/rack_6:status",
		"vlink":	"/status/rack_6:Status"
	}
}].
[3.73721s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:avg_cell_temp]
[3.73749s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:avg_cell_temp]
[3.73778s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:avg_cell_voltage]
[3.73811s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:avg_cell_voltage]
[3.73849s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:cell_temp_delta]
[3.73872s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:cell_temp_delta]
[3.73911s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:cell_voltage_delta]
[3.73942s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:cell_voltage_delta]
[3.73967s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:dc_contactors_closed]
[3.73998s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:dc_contactors_closed]
[3.74032s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:dc_current]
[3.74062s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:dc_current]
[3.74092s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:dc_power]
[3.74128s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:dc_power]
[3.74184s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:dc_voltage]
[3.74233s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:dc_voltage]
[3.74289s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:max_cell_temp]
[3.74336s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:max_cell_temp]
[3.74386s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:max_cell_voltage]
[3.74425s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:max_cell_voltage]
[3.74465s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:max_charge_current]
[3.74505s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:max_charge_current]
[3.74544s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:max_charge_power]
[3.74577s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:max_charge_power]
[3.74618s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:max_discharge_current]
[3.74649s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:max_discharge_current]
[3.74684s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:max_discharge_power]
[3.74716s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:max_discharge_power]
[3.74755s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:min_cell_temp]
[3.74785s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:min_cell_temp]
[3.74816s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:min_cell_voltage]
[3.74841s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:min_cell_voltage]
[3.74874s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:soc]
[3.749s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:soc]
[3.74929s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:soh]
[3.74954s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:soh]
[3.7498s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:status]
[3.75s     ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:status]
[3.75076s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [rack_7]
[3.75098s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [rack_7] parent am [bms] 
[3.75152s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [rack_7]
[3.75179s  ] [info    ] [configure_vmapS] body: {"/config/rack_7":{"AlarmDestination":"/assets/bms/rack_7:alarms","FaultDestination":"/assets/bms/rack_7:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/rack_7":{"ChargeCurrentLimit":{"value":"/limits/rack_7:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/rack_7:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/rack_7:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/rack_7:DischargePowerLimit"}},"/sched/rack_7":{"pubAssets_rack_7":{"actions":{"onSet":[{"func":[{"amap":"rack_7","func":"RunPub"}]}]},"enable":"/config/rack_7:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/rack_7)","table":"/assets/bms/rack_7","value":1},"runMonitor_rack_7":{"actions":{"onSet":[{"func":[{"amap":"rack_7","func":"RunMonitor"}]}]},"aname":"rack_7","enable":"/config/rack_7:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_7","value":1}},"/schedule/wake_monitor/rack_7":{"/status/rack_7:CellTempDelta_Calculated":{"amap":"rack_7","func":"CalculateVar"},"/status/rack_7:CellVoltageDelta_Calculated":{"amap":"rack_7","func":"CalculateVar"}},"/status/rack_7":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_7:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_7:MinCellTemp","variable2":"/status/rack_7:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_7:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_7:MinCellVoltage","variable2":"/status/rack_7:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_7:DCCurrent@EnableMaxValCheck"},{"uri":"/status/rack_7:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/rack_7:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"rack_7","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/rack_7) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"rack_7","every":1,"uri":"/sched/rack_7:pubAssets_rack_7","value":1},{"aname":"rack_7","every":0.1,"uri":"/sched/rack_7:runMonitor_rack_7","value":1},{"aname":"rack_7","every":1,"uri":"/sched/rack_7:checkInputs_rack_7","value":1}],"targav":"/system/commands:run","value":false}},"/controls/rack_7":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"rack_7","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/rack_7":{"/controls/rack_7:ClearFaults":{"amap":"rack_7","func":"HandleCmd"}},"/status/rack_7":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/rack_7:clear_faults"},{"outValue":"Clear","uri":"/alarms/rack_7:clear_alarms"}]}]},"enable":"/config/rack_7:enable","ifChanged":false,"note":"When this variable is set, /faults/rack_7:clear_faults and /alarms/rack_7:clear_alarms will be set to Clear","value":false}},"/alarms/rack_7":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"rack_7","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_7) will be reset to the normal state (defined in /config/rack_7:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/rack_7":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_7","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/rack_7) will be reset to the normal state (defined in /config/rack_7:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/rack_7":{"/status/rack_7:AnyFireFaultActive":{"amap":"rack_7","func":"CalculateVar"},"/status/rack_7:TotalAlarmCnt":{"amap":"rack_7","func":"CalculateVar"},"/status/rack_7:TotalFaultCnt":{"amap":"rack_7","func":"CalculateVar"}},"/status/rack_7":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/rack_7:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"rack_7","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_7:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_7:FaultCnt"}},"/components/catl_rack_7":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/rack_7:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/rack_7:DCClosed"}]}]},"enable":"/config/rack_7:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/rack_7":{"avg_cell_temp":{"value":"/components/catl_rack_7:sbmu_avg_cell_temp","vlink":"/status/rack_7:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_rack_7:sbmu_avg_cell_voltage","vlink":"/status/rack_7:AvgCellVoltage"},"dc_current":{"value":"/components/catl_rack_7:sbmu_current","vlink":"/status/rack_7:DCCurrent"},"dc_voltage":{"value":"/components/catl_rack_7:sbmu_voltage","vlink":"/status/rack_7:DCVoltage"},"max_cell_temp":{"value":"/components/catl_rack_7:sbmu_max_cell_temp","vlink":"/status/rack_7:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_rack_7:sbmu_max_cell_voltage","vlink":"/status/rack_7:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_rack_7:sbmu_min_cell_temp","vlink":"/status/rack_7:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_rack_7:sbmu_min_cell_voltage","vlink":"/status/rack_7:MinCellVoltage"},"soc":{"value":"/components/catl_rack_7:sbmu_soc","vlink":"/status/rack_7:SOC"},"soh":{"value":"/components/catl_rack_7:sbmu_soh","vlink":"/status/rack_7:SOH"}},"/assets/bms/rack_7":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_7","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/rack_7:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/rack_7:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"rack_7","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/rack_7:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/rack_7":{"ui_avg_cell_temp":{"value":"/assets/bms/rack_7:avg_cell_temp","vlink":"/status/rack_7:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/rack_7:avg_cell_voltage","vlink":"/status/rack_7:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/rack_7:cell_temp_delta","vlink":"/status/rack_7:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/rack_7:cell_voltage_delta","vlink":"/status/rack_7:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/rack_7:dc_contactors_closed","vlink":"/status/rack_7:DCClosed"},"ui_dc_current":{"value":"/assets/bms/rack_7:dc_current","vlink":"/status/rack_7:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/rack_7:dc_power","vlink":"/status/rack_7:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/rack_7:dc_voltage","vlink":"/status/rack_7:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/rack_7:max_cell_temp","vlink":"/status/rack_7:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/rack_7:max_cell_voltage","vlink":"/status/rack_7:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/rack_7:max_charge_current","vlink":"/limits/rack_7:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/rack_7:max_charge_power","vlink":"/limits/rack_7:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/rack_7:max_discharge_current","vlink":"/limits/rack_7:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/rack_7:max_discharge_power","vlink":"/limits/rack_7:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/rack_7:min_cell_temp","vlink":"/status/rack_7:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/rack_7:min_cell_voltage","vlink":"/status/rack_7:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/rack_7:soc","vlink":"/status/rack_7:SOC"},"ui_soh":{"value":"/assets/bms/rack_7:soh","vlink":"/status/rack_7:SOH"},"ui_status":{"value":"/assets/bms/rack_7:status","vlink":"/status/rack_7:Status"}}}
[3.75242s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.75264s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/rack_7:alarms",
	"FaultDestination":	"/assets/bms/rack_7:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[3.75289s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:alarms]
[3.75307s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:alarms]
[3.75329s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:faults]
[3.7535s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:faults]
[3.75391s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.75426s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.75457s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.75492s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.75544s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/rack_7:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/rack_7:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/rack_7:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/rack_7:DischargePowerLimit"
	}
}].
[3.75595s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_7:ChargeCurrentLimit]
[3.75631s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_7:ChargeCurrentLimit]
[3.75685s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_7:ChargePowerLimit]
[3.75731s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_7:ChargePowerLimit]
[3.75791s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_7:DischargeCurrentLimit]
[3.75823s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_7:DischargeCurrentLimit]
[3.75863s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_7:DischargePowerLimit]
[3.75889s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_7:DischargePowerLimit]
[3.7594s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_rack_7":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_7",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/rack_7:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/rack_7)",
		"table":	"/assets/bms/rack_7",
		"value":	1
	},
	"runMonitor_rack_7":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_7",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"rack_7",
		"enable":	"/config/rack_7:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_7",
		"value":	1
	}
}].
[3.75984s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_7:CellTempDelta_Calculated":	{
		"amap":	"rack_7",
		"func":	"CalculateVar"
	},
	"/status/rack_7:CellVoltageDelta_Calculated":	{
		"amap":	"rack_7",
		"func":	"CalculateVar"
	}
}].
[3.76028s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_7:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_7:MinCellTemp",
		"variable2":	"/status/rack_7:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_7:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_7:MinCellVoltage",
		"variable2":	"/status/rack_7:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_7:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/rack_7:DCCurrent@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/rack_7:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[3.76089s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.76119s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.76153s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_7",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/rack_7) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"rack_7",
				"every":	1,
				"uri":	"/sched/rack_7:pubAssets_rack_7",
				"value":	1
			}, {
				"aname":	"rack_7",
				"every":	0.1,
				"uri":	"/sched/rack_7:runMonitor_rack_7",
				"value":	1
			}, {
				"aname":	"rack_7",
				"every":	1,
				"uri":	"/sched/rack_7:checkInputs_rack_7",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[3.76246s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_7",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[3.76348s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_7:HandleCmd_ClearFaults]
[3.76458s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_7:HandleCmd_ClearFaults]
[3.76507s  ] [info    ] [HandleCmd      ] reload first run [rack_7] [/controls/rack_7:ClearFaults]  reload 0
[3.76547s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/rack_7:ClearFaults]
[3.76599s  ] [info    ] [HandleCmd      ] Adding [/controls/rack_7:ClearFaults] to amap in asset [rack_7]
[3.76638s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/rack_7:ClearFaults]
[3.76673s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/rack_7:ClearFaults]
[3.76789s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/rack_7:ClearFaults":	{
		"amap":	"rack_7",
		"func":	"HandleCmd"
	}
}].
[3.76832s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/rack_7:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/rack_7:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/rack_7:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/rack_7:clear_faults and /alarms/rack_7:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[3.7689s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_7",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_7) will be reset to the normal state (defined in /config/rack_7:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[3.76931s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.76959s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.77012s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.77061s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.77157s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_7:FaultDestination]
[3.77199s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_7:FaultDestination]
[3.77252s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_7:NoFaultMsg]
[3.77293s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_7:NoFaultMsg]
[3.77342s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_7:FaultCnt]
[3.77435s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_7:FaultCnt]
[3.77482s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_7:AlarmDestination]
[3.77581s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_7:AlarmDestination]
[3.77638s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_7:NoAlarmMsg]
[3.77686s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_7:NoAlarmMsg]
[3.7773s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_7:AlarmCnt]
[3.77776s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_7:AlarmCnt]
[3.77831s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_7",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/rack_7) will be reset to the normal state (defined in /config/rack_7:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[3.77876s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.77911s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.77953s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.77992s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.78034s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_7:AnyFireFaultActive":	{
		"amap":	"rack_7",
		"func":	"CalculateVar"
	},
	"/status/rack_7:TotalAlarmCnt":	{
		"amap":	"rack_7",
		"func":	"CalculateVar"
	},
	"/status/rack_7:TotalFaultCnt":	{
		"amap":	"rack_7",
		"func":	"CalculateVar"
	}
}].
[3.78099s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/rack_7:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_7",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_7:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_7:FaultCnt"
	}
}].
[3.78165s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sbmu_master_negative":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/rack_7:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/rack_7:DCClosed"
						}]
				}]
		},
		"enable":	"/config/rack_7:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[3.78236s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"value":	"/components/catl_rack_7:sbmu_avg_cell_temp",
		"vlink":	"/status/rack_7:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_rack_7:sbmu_avg_cell_voltage",
		"vlink":	"/status/rack_7:AvgCellVoltage"
	},
	"dc_current":	{
		"value":	"/components/catl_rack_7:sbmu_current",
		"vlink":	"/status/rack_7:DCCurrent"
	},
	"dc_voltage":	{
		"value":	"/components/catl_rack_7:sbmu_voltage",
		"vlink":	"/status/rack_7:DCVoltage"
	},
	"max_cell_temp":	{
		"value":	"/components/catl_rack_7:sbmu_max_cell_temp",
		"vlink":	"/status/rack_7:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_rack_7:sbmu_max_cell_voltage",
		"vlink":	"/status/rack_7:MaxCellVoltage"
	},
	"min_cell_temp":	{
		"value":	"/components/catl_rack_7:sbmu_min_cell_temp",
		"vlink":	"/status/rack_7:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_rack_7:sbmu_min_cell_voltage",
		"vlink":	"/status/rack_7:MinCellVoltage"
	},
	"soc":	{
		"value":	"/components/catl_rack_7:sbmu_soc",
		"vlink":	"/status/rack_7:SOC"
	},
	"soh":	{
		"value":	"/components/catl_rack_7:sbmu_soh",
		"vlink":	"/status/rack_7:SOH"
	}
}].
[3.78274s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_avg_cell_temp]
[3.78333s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_avg_cell_temp]
[3.78383s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_avg_cell_voltage]
[3.78422s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_avg_cell_voltage]
[3.78455s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_current]
[3.78496s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_current]
[3.78615s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_voltage]
[3.78664s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_voltage]
[3.78706s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_max_cell_temp]
[3.78762s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_max_cell_temp]
[3.78852s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_max_cell_voltage]
[3.789s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_max_cell_voltage]
[3.78981s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_min_cell_temp]
[3.79016s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_min_cell_temp]
[3.79073s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_min_cell_voltage]
[3.79132s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_min_cell_voltage]
[3.79171s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_soc]
[3.79236s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_soc]
[3.79288s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_soh]
[3.79333s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_soh]
[3.79451s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_7",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/rack_7:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/rack_7:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_7",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/rack_7:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[3.79533s  ] [info    ] [LogInfo        ] [/assets/bms/rack_7:maint_mode] received a value of [false]
[3.79613s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.79691s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.79776s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/rack_7:avg_cell_temp",
		"vlink":	"/status/rack_7:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/rack_7:avg_cell_voltage",
		"vlink":	"/status/rack_7:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/rack_7:cell_temp_delta",
		"vlink":	"/status/rack_7:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/rack_7:cell_voltage_delta",
		"vlink":	"/status/rack_7:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/rack_7:dc_contactors_closed",
		"vlink":	"/status/rack_7:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/rack_7:dc_current",
		"vlink":	"/status/rack_7:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/rack_7:dc_power",
		"vlink":	"/status/rack_7:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/rack_7:dc_voltage",
		"vlink":	"/status/rack_7:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/rack_7:max_cell_temp",
		"vlink":	"/status/rack_7:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/rack_7:max_cell_voltage",
		"vlink":	"/status/rack_7:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/rack_7:max_charge_current",
		"vlink":	"/limits/rack_7:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/rack_7:max_charge_power",
		"vlink":	"/limits/rack_7:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/rack_7:max_discharge_current",
		"vlink":	"/limits/rack_7:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/rack_7:max_discharge_power",
		"vlink":	"/limits/rack_7:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/rack_7:min_cell_temp",
		"vlink":	"/status/rack_7:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/rack_7:min_cell_voltage",
		"vlink":	"/status/rack_7:MinCellVoltage"
	},
	"ui_soc":	{
		"value":	"/assets/bms/rack_7:soc",
		"vlink":	"/status/rack_7:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/rack_7:soh",
		"vlink":	"/status/rack_7:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/rack_7:status",
		"vlink":	"/status/rack_7:Status"
	}
}].
[3.79822s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:avg_cell_temp]
[3.79857s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:avg_cell_temp]
[3.79903s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:avg_cell_voltage]
[3.79944s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:avg_cell_voltage]
[3.79979s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:cell_temp_delta]
[3.80016s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:cell_temp_delta]
[3.80061s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:cell_voltage_delta]
[3.80099s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:cell_voltage_delta]
[3.80142s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:dc_contactors_closed]
[3.80188s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:dc_contactors_closed]
[3.8023s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:dc_current]
[3.80268s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:dc_current]
[3.80304s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:dc_power]
[3.80328s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:dc_power]
[3.80377s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:dc_voltage]
[3.80415s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:dc_voltage]
[3.8046s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:max_cell_temp]
[3.80497s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:max_cell_temp]
[3.80534s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:max_cell_voltage]
[3.80579s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:max_cell_voltage]
[3.80611s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:max_charge_current]
[3.80656s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:max_charge_current]
[3.80706s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:max_charge_power]
[3.8074s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:max_charge_power]
[3.8079s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:max_discharge_current]
[3.80826s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:max_discharge_current]
[3.80864s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:max_discharge_power]
[3.80911s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:max_discharge_power]
[3.80948s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:min_cell_temp]
[3.80973s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:min_cell_temp]
[3.81023s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:min_cell_voltage]
[3.81054s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:min_cell_voltage]
[3.81096s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:soc]
[3.81129s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:soc]
[3.8117s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:soh]
[3.81273s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:soh]
[3.81316s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:status]
[3.81356s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:status]
[3.81525s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [rack_8]
[3.81576s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [rack_8] parent am [bms] 
[3.8174s   ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [rack_8]
[3.81786s  ] [info    ] [configure_vmapS] body: {"/config/rack_8":{"AlarmDestination":"/assets/bms/rack_8:alarms","FaultDestination":"/assets/bms/rack_8:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/rack_8":{"ChargeCurrentLimit":{"value":"/limits/rack_8:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/rack_8:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/rack_8:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/rack_8:DischargePowerLimit"}},"/sched/rack_8":{"pubAssets_rack_8":{"actions":{"onSet":[{"func":[{"amap":"rack_8","func":"RunPub"}]}]},"enable":"/config/rack_8:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/rack_8)","table":"/assets/bms/rack_8","value":1},"runMonitor_rack_8":{"actions":{"onSet":[{"func":[{"amap":"rack_8","func":"RunMonitor"}]}]},"aname":"rack_8","enable":"/config/rack_8:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_8","value":1}},"/schedule/wake_monitor/rack_8":{"/status/rack_8:CellTempDelta_Calculated":{"amap":"rack_8","func":"CalculateVar"},"/status/rack_8:CellVoltageDelta_Calculated":{"amap":"rack_8","func":"CalculateVar"}},"/status/rack_8":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_8:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_8:MinCellTemp","variable2":"/status/rack_8:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_8:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_8:MinCellVoltage","variable2":"/status/rack_8:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_8:DCCurrent@EnableMaxValCheck"},{"uri":"/status/rack_8:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/rack_8:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"rack_8","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/rack_8) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"rack_8","every":1,"uri":"/sched/rack_8:pubAssets_rack_8","value":1},{"aname":"rack_8","every":0.1,"uri":"/sched/rack_8:runMonitor_rack_8","value":1},{"aname":"rack_8","every":1,"uri":"/sched/rack_8:checkInputs_rack_8","value":1}],"targav":"/system/commands:run","value":false}},"/controls/rack_8":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"rack_8","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/rack_8":{"/controls/rack_8:ClearFaults":{"amap":"rack_8","func":"HandleCmd"}},"/status/rack_8":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/rack_8:clear_faults"},{"outValue":"Clear","uri":"/alarms/rack_8:clear_alarms"}]}]},"enable":"/config/rack_8:enable","ifChanged":false,"note":"When this variable is set, /faults/rack_8:clear_faults and /alarms/rack_8:clear_alarms will be set to Clear","value":false}},"/alarms/rack_8":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"rack_8","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_8) will be reset to the normal state (defined in /config/rack_8:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/rack_8":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_8","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/rack_8) will be reset to the normal state (defined in /config/rack_8:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/rack_8":{"/status/rack_8:AnyFireFaultActive":{"amap":"rack_8","func":"CalculateVar"},"/status/rack_8:TotalAlarmCnt":{"amap":"rack_8","func":"CalculateVar"},"/status/rack_8:TotalFaultCnt":{"amap":"rack_8","func":"CalculateVar"}},"/status/rack_8":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/rack_8:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"rack_8","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_8:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_8:FaultCnt"}},"/components/catl_rack_8":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/rack_8:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/rack_8:DCClosed"}]}]},"enable":"/config/rack_8:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/rack_8":{"avg_cell_temp":{"value":"/components/catl_rack_8:sbmu_avg_cell_temp","vlink":"/status/rack_8:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_rack_8:sbmu_avg_cell_voltage","vlink":"/status/rack_8:AvgCellVoltage"},"dc_current":{"value":"/components/catl_rack_8:sbmu_current","vlink":"/status/rack_8:DCCurrent"},"dc_voltage":{"value":"/components/catl_rack_8:sbmu_voltage","vlink":"/status/rack_8:DCVoltage"},"max_cell_temp":{"value":"/components/catl_rack_8:sbmu_max_cell_temp","vlink":"/status/rack_8:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_rack_8:sbmu_max_cell_voltage","vlink":"/status/rack_8:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_rack_8:sbmu_min_cell_temp","vlink":"/status/rack_8:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_rack_8:sbmu_min_cell_voltage","vlink":"/status/rack_8:MinCellVoltage"},"soc":{"value":"/components/catl_rack_8:sbmu_soc","vlink":"/status/rack_8:SOC"},"soh":{"value":"/components/catl_rack_8:sbmu_soh","vlink":"/status/rack_8:SOH"}},"/assets/bms/rack_8":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_8","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/rack_8:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/rack_8:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"rack_8","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/rack_8:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/rack_8":{"ui_avg_cell_temp":{"value":"/assets/bms/rack_8:avg_cell_temp","vlink":"/status/rack_8:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/rack_8:avg_cell_voltage","vlink":"/status/rack_8:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/rack_8:cell_temp_delta","vlink":"/status/rack_8:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/rack_8:cell_voltage_delta","vlink":"/status/rack_8:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/rack_8:dc_contactors_closed","vlink":"/status/rack_8:DCClosed"},"ui_dc_current":{"value":"/assets/bms/rack_8:dc_current","vlink":"/status/rack_8:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/rack_8:dc_power","vlink":"/status/rack_8:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/rack_8:dc_voltage","vlink":"/status/rack_8:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/rack_8:max_cell_temp","vlink":"/status/rack_8:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/rack_8:max_cell_voltage","vlink":"/status/rack_8:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/rack_8:max_charge_current","vlink":"/limits/rack_8:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/rack_8:max_charge_power","vlink":"/limits/rack_8:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/rack_8:max_discharge_current","vlink":"/limits/rack_8:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/rack_8:max_discharge_power","vlink":"/limits/rack_8:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/rack_8:min_cell_temp","vlink":"/status/rack_8:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/rack_8:min_cell_voltage","vlink":"/status/rack_8:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/rack_8:soc","vlink":"/status/rack_8:SOC"},"ui_soh":{"value":"/assets/bms/rack_8:soh","vlink":"/status/rack_8:SOH"},"ui_status":{"value":"/assets/bms/rack_8:status","vlink":"/status/rack_8:Status"}}}
[3.81904s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.81952s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/rack_8:alarms",
	"FaultDestination":	"/assets/bms/rack_8:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[3.8199s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:alarms]
[3.82026s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:alarms]
[3.82058s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:faults]
[3.82092s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:faults]
[3.82144s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.82181s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.82213s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.82246s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.82294s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/rack_8:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/rack_8:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/rack_8:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/rack_8:DischargePowerLimit"
	}
}].
[3.82347s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_8:ChargeCurrentLimit]
[3.82392s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_8:ChargeCurrentLimit]
[3.82431s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_8:ChargePowerLimit]
[3.82469s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_8:ChargePowerLimit]
[3.82508s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_8:DischargeCurrentLimit]
[3.82543s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_8:DischargeCurrentLimit]
[3.8258s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_8:DischargePowerLimit]
[3.82618s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_8:DischargePowerLimit]
[3.82674s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_rack_8":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_8",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/rack_8:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/rack_8)",
		"table":	"/assets/bms/rack_8",
		"value":	1
	},
	"runMonitor_rack_8":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_8",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"rack_8",
		"enable":	"/config/rack_8:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_8",
		"value":	1
	}
}].
[3.82744s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_8:CellTempDelta_Calculated":	{
		"amap":	"rack_8",
		"func":	"CalculateVar"
	},
	"/status/rack_8:CellVoltageDelta_Calculated":	{
		"amap":	"rack_8",
		"func":	"CalculateVar"
	}
}].
[3.82807s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_8:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_8:MinCellTemp",
		"variable2":	"/status/rack_8:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_8:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_8:MinCellVoltage",
		"variable2":	"/status/rack_8:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_8:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/rack_8:DCCurrent@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/rack_8:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[3.82881s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.82935s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.82994s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_8",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/rack_8) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"rack_8",
				"every":	1,
				"uri":	"/sched/rack_8:pubAssets_rack_8",
				"value":	1
			}, {
				"aname":	"rack_8",
				"every":	0.1,
				"uri":	"/sched/rack_8:runMonitor_rack_8",
				"value":	1
			}, {
				"aname":	"rack_8",
				"every":	1,
				"uri":	"/sched/rack_8:checkInputs_rack_8",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[3.83059s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_8",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[3.83119s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_8:HandleCmd_ClearFaults]
[3.83166s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_8:HandleCmd_ClearFaults]
[3.83251s  ] [info    ] [HandleCmd      ] reload first run [rack_8] [/controls/rack_8:ClearFaults]  reload 0
[3.83296s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/rack_8:ClearFaults]
[3.83346s  ] [info    ] [HandleCmd      ] Adding [/controls/rack_8:ClearFaults] to amap in asset [rack_8]
[3.83396s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/rack_8:ClearFaults]
[3.83427s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/rack_8:ClearFaults]
[3.83471s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/rack_8:ClearFaults":	{
		"amap":	"rack_8",
		"func":	"HandleCmd"
	}
}].
[3.83516s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/rack_8:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/rack_8:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/rack_8:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/rack_8:clear_faults and /alarms/rack_8:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[3.83577s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_8",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_8) will be reset to the normal state (defined in /config/rack_8:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[3.83626s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.83667s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.83707s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.83748s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.83792s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_8:FaultDestination]
[3.83822s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_8:FaultDestination]
[3.83863s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_8:NoFaultMsg]
[3.83889s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_8:NoFaultMsg]
[3.83936s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_8:FaultCnt]
[3.8401s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_8:FaultCnt]
[3.84048s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_8:AlarmDestination]
[3.84082s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_8:AlarmDestination]
[3.84129s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_8:NoAlarmMsg]
[3.84166s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_8:NoAlarmMsg]
[3.84197s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_8:AlarmCnt]
[3.84263s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_8:AlarmCnt]
[3.84362s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_8",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/rack_8) will be reset to the normal state (defined in /config/rack_8:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[3.84418s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.84447s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.84495s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.84536s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.8458s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_8:AnyFireFaultActive":	{
		"amap":	"rack_8",
		"func":	"CalculateVar"
	},
	"/status/rack_8:TotalAlarmCnt":	{
		"amap":	"rack_8",
		"func":	"CalculateVar"
	},
	"/status/rack_8:TotalFaultCnt":	{
		"amap":	"rack_8",
		"func":	"CalculateVar"
	}
}].
[3.84651s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/rack_8:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_8",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_8:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_8:FaultCnt"
	}
}].
[3.84749s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sbmu_master_negative":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/rack_8:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/rack_8:DCClosed"
						}]
				}]
		},
		"enable":	"/config/rack_8:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[3.8481s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"value":	"/components/catl_rack_8:sbmu_avg_cell_temp",
		"vlink":	"/status/rack_8:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_rack_8:sbmu_avg_cell_voltage",
		"vlink":	"/status/rack_8:AvgCellVoltage"
	},
	"dc_current":	{
		"value":	"/components/catl_rack_8:sbmu_current",
		"vlink":	"/status/rack_8:DCCurrent"
	},
	"dc_voltage":	{
		"value":	"/components/catl_rack_8:sbmu_voltage",
		"vlink":	"/status/rack_8:DCVoltage"
	},
	"max_cell_temp":	{
		"value":	"/components/catl_rack_8:sbmu_max_cell_temp",
		"vlink":	"/status/rack_8:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_rack_8:sbmu_max_cell_voltage",
		"vlink":	"/status/rack_8:MaxCellVoltage"
	},
	"min_cell_temp":	{
		"value":	"/components/catl_rack_8:sbmu_min_cell_temp",
		"vlink":	"/status/rack_8:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_rack_8:sbmu_min_cell_voltage",
		"vlink":	"/status/rack_8:MinCellVoltage"
	},
	"soc":	{
		"value":	"/components/catl_rack_8:sbmu_soc",
		"vlink":	"/status/rack_8:SOC"
	},
	"soh":	{
		"value":	"/components/catl_rack_8:sbmu_soh",
		"vlink":	"/status/rack_8:SOH"
	}
}].
[3.84853s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_avg_cell_temp]
[3.84909s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_avg_cell_temp]
[3.84988s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_avg_cell_voltage]
[3.8505s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_avg_cell_voltage]
[3.85114s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_current]
[3.85166s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_current]
[3.85227s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_voltage]
[3.85283s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_voltage]
[3.85326s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_max_cell_temp]
[3.85376s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_max_cell_temp]
[3.85525s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_max_cell_voltage]
[3.85592s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_max_cell_voltage]
[3.85631s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_min_cell_temp]
[3.85683s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_min_cell_temp]
[3.85739s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_min_cell_voltage]
[3.85927s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_min_cell_voltage]
[3.86075s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_soc]
[3.86249s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_soc]
[3.86297s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_soh]
[3.8634s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_soh]
[3.86401s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_8",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/rack_8:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/rack_8:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_8",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/rack_8:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[3.86496s  ] [info    ] [LogInfo        ] [/assets/bms/rack_8:maint_mode] received a value of [false]
[3.86575s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.86609s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.86676s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/rack_8:avg_cell_temp",
		"vlink":	"/status/rack_8:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/rack_8:avg_cell_voltage",
		"vlink":	"/status/rack_8:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/rack_8:cell_temp_delta",
		"vlink":	"/status/rack_8:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/rack_8:cell_voltage_delta",
		"vlink":	"/status/rack_8:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/rack_8:dc_contactors_closed",
		"vlink":	"/status/rack_8:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/rack_8:dc_current",
		"vlink":	"/status/rack_8:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/rack_8:dc_power",
		"vlink":	"/status/rack_8:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/rack_8:dc_voltage",
		"vlink":	"/status/rack_8:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/rack_8:max_cell_temp",
		"vlink":	"/status/rack_8:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/rack_8:max_cell_voltage",
		"vlink":	"/status/rack_8:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/rack_8:max_charge_current",
		"vlink":	"/limits/rack_8:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/rack_8:max_charge_power",
		"vlink":	"/limits/rack_8:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/rack_8:max_discharge_current",
		"vlink":	"/limits/rack_8:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/rack_8:max_discharge_power",
		"vlink":	"/limits/rack_8:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/rack_8:min_cell_temp",
		"vlink":	"/status/rack_8:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/rack_8:min_cell_voltage",
		"vlink":	"/status/rack_8:MinCellVoltage"
	},
	"ui_soc":	{
		"value":	"/assets/bms/rack_8:soc",
		"vlink":	"/status/rack_8:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/rack_8:soh",
		"vlink":	"/status/rack_8:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/rack_8:status",
		"vlink":	"/status/rack_8:Status"
	}
}].
[3.86718s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:avg_cell_temp]
[3.86753s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:avg_cell_temp]
[3.86784s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:avg_cell_voltage]
[3.86812s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:avg_cell_voltage]
[3.86846s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:cell_temp_delta]
[3.86874s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:cell_temp_delta]
[3.86915s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:cell_voltage_delta]
[3.86944s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:cell_voltage_delta]
[3.86976s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:dc_contactors_closed]
[3.87007s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:dc_contactors_closed]
[3.87043s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:dc_current]
[3.8708s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:dc_current]
[3.87134s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:dc_power]
[3.87165s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:dc_power]
[3.87206s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:dc_voltage]
[3.87246s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:dc_voltage]
[3.87282s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:max_cell_temp]
[3.87313s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:max_cell_temp]
[3.87372s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:max_cell_voltage]
[3.87417s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:max_cell_voltage]
[3.87453s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:max_charge_current]
[3.87487s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:max_charge_current]
[3.87525s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:max_charge_power]
[3.87559s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:max_charge_power]
[3.87597s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:max_discharge_current]
[3.87634s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:max_discharge_current]
[3.87679s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:max_discharge_power]
[3.87719s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:max_discharge_power]
[3.87752s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:min_cell_temp]
[3.87793s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:min_cell_temp]
[3.87841s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:min_cell_voltage]
[3.87873s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:min_cell_voltage]
[3.87921s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:soc]
[3.87967s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:soc]
[3.88003s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:soh]
[3.88036s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:soh]
[3.88068s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:status]
[3.88098s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:status]
[3.88183s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [rack_9]
[3.88224s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [rack_9] parent am [bms] 
[3.88304s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [rack_9]
[3.88345s  ] [info    ] [configure_vmapS] body: {"/config/rack_9":{"AlarmDestination":"/assets/bms/rack_9:alarms","FaultDestination":"/assets/bms/rack_9:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/rack_9":{"ChargeCurrentLimit":{"value":"/limits/rack_9:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/rack_9:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/rack_9:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/rack_9:DischargePowerLimit"}},"/sched/rack_9":{"pubAssets_rack_9":{"actions":{"onSet":[{"func":[{"amap":"rack_9","func":"RunPub"}]}]},"enable":"/config/rack_9:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/rack_9)","table":"/assets/bms/rack_9","value":1},"runMonitor_rack_9":{"actions":{"onSet":[{"func":[{"amap":"rack_9","func":"RunMonitor"}]}]},"aname":"rack_9","enable":"/config/rack_9:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_9","value":1}},"/schedule/wake_monitor/rack_9":{"/status/rack_9:CellTempDelta_Calculated":{"amap":"rack_9","func":"CalculateVar"},"/status/rack_9:CellVoltageDelta_Calculated":{"amap":"rack_9","func":"CalculateVar"}},"/status/rack_9":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_9:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_9:MinCellTemp","variable2":"/status/rack_9:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_9:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_9:MinCellVoltage","variable2":"/status/rack_9:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_9:DCCurrent@EnableMaxValCheck"},{"uri":"/status/rack_9:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/rack_9:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"rack_9","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/rack_9) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"rack_9","every":1,"uri":"/sched/rack_9:pubAssets_rack_9","value":1},{"aname":"rack_9","every":0.1,"uri":"/sched/rack_9:runMonitor_rack_9","value":1},{"aname":"rack_9","every":1,"uri":"/sched/rack_9:checkInputs_rack_9","value":1}],"targav":"/system/commands:run","value":false}},"/controls/rack_9":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"rack_9","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/rack_9":{"/controls/rack_9:ClearFaults":{"amap":"rack_9","func":"HandleCmd"}},"/status/rack_9":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/rack_9:clear_faults"},{"outValue":"Clear","uri":"/alarms/rack_9:clear_alarms"}]}]},"enable":"/config/rack_9:enable","ifChanged":false,"note":"When this variable is set, /faults/rack_9:clear_faults and /alarms/rack_9:clear_alarms will be set to Clear","value":false}},"/alarms/rack_9":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"rack_9","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_9) will be reset to the normal state (defined in /config/rack_9:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/rack_9":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_9","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/rack_9) will be reset to the normal state (defined in /config/rack_9:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/rack_9":{"/status/rack_9:AnyFireFaultActive":{"amap":"rack_9","func":"CalculateVar"},"/status/rack_9:TotalAlarmCnt":{"amap":"rack_9","func":"CalculateVar"},"/status/rack_9:TotalFaultCnt":{"amap":"rack_9","func":"CalculateVar"}},"/status/rack_9":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/rack_9:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"rack_9","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_9:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_9:FaultCnt"}},"/components/catl_rack_9":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/rack_9:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/rack_9:DCClosed"}]}]},"enable":"/config/rack_9:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/rack_9":{"avg_cell_temp":{"value":"/components/catl_rack_9:sbmu_avg_cell_temp","vlink":"/status/rack_9:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_rack_9:sbmu_avg_cell_voltage","vlink":"/status/rack_9:AvgCellVoltage"},"dc_current":{"value":"/components/catl_rack_9:sbmu_current","vlink":"/status/rack_9:DCCurrent"},"dc_voltage":{"value":"/components/catl_rack_9:sbmu_voltage","vlink":"/status/rack_9:DCVoltage"},"max_cell_temp":{"value":"/components/catl_rack_9:sbmu_max_cell_temp","vlink":"/status/rack_9:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_rack_9:sbmu_max_cell_voltage","vlink":"/status/rack_9:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_rack_9:sbmu_min_cell_temp","vlink":"/status/rack_9:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_rack_9:sbmu_min_cell_voltage","vlink":"/status/rack_9:MinCellVoltage"},"soc":{"value":"/components/catl_rack_9:sbmu_soc","vlink":"/status/rack_9:SOC"},"soh":{"value":"/components/catl_rack_9:sbmu_soh","vlink":"/status/rack_9:SOH"}},"/assets/bms/rack_9":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_9","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/rack_9:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/rack_9:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"rack_9","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/rack_9:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/rack_9":{"ui_avg_cell_temp":{"value":"/assets/bms/rack_9:avg_cell_temp","vlink":"/status/rack_9:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/rack_9:avg_cell_voltage","vlink":"/status/rack_9:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/rack_9:cell_temp_delta","vlink":"/status/rack_9:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/rack_9:cell_voltage_delta","vlink":"/status/rack_9:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/rack_9:dc_contactors_closed","vlink":"/status/rack_9:DCClosed"},"ui_dc_current":{"value":"/assets/bms/rack_9:dc_current","vlink":"/status/rack_9:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/rack_9:dc_power","vlink":"/status/rack_9:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/rack_9:dc_voltage","vlink":"/status/rack_9:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/rack_9:max_cell_temp","vlink":"/status/rack_9:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/rack_9:max_cell_voltage","vlink":"/status/rack_9:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/rack_9:max_charge_current","vlink":"/limits/rack_9:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/rack_9:max_charge_power","vlink":"/limits/rack_9:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/rack_9:max_discharge_current","vlink":"/limits/rack_9:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/rack_9:max_discharge_power","vlink":"/limits/rack_9:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/rack_9:min_cell_temp","vlink":"/status/rack_9:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/rack_9:min_cell_voltage","vlink":"/status/rack_9:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/rack_9:soc","vlink":"/status/rack_9:SOC"},"ui_soh":{"value":"/assets/bms/rack_9:soh","vlink":"/status/rack_9:SOH"},"ui_status":{"value":"/assets/bms/rack_9:status","vlink":"/status/rack_9:Status"}}}
[3.88537s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.88579s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/rack_9:alarms",
	"FaultDestination":	"/assets/bms/rack_9:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[3.88635s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:alarms]
[3.88662s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:alarms]
[3.88702s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:faults]
[3.88734s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:faults]
[3.88782s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.8881s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.88844s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.88873s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.88966s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/rack_9:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/rack_9:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/rack_9:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/rack_9:DischargePowerLimit"
	}
}].
[3.89009s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_9:ChargeCurrentLimit]
[3.89044s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_9:ChargeCurrentLimit]
[3.89103s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_9:ChargePowerLimit]
[3.8914s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_9:ChargePowerLimit]
[3.89182s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_9:DischargeCurrentLimit]
[3.89224s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_9:DischargeCurrentLimit]
[3.89268s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_9:DischargePowerLimit]
[3.89301s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_9:DischargePowerLimit]
[3.89348s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_rack_9":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_9",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/rack_9:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/rack_9)",
		"table":	"/assets/bms/rack_9",
		"value":	1
	},
	"runMonitor_rack_9":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_9",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"rack_9",
		"enable":	"/config/rack_9:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_9",
		"value":	1
	}
}].
[3.89424s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_9:CellTempDelta_Calculated":	{
		"amap":	"rack_9",
		"func":	"CalculateVar"
	},
	"/status/rack_9:CellVoltageDelta_Calculated":	{
		"amap":	"rack_9",
		"func":	"CalculateVar"
	}
}].
[3.89472s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_9:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_9:MinCellTemp",
		"variable2":	"/status/rack_9:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_9:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_9:MinCellVoltage",
		"variable2":	"/status/rack_9:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_9:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/rack_9:DCCurrent@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/rack_9:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[3.89527s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.89568s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.89625s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_9",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/rack_9) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"rack_9",
				"every":	1,
				"uri":	"/sched/rack_9:pubAssets_rack_9",
				"value":	1
			}, {
				"aname":	"rack_9",
				"every":	0.1,
				"uri":	"/sched/rack_9:runMonitor_rack_9",
				"value":	1
			}, {
				"aname":	"rack_9",
				"every":	1,
				"uri":	"/sched/rack_9:checkInputs_rack_9",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[3.89682s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_9",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[3.89728s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_9:HandleCmd_ClearFaults]
[3.89768s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_9:HandleCmd_ClearFaults]
[3.89802s  ] [info    ] [HandleCmd      ] reload first run [rack_9] [/controls/rack_9:ClearFaults]  reload 0
[3.89834s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/rack_9:ClearFaults]
[3.89869s  ] [info    ] [HandleCmd      ] Adding [/controls/rack_9:ClearFaults] to amap in asset [rack_9]
[3.89917s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/rack_9:ClearFaults]
[3.89952s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/rack_9:ClearFaults]
[3.89995s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/rack_9:ClearFaults":	{
		"amap":	"rack_9",
		"func":	"HandleCmd"
	}
}].
[3.90038s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/rack_9:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/rack_9:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/rack_9:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/rack_9:clear_faults and /alarms/rack_9:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[3.90095s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_9",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_9) will be reset to the normal state (defined in /config/rack_9:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[3.90137s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.90172s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.90226s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.90263s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.90303s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_9:FaultDestination]
[3.90334s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_9:FaultDestination]
[3.90388s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_9:NoFaultMsg]
[3.90474s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_9:NoFaultMsg]
[3.90507s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_9:FaultCnt]
[3.90536s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_9:FaultCnt]
[3.90584s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_9:AlarmDestination]
[3.90619s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_9:AlarmDestination]
[3.90662s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_9:NoAlarmMsg]
[3.90695s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_9:NoAlarmMsg]
[3.90752s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_9:AlarmCnt]
[3.90797s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_9:AlarmCnt]
[3.90837s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_9",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/rack_9) will be reset to the normal state (defined in /config/rack_9:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[3.90887s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.90914s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.90967s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.91004s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.91059s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_9:AnyFireFaultActive":	{
		"amap":	"rack_9",
		"func":	"CalculateVar"
	},
	"/status/rack_9:TotalAlarmCnt":	{
		"amap":	"rack_9",
		"func":	"CalculateVar"
	},
	"/status/rack_9:TotalFaultCnt":	{
		"amap":	"rack_9",
		"func":	"CalculateVar"
	}
}].
[3.91135s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/rack_9:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_9",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_9:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_9:FaultCnt"
	}
}].
[3.91206s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sbmu_master_negative":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/rack_9:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/rack_9:DCClosed"
						}]
				}]
		},
		"enable":	"/config/rack_9:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[3.91252s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"value":	"/components/catl_rack_9:sbmu_avg_cell_temp",
		"vlink":	"/status/rack_9:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_rack_9:sbmu_avg_cell_voltage",
		"vlink":	"/status/rack_9:AvgCellVoltage"
	},
	"dc_current":	{
		"value":	"/components/catl_rack_9:sbmu_current",
		"vlink":	"/status/rack_9:DCCurrent"
	},
	"dc_voltage":	{
		"value":	"/components/catl_rack_9:sbmu_voltage",
		"vlink":	"/status/rack_9:DCVoltage"
	},
	"max_cell_temp":	{
		"value":	"/components/catl_rack_9:sbmu_max_cell_temp",
		"vlink":	"/status/rack_9:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_rack_9:sbmu_max_cell_voltage",
		"vlink":	"/status/rack_9:MaxCellVoltage"
	},
	"min_cell_temp":	{
		"value":	"/components/catl_rack_9:sbmu_min_cell_temp",
		"vlink":	"/status/rack_9:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_rack_9:sbmu_min_cell_voltage",
		"vlink":	"/status/rack_9:MinCellVoltage"
	},
	"soc":	{
		"value":	"/components/catl_rack_9:sbmu_soc",
		"vlink":	"/status/rack_9:SOC"
	},
	"soh":	{
		"value":	"/components/catl_rack_9:sbmu_soh",
		"vlink":	"/status/rack_9:SOH"
	}
}].
[3.91292s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_avg_cell_temp]
[3.91318s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_avg_cell_temp]
[3.91345s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_avg_cell_voltage]
[3.91365s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_avg_cell_voltage]
[3.91405s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_current]
[3.91432s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_current]
[3.91463s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_voltage]
[3.91489s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_voltage]
[3.91516s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_max_cell_temp]
[3.91549s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_max_cell_temp]
[3.91582s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_max_cell_voltage]
[3.91623s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_max_cell_voltage]
[3.91666s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_min_cell_temp]
[3.91708s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_min_cell_temp]
[3.91746s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_min_cell_voltage]
[3.91778s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_min_cell_voltage]
[3.91814s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_soc]
[3.91851s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_soc]
[3.91876s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_soh]
[3.91905s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_soh]
[3.91971s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_9",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/rack_9:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/rack_9:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_9",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/rack_9:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[3.92071s  ] [info    ] [LogInfo        ] [/assets/bms/rack_9:maint_mode] received a value of [false]
[3.92132s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.92171s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.92231s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/rack_9:avg_cell_temp",
		"vlink":	"/status/rack_9:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/rack_9:avg_cell_voltage",
		"vlink":	"/status/rack_9:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/rack_9:cell_temp_delta",
		"vlink":	"/status/rack_9:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/rack_9:cell_voltage_delta",
		"vlink":	"/status/rack_9:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/rack_9:dc_contactors_closed",
		"vlink":	"/status/rack_9:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/rack_9:dc_current",
		"vlink":	"/status/rack_9:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/rack_9:dc_power",
		"vlink":	"/status/rack_9:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/rack_9:dc_voltage",
		"vlink":	"/status/rack_9:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/rack_9:max_cell_temp",
		"vlink":	"/status/rack_9:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/rack_9:max_cell_voltage",
		"vlink":	"/status/rack_9:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/rack_9:max_charge_current",
		"vlink":	"/limits/rack_9:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/rack_9:max_charge_power",
		"vlink":	"/limits/rack_9:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/rack_9:max_discharge_current",
		"vlink":	"/limits/rack_9:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/rack_9:max_discharge_power",
		"vlink":	"/limits/rack_9:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/rack_9:min_cell_temp",
		"vlink":	"/status/rack_9:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/rack_9:min_cell_voltage",
		"vlink":	"/status/rack_9:MinCellVoltage"
	},
	"ui_soc":	{
		"value":	"/assets/bms/rack_9:soc",
		"vlink":	"/status/rack_9:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/rack_9:soh",
		"vlink":	"/status/rack_9:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/rack_9:status",
		"vlink":	"/status/rack_9:Status"
	}
}].
[3.92284s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:avg_cell_temp]
[3.92307s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:avg_cell_temp]
[3.92341s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:avg_cell_voltage]
[3.92377s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:avg_cell_voltage]
[3.92408s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:cell_temp_delta]
[3.92441s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:cell_temp_delta]
[3.92494s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:cell_voltage_delta]
[3.92551s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:cell_voltage_delta]
[3.92586s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:dc_contactors_closed]
[3.92614s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:dc_contactors_closed]
[3.92651s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:dc_current]
[3.92674s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:dc_current]
[3.927s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:dc_power]
[3.92732s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:dc_power]
[3.92757s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:dc_voltage]
[3.92779s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:dc_voltage]
[3.92803s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:max_cell_temp]
[3.92835s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:max_cell_temp]
[3.92864s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:max_cell_voltage]
[3.92898s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:max_cell_voltage]
[3.92926s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:max_charge_current]
[3.92959s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:max_charge_current]
[3.92986s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:max_charge_power]
[3.93019s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:max_charge_power]
[3.93046s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:max_discharge_current]
[3.93078s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:max_discharge_current]
[3.93113s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:max_discharge_power]
[3.93138s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:max_discharge_power]
[3.93166s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:min_cell_temp]
[3.9321s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:min_cell_temp]
[3.93241s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:min_cell_voltage]
[3.93266s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:min_cell_voltage]
[3.93293s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:soc]
[3.93323s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:soc]
[3.9337s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:soh]
[3.93398s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:soh]
[3.93422s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:status]
[3.93451s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:status]
[3.93592s  ] [info    ] [runConfig      ]  requesting cfile [pe_pcs_init] 
[3.93634s  ] [info    ] [requestCfile   ] Getting from DBI pe_pcs_init
[3.94652s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:pe_pcs_init]  am at start [no Am]
[3.94731s  ] [info    ] [configure_vmapS] process file seeking header stuff am [pcs] ai [no ai]
[3.9477s   ] [info    ] [configure_vmapS] body: {"/config/load":{"pe_pcs_init":{"aname":"pcs","file":"pe_pcs_init","new_options":[{"amname":"pcs","from":1,"pname":"ess","reps":[{"replace":"##PCS_ID##","with":"pcs_{:01d}"},{"replace":"##PCS_NUM##","with":"{:01d}"},{"replace":"##BMS_ID##","with":"bms_{:01d}"},{"replace":"##ESS_ID##","with":"ess_{:01d}"}],"tmpls":["pe_pcs_manager","pe_pcs_manager_controls","pe_pcs_manager_faults","pe_pcs_manager_client_interface","pe_pcs_manager_server_interface","pe_pcs_manager_ui"],"to":1},{"ainame":"##MODULE_ID##","from":1,"pname":"pcs","reps":[{"replace":"##MODULE_ID##","with":"module_{:01d}"},{"replace":"##MODULE_NUM##","with":"{:01d}"}],"tmpls":["pe_pcs_module","pe_pcs_module_controls","pe_pcs_module_faults","pe_pcs_module_client_interface","pe_pcs_module_server_interface","pe_pcs_module_ui"],"to":6}],"note":"Loads pe_pcs_init first. Then, configs defined in new_options, if any, are loaded next","pname":"ess","value":false}}}
[3.94808s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.94856s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pe_pcs_init":	{
		"aname":	"pcs",
		"file":	"pe_pcs_init",
		"new_options":	[{
				"amname":	"pcs",
				"from":	1,
				"pname":	"ess",
				"reps":	[{
						"replace":	"##PCS_ID##",
						"with":	"pcs_{:01d}"
					}, {
						"replace":	"##PCS_NUM##",
						"with":	"{:01d}"
					}, {
						"replace":	"##BMS_ID##",
						"with":	"bms_{:01d}"
					}, {
						"replace":	"##ESS_ID##",
						"with":	"ess_{:01d}"
					}],
				"tmpls":	["pe_pcs_manager", "pe_pcs_manager_controls", "pe_pcs_manager_faults", "pe_pcs_manager_client_interface", "pe_pcs_manager_server_interface", "pe_pcs_manager_ui"],
				"to":	1
			}, {
				"ainame":	"##MODULE_ID##",
				"from":	1,
				"pname":	"pcs",
				"reps":	[{
						"replace":	"##MODULE_ID##",
						"with":	"module_{:01d}"
					}, {
						"replace":	"##MODULE_NUM##",
						"with":	"{:01d}"
					}],
				"tmpls":	["pe_pcs_module", "pe_pcs_module_controls", "pe_pcs_module_faults", "pe_pcs_module_client_interface", "pe_pcs_module_server_interface", "pe_pcs_module_ui"],
				"to":	6
			}],
		"note":	"Loads pe_pcs_init first. Then, configs defined in new_options, if any, are loaded next",
		"pname":	"ess",
		"value":	false
	}
}].
[4.10321s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_manager] try number [1] 
[4.11424s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_manager_client_interface] try number [1] 
[4.13746s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_manager_controls] try number [1] 
[4.14681s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_manager_faults] try number [1] 
[4.14917s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_manager_server_interface] try number [1] 
[4.15169s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_manager_ui] try number [1] 
[4.3032s   ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_module] try number [1] 
[4.30554s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_module_client_interface] try number [1] 
[4.30656s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_module_controls] try number [1] 
[4.30837s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_module_faults] try number [1] 
[4.30924s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_module_server_interface] try number [1] 
[4.30968s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_module_ui] try number [1] 
[4.40877s  ] [info    ] [runConfig      ]  All files loaded for loader [pe_pcs_init] ready to run av [/config/load:pe_pcs_init] load
[4.41018s  ] [info    ] [configLoad     ] tmpls field is found in av [/config/load:pe_pcs_init]. We'll perform template expansions with tmpls instead of tmpl
[4.41138s  ] [info    ] [configLoad     ] tbody before: {"/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":4200,"RatedApparentPower":4200,"RatedPowerFactor":0.8,"RatedReactivePower":2100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"handlePowerCmd_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandlePowerCmd"}]}]},"bms":"bms","ess":"ess","note":"Processes active and reactive power commands before they are sent","pcs":"pcs","value":1},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"AvgLineVoltage":{"expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"},{"uri":"/status/pcs:NumModulesOnline@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"NumModulesTotal":6,"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:handlePowerCmd_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}}}
[4.41337s  ] [info    ] [configLoad     ] tbody now: "/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":4200,"RatedApparentPower":4200,"RatedPowerFactor":0.8,"RatedReactivePower":2100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"handlePowerCmd_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandlePowerCmd"}]}]},"bms":"bms","ess":"ess","note":"Processes active and reactive power commands before they are sent","pcs":"pcs","value":1},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"AvgLineVoltage":{"expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"},{"uri":"/status/pcs:NumModulesOnline@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"NumModulesTotal":6,"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:handlePowerCmd_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}}
[4.41601s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":4200,"RatedApparentPower":4200,"RatedPowerFactor":0.8,"RatedReactivePower":2100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"handlePowerCmd_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandlePowerCmd"}]}]},"bms":"bms","ess":"ess","note":"Processes active and reactive power commands before they are sent","pcs":"pcs","value":1},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"AvgLineVoltage":{"expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"},{"uri":"/status/pcs:NumModulesOnline@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"NumModulesTotal":6,"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:handlePowerCmd_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:p_p_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_fast:reset","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:q_q_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}}
[4.42122s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":4200,"RatedApparentPower":4200,"RatedPowerFactor":0.8,"RatedReactivePower":2100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"handlePowerCmd_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandlePowerCmd"}]}]},"bms":"bms","ess":"ess","note":"Processes active and reactive power commands before they are sent","pcs":"pcs","value":1},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"AvgLineVoltage":{"expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"},{"uri":"/status/pcs:NumModulesOnline@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"NumModulesTotal":6,"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:handlePowerCmd_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:p_p_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_fast:reset","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:q_q_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}},"/alarms/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"alarm","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/faults/pcs":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_faults[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"fault","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/schedule/wake_monitor/pcs":{"/status/pcs:ActivePower":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:DCVoltage":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:HeartbeatRead":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:IsAlarming":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:IsFaulted":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:NumModulesOnline":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:TotalAlarmCnt":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalFaultCnt":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":4200,"MaxAlarmTimeout":1,"MaxFaultThreshold":4250,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":false,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":true,"EnableStateCheck":true,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs:SystemFault","variable2":"/status/pcs:TotalFaultCnt"},"NumModulesOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalAlarmCnt","variable2":"/status/pcs:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalFaultCnt","variable2":"/status/pcs:FaultCnt"}}
[4.42832s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":4200,"RatedApparentPower":4200,"RatedPowerFactor":0.8,"RatedReactivePower":2100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"handlePowerCmd_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandlePowerCmd"}]}]},"bms":"bms","ess":"ess","note":"Processes active and reactive power commands before they are sent","pcs":"pcs","value":1},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"AvgLineVoltage":{"expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"},{"uri":"/status/pcs:NumModulesOnline@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"NumModulesTotal":6,"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:handlePowerCmd_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:p_p_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_fast:reset","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:q_q_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}},"/alarms/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"alarm","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/faults/pcs":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_faults[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"fault","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/schedule/wake_monitor/pcs":{"/status/pcs:ActivePower":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:DCVoltage":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:HeartbeatRead":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:IsAlarming":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:IsFaulted":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:NumModulesOnline":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:TotalAlarmCnt":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalFaultCnt":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":4200,"MaxAlarmTimeout":1,"MaxFaultThreshold":4250,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":false,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":true,"EnableStateCheck":true,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs:SystemFault","variable2":"/status/pcs:TotalFaultCnt"},"NumModulesOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalAlarmCnt","variable2":"/status/pcs:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalFaultCnt","variable2":"/status/pcs:FaultCnt"}},"/components/pcs_registers_fast":{"current_status":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":1,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":2,"outValue":"Run","uri":"/status/pcs:SystemState"},{"inValue":3,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":4,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":5,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":6,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":8,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":9,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":10,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":11,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":12,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":13,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":14,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":15,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":17,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":18,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":19,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":20,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":21,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":22,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":24,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":0,"outValue":"Power up","uri":"/status/pcs:Status"},{"inValue":1,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":2,"outValue":"On","uri":"/status/pcs:Status"},{"inValue":3,"outValue":"Precharge","uri":"/status/pcs:Status"},{"inValue":4,"outValue":"Ready","uri":"/status/pcs:Status"},{"inValue":5,"outValue":"Wait","uri":"/status/pcs:Status"},{"inValue":6,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:Status"},{"inValue":8,"outValue":"Discharge","uri":"/status/pcs:Status"},{"inValue":9,"outValue":"Fault","uri":"/status/pcs:Status"},{"inValue":10,"outValue":"LVRT","uri":"/status/pcs:Status"},{"inValue":11,"outValue":"OVRT","uri":"/status/pcs:Status"},{"inValue":12,"outValue":"Night","uri":"/status/pcs:Status"},{"inValue":13,"outValue":"Night DC off","uri":"/status/pcs:Status"},{"inValue":14,"outValue":"Standby","uri":"/status/pcs:Status"},{"inValue":15,"outValue":"HVPL","uri":"/status/pcs:Status"},{"inValue":17,"outValue":"Pre-on","uri":"/status/pcs:Status"},{"inValue":18,"outValue":"Self-diagnosis","uri":"/status/pcs:Status"},{"inValue":19,"outValue":"Filter contactors","uri":"/status/pcs:Status"},{"inValue":20,"outValue":"Premagnetization","uri":"/status/pcs:Status"},{"inValue":21,"outValue":"Bank balancing","uri":"/status/pcs:Status"},{"inValue":22,"outValue":"CV stand by","uri":"/status/pcs:Status"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs_registers_fast:current_status@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/pcs":{"checkInputs_pcs":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/pcs_registers_fast:current_status@ifChanged"}]}]},"enable":"/config/pcs:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/pcs":{"active_power":{"value":"/components/pcs_registers_fast:active_power","vlink":"/status/pcs:ActivePower"},"active_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:p_p_reference","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"apparent_power":{"value":"/components/pcs_registers_fast:apparent_power","vlink":"/status/pcs:ApparentPower"},"frequency":{"value":"/components/pcs_registers_fast:grid_frequency","vlink":"/status/pcs:Frequency"},"heartbeat_read":{"value":"/components/pcs_registers_fast:seconds","vlink":"/status/pcs:HeartbeatRead"},"l1_current":{"value":"/components/pcs_registers_fast:grid_current_1","vlink":"/status/pcs:L1Current"},"l1_l2_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_rs","vlink":"/status/pcs:L1L2Voltage"},"l2_current":{"value":"/components/pcs_registers_fast:grid_current_2","vlink":"/status/pcs:L2Current"},"l2_l3_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_st","vlink":"/status/pcs:L2L3Voltage"},"l3_current":{"value":"/components/pcs_registers_fast:grid_current_3","vlink":"/status/pcs:L3Current"},"l3_l1_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_tr","vlink":"/status/pcs:L3L1Voltage"},"modules_online":{"value":"/components/pcs_registers_fast:num_running_modules","vlink":"/status/pcs:NumModulesOnline"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:dc_total_i_input","vlink":"/status/pcs:DCCurrent"},"pcs_dc_power":{"value":"/components/pcs_registers_fast:dc_p_input","vlink":"/status/pcs:DCPower"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:vdc_bus_1","vlink":"/status/pcs:DCVoltage"},"power_factor":{"value":"/components/pcs_registers_fast:cosphi","vlink":"/status/pcs:PowerFactor"},"reactive_power":{"value":"/components/pcs_registers_fast:reactive_power","vlink":"/status/pcs:ReactivePower"},"reactive_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:q_q_reference","vlink":"/status/pcs:ReactivePowerSetpointFeedback"}}
[4.43152s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":4200,"RatedApparentPower":4200,"RatedPowerFactor":0.8,"RatedReactivePower":2100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"handlePowerCmd_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandlePowerCmd"}]}]},"bms":"bms","ess":"ess","note":"Processes active and reactive power commands before they are sent","pcs":"pcs","value":1},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"AvgLineVoltage":{"expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"},{"uri":"/status/pcs:NumModulesOnline@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"NumModulesTotal":6,"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:handlePowerCmd_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:p_p_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_fast:reset","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:q_q_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}},"/alarms/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"alarm","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/faults/pcs":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_faults[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"fault","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/schedule/wake_monitor/pcs":{"/status/pcs:ActivePower":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:DCVoltage":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:HeartbeatRead":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:IsAlarming":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:IsFaulted":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:NumModulesOnline":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:TotalAlarmCnt":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalFaultCnt":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":4200,"MaxAlarmTimeout":1,"MaxFaultThreshold":4250,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":false,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":true,"EnableStateCheck":true,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs:SystemFault","variable2":"/status/pcs:TotalFaultCnt"},"NumModulesOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalAlarmCnt","variable2":"/status/pcs:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalFaultCnt","variable2":"/status/pcs:FaultCnt"}},"/components/pcs_registers_fast":{"current_status":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":1,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":2,"outValue":"Run","uri":"/status/pcs:SystemState"},{"inValue":3,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":4,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":5,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":6,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":8,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":9,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":10,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":11,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":12,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":13,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":14,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":15,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":17,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":18,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":19,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":20,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":21,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":22,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":24,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":0,"outValue":"Power up","uri":"/status/pcs:Status"},{"inValue":1,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":2,"outValue":"On","uri":"/status/pcs:Status"},{"inValue":3,"outValue":"Precharge","uri":"/status/pcs:Status"},{"inValue":4,"outValue":"Ready","uri":"/status/pcs:Status"},{"inValue":5,"outValue":"Wait","uri":"/status/pcs:Status"},{"inValue":6,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:Status"},{"inValue":8,"outValue":"Discharge","uri":"/status/pcs:Status"},{"inValue":9,"outValue":"Fault","uri":"/status/pcs:Status"},{"inValue":10,"outValue":"LVRT","uri":"/status/pcs:Status"},{"inValue":11,"outValue":"OVRT","uri":"/status/pcs:Status"},{"inValue":12,"outValue":"Night","uri":"/status/pcs:Status"},{"inValue":13,"outValue":"Night DC off","uri":"/status/pcs:Status"},{"inValue":14,"outValue":"Standby","uri":"/status/pcs:Status"},{"inValue":15,"outValue":"HVPL","uri":"/status/pcs:Status"},{"inValue":17,"outValue":"Pre-on","uri":"/status/pcs:Status"},{"inValue":18,"outValue":"Self-diagnosis","uri":"/status/pcs:Status"},{"inValue":19,"outValue":"Filter contactors","uri":"/status/pcs:Status"},{"inValue":20,"outValue":"Premagnetization","uri":"/status/pcs:Status"},{"inValue":21,"outValue":"Bank balancing","uri":"/status/pcs:Status"},{"inValue":22,"outValue":"CV stand by","uri":"/status/pcs:Status"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs_registers_fast:current_status@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/pcs":{"checkInputs_pcs":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/pcs_registers_fast:current_status@ifChanged"}]}]},"enable":"/config/pcs:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/pcs":{"active_power":{"value":"/components/pcs_registers_fast:active_power","vlink":"/status/pcs:ActivePower"},"active_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:p_p_reference","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"apparent_power":{"value":"/components/pcs_registers_fast:apparent_power","vlink":"/status/pcs:ApparentPower"},"frequency":{"value":"/components/pcs_registers_fast:grid_frequency","vlink":"/status/pcs:Frequency"},"heartbeat_read":{"value":"/components/pcs_registers_fast:seconds","vlink":"/status/pcs:HeartbeatRead"},"l1_current":{"value":"/components/pcs_registers_fast:grid_current_1","vlink":"/status/pcs:L1Current"},"l1_l2_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_rs","vlink":"/status/pcs:L1L2Voltage"},"l2_current":{"value":"/components/pcs_registers_fast:grid_current_2","vlink":"/status/pcs:L2Current"},"l2_l3_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_st","vlink":"/status/pcs:L2L3Voltage"},"l3_current":{"value":"/components/pcs_registers_fast:grid_current_3","vlink":"/status/pcs:L3Current"},"l3_l1_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_tr","vlink":"/status/pcs:L3L1Voltage"},"modules_online":{"value":"/components/pcs_registers_fast:num_running_modules","vlink":"/status/pcs:NumModulesOnline"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:dc_total_i_input","vlink":"/status/pcs:DCCurrent"},"pcs_dc_power":{"value":"/components/pcs_registers_fast:dc_p_input","vlink":"/status/pcs:DCPower"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:vdc_bus_1","vlink":"/status/pcs:DCVoltage"},"power_factor":{"value":"/components/pcs_registers_fast:cosphi","vlink":"/status/pcs:PowerFactor"},"reactive_power":{"value":"/components/pcs_registers_fast:reactive_power","vlink":"/status/pcs:ReactivePower"},"reactive_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:q_q_reference","vlink":"/status/pcs:ReactivePowerSetpointFeedback"}},"/site/ess":{"active_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enable":"/config/pcs:enable","name":"Active Power Ramp Rate","note":"Sets the active power ramp rate","type":"control","units":"kW/s","value":0},"active_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Active Power Setpoint","note":"Sets the active power setpoint","signed":true,"type":"control","units":"kW","value":0},"frequency_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","name":"Frequency Setpoint","note":"Sets the frequency setpoint","type":"control","units":"Hz","value":0},"on_off_grid_mode_setting":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":1,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":1,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"},{"inValue":2,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":2,"outValue":2,"uri":"/controls/pcs:GridFormVF"},{"inValue":3,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":3,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"name":"Grid-following/forming Mode Command","note":"Initiates PCS grid-following/forming command routines","type":"control","value":0},"pcs_active_power":{"name":"PCS Active Power","signed":true,"type":"status","units":"kW","value":0},"pcs_active_power_ramp_rate_feedback":{"name":"PCS Active Power Ramp Rate Feedback","type":"status","units":"kW/s","value":0},"pcs_active_power_setpoint_feedback":{"name":"PCS Active Power Setpoint Feedback","signed":true,"type":"status","units":"kW","value":0},"pcs_alarm_active":{"name":"PCS Alarm Active","type":"status","value":false},"pcs_apparent_power":{"name":"PCS Apparent Power","signed":true,"type":"status","units":"kVA","value":0},"pcs_avg_line_voltage":{"name":"PCS Average Line Voltage","type":"status","units":"V","value":0},"pcs_comms_ok":{"name":"PCS Comms OK","type":"status","value":false},"pcs_control_alarms":{"bit0":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit10":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit11":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit12":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit13":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit14":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","bit15":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","bit16":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","bit17":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","bit18":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit19":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit2":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit20":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","bit21":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","bit22":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","bit23":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","bit24":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit4":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit5":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit6":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit7":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit8":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit9":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","name":"PCS Control Alarms","type":"bitfield","value":0},"pcs_dc_current":{"name":"PCS DC Current","scale":10,"signed":true,"type":"status","units":"A","value":0},"pcs_dc_power":{"name":"PCS DC Power","scale":10,"signed":true,"type":"status","units":"kW","value":0},"pcs_dc_voltage":{"name":"PCS DC Voltage","scale":10,"signed":true,"type":"status","units":"V","value":0},"pcs_fault_active":{"name":"PCS Fault Active","type":"status","value":false},"pcs_frequency":{"name":"PCS Grid Frequency","scale":100,"type":"status","units":"Hz","value":0},"pcs_frequency_setpoint_feedback":{"name":"PCS Frequency Setpoint Feedback","type":"status","units":"Hz","value":0},"pcs_grid_mode":{"bit0":"FollowPQ","bit1":"FormVF","bit2":"FormVSG","name":"PCS Grid Mode","type":"bitfield","value":0},"pcs_is_running":{"name":"PCS is Running","type":"status","value":false},"pcs_l1_current":{"name":"PCS Grid Current 1","scale":10,"type":"status","units":"A","value":0},"pcs_l1_l2_voltage":{"name":"PCS Grid Voltage L1-L2","type":"status","units":"V","value":0},"pcs_l2_current":{"name":"PCS Grid Current 2","scale":10,"type":"status","units":"A","value":0},"pcs_l2_l3_voltage":{"name":"PCS Grid Voltage L2-L3","type":"status","units":"V","value":0},"pcs_l3_current":{"name":"PCS Grid Current 3","scale":10,"type":"status","units":"A","value":0},"pcs_l3_l1_voltage":{"name":"PCS Grid Voltage L3-L1","type":"status","units":"V","value":0},"pcs_max_charge_power":{"name":"PCS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"pcs_max_discharge_power":{"name":"PCS Max Discharge Power","type":"status","units":"kW","value":0},"pcs_max_igbt_temperature":{"name":"PCS Max IGBT Temperature","scale":100,"type":"status","units":"°C","value":0},"pcs_monitor_alarms":{"bit0":"PCS Active Power Max Threshold Exceeded","bit1":"PCS DC Voltage Max Threshold Exceeded","bit2":"PCS DC Voltage Min Threshold Exceeded","bit3":"PCS Number of Modules Online Below Min Threshold","name":"PCS Monitor Alarms","type":"bitfield","value":0},"pcs_monitor_faults":{"bit0":"PCS Active Power Max Threshold Exceeded","bit1":"PCS DC Voltage Max Threshold Exceeded","bit2":"PCS DC Voltage Min Threshold Exceeded","bit3":"PCS Number of Modules Online Below Min Threshold","name":"PCS Monitor Faults","type":"bitfield","value":0},"pcs_num_modules_online":{"name":"PCS Number of Modules Online","type":"status","value":0},"pcs_num_modules_total":{"name":"PCS Number of Modules Total","type":"status","value":0},"pcs_power_factor":{"name":"PCS Power Factor","scale":1000,"signed":true,"type":"status","value":0},"pcs_rated_active_power":{"name":"PCS Rated Active Power","signed":true,"type":"status","units":"kW","value":0},"pcs_rated_apparent_power":{"name":"PCS Rated Apparent Power","signed":true,"type":"status","units":"kVA","value":0},"pcs_rated_reactive_power":{"name":"PCS Rated Reactive Power","signed":true,"type":"status","units":"kVAR","value":0},"pcs_reactive_power":{"name":"PCS Reactive Power","signed":true,"type":"status","units":"kVAR","value":0},"pcs_reactive_power_ramp_rate_feedback":{"name":"PCS Reactive Power Ramp Rate Feedback","type":"status","units":"kVAR/s","value":0},"pcs_reactive_power_setpoint_feedback":{"name":"PCS Reactive Power Setpoint Feedback","signed":true,"type":"status","units":"kVAR","value":0},"pcs_standby_enabled":{"excludeFromFile":true,"name":"PCS Standby Enabled","type":"status","value":false},"pcs_start_enabled":{"excludeFromFile":true,"name":"PCS Start Enabled","type":"status","value":false},"pcs_status":{"excludeFromFile":true,"name":"PCS Status","type":"status","value":"INIT"},"pcs_stop_enabled":{"excludeFromFile":true,"name":"PCS Stop Enabled","type":"status","value":false},"pcs_system_state":{"bit0":"Stop","bit1":"Run","bit2":"Fault","bit3":"Standby","name":"PCS System State","type":"bitfield","value":0},"pcs_voltage_setpoint_feedback":{"name":"PCS Voltage Setpoint Feedback","type":"status","units":"V","value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enable":"/config/pcs:enable","name":"Reactive Power Ramp Rate","note":"Sets the reactive power ramp rate","type":"control","units":"kVAR/s","value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Reactive Power Setpoint","note":"Sets the reactive power setpoint","signed":true,"type":"control","units":"kVAR","value":0},"start_stop_standby_command":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/pcs:enable","every":0.5,"ifChanged":false,"name":"Start/Stop/Standby Command","note1":"Initiates PCS start, standby, or stop command routines","note2":"0-\u003estop | 1-\u003estart | 2-\u003estandby","offset":0,"size":1,"type":"control","uri":"/sched/ess:SitePCSStatusControl","value":-1},"voltage_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Voltage Setpoint","note":"Sets the voltage setpoint","type":"control","units":"V","value":0}},"/vlinks/pcs":{"site_pcs_active_power":{"value":"/site/ess:pcs_active_power","vlink":"/status/pcs:ActivePower"},"site_pcs_active_power_ramp_rate_feedback":{"value":"/site/ess:pcs_active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"site_pcs_active_power_setpoint_feedback":{"value":"/site/ess:pcs_active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"site_pcs_alarm_active":{"value":"/site/ess:pcs_alarm_active","vlink":"/status/pcs:IsAlarming"},"site_pcs_apparent_power":{"value":"/site/ess:pcs_apparent_power","vlink":"/status/pcs:ApparentPower"},"site_pcs_avg_line_voltage":{"value":"/site/ess:pcs_avg_line_voltage","vlink":"/status/pcs:AvgLineVoltage"},"site_pcs_comms_ok":{"value":"/site/ess:pcs_comms_ok","vlink":"/status/pcs:CommsOK"},"site_pcs_dc_current":{"value":"/site/ess:pcs_dc_current","vlink":"/status/pcs:DCCurrent"},"site_pcs_dc_power":{"value":"/site/ess:pcs_dc_power","vlink":"/status/pcs:DCPower"},"site_pcs_dc_voltage":{"value":"/site/ess:pcs_dc_voltage","vlink":"/status/pcs:DCVoltage"},"site_pcs_fault_active":{"value":"/site/ess:pcs_fault_active","vlink":"/status/pcs:IsFaulted"},"site_pcs_frequency":{"value":"/site/ess:pcs_frequency","vlink":"/status/pcs:Frequency"},"site_pcs_frequency_setpoint_feedback":{"value":"/site/ess:pcs_frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"site_pcs_is_running":{"value":"/site/ess:pcs_is_running","vlink":"/status/pcs:IsRunning"},"site_pcs_l1_current":{"value":"/site/ess:pcs_l1_current","vlink":"/status/pcs:L1Current"},"site_pcs_l1_l2_voltage":{"value":"/site/ess:pcs_l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"site_pcs_l2_current":{"value":"/site/ess:pcs_l2_current","vlink":"/status/pcs:L2Current"},"site_pcs_l2_l3_voltage":{"value":"/site/ess:pcs_l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"site_pcs_l3_current":{"value":"/site/ess:pcs_l3_current","vlink":"/status/pcs:L3Current"},"site_pcs_l3_l1_voltage":{"value":"/site/ess:pcs_l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"site_pcs_max_charge_power":{"value":"/site/ess:pcs_max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"site_pcs_max_discharge_power":{"value":"/site/ess:pcs_max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"site_pcs_max_igbt_temperature":{"value":"/site/ess:pcs_max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"site_pcs_num_modules_online":{"value":"/site/ess:pcs_num_modules_online","vlink":"/status/pcs:NumModulesOnline"},"site_pcs_num_modules_total":{"value":"/site/ess:pcs_num_modules_total","vlink":"/status/pcs:NumModulesTotal"},"site_pcs_power_factor":{"value":"/site/ess:pcs_power_factor","vlink":"/status/pcs:PowerFactor"},"site_pcs_rated_active_power":{"value":"/site/ess:pcs_rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"site_pcs_rated_apparent_power":{"value":"/site/ess:pcs_rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"site_pcs_rated_reactive_power":{"value":"/site/ess:pcs_rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"site_pcs_reactive_power":{"value":"/site/ess:pcs_reactive_power","vlink":"/status/pcs:ReactivePower"},"site_pcs_reactive_power_ramp_rate_feedback":{"value":"/site/ess:pcs_reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"site_pcs_reactive_power_setpoint_feedback":{"value":"/site/ess:pcs_reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"site_pcs_standby_enabled":{"value":"/site/ess:pcs_standby_enabled","vlink":"/status/pcs:StandbyEnabled"},"site_pcs_start_enabled":{"value":"/site/ess:pcs_start_enabled","vlink":"/status/pcs:StartEnabled"},"site_pcs_status":{"value":"/site/ess:pcs_status","vlink":"/status/pcs:Status"},"site_pcs_stop_enabled":{"value":"/site/ess:pcs_stop_enabled","vlink":"/status/pcs:StopEnabled"},"site_pcs_voltage_setpoint_feedback":{"value":"/site/ess:pcs_voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}}
[4.43515s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":4200,"RatedApparentPower":4200,"RatedPowerFactor":0.8,"RatedReactivePower":2100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"handlePowerCmd_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandlePowerCmd"}]}]},"bms":"bms","ess":"ess","note":"Processes active and reactive power commands before they are sent","pcs":"pcs","value":1},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"AvgLineVoltage":{"expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"},{"uri":"/status/pcs:NumModulesOnline@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"NumModulesTotal":6,"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:handlePowerCmd_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:p_p_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_fast:reset","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:q_q_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}},"/alarms/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"alarm","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/faults/pcs":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_faults[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"fault","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/schedule/wake_monitor/pcs":{"/status/pcs:ActivePower":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:DCVoltage":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:HeartbeatRead":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:IsAlarming":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:IsFaulted":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:NumModulesOnline":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:TotalAlarmCnt":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalFaultCnt":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":4200,"MaxAlarmTimeout":1,"MaxFaultThreshold":4250,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":false,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":true,"EnableStateCheck":true,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs:SystemFault","variable2":"/status/pcs:TotalFaultCnt"},"NumModulesOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalAlarmCnt","variable2":"/status/pcs:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalFaultCnt","variable2":"/status/pcs:FaultCnt"}},"/components/pcs_registers_fast":{"current_status":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":1,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":2,"outValue":"Run","uri":"/status/pcs:SystemState"},{"inValue":3,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":4,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":5,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":6,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":8,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":9,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":10,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":11,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":12,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":13,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":14,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":15,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":17,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":18,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":19,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":20,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":21,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":22,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":24,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":0,"outValue":"Power up","uri":"/status/pcs:Status"},{"inValue":1,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":2,"outValue":"On","uri":"/status/pcs:Status"},{"inValue":3,"outValue":"Precharge","uri":"/status/pcs:Status"},{"inValue":4,"outValue":"Ready","uri":"/status/pcs:Status"},{"inValue":5,"outValue":"Wait","uri":"/status/pcs:Status"},{"inValue":6,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:Status"},{"inValue":8,"outValue":"Discharge","uri":"/status/pcs:Status"},{"inValue":9,"outValue":"Fault","uri":"/status/pcs:Status"},{"inValue":10,"outValue":"LVRT","uri":"/status/pcs:Status"},{"inValue":11,"outValue":"OVRT","uri":"/status/pcs:Status"},{"inValue":12,"outValue":"Night","uri":"/status/pcs:Status"},{"inValue":13,"outValue":"Night DC off","uri":"/status/pcs:Status"},{"inValue":14,"outValue":"Standby","uri":"/status/pcs:Status"},{"inValue":15,"outValue":"HVPL","uri":"/status/pcs:Status"},{"inValue":17,"outValue":"Pre-on","uri":"/status/pcs:Status"},{"inValue":18,"outValue":"Self-diagnosis","uri":"/status/pcs:Status"},{"inValue":19,"outValue":"Filter contactors","uri":"/status/pcs:Status"},{"inValue":20,"outValue":"Premagnetization","uri":"/status/pcs:Status"},{"inValue":21,"outValue":"Bank balancing","uri":"/status/pcs:Status"},{"inValue":22,"outValue":"CV stand by","uri":"/status/pcs:Status"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs_registers_fast:current_status@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/pcs":{"checkInputs_pcs":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/pcs_registers_fast:current_status@ifChanged"}]}]},"enable":"/config/pcs:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/pcs":{"active_power":{"value":"/components/pcs_registers_fast:active_power","vlink":"/status/pcs:ActivePower"},"active_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:p_p_reference","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"apparent_power":{"value":"/components/pcs_registers_fast:apparent_power","vlink":"/status/pcs:ApparentPower"},"frequency":{"value":"/components/pcs_registers_fast:grid_frequency","vlink":"/status/pcs:Frequency"},"heartbeat_read":{"value":"/components/pcs_registers_fast:seconds","vlink":"/status/pcs:HeartbeatRead"},"l1_current":{"value":"/components/pcs_registers_fast:grid_current_1","vlink":"/status/pcs:L1Current"},"l1_l2_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_rs","vlink":"/status/pcs:L1L2Voltage"},"l2_current":{"value":"/components/pcs_registers_fast:grid_current_2","vlink":"/status/pcs:L2Current"},"l2_l3_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_st","vlink":"/status/pcs:L2L3Voltage"},"l3_current":{"value":"/components/pcs_registers_fast:grid_current_3","vlink":"/status/pcs:L3Current"},"l3_l1_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_tr","vlink":"/status/pcs:L3L1Voltage"},"modules_online":{"value":"/components/pcs_registers_fast:num_running_modules","vlink":"/status/pcs:NumModulesOnline"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:dc_total_i_input","vlink":"/status/pcs:DCCurrent"},"pcs_dc_power":{"value":"/components/pcs_registers_fast:dc_p_input","vlink":"/status/pcs:DCPower"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:vdc_bus_1","vlink":"/status/pcs:DCVoltage"},"power_factor":{"value":"/components/pcs_registers_fast:cosphi","vlink":"/status/pcs:PowerFactor"},"reactive_power":{"value":"/components/pcs_registers_fast:reactive_power","vlink":"/status/pcs:ReactivePower"},"reactive_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:q_q_reference","vlink":"/status/pcs:ReactivePowerSetpointFeedback"}},"/site/ess":{"active_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enable":"/config/pcs:enable","name":"Active Power Ramp Rate","note":"Sets the active power ramp rate","type":"control","units":"kW/s","value":0},"active_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Active Power Setpoint","note":"Sets the active power setpoint","signed":true,"type":"control","units":"kW","value":0},"frequency_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","name":"Frequency Setpoint","note":"Sets the frequency setpoint","type":"control","units":"Hz","value":0},"on_off_grid_mode_setting":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":1,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":1,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"},{"inValue":2,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":2,"outValue":2,"uri":"/controls/pcs:GridFormVF"},{"inValue":3,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":3,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"name":"Grid-following/forming Mode Command","note":"Initiates PCS grid-following/forming command routines","type":"control","value":0},"pcs_active_power":{"name":"PCS Active Power","signed":true,"type":"status","units":"kW","value":0},"pcs_active_power_ramp_rate_feedback":{"name":"PCS Active Power Ramp Rate Feedback","type":"status","units":"kW/s","value":0},"pcs_active_power_setpoint_feedback":{"name":"PCS Active Power Setpoint Feedback","signed":true,"type":"status","units":"kW","value":0},"pcs_alarm_active":{"name":"PCS Alarm Active","type":"status","value":false},"pcs_apparent_power":{"name":"PCS Apparent Power","signed":true,"type":"status","units":"kVA","value":0},"pcs_avg_line_voltage":{"name":"PCS Average Line Voltage","type":"status","units":"V","value":0},"pcs_comms_ok":{"name":"PCS Comms OK","type":"status","value":false},"pcs_control_alarms":{"bit0":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit10":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit11":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit12":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit13":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit14":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","bit15":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","bit16":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","bit17":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","bit18":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit19":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit2":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit20":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","bit21":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","bit22":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","bit23":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","bit24":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit4":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit5":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit6":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit7":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit8":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit9":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","name":"PCS Control Alarms","type":"bitfield","value":0},"pcs_dc_current":{"name":"PCS DC Current","scale":10,"signed":true,"type":"status","units":"A","value":0},"pcs_dc_power":{"name":"PCS DC Power","scale":10,"signed":true,"type":"status","units":"kW","value":0},"pcs_dc_voltage":{"name":"PCS DC Voltage","scale":10,"signed":true,"type":"status","units":"V","value":0},"pcs_fault_active":{"name":"PCS Fault Active","type":"status","value":false},"pcs_frequency":{"name":"PCS Grid Frequency","scale":100,"type":"status","units":"Hz","value":0},"pcs_frequency_setpoint_feedback":{"name":"PCS Frequency Setpoint Feedback","type":"status","units":"Hz","value":0},"pcs_grid_mode":{"bit0":"FollowPQ","bit1":"FormVF","bit2":"FormVSG","name":"PCS Grid Mode","type":"bitfield","value":0},"pcs_is_running":{"name":"PCS is Running","type":"status","value":false},"pcs_l1_current":{"name":"PCS Grid Current 1","scale":10,"type":"status","units":"A","value":0},"pcs_l1_l2_voltage":{"name":"PCS Grid Voltage L1-L2","type":"status","units":"V","value":0},"pcs_l2_current":{"name":"PCS Grid Current 2","scale":10,"type":"status","units":"A","value":0},"pcs_l2_l3_voltage":{"name":"PCS Grid Voltage L2-L3","type":"status","units":"V","value":0},"pcs_l3_current":{"name":"PCS Grid Current 3","scale":10,"type":"status","units":"A","value":0},"pcs_l3_l1_voltage":{"name":"PCS Grid Voltage L3-L1","type":"status","units":"V","value":0},"pcs_max_charge_power":{"name":"PCS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"pcs_max_discharge_power":{"name":"PCS Max Discharge Power","type":"status","units":"kW","value":0},"pcs_max_igbt_temperature":{"name":"PCS Max IGBT Temperature","scale":100,"type":"status","units":"°C","value":0},"pcs_monitor_alarms":{"bit0":"PCS Active Power Max Threshold Exceeded","bit1":"PCS DC Voltage Max Threshold Exceeded","bit2":"PCS DC Voltage Min Threshold Exceeded","bit3":"PCS Number of Modules Online Below Min Threshold","name":"PCS Monitor Alarms","type":"bitfield","value":0},"pcs_monitor_faults":{"bit0":"PCS Active Power Max Threshold Exceeded","bit1":"PCS DC Voltage Max Threshold Exceeded","bit2":"PCS DC Voltage Min Threshold Exceeded","bit3":"PCS Number of Modules Online Below Min Threshold","name":"PCS Monitor Faults","type":"bitfield","value":0},"pcs_num_modules_online":{"name":"PCS Number of Modules Online","type":"status","value":0},"pcs_num_modules_total":{"name":"PCS Number of Modules Total","type":"status","value":0},"pcs_power_factor":{"name":"PCS Power Factor","scale":1000,"signed":true,"type":"status","value":0},"pcs_rated_active_power":{"name":"PCS Rated Active Power","signed":true,"type":"status","units":"kW","value":0},"pcs_rated_apparent_power":{"name":"PCS Rated Apparent Power","signed":true,"type":"status","units":"kVA","value":0},"pcs_rated_reactive_power":{"name":"PCS Rated Reactive Power","signed":true,"type":"status","units":"kVAR","value":0},"pcs_reactive_power":{"name":"PCS Reactive Power","signed":true,"type":"status","units":"kVAR","value":0},"pcs_reactive_power_ramp_rate_feedback":{"name":"PCS Reactive Power Ramp Rate Feedback","type":"status","units":"kVAR/s","value":0},"pcs_reactive_power_setpoint_feedback":{"name":"PCS Reactive Power Setpoint Feedback","signed":true,"type":"status","units":"kVAR","value":0},"pcs_standby_enabled":{"excludeFromFile":true,"name":"PCS Standby Enabled","type":"status","value":false},"pcs_start_enabled":{"excludeFromFile":true,"name":"PCS Start Enabled","type":"status","value":false},"pcs_status":{"excludeFromFile":true,"name":"PCS Status","type":"status","value":"INIT"},"pcs_stop_enabled":{"excludeFromFile":true,"name":"PCS Stop Enabled","type":"status","value":false},"pcs_system_state":{"bit0":"Stop","bit1":"Run","bit2":"Fault","bit3":"Standby","name":"PCS System State","type":"bitfield","value":0},"pcs_voltage_setpoint_feedback":{"name":"PCS Voltage Setpoint Feedback","type":"status","units":"V","value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enable":"/config/pcs:enable","name":"Reactive Power Ramp Rate","note":"Sets the reactive power ramp rate","type":"control","units":"kVAR/s","value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Reactive Power Setpoint","note":"Sets the reactive power setpoint","signed":true,"type":"control","units":"kVAR","value":0},"start_stop_standby_command":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/pcs:enable","every":0.5,"ifChanged":false,"name":"Start/Stop/Standby Command","note1":"Initiates PCS start, standby, or stop command routines","note2":"0-\u003estop | 1-\u003estart | 2-\u003estandby","offset":0,"size":1,"type":"control","uri":"/sched/ess:SitePCSStatusControl","value":-1},"voltage_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Voltage Setpoint","note":"Sets the voltage setpoint","type":"control","units":"V","value":0}},"/vlinks/pcs":{"site_pcs_active_power":{"value":"/site/ess:pcs_active_power","vlink":"/status/pcs:ActivePower"},"site_pcs_active_power_ramp_rate_feedback":{"value":"/site/ess:pcs_active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"site_pcs_active_power_setpoint_feedback":{"value":"/site/ess:pcs_active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"site_pcs_alarm_active":{"value":"/site/ess:pcs_alarm_active","vlink":"/status/pcs:IsAlarming"},"site_pcs_apparent_power":{"value":"/site/ess:pcs_apparent_power","vlink":"/status/pcs:ApparentPower"},"site_pcs_avg_line_voltage":{"value":"/site/ess:pcs_avg_line_voltage","vlink":"/status/pcs:AvgLineVoltage"},"site_pcs_comms_ok":{"value":"/site/ess:pcs_comms_ok","vlink":"/status/pcs:CommsOK"},"site_pcs_dc_current":{"value":"/site/ess:pcs_dc_current","vlink":"/status/pcs:DCCurrent"},"site_pcs_dc_power":{"value":"/site/ess:pcs_dc_power","vlink":"/status/pcs:DCPower"},"site_pcs_dc_voltage":{"value":"/site/ess:pcs_dc_voltage","vlink":"/status/pcs:DCVoltage"},"site_pcs_fault_active":{"value":"/site/ess:pcs_fault_active","vlink":"/status/pcs:IsFaulted"},"site_pcs_frequency":{"value":"/site/ess:pcs_frequency","vlink":"/status/pcs:Frequency"},"site_pcs_frequency_setpoint_feedback":{"value":"/site/ess:pcs_frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"site_pcs_is_running":{"value":"/site/ess:pcs_is_running","vlink":"/status/pcs:IsRunning"},"site_pcs_l1_current":{"value":"/site/ess:pcs_l1_current","vlink":"/status/pcs:L1Current"},"site_pcs_l1_l2_voltage":{"value":"/site/ess:pcs_l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"site_pcs_l2_current":{"value":"/site/ess:pcs_l2_current","vlink":"/status/pcs:L2Current"},"site_pcs_l2_l3_voltage":{"value":"/site/ess:pcs_l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"site_pcs_l3_current":{"value":"/site/ess:pcs_l3_current","vlink":"/status/pcs:L3Current"},"site_pcs_l3_l1_voltage":{"value":"/site/ess:pcs_l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"site_pcs_max_charge_power":{"value":"/site/ess:pcs_max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"site_pcs_max_discharge_power":{"value":"/site/ess:pcs_max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"site_pcs_max_igbt_temperature":{"value":"/site/ess:pcs_max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"site_pcs_num_modules_online":{"value":"/site/ess:pcs_num_modules_online","vlink":"/status/pcs:NumModulesOnline"},"site_pcs_num_modules_total":{"value":"/site/ess:pcs_num_modules_total","vlink":"/status/pcs:NumModulesTotal"},"site_pcs_power_factor":{"value":"/site/ess:pcs_power_factor","vlink":"/status/pcs:PowerFactor"},"site_pcs_rated_active_power":{"value":"/site/ess:pcs_rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"site_pcs_rated_apparent_power":{"value":"/site/ess:pcs_rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"site_pcs_rated_reactive_power":{"value":"/site/ess:pcs_rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"site_pcs_reactive_power":{"value":"/site/ess:pcs_reactive_power","vlink":"/status/pcs:ReactivePower"},"site_pcs_reactive_power_ramp_rate_feedback":{"value":"/site/ess:pcs_reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"site_pcs_reactive_power_setpoint_feedback":{"value":"/site/ess:pcs_reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"site_pcs_standby_enabled":{"value":"/site/ess:pcs_standby_enabled","vlink":"/status/pcs:StandbyEnabled"},"site_pcs_start_enabled":{"value":"/site/ess:pcs_start_enabled","vlink":"/status/pcs:StartEnabled"},"site_pcs_status":{"value":"/site/ess:pcs_status","vlink":"/status/pcs:Status"},"site_pcs_stop_enabled":{"value":"/site/ess:pcs_stop_enabled","vlink":"/status/pcs:StopEnabled"},"site_pcs_voltage_setpoint_feedback":{"value":"/site/ess:pcs_voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}},"/assets/pcs/summary":{"active_power":{"value":0},"active_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power ramp rate","value":0},"active_power_ramp_rate_feedback":{"value":0},"active_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power setpoint","value":0},"active_power_setpoint_feedback":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"comms_ok":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"frequency":{"value":0},"frequency_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the frequency setpoint while the PCS is in grid-forming (VF)","value":0},"frequency_setpoint_feedback":{"value":0},"grid_follow_pq":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":true,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-following","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vf":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":true,"outValue":2,"uri":"/controls/pcs:GridFormVF"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (voltage and frequency)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vsg":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":true,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (virtual synchronous generator)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_mode":{"value":"INIT"},"l1_current":{"value":0},"l1_l2_voltage":{"value":0},"l2_current":{"value":0},"l2_l3_voltage":{"value":0},"l3_current":{"value":0},"l3_l1_voltage":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/summary:clear_faults@enabled"},{"uri":"/assets/pcs/summary:active_power_ramp_rate@enabled"},{"uri":"/assets/pcs/summary:reactive_power_ramp_rate@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_charge_power":{"value":0},"max_discharge_power":{"value":0},"max_igbt_temperature":{"value":0},"num_modules_online":{"value":0},"num_modules_total":{"value":0},"power_factor":{"value":0},"rated_active_power":{"value":0},"rated_apparent_power":{"value":0},"rated_power_factor":{"value":0},"rated_reactive_power":{"value":0},"reactive_power":{"value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power ramp rate","value":0},"reactive_power_ramp_rate_feedback":{"value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power setpoint","value":0},"reactive_power_setpoint_feedback":{"value":0},"standby":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Standby PCS","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 [/assets/pcs/summary/maint_mode] \u0026\u0026 [/status/pcs/SystemState == (Stop || Run)]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStandbyPCS","value":false},"start":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Start PCS","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 [/assets/pcs/summary/maint_mode] \u0026\u0026 ![/status/pcs/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStartPCS","value":false},"status":{"value":"INIT"},"stop":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Stop PCS","note":"Enabled conditions: [/assets/pcs/summary/maint_mode] \u0026\u0026 [/status/pcs/SystemState != Stop]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStopPCS","value":false},"system_state":{"value":"INIT"},"voltage_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the voltage setpoint while the PCS is in grid-forming (VF)","value":0},"voltage_setpoint_feedback":{"value":0}},"/vlinks/pcs":{"ui_active_power":{"value":"/assets/pcs/summary:active_power","vlink":"/status/pcs:ActivePower"},"ui_active_power_ramp_rate_feedback":{"value":"/assets/pcs/summary:active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"ui_active_power_setpoint_feedback":{"value":"/assets/pcs/summary:active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"ui_apparent_power":{"value":"/assets/pcs/summary:apparent_power","vlink":"/status/pcs:ApparentPower"},"ui_comms_ok":{"value":"/assets/pcs/summary:comms_ok","vlink":"/status/pcs:CommsOK"},"ui_dc_current":{"value":"/assets/pcs/summary:dc_current","vlink":"/status/pcs:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/summary:dc_power","vlink":"/status/pcs:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/summary:dc_voltage","vlink":"/status/pcs:DCVoltage"},"ui_frequency":{"value":"/assets/pcs/summary:frequency","vlink":"/status/pcs:Frequency"},"ui_frequency_setpoint_feedback":{"value":"/assets/pcs/summary:frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"ui_grid_mode":{"value":"/assets/pcs/summary:grid_mode","vlink":"/status/pcs:GridMode"},"ui_l1_current":{"value":"/assets/pcs/summary:l1_current","vlink":"/status/pcs:L1Current"},"ui_l1_l2_voltage":{"value":"/assets/pcs/summary:l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"ui_l2_current":{"value":"/assets/pcs/summary:l2_current","vlink":"/status/pcs:L2Current"},"ui_l2_l3_voltage":{"value":"/assets/pcs/summary:l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"ui_l3_current":{"value":"/assets/pcs/summary:l3_current","vlink":"/status/pcs:L3Current"},"ui_l3_l1_voltage":{"value":"/assets/pcs/summary:l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"ui_max_charge_power":{"value":"/assets/pcs/summary:max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"ui_max_discharge_power":{"value":"/assets/pcs/summary:max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"ui_max_igbt_temperature":{"value":"/assets/pcs/summary:max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"ui_num_modules_online":{"value":"/assets/pcs/summary:num_modules_online","vlink":"/status/pcs:NumModulesOnline"},"ui_num_modules_total":{"value":"/assets/pcs/summary:num_modules_total","vlink":"/status/pcs:NumModulesTotal"},"ui_power_factor":{"value":"/assets/pcs/summary:power_factor","vlink":"/status/pcs:PowerFactor"},"ui_rated_active_power":{"value":"/assets/pcs/summary:rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"ui_rated_apparent_power":{"value":"/assets/pcs/summary:rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"ui_rated_power_factor":{"value":"/assets/pcs/summary:rated_power_factor","vlink":"/config/pcs:RatedPowerFactor"},"ui_rated_reactive_power":{"value":"/assets/pcs/summary:rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"ui_reactive_power":{"value":"/assets/pcs/summary:reactive_power","vlink":"/status/pcs:ReactivePower"},"ui_reactive_power_ramp_rate_feedback":{"value":"/assets/pcs/summary:reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"ui_reactive_power_setpoint_feedback":{"value":"/assets/pcs/summary:reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"ui_status":{"value":"/assets/pcs/summary:status","vlink":"/status/pcs:Status"},"ui_system_state":{"value":"/assets/pcs/summary:system_state","vlink":"/status/pcs:SystemState"},"ui_voltage_setpoint_feedback":{"value":"/assets/pcs/summary:voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}}
[4.43823s  ] [info    ] [configLoad     ] Final tbody: {"/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":4200,"RatedApparentPower":4200,"RatedPowerFactor":0.8,"RatedReactivePower":2100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"handlePowerCmd_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandlePowerCmd"}]}]},"bms":"bms","ess":"ess","note":"Processes active and reactive power commands before they are sent","pcs":"pcs","value":1},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"AvgLineVoltage":{"expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"},{"uri":"/status/pcs:NumModulesOnline@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"NumModulesTotal":6,"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:handlePowerCmd_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:p_p_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_fast:reset","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:q_q_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}},"/alarms/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"alarm","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/faults/pcs":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_faults[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"fault","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/schedule/wake_monitor/pcs":{"/status/pcs:ActivePower":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:DCVoltage":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:HeartbeatRead":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:IsAlarming":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:IsFaulted":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:NumModulesOnline":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:TotalAlarmCnt":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalFaultCnt":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":4200,"MaxAlarmTimeout":1,"MaxFaultThreshold":4250,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":false,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":true,"EnableStateCheck":true,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs:SystemFault","variable2":"/status/pcs:TotalFaultCnt"},"NumModulesOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalAlarmCnt","variable2":"/status/pcs:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalFaultCnt","variable2":"/status/pcs:FaultCnt"}},"/components/pcs_registers_fast":{"current_status":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":1,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":2,"outValue":"Run","uri":"/status/pcs:SystemState"},{"inValue":3,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":4,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":5,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":6,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":8,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":9,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":10,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":11,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":12,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":13,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":14,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":15,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":17,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":18,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":19,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":20,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":21,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":22,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":24,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":0,"outValue":"Power up","uri":"/status/pcs:Status"},{"inValue":1,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":2,"outValue":"On","uri":"/status/pcs:Status"},{"inValue":3,"outValue":"Precharge","uri":"/status/pcs:Status"},{"inValue":4,"outValue":"Ready","uri":"/status/pcs:Status"},{"inValue":5,"outValue":"Wait","uri":"/status/pcs:Status"},{"inValue":6,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:Status"},{"inValue":8,"outValue":"Discharge","uri":"/status/pcs:Status"},{"inValue":9,"outValue":"Fault","uri":"/status/pcs:Status"},{"inValue":10,"outValue":"LVRT","uri":"/status/pcs:Status"},{"inValue":11,"outValue":"OVRT","uri":"/status/pcs:Status"},{"inValue":12,"outValue":"Night","uri":"/status/pcs:Status"},{"inValue":13,"outValue":"Night DC off","uri":"/status/pcs:Status"},{"inValue":14,"outValue":"Standby","uri":"/status/pcs:Status"},{"inValue":15,"outValue":"HVPL","uri":"/status/pcs:Status"},{"inValue":17,"outValue":"Pre-on","uri":"/status/pcs:Status"},{"inValue":18,"outValue":"Self-diagnosis","uri":"/status/pcs:Status"},{"inValue":19,"outValue":"Filter contactors","uri":"/status/pcs:Status"},{"inValue":20,"outValue":"Premagnetization","uri":"/status/pcs:Status"},{"inValue":21,"outValue":"Bank balancing","uri":"/status/pcs:Status"},{"inValue":22,"outValue":"CV stand by","uri":"/status/pcs:Status"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs_registers_fast:current_status@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/pcs":{"checkInputs_pcs":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/pcs_registers_fast:current_status@ifChanged"}]}]},"enable":"/config/pcs:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/pcs":{"active_power":{"value":"/components/pcs_registers_fast:active_power","vlink":"/status/pcs:ActivePower"},"active_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:p_p_reference","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"apparent_power":{"value":"/components/pcs_registers_fast:apparent_power","vlink":"/status/pcs:ApparentPower"},"frequency":{"value":"/components/pcs_registers_fast:grid_frequency","vlink":"/status/pcs:Frequency"},"heartbeat_read":{"value":"/components/pcs_registers_fast:seconds","vlink":"/status/pcs:HeartbeatRead"},"l1_current":{"value":"/components/pcs_registers_fast:grid_current_1","vlink":"/status/pcs:L1Current"},"l1_l2_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_rs","vlink":"/status/pcs:L1L2Voltage"},"l2_current":{"value":"/components/pcs_registers_fast:grid_current_2","vlink":"/status/pcs:L2Current"},"l2_l3_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_st","vlink":"/status/pcs:L2L3Voltage"},"l3_current":{"value":"/components/pcs_registers_fast:grid_current_3","vlink":"/status/pcs:L3Current"},"l3_l1_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_tr","vlink":"/status/pcs:L3L1Voltage"},"modules_online":{"value":"/components/pcs_registers_fast:num_running_modules","vlink":"/status/pcs:NumModulesOnline"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:dc_total_i_input","vlink":"/status/pcs:DCCurrent"},"pcs_dc_power":{"value":"/components/pcs_registers_fast:dc_p_input","vlink":"/status/pcs:DCPower"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:vdc_bus_1","vlink":"/status/pcs:DCVoltage"},"power_factor":{"value":"/components/pcs_registers_fast:cosphi","vlink":"/status/pcs:PowerFactor"},"reactive_power":{"value":"/components/pcs_registers_fast:reactive_power","vlink":"/status/pcs:ReactivePower"},"reactive_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:q_q_reference","vlink":"/status/pcs:ReactivePowerSetpointFeedback"}},"/site/ess":{"active_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enable":"/config/pcs:enable","name":"Active Power Ramp Rate","note":"Sets the active power ramp rate","type":"control","units":"kW/s","value":0},"active_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Active Power Setpoint","note":"Sets the active power setpoint","signed":true,"type":"control","units":"kW","value":0},"frequency_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","name":"Frequency Setpoint","note":"Sets the frequency setpoint","type":"control","units":"Hz","value":0},"on_off_grid_mode_setting":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":1,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":1,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"},{"inValue":2,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":2,"outValue":2,"uri":"/controls/pcs:GridFormVF"},{"inValue":3,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":3,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"name":"Grid-following/forming Mode Command","note":"Initiates PCS grid-following/forming command routines","type":"control","value":0},"pcs_active_power":{"name":"PCS Active Power","signed":true,"type":"status","units":"kW","value":0},"pcs_active_power_ramp_rate_feedback":{"name":"PCS Active Power Ramp Rate Feedback","type":"status","units":"kW/s","value":0},"pcs_active_power_setpoint_feedback":{"name":"PCS Active Power Setpoint Feedback","signed":true,"type":"status","units":"kW","value":0},"pcs_alarm_active":{"name":"PCS Alarm Active","type":"status","value":false},"pcs_apparent_power":{"name":"PCS Apparent Power","signed":true,"type":"status","units":"kVA","value":0},"pcs_avg_line_voltage":{"name":"PCS Average Line Voltage","type":"status","units":"V","value":0},"pcs_comms_ok":{"name":"PCS Comms OK","type":"status","value":false},"pcs_control_alarms":{"bit0":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit10":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit11":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit12":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit13":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit14":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","bit15":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","bit16":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","bit17":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","bit18":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit19":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit2":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit20":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","bit21":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","bit22":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","bit23":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","bit24":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit4":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit5":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit6":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit7":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit8":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit9":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","name":"PCS Control Alarms","type":"bitfield","value":0},"pcs_dc_current":{"name":"PCS DC Current","scale":10,"signed":true,"type":"status","units":"A","value":0},"pcs_dc_power":{"name":"PCS DC Power","scale":10,"signed":true,"type":"status","units":"kW","value":0},"pcs_dc_voltage":{"name":"PCS DC Voltage","scale":10,"signed":true,"type":"status","units":"V","value":0},"pcs_fault_active":{"name":"PCS Fault Active","type":"status","value":false},"pcs_frequency":{"name":"PCS Grid Frequency","scale":100,"type":"status","units":"Hz","value":0},"pcs_frequency_setpoint_feedback":{"name":"PCS Frequency Setpoint Feedback","type":"status","units":"Hz","value":0},"pcs_grid_mode":{"bit0":"FollowPQ","bit1":"FormVF","bit2":"FormVSG","name":"PCS Grid Mode","type":"bitfield","value":0},"pcs_is_running":{"name":"PCS is Running","type":"status","value":false},"pcs_l1_current":{"name":"PCS Grid Current 1","scale":10,"type":"status","units":"A","value":0},"pcs_l1_l2_voltage":{"name":"PCS Grid Voltage L1-L2","type":"status","units":"V","value":0},"pcs_l2_current":{"name":"PCS Grid Current 2","scale":10,"type":"status","units":"A","value":0},"pcs_l2_l3_voltage":{"name":"PCS Grid Voltage L2-L3","type":"status","units":"V","value":0},"pcs_l3_current":{"name":"PCS Grid Current 3","scale":10,"type":"status","units":"A","value":0},"pcs_l3_l1_voltage":{"name":"PCS Grid Voltage L3-L1","type":"status","units":"V","value":0},"pcs_max_charge_power":{"name":"PCS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"pcs_max_discharge_power":{"name":"PCS Max Discharge Power","type":"status","units":"kW","value":0},"pcs_max_igbt_temperature":{"name":"PCS Max IGBT Temperature","scale":100,"type":"status","units":"°C","value":0},"pcs_monitor_alarms":{"bit0":"PCS Active Power Max Threshold Exceeded","bit1":"PCS DC Voltage Max Threshold Exceeded","bit2":"PCS DC Voltage Min Threshold Exceeded","bit3":"PCS Number of Modules Online Below Min Threshold","name":"PCS Monitor Alarms","type":"bitfield","value":0},"pcs_monitor_faults":{"bit0":"PCS Active Power Max Threshold Exceeded","bit1":"PCS DC Voltage Max Threshold Exceeded","bit2":"PCS DC Voltage Min Threshold Exceeded","bit3":"PCS Number of Modules Online Below Min Threshold","name":"PCS Monitor Faults","type":"bitfield","value":0},"pcs_num_modules_online":{"name":"PCS Number of Modules Online","type":"status","value":0},"pcs_num_modules_total":{"name":"PCS Number of Modules Total","type":"status","value":0},"pcs_power_factor":{"name":"PCS Power Factor","scale":1000,"signed":true,"type":"status","value":0},"pcs_rated_active_power":{"name":"PCS Rated Active Power","signed":true,"type":"status","units":"kW","value":0},"pcs_rated_apparent_power":{"name":"PCS Rated Apparent Power","signed":true,"type":"status","units":"kVA","value":0},"pcs_rated_reactive_power":{"name":"PCS Rated Reactive Power","signed":true,"type":"status","units":"kVAR","value":0},"pcs_reactive_power":{"name":"PCS Reactive Power","signed":true,"type":"status","units":"kVAR","value":0},"pcs_reactive_power_ramp_rate_feedback":{"name":"PCS Reactive Power Ramp Rate Feedback","type":"status","units":"kVAR/s","value":0},"pcs_reactive_power_setpoint_feedback":{"name":"PCS Reactive Power Setpoint Feedback","signed":true,"type":"status","units":"kVAR","value":0},"pcs_standby_enabled":{"excludeFromFile":true,"name":"PCS Standby Enabled","type":"status","value":false},"pcs_start_enabled":{"excludeFromFile":true,"name":"PCS Start Enabled","type":"status","value":false},"pcs_status":{"excludeFromFile":true,"name":"PCS Status","type":"status","value":"INIT"},"pcs_stop_enabled":{"excludeFromFile":true,"name":"PCS Stop Enabled","type":"status","value":false},"pcs_system_state":{"bit0":"Stop","bit1":"Run","bit2":"Fault","bit3":"Standby","name":"PCS System State","type":"bitfield","value":0},"pcs_voltage_setpoint_feedback":{"name":"PCS Voltage Setpoint Feedback","type":"status","units":"V","value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enable":"/config/pcs:enable","name":"Reactive Power Ramp Rate","note":"Sets the reactive power ramp rate","type":"control","units":"kVAR/s","value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Reactive Power Setpoint","note":"Sets the reactive power setpoint","signed":true,"type":"control","units":"kVAR","value":0},"start_stop_standby_command":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/pcs:enable","every":0.5,"ifChanged":false,"name":"Start/Stop/Standby Command","note1":"Initiates PCS start, standby, or stop command routines","note2":"0-\u003estop | 1-\u003estart | 2-\u003estandby","offset":0,"size":1,"type":"control","uri":"/sched/ess:SitePCSStatusControl","value":-1},"voltage_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Voltage Setpoint","note":"Sets the voltage setpoint","type":"control","units":"V","value":0}},"/vlinks/pcs":{"site_pcs_active_power":{"value":"/site/ess:pcs_active_power","vlink":"/status/pcs:ActivePower"},"site_pcs_active_power_ramp_rate_feedback":{"value":"/site/ess:pcs_active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"site_pcs_active_power_setpoint_feedback":{"value":"/site/ess:pcs_active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"site_pcs_alarm_active":{"value":"/site/ess:pcs_alarm_active","vlink":"/status/pcs:IsAlarming"},"site_pcs_apparent_power":{"value":"/site/ess:pcs_apparent_power","vlink":"/status/pcs:ApparentPower"},"site_pcs_avg_line_voltage":{"value":"/site/ess:pcs_avg_line_voltage","vlink":"/status/pcs:AvgLineVoltage"},"site_pcs_comms_ok":{"value":"/site/ess:pcs_comms_ok","vlink":"/status/pcs:CommsOK"},"site_pcs_dc_current":{"value":"/site/ess:pcs_dc_current","vlink":"/status/pcs:DCCurrent"},"site_pcs_dc_power":{"value":"/site/ess:pcs_dc_power","vlink":"/status/pcs:DCPower"},"site_pcs_dc_voltage":{"value":"/site/ess:pcs_dc_voltage","vlink":"/status/pcs:DCVoltage"},"site_pcs_fault_active":{"value":"/site/ess:pcs_fault_active","vlink":"/status/pcs:IsFaulted"},"site_pcs_frequency":{"value":"/site/ess:pcs_frequency","vlink":"/status/pcs:Frequency"},"site_pcs_frequency_setpoint_feedback":{"value":"/site/ess:pcs_frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"site_pcs_is_running":{"value":"/site/ess:pcs_is_running","vlink":"/status/pcs:IsRunning"},"site_pcs_l1_current":{"value":"/site/ess:pcs_l1_current","vlink":"/status/pcs:L1Current"},"site_pcs_l1_l2_voltage":{"value":"/site/ess:pcs_l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"site_pcs_l2_current":{"value":"/site/ess:pcs_l2_current","vlink":"/status/pcs:L2Current"},"site_pcs_l2_l3_voltage":{"value":"/site/ess:pcs_l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"site_pcs_l3_current":{"value":"/site/ess:pcs_l3_current","vlink":"/status/pcs:L3Current"},"site_pcs_l3_l1_voltage":{"value":"/site/ess:pcs_l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"site_pcs_max_charge_power":{"value":"/site/ess:pcs_max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"site_pcs_max_discharge_power":{"value":"/site/ess:pcs_max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"site_pcs_max_igbt_temperature":{"value":"/site/ess:pcs_max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"site_pcs_num_modules_online":{"value":"/site/ess:pcs_num_modules_online","vlink":"/status/pcs:NumModulesOnline"},"site_pcs_num_modules_total":{"value":"/site/ess:pcs_num_modules_total","vlink":"/status/pcs:NumModulesTotal"},"site_pcs_power_factor":{"value":"/site/ess:pcs_power_factor","vlink":"/status/pcs:PowerFactor"},"site_pcs_rated_active_power":{"value":"/site/ess:pcs_rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"site_pcs_rated_apparent_power":{"value":"/site/ess:pcs_rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"site_pcs_rated_reactive_power":{"value":"/site/ess:pcs_rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"site_pcs_reactive_power":{"value":"/site/ess:pcs_reactive_power","vlink":"/status/pcs:ReactivePower"},"site_pcs_reactive_power_ramp_rate_feedback":{"value":"/site/ess:pcs_reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"site_pcs_reactive_power_setpoint_feedback":{"value":"/site/ess:pcs_reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"site_pcs_standby_enabled":{"value":"/site/ess:pcs_standby_enabled","vlink":"/status/pcs:StandbyEnabled"},"site_pcs_start_enabled":{"value":"/site/ess:pcs_start_enabled","vlink":"/status/pcs:StartEnabled"},"site_pcs_status":{"value":"/site/ess:pcs_status","vlink":"/status/pcs:Status"},"site_pcs_stop_enabled":{"value":"/site/ess:pcs_stop_enabled","vlink":"/status/pcs:StopEnabled"},"site_pcs_voltage_setpoint_feedback":{"value":"/site/ess:pcs_voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}},"/assets/pcs/summary":{"active_power":{"value":0},"active_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power ramp rate","value":0},"active_power_ramp_rate_feedback":{"value":0},"active_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power setpoint","value":0},"active_power_setpoint_feedback":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"comms_ok":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"frequency":{"value":0},"frequency_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the frequency setpoint while the PCS is in grid-forming (VF)","value":0},"frequency_setpoint_feedback":{"value":0},"grid_follow_pq":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":true,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-following","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vf":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":true,"outValue":2,"uri":"/controls/pcs:GridFormVF"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (voltage and frequency)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vsg":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":true,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (virtual synchronous generator)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_mode":{"value":"INIT"},"l1_current":{"value":0},"l1_l2_voltage":{"value":0},"l2_current":{"value":0},"l2_l3_voltage":{"value":0},"l3_current":{"value":0},"l3_l1_voltage":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/summary:clear_faults@enabled"},{"uri":"/assets/pcs/summary:active_power_ramp_rate@enabled"},{"uri":"/assets/pcs/summary:reactive_power_ramp_rate@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_charge_power":{"value":0},"max_discharge_power":{"value":0},"max_igbt_temperature":{"value":0},"num_modules_online":{"value":0},"num_modules_total":{"value":0},"power_factor":{"value":0},"rated_active_power":{"value":0},"rated_apparent_power":{"value":0},"rated_power_factor":{"value":0},"rated_reactive_power":{"value":0},"reactive_power":{"value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power ramp rate","value":0},"reactive_power_ramp_rate_feedback":{"value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power setpoint","value":0},"reactive_power_setpoint_feedback":{"value":0},"standby":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Standby PCS","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 [/assets/pcs/summary/maint_mode] \u0026\u0026 [/status/pcs/SystemState == (Stop || Run)]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStandbyPCS","value":false},"start":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Start PCS","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 [/assets/pcs/summary/maint_mode] \u0026\u0026 ![/status/pcs/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStartPCS","value":false},"status":{"value":"INIT"},"stop":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Stop PCS","note":"Enabled conditions: [/assets/pcs/summary/maint_mode] \u0026\u0026 [/status/pcs/SystemState != Stop]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStopPCS","value":false},"system_state":{"value":"INIT"},"voltage_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the voltage setpoint while the PCS is in grid-forming (VF)","value":0},"voltage_setpoint_feedback":{"value":0}},"/vlinks/pcs":{"ui_active_power":{"value":"/assets/pcs/summary:active_power","vlink":"/status/pcs:ActivePower"},"ui_active_power_ramp_rate_feedback":{"value":"/assets/pcs/summary:active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"ui_active_power_setpoint_feedback":{"value":"/assets/pcs/summary:active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"ui_apparent_power":{"value":"/assets/pcs/summary:apparent_power","vlink":"/status/pcs:ApparentPower"},"ui_comms_ok":{"value":"/assets/pcs/summary:comms_ok","vlink":"/status/pcs:CommsOK"},"ui_dc_current":{"value":"/assets/pcs/summary:dc_current","vlink":"/status/pcs:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/summary:dc_power","vlink":"/status/pcs:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/summary:dc_voltage","vlink":"/status/pcs:DCVoltage"},"ui_frequency":{"value":"/assets/pcs/summary:frequency","vlink":"/status/pcs:Frequency"},"ui_frequency_setpoint_feedback":{"value":"/assets/pcs/summary:frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"ui_grid_mode":{"value":"/assets/pcs/summary:grid_mode","vlink":"/status/pcs:GridMode"},"ui_l1_current":{"value":"/assets/pcs/summary:l1_current","vlink":"/status/pcs:L1Current"},"ui_l1_l2_voltage":{"value":"/assets/pcs/summary:l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"ui_l2_current":{"value":"/assets/pcs/summary:l2_current","vlink":"/status/pcs:L2Current"},"ui_l2_l3_voltage":{"value":"/assets/pcs/summary:l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"ui_l3_current":{"value":"/assets/pcs/summary:l3_current","vlink":"/status/pcs:L3Current"},"ui_l3_l1_voltage":{"value":"/assets/pcs/summary:l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"ui_max_charge_power":{"value":"/assets/pcs/summary:max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"ui_max_discharge_power":{"value":"/assets/pcs/summary:max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"ui_max_igbt_temperature":{"value":"/assets/pcs/summary:max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"ui_num_modules_online":{"value":"/assets/pcs/summary:num_modules_online","vlink":"/status/pcs:NumModulesOnline"},"ui_num_modules_total":{"value":"/assets/pcs/summary:num_modules_total","vlink":"/status/pcs:NumModulesTotal"},"ui_power_factor":{"value":"/assets/pcs/summary:power_factor","vlink":"/status/pcs:PowerFactor"},"ui_rated_active_power":{"value":"/assets/pcs/summary:rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"ui_rated_apparent_power":{"value":"/assets/pcs/summary:rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"ui_rated_power_factor":{"value":"/assets/pcs/summary:rated_power_factor","vlink":"/config/pcs:RatedPowerFactor"},"ui_rated_reactive_power":{"value":"/assets/pcs/summary:rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"ui_reactive_power":{"value":"/assets/pcs/summary:reactive_power","vlink":"/status/pcs:ReactivePower"},"ui_reactive_power_ramp_rate_feedback":{"value":"/assets/pcs/summary:reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"ui_reactive_power_setpoint_feedback":{"value":"/assets/pcs/summary:reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"ui_status":{"value":"/assets/pcs/summary:status","vlink":"/status/pcs:Status"},"ui_system_state":{"value":"/assets/pcs/summary:system_state","vlink":"/status/pcs:SystemState"},"ui_voltage_setpoint_feedback":{"value":"/assets/pcs/summary:voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}}}
[4.44147s  ] [info    ] [configLoad     ] tmpls field is found in av [/config/load:pe_pcs_init]. We'll perform template expansions with tmpls instead of tmpl
[4.44241s  ] [info    ] [configLoad     ] tbody before: {"/config/##MODULE_ID##":{"AlarmDestination":"/assets/pcs/##MODULE_ID##:alarms","FaultDestination":"/assets/pcs/##MODULE_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/##MODULE_ID##":{"pubAssets_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunPub"}]}]},"enable":"/config/##MODULE_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##MODULE_ID##)","table":"/assets/pcs/##MODULE_ID##","value":1},"runMonitor_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunMonitor"}]}]},"aname":"##MODULE_ID##","enable":"/config/##MODULE_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##MODULE_ID##","value":1}},"/status/##MODULE_ID##":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##MODULE_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:pubAssets_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":0.1,"uri":"/sched/##MODULE_ID##:runMonitor_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:checkInputs_##MODULE_ID##","value":1}],"targav":"/system/commands:run","value":false}}}
[4.44301s  ] [info    ] [configLoad     ] tbody now: "/config/##MODULE_ID##":{"AlarmDestination":"/assets/pcs/##MODULE_ID##:alarms","FaultDestination":"/assets/pcs/##MODULE_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/##MODULE_ID##":{"pubAssets_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunPub"}]}]},"enable":"/config/##MODULE_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##MODULE_ID##)","table":"/assets/pcs/##MODULE_ID##","value":1},"runMonitor_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunMonitor"}]}]},"aname":"##MODULE_ID##","enable":"/config/##MODULE_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##MODULE_ID##","value":1}},"/status/##MODULE_ID##":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##MODULE_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:pubAssets_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":0.1,"uri":"/sched/##MODULE_ID##:runMonitor_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:checkInputs_##MODULE_ID##","value":1}],"targav":"/system/commands:run","value":false}}
[4.44416s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##MODULE_ID##":{"AlarmDestination":"/assets/pcs/##MODULE_ID##:alarms","FaultDestination":"/assets/pcs/##MODULE_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/##MODULE_ID##":{"pubAssets_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunPub"}]}]},"enable":"/config/##MODULE_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##MODULE_ID##)","table":"/assets/pcs/##MODULE_ID##","value":1},"runMonitor_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunMonitor"}]}]},"aname":"##MODULE_ID##","enable":"/config/##MODULE_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##MODULE_ID##","value":1}},"/status/##MODULE_ID##":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##MODULE_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:pubAssets_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":0.1,"uri":"/sched/##MODULE_ID##:runMonitor_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:checkInputs_##MODULE_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##MODULE_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##MODULE_ID##":{"/controls/##MODULE_ID##:ClearFaults":{"amap":"##MODULE_ID##","func":"HandleCmd"}},"/status/##MODULE_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##MODULE_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##MODULE_ID##:clear_alarms"}]}]},"enable":"/config/##MODULE_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##MODULE_ID##:clear_faults and /alarms/##MODULE_ID##:clear_alarms will be set to Clear","value":false}}
[4.44467s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##MODULE_ID##":{"AlarmDestination":"/assets/pcs/##MODULE_ID##:alarms","FaultDestination":"/assets/pcs/##MODULE_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/##MODULE_ID##":{"pubAssets_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunPub"}]}]},"enable":"/config/##MODULE_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##MODULE_ID##)","table":"/assets/pcs/##MODULE_ID##","value":1},"runMonitor_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunMonitor"}]}]},"aname":"##MODULE_ID##","enable":"/config/##MODULE_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##MODULE_ID##","value":1}},"/status/##MODULE_ID##":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##MODULE_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:pubAssets_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":0.1,"uri":"/sched/##MODULE_ID##:runMonitor_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:checkInputs_##MODULE_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##MODULE_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##MODULE_ID##":{"/controls/##MODULE_ID##:ClearFaults":{"amap":"##MODULE_ID##","func":"HandleCmd"}},"/status/##MODULE_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##MODULE_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##MODULE_ID##:clear_alarms"}]}]},"enable":"/config/##MODULE_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##MODULE_ID##:clear_faults and /alarms/##MODULE_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##MODULE_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##MODULE_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##MODULE_ID##":{"/status/##MODULE_ID##:TotalAlarmCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"},"/status/##MODULE_ID##:TotalFaultCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"}},"/status/##MODULE_ID##":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:FaultCnt"}}
[4.44561s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##MODULE_ID##":{"AlarmDestination":"/assets/pcs/##MODULE_ID##:alarms","FaultDestination":"/assets/pcs/##MODULE_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/##MODULE_ID##":{"pubAssets_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunPub"}]}]},"enable":"/config/##MODULE_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##MODULE_ID##)","table":"/assets/pcs/##MODULE_ID##","value":1},"runMonitor_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunMonitor"}]}]},"aname":"##MODULE_ID##","enable":"/config/##MODULE_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##MODULE_ID##","value":1}},"/status/##MODULE_ID##":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##MODULE_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:pubAssets_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":0.1,"uri":"/sched/##MODULE_ID##:runMonitor_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:checkInputs_##MODULE_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##MODULE_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##MODULE_ID##":{"/controls/##MODULE_ID##:ClearFaults":{"amap":"##MODULE_ID##","func":"HandleCmd"}},"/status/##MODULE_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##MODULE_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##MODULE_ID##:clear_alarms"}]}]},"enable":"/config/##MODULE_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##MODULE_ID##:clear_faults and /alarms/##MODULE_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##MODULE_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##MODULE_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##MODULE_ID##":{"/status/##MODULE_ID##:TotalAlarmCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"},"/status/##MODULE_ID##:TotalFaultCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"}},"/status/##MODULE_ID##":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:FaultCnt"}},"/schedule/wake_monitor/##MODULE_ID##":{"/status/##MODULE_ID##:CurrentFault":{"func":"CalculateVar"},"/status/##MODULE_ID##:CurrentWarning":{"func":"CalculateVar"},"/status/##MODULE_ID##:PCSDCPower":{"func":"CalculateVar"}},"/status/##MODULE_ID##":{"CurrentFault":{"expression":"if ((##MODULE_NUM## == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((##MODULE_NUM## == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:PCSDCVoltage","variable2":"/status/##MODULE_ID##:PCSDCCurrent"}},"/vlinks/##MODULE_ID##":{"active_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_p","vlink":"/status/##MODULE_ID##:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_voltage_p","vlink":"/status/##MODULE_ID##:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_r","vlink":"/status/##MODULE_ID##:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_s","vlink":"/status/##MODULE_ID##:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_t","vlink":"/status/##MODULE_ID##:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:##MODULE_ID##_max_temp","vlink":"/status/##MODULE_ID##:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_current","vlink":"/status/##MODULE_ID##:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_voltage","vlink":"/status/##MODULE_ID##:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_q","vlink":"/status/##MODULE_ID##:ReactivePower"}}
[4.4473s   ] [info    ] [configLoad     ] pi's av tbody now: "/config/##MODULE_ID##":{"AlarmDestination":"/assets/pcs/##MODULE_ID##:alarms","FaultDestination":"/assets/pcs/##MODULE_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/##MODULE_ID##":{"pubAssets_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunPub"}]}]},"enable":"/config/##MODULE_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##MODULE_ID##)","table":"/assets/pcs/##MODULE_ID##","value":1},"runMonitor_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunMonitor"}]}]},"aname":"##MODULE_ID##","enable":"/config/##MODULE_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##MODULE_ID##","value":1}},"/status/##MODULE_ID##":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##MODULE_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:pubAssets_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":0.1,"uri":"/sched/##MODULE_ID##:runMonitor_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:checkInputs_##MODULE_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##MODULE_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##MODULE_ID##":{"/controls/##MODULE_ID##:ClearFaults":{"amap":"##MODULE_ID##","func":"HandleCmd"}},"/status/##MODULE_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##MODULE_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##MODULE_ID##:clear_alarms"}]}]},"enable":"/config/##MODULE_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##MODULE_ID##:clear_faults and /alarms/##MODULE_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##MODULE_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##MODULE_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##MODULE_ID##":{"/status/##MODULE_ID##:TotalAlarmCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"},"/status/##MODULE_ID##:TotalFaultCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"}},"/status/##MODULE_ID##":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:FaultCnt"}},"/schedule/wake_monitor/##MODULE_ID##":{"/status/##MODULE_ID##:CurrentFault":{"func":"CalculateVar"},"/status/##MODULE_ID##:CurrentWarning":{"func":"CalculateVar"},"/status/##MODULE_ID##:PCSDCPower":{"func":"CalculateVar"}},"/status/##MODULE_ID##":{"CurrentFault":{"expression":"if ((##MODULE_NUM## == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((##MODULE_NUM## == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:PCSDCVoltage","variable2":"/status/##MODULE_ID##:PCSDCCurrent"}},"/vlinks/##MODULE_ID##":{"active_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_p","vlink":"/status/##MODULE_ID##:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_voltage_p","vlink":"/status/##MODULE_ID##:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_r","vlink":"/status/##MODULE_ID##:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_s","vlink":"/status/##MODULE_ID##:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_t","vlink":"/status/##MODULE_ID##:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:##MODULE_ID##_max_temp","vlink":"/status/##MODULE_ID##:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_current","vlink":"/status/##MODULE_ID##:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_voltage","vlink":"/status/##MODULE_ID##:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_q","vlink":"/status/##MODULE_ID##:ReactivePower"}}
[4.45035s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##MODULE_ID##":{"AlarmDestination":"/assets/pcs/##MODULE_ID##:alarms","FaultDestination":"/assets/pcs/##MODULE_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/##MODULE_ID##":{"pubAssets_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunPub"}]}]},"enable":"/config/##MODULE_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##MODULE_ID##)","table":"/assets/pcs/##MODULE_ID##","value":1},"runMonitor_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunMonitor"}]}]},"aname":"##MODULE_ID##","enable":"/config/##MODULE_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##MODULE_ID##","value":1}},"/status/##MODULE_ID##":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##MODULE_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:pubAssets_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":0.1,"uri":"/sched/##MODULE_ID##:runMonitor_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:checkInputs_##MODULE_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##MODULE_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##MODULE_ID##":{"/controls/##MODULE_ID##:ClearFaults":{"amap":"##MODULE_ID##","func":"HandleCmd"}},"/status/##MODULE_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##MODULE_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##MODULE_ID##:clear_alarms"}]}]},"enable":"/config/##MODULE_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##MODULE_ID##:clear_faults and /alarms/##MODULE_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##MODULE_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##MODULE_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##MODULE_ID##":{"/status/##MODULE_ID##:TotalAlarmCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"},"/status/##MODULE_ID##:TotalFaultCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"}},"/status/##MODULE_ID##":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:FaultCnt"}},"/schedule/wake_monitor/##MODULE_ID##":{"/status/##MODULE_ID##:CurrentFault":{"func":"CalculateVar"},"/status/##MODULE_ID##:CurrentWarning":{"func":"CalculateVar"},"/status/##MODULE_ID##:PCSDCPower":{"func":"CalculateVar"}},"/status/##MODULE_ID##":{"CurrentFault":{"expression":"if ((##MODULE_NUM## == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((##MODULE_NUM## == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:PCSDCVoltage","variable2":"/status/##MODULE_ID##:PCSDCCurrent"}},"/vlinks/##MODULE_ID##":{"active_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_p","vlink":"/status/##MODULE_ID##:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_voltage_p","vlink":"/status/##MODULE_ID##:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_r","vlink":"/status/##MODULE_ID##:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_s","vlink":"/status/##MODULE_ID##:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_t","vlink":"/status/##MODULE_ID##:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:##MODULE_ID##_max_temp","vlink":"/status/##MODULE_ID##:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_current","vlink":"/status/##MODULE_ID##:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_voltage","vlink":"/status/##MODULE_ID##:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_q","vlink":"/status/##MODULE_ID##:ReactivePower"}},"/assets/pcs/##MODULE_ID##":{"active_power":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##MODULE_ID##:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##MODULE_ID##:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"l1_current":{"value":0},"l2_current":{"value":0},"l3_current":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/##MODULE_ID##:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_igbt_temperature":{"value":0},"reactive_power":{"value":0},"status":{"value":"INIT"}},"/vlinks/##MODULE_ID##":{"ui_active_power":{"value":"/assets/pcs/##MODULE_ID##:active_power","vlink":"/status/##MODULE_ID##:ActivePower"},"ui_apparent_power":{"value":"/assets/pcs/##MODULE_ID##:apparent_power","vlink":"/status/##MODULE_ID##:ApparentPower"},"ui_dc_current":{"value":"/assets/pcs/##MODULE_ID##:dc_current","vlink":"/status/##MODULE_ID##:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/##MODULE_ID##:dc_power","vlink":"/status/##MODULE_ID##:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/##MODULE_ID##:dc_voltage","vlink":"/status/##MODULE_ID##:DCVoltage"},"ui_l1_current":{"value":"/assets/pcs/##MODULE_ID##:l1_current","vlink":"/status/##MODULE_ID##:L1Current"},"ui_l2_current":{"value":"/assets/pcs/##MODULE_ID##:l2_current","vlink":"/status/##MODULE_ID##:L2Current"},"ui_l3_current":{"value":"/assets/pcs/##MODULE_ID##:l3_current","vlink":"/status/##MODULE_ID##:L3Current"},"ui_max_igbt_temperature":{"value":"/assets/pcs/##MODULE_ID##:max_igbt_temperature","vlink":"/status/##MODULE_ID##:MaxIGBTTemperature"},"ui_reactive_power":{"value":"/assets/pcs/##MODULE_ID##:reactive_power","vlink":"/status/##MODULE_ID##:ReactivePower"},"ui_status":{"value":"/assets/pcs/##MODULE_ID##:status","vlink":"/status/##MODULE_ID##:Status"}}
[4.45387s  ] [info    ] [configLoad     ] Final tbody: {"/config/##MODULE_ID##":{"AlarmDestination":"/assets/pcs/##MODULE_ID##:alarms","FaultDestination":"/assets/pcs/##MODULE_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/##MODULE_ID##":{"pubAssets_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunPub"}]}]},"enable":"/config/##MODULE_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##MODULE_ID##)","table":"/assets/pcs/##MODULE_ID##","value":1},"runMonitor_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunMonitor"}]}]},"aname":"##MODULE_ID##","enable":"/config/##MODULE_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##MODULE_ID##","value":1}},"/status/##MODULE_ID##":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##MODULE_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:pubAssets_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":0.1,"uri":"/sched/##MODULE_ID##:runMonitor_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:checkInputs_##MODULE_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##MODULE_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##MODULE_ID##":{"/controls/##MODULE_ID##:ClearFaults":{"amap":"##MODULE_ID##","func":"HandleCmd"}},"/status/##MODULE_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##MODULE_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##MODULE_ID##:clear_alarms"}]}]},"enable":"/config/##MODULE_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##MODULE_ID##:clear_faults and /alarms/##MODULE_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##MODULE_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##MODULE_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##MODULE_ID##":{"/status/##MODULE_ID##:TotalAlarmCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"},"/status/##MODULE_ID##:TotalFaultCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"}},"/status/##MODULE_ID##":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:FaultCnt"}},"/schedule/wake_monitor/##MODULE_ID##":{"/status/##MODULE_ID##:CurrentFault":{"func":"CalculateVar"},"/status/##MODULE_ID##:CurrentWarning":{"func":"CalculateVar"},"/status/##MODULE_ID##:PCSDCPower":{"func":"CalculateVar"}},"/status/##MODULE_ID##":{"CurrentFault":{"expression":"if ((##MODULE_NUM## == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((##MODULE_NUM## == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:PCSDCVoltage","variable2":"/status/##MODULE_ID##:PCSDCCurrent"}},"/vlinks/##MODULE_ID##":{"active_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_p","vlink":"/status/##MODULE_ID##:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_voltage_p","vlink":"/status/##MODULE_ID##:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_r","vlink":"/status/##MODULE_ID##:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_s","vlink":"/status/##MODULE_ID##:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_t","vlink":"/status/##MODULE_ID##:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:##MODULE_ID##_max_temp","vlink":"/status/##MODULE_ID##:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_current","vlink":"/status/##MODULE_ID##:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_voltage","vlink":"/status/##MODULE_ID##:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_q","vlink":"/status/##MODULE_ID##:ReactivePower"}},"/assets/pcs/##MODULE_ID##":{"active_power":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##MODULE_ID##:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##MODULE_ID##:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"l1_current":{"value":0},"l2_current":{"value":0},"l3_current":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/##MODULE_ID##:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_igbt_temperature":{"value":0},"reactive_power":{"value":0},"status":{"value":"INIT"}},"/vlinks/##MODULE_ID##":{"ui_active_power":{"value":"/assets/pcs/##MODULE_ID##:active_power","vlink":"/status/##MODULE_ID##:ActivePower"},"ui_apparent_power":{"value":"/assets/pcs/##MODULE_ID##:apparent_power","vlink":"/status/##MODULE_ID##:ApparentPower"},"ui_dc_current":{"value":"/assets/pcs/##MODULE_ID##:dc_current","vlink":"/status/##MODULE_ID##:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/##MODULE_ID##:dc_power","vlink":"/status/##MODULE_ID##:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/##MODULE_ID##:dc_voltage","vlink":"/status/##MODULE_ID##:DCVoltage"},"ui_l1_current":{"value":"/assets/pcs/##MODULE_ID##:l1_current","vlink":"/status/##MODULE_ID##:L1Current"},"ui_l2_current":{"value":"/assets/pcs/##MODULE_ID##:l2_current","vlink":"/status/##MODULE_ID##:L2Current"},"ui_l3_current":{"value":"/assets/pcs/##MODULE_ID##:l3_current","vlink":"/status/##MODULE_ID##:L3Current"},"ui_max_igbt_temperature":{"value":"/assets/pcs/##MODULE_ID##:max_igbt_temperature","vlink":"/status/##MODULE_ID##:MaxIGBTTemperature"},"ui_reactive_power":{"value":"/assets/pcs/##MODULE_ID##:reactive_power","vlink":"/status/##MODULE_ID##:ReactivePower"},"ui_status":{"value":"/assets/pcs/##MODULE_ID##:status","vlink":"/status/##MODULE_ID##:Status"}}}
[4.46193s  ] [info    ] [configure_vmapS] process file seeking header stuff am [pcs] ai [no ai]
[4.46269s  ] [info    ] [configure_vmapS] body: {"/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":4200,"RatedApparentPower":4200,"RatedPowerFactor":0.8,"RatedReactivePower":2100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"handlePowerCmd_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandlePowerCmd"}]}]},"bms":"bms","ess":"ess","note":"Processes active and reactive power commands before they are sent","pcs":"pcs","value":1},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"AvgLineVoltage":{"expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"},{"uri":"/status/pcs:NumModulesOnline@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"NumModulesTotal":6,"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:handlePowerCmd_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:p_p_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_fast:reset","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:q_q_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}},"/alarms/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"alarm","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/faults/pcs":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_faults[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"fault","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/schedule/wake_monitor/pcs":{"/status/pcs:ActivePower":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:DCVoltage":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:HeartbeatRead":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:IsAlarming":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:IsFaulted":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:NumModulesOnline":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:TotalAlarmCnt":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalFaultCnt":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":4200,"MaxAlarmTimeout":1,"MaxFaultThreshold":4250,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":false,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":true,"EnableStateCheck":true,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs:SystemFault","variable2":"/status/pcs:TotalFaultCnt"},"NumModulesOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalAlarmCnt","variable2":"/status/pcs:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalFaultCnt","variable2":"/status/pcs:FaultCnt"}},"/components/pcs_registers_fast":{"current_status":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":1,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":2,"outValue":"Run","uri":"/status/pcs:SystemState"},{"inValue":3,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":4,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":5,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":6,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":8,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":9,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":10,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":11,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":12,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":13,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":14,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":15,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":17,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":18,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":19,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":20,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":21,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":22,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":24,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":0,"outValue":"Power up","uri":"/status/pcs:Status"},{"inValue":1,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":2,"outValue":"On","uri":"/status/pcs:Status"},{"inValue":3,"outValue":"Precharge","uri":"/status/pcs:Status"},{"inValue":4,"outValue":"Ready","uri":"/status/pcs:Status"},{"inValue":5,"outValue":"Wait","uri":"/status/pcs:Status"},{"inValue":6,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:Status"},{"inValue":8,"outValue":"Discharge","uri":"/status/pcs:Status"},{"inValue":9,"outValue":"Fault","uri":"/status/pcs:Status"},{"inValue":10,"outValue":"LVRT","uri":"/status/pcs:Status"},{"inValue":11,"outValue":"OVRT","uri":"/status/pcs:Status"},{"inValue":12,"outValue":"Night","uri":"/status/pcs:Status"},{"inValue":13,"outValue":"Night DC off","uri":"/status/pcs:Status"},{"inValue":14,"outValue":"Standby","uri":"/status/pcs:Status"},{"inValue":15,"outValue":"HVPL","uri":"/status/pcs:Status"},{"inValue":17,"outValue":"Pre-on","uri":"/status/pcs:Status"},{"inValue":18,"outValue":"Self-diagnosis","uri":"/status/pcs:Status"},{"inValue":19,"outValue":"Filter contactors","uri":"/status/pcs:Status"},{"inValue":20,"outValue":"Premagnetization","uri":"/status/pcs:Status"},{"inValue":21,"outValue":"Bank balancing","uri":"/status/pcs:Status"},{"inValue":22,"outValue":"CV stand by","uri":"/status/pcs:Status"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs_registers_fast:current_status@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/pcs":{"checkInputs_pcs":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/pcs_registers_fast:current_status@ifChanged"}]}]},"enable":"/config/pcs:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/pcs":{"active_power":{"value":"/components/pcs_registers_fast:active_power","vlink":"/status/pcs:ActivePower"},"active_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:p_p_reference","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"apparent_power":{"value":"/components/pcs_registers_fast:apparent_power","vlink":"/status/pcs:ApparentPower"},"frequency":{"value":"/components/pcs_registers_fast:grid_frequency","vlink":"/status/pcs:Frequency"},"heartbeat_read":{"value":"/components/pcs_registers_fast:seconds","vlink":"/status/pcs:HeartbeatRead"},"l1_current":{"value":"/components/pcs_registers_fast:grid_current_1","vlink":"/status/pcs:L1Current"},"l1_l2_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_rs","vlink":"/status/pcs:L1L2Voltage"},"l2_current":{"value":"/components/pcs_registers_fast:grid_current_2","vlink":"/status/pcs:L2Current"},"l2_l3_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_st","vlink":"/status/pcs:L2L3Voltage"},"l3_current":{"value":"/components/pcs_registers_fast:grid_current_3","vlink":"/status/pcs:L3Current"},"l3_l1_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_tr","vlink":"/status/pcs:L3L1Voltage"},"modules_online":{"value":"/components/pcs_registers_fast:num_running_modules","vlink":"/status/pcs:NumModulesOnline"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:dc_total_i_input","vlink":"/status/pcs:DCCurrent"},"pcs_dc_power":{"value":"/components/pcs_registers_fast:dc_p_input","vlink":"/status/pcs:DCPower"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:vdc_bus_1","vlink":"/status/pcs:DCVoltage"},"power_factor":{"value":"/components/pcs_registers_fast:cosphi","vlink":"/status/pcs:PowerFactor"},"reactive_power":{"value":"/components/pcs_registers_fast:reactive_power","vlink":"/status/pcs:ReactivePower"},"reactive_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:q_q_reference","vlink":"/status/pcs:ReactivePowerSetpointFeedback"}},"/site/ess":{"active_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enable":"/config/pcs:enable","name":"Active Power Ramp Rate","note":"Sets the active power ramp rate","type":"control","units":"kW/s","value":0},"active_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Active Power Setpoint","note":"Sets the active power setpoint","signed":true,"type":"control","units":"kW","value":0},"frequency_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","name":"Frequency Setpoint","note":"Sets the frequency setpoint","type":"control","units":"Hz","value":0},"on_off_grid_mode_setting":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":1,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":1,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"},{"inValue":2,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":2,"outValue":2,"uri":"/controls/pcs:GridFormVF"},{"inValue":3,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":3,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"name":"Grid-following/forming Mode Command","note":"Initiates PCS grid-following/forming command routines","type":"control","value":0},"pcs_active_power":{"name":"PCS Active Power","signed":true,"type":"status","units":"kW","value":0},"pcs_active_power_ramp_rate_feedback":{"name":"PCS Active Power Ramp Rate Feedback","type":"status","units":"kW/s","value":0},"pcs_active_power_setpoint_feedback":{"name":"PCS Active Power Setpoint Feedback","signed":true,"type":"status","units":"kW","value":0},"pcs_alarm_active":{"name":"PCS Alarm Active","type":"status","value":false},"pcs_apparent_power":{"name":"PCS Apparent Power","signed":true,"type":"status","units":"kVA","value":0},"pcs_avg_line_voltage":{"name":"PCS Average Line Voltage","type":"status","units":"V","value":0},"pcs_comms_ok":{"name":"PCS Comms OK","type":"status","value":false},"pcs_control_alarms":{"bit0":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit10":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit11":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit12":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit13":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit14":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","bit15":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","bit16":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","bit17":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","bit18":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit19":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit2":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit20":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","bit21":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","bit22":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","bit23":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","bit24":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit4":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit5":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit6":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit7":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit8":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit9":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","name":"PCS Control Alarms","type":"bitfield","value":0},"pcs_dc_current":{"name":"PCS DC Current","scale":10,"signed":true,"type":"status","units":"A","value":0},"pcs_dc_power":{"name":"PCS DC Power","scale":10,"signed":true,"type":"status","units":"kW","value":0},"pcs_dc_voltage":{"name":"PCS DC Voltage","scale":10,"signed":true,"type":"status","units":"V","value":0},"pcs_fault_active":{"name":"PCS Fault Active","type":"status","value":false},"pcs_frequency":{"name":"PCS Grid Frequency","scale":100,"type":"status","units":"Hz","value":0},"pcs_frequency_setpoint_feedback":{"name":"PCS Frequency Setpoint Feedback","type":"status","units":"Hz","value":0},"pcs_grid_mode":{"bit0":"FollowPQ","bit1":"FormVF","bit2":"FormVSG","name":"PCS Grid Mode","type":"bitfield","value":0},"pcs_is_running":{"name":"PCS is Running","type":"status","value":false},"pcs_l1_current":{"name":"PCS Grid Current 1","scale":10,"type":"status","units":"A","value":0},"pcs_l1_l2_voltage":{"name":"PCS Grid Voltage L1-L2","type":"status","units":"V","value":0},"pcs_l2_current":{"name":"PCS Grid Current 2","scale":10,"type":"status","units":"A","value":0},"pcs_l2_l3_voltage":{"name":"PCS Grid Voltage L2-L3","type":"status","units":"V","value":0},"pcs_l3_current":{"name":"PCS Grid Current 3","scale":10,"type":"status","units":"A","value":0},"pcs_l3_l1_voltage":{"name":"PCS Grid Voltage L3-L1","type":"status","units":"V","value":0},"pcs_max_charge_power":{"name":"PCS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"pcs_max_discharge_power":{"name":"PCS Max Discharge Power","type":"status","units":"kW","value":0},"pcs_max_igbt_temperature":{"name":"PCS Max IGBT Temperature","scale":100,"type":"status","units":"°C","value":0},"pcs_monitor_alarms":{"bit0":"PCS Active Power Max Threshold Exceeded","bit1":"PCS DC Voltage Max Threshold Exceeded","bit2":"PCS DC Voltage Min Threshold Exceeded","bit3":"PCS Number of Modules Online Below Min Threshold","name":"PCS Monitor Alarms","type":"bitfield","value":0},"pcs_monitor_faults":{"bit0":"PCS Active Power Max Threshold Exceeded","bit1":"PCS DC Voltage Max Threshold Exceeded","bit2":"PCS DC Voltage Min Threshold Exceeded","bit3":"PCS Number of Modules Online Below Min Threshold","name":"PCS Monitor Faults","type":"bitfield","value":0},"pcs_num_modules_online":{"name":"PCS Number of Modules Online","type":"status","value":0},"pcs_num_modules_total":{"name":"PCS Number of Modules Total","type":"status","value":0},"pcs_power_factor":{"name":"PCS Power Factor","scale":1000,"signed":true,"type":"status","value":0},"pcs_rated_active_power":{"name":"PCS Rated Active Power","signed":true,"type":"status","units":"kW","value":0},"pcs_rated_apparent_power":{"name":"PCS Rated Apparent Power","signed":true,"type":"status","units":"kVA","value":0},"pcs_rated_reactive_power":{"name":"PCS Rated Reactive Power","signed":true,"type":"status","units":"kVAR","value":0},"pcs_reactive_power":{"name":"PCS Reactive Power","signed":true,"type":"status","units":"kVAR","value":0},"pcs_reactive_power_ramp_rate_feedback":{"name":"PCS Reactive Power Ramp Rate Feedback","type":"status","units":"kVAR/s","value":0},"pcs_reactive_power_setpoint_feedback":{"name":"PCS Reactive Power Setpoint Feedback","signed":true,"type":"status","units":"kVAR","value":0},"pcs_standby_enabled":{"excludeFromFile":true,"name":"PCS Standby Enabled","type":"status","value":false},"pcs_start_enabled":{"excludeFromFile":true,"name":"PCS Start Enabled","type":"status","value":false},"pcs_status":{"excludeFromFile":true,"name":"PCS Status","type":"status","value":"INIT"},"pcs_stop_enabled":{"excludeFromFile":true,"name":"PCS Stop Enabled","type":"status","value":false},"pcs_system_state":{"bit0":"Stop","bit1":"Run","bit2":"Fault","bit3":"Standby","name":"PCS System State","type":"bitfield","value":0},"pcs_voltage_setpoint_feedback":{"name":"PCS Voltage Setpoint Feedback","type":"status","units":"V","value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enable":"/config/pcs:enable","name":"Reactive Power Ramp Rate","note":"Sets the reactive power ramp rate","type":"control","units":"kVAR/s","value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Reactive Power Setpoint","note":"Sets the reactive power setpoint","signed":true,"type":"control","units":"kVAR","value":0},"start_stop_standby_command":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/pcs:enable","every":0.5,"ifChanged":false,"name":"Start/Stop/Standby Command","note1":"Initiates PCS start, standby, or stop command routines","note2":"0-\u003estop | 1-\u003estart | 2-\u003estandby","offset":0,"size":1,"type":"control","uri":"/sched/ess:SitePCSStatusControl","value":-1},"voltage_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Voltage Setpoint","note":"Sets the voltage setpoint","type":"control","units":"V","value":0}},"/vlinks/pcs":{"site_pcs_active_power":{"value":"/site/ess:pcs_active_power","vlink":"/status/pcs:ActivePower"},"site_pcs_active_power_ramp_rate_feedback":{"value":"/site/ess:pcs_active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"site_pcs_active_power_setpoint_feedback":{"value":"/site/ess:pcs_active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"site_pcs_alarm_active":{"value":"/site/ess:pcs_alarm_active","vlink":"/status/pcs:IsAlarming"},"site_pcs_apparent_power":{"value":"/site/ess:pcs_apparent_power","vlink":"/status/pcs:ApparentPower"},"site_pcs_avg_line_voltage":{"value":"/site/ess:pcs_avg_line_voltage","vlink":"/status/pcs:AvgLineVoltage"},"site_pcs_comms_ok":{"value":"/site/ess:pcs_comms_ok","vlink":"/status/pcs:CommsOK"},"site_pcs_dc_current":{"value":"/site/ess:pcs_dc_current","vlink":"/status/pcs:DCCurrent"},"site_pcs_dc_power":{"value":"/site/ess:pcs_dc_power","vlink":"/status/pcs:DCPower"},"site_pcs_dc_voltage":{"value":"/site/ess:pcs_dc_voltage","vlink":"/status/pcs:DCVoltage"},"site_pcs_fault_active":{"value":"/site/ess:pcs_fault_active","vlink":"/status/pcs:IsFaulted"},"site_pcs_frequency":{"value":"/site/ess:pcs_frequency","vlink":"/status/pcs:Frequency"},"site_pcs_frequency_setpoint_feedback":{"value":"/site/ess:pcs_frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"site_pcs_is_running":{"value":"/site/ess:pcs_is_running","vlink":"/status/pcs:IsRunning"},"site_pcs_l1_current":{"value":"/site/ess:pcs_l1_current","vlink":"/status/pcs:L1Current"},"site_pcs_l1_l2_voltage":{"value":"/site/ess:pcs_l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"site_pcs_l2_current":{"value":"/site/ess:pcs_l2_current","vlink":"/status/pcs:L2Current"},"site_pcs_l2_l3_voltage":{"value":"/site/ess:pcs_l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"site_pcs_l3_current":{"value":"/site/ess:pcs_l3_current","vlink":"/status/pcs:L3Current"},"site_pcs_l3_l1_voltage":{"value":"/site/ess:pcs_l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"site_pcs_max_charge_power":{"value":"/site/ess:pcs_max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"site_pcs_max_discharge_power":{"value":"/site/ess:pcs_max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"site_pcs_max_igbt_temperature":{"value":"/site/ess:pcs_max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"site_pcs_num_modules_online":{"value":"/site/ess:pcs_num_modules_online","vlink":"/status/pcs:NumModulesOnline"},"site_pcs_num_modules_total":{"value":"/site/ess:pcs_num_modules_total","vlink":"/status/pcs:NumModulesTotal"},"site_pcs_power_factor":{"value":"/site/ess:pcs_power_factor","vlink":"/status/pcs:PowerFactor"},"site_pcs_rated_active_power":{"value":"/site/ess:pcs_rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"site_pcs_rated_apparent_power":{"value":"/site/ess:pcs_rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"site_pcs_rated_reactive_power":{"value":"/site/ess:pcs_rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"site_pcs_reactive_power":{"value":"/site/ess:pcs_reactive_power","vlink":"/status/pcs:ReactivePower"},"site_pcs_reactive_power_ramp_rate_feedback":{"value":"/site/ess:pcs_reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"site_pcs_reactive_power_setpoint_feedback":{"value":"/site/ess:pcs_reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"site_pcs_standby_enabled":{"value":"/site/ess:pcs_standby_enabled","vlink":"/status/pcs:StandbyEnabled"},"site_pcs_start_enabled":{"value":"/site/ess:pcs_start_enabled","vlink":"/status/pcs:StartEnabled"},"site_pcs_status":{"value":"/site/ess:pcs_status","vlink":"/status/pcs:Status"},"site_pcs_stop_enabled":{"value":"/site/ess:pcs_stop_enabled","vlink":"/status/pcs:StopEnabled"},"site_pcs_voltage_setpoint_feedback":{"value":"/site/ess:pcs_voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}},"/assets/pcs/summary":{"active_power":{"value":0},"active_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power ramp rate","value":0},"active_power_ramp_rate_feedback":{"value":0},"active_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power setpoint","value":0},"active_power_setpoint_feedback":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"comms_ok":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"frequency":{"value":0},"frequency_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the frequency setpoint while the PCS is in grid-forming (VF)","value":0},"frequency_setpoint_feedback":{"value":0},"grid_follow_pq":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":true,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-following","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vf":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":true,"outValue":2,"uri":"/controls/pcs:GridFormVF"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (voltage and frequency)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vsg":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":true,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (virtual synchronous generator)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_mode":{"value":"INIT"},"l1_current":{"value":0},"l1_l2_voltage":{"value":0},"l2_current":{"value":0},"l2_l3_voltage":{"value":0},"l3_current":{"value":0},"l3_l1_voltage":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/summary:clear_faults@enabled"},{"uri":"/assets/pcs/summary:active_power_ramp_rate@enabled"},{"uri":"/assets/pcs/summary:reactive_power_ramp_rate@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_charge_power":{"value":0},"max_discharge_power":{"value":0},"max_igbt_temperature":{"value":0},"num_modules_online":{"value":0},"num_modules_total":{"value":0},"power_factor":{"value":0},"rated_active_power":{"value":0},"rated_apparent_power":{"value":0},"rated_power_factor":{"value":0},"rated_reactive_power":{"value":0},"reactive_power":{"value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power ramp rate","value":0},"reactive_power_ramp_rate_feedback":{"value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power setpoint","value":0},"reactive_power_setpoint_feedback":{"value":0},"standby":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Standby PCS","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 [/assets/pcs/summary/maint_mode] \u0026\u0026 [/status/pcs/SystemState == (Stop || Run)]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStandbyPCS","value":false},"start":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Start PCS","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 [/assets/pcs/summary/maint_mode] \u0026\u0026 ![/status/pcs/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStartPCS","value":false},"status":{"value":"INIT"},"stop":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Stop PCS","note":"Enabled conditions: [/assets/pcs/summary/maint_mode] \u0026\u0026 [/status/pcs/SystemState != Stop]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStopPCS","value":false},"system_state":{"value":"INIT"},"voltage_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the voltage setpoint while the PCS is in grid-forming (VF)","value":0},"voltage_setpoint_feedback":{"value":0}},"/vlinks/pcs":{"ui_active_power":{"value":"/assets/pcs/summary:active_power","vlink":"/status/pcs:ActivePower"},"ui_active_power_ramp_rate_feedback":{"value":"/assets/pcs/summary:active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"ui_active_power_setpoint_feedback":{"value":"/assets/pcs/summary:active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"ui_apparent_power":{"value":"/assets/pcs/summary:apparent_power","vlink":"/status/pcs:ApparentPower"},"ui_comms_ok":{"value":"/assets/pcs/summary:comms_ok","vlink":"/status/pcs:CommsOK"},"ui_dc_current":{"value":"/assets/pcs/summary:dc_current","vlink":"/status/pcs:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/summary:dc_power","vlink":"/status/pcs:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/summary:dc_voltage","vlink":"/status/pcs:DCVoltage"},"ui_frequency":{"value":"/assets/pcs/summary:frequency","vlink":"/status/pcs:Frequency"},"ui_frequency_setpoint_feedback":{"value":"/assets/pcs/summary:frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"ui_grid_mode":{"value":"/assets/pcs/summary:grid_mode","vlink":"/status/pcs:GridMode"},"ui_l1_current":{"value":"/assets/pcs/summary:l1_current","vlink":"/status/pcs:L1Current"},"ui_l1_l2_voltage":{"value":"/assets/pcs/summary:l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"ui_l2_current":{"value":"/assets/pcs/summary:l2_current","vlink":"/status/pcs:L2Current"},"ui_l2_l3_voltage":{"value":"/assets/pcs/summary:l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"ui_l3_current":{"value":"/assets/pcs/summary:l3_current","vlink":"/status/pcs:L3Current"},"ui_l3_l1_voltage":{"value":"/assets/pcs/summary:l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"ui_max_charge_power":{"value":"/assets/pcs/summary:max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"ui_max_discharge_power":{"value":"/assets/pcs/summary:max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"ui_max_igbt_temperature":{"value":"/assets/pcs/summary:max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"ui_num_modules_online":{"value":"/assets/pcs/summary:num_modules_online","vlink":"/status/pcs:NumModulesOnline"},"ui_num_modules_total":{"value":"/assets/pcs/summary:num_modules_total","vlink":"/status/pcs:NumModulesTotal"},"ui_power_factor":{"value":"/assets/pcs/summary:power_factor","vlink":"/status/pcs:PowerFactor"},"ui_rated_active_power":{"value":"/assets/pcs/summary:rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"ui_rated_apparent_power":{"value":"/assets/pcs/summary:rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"ui_rated_power_factor":{"value":"/assets/pcs/summary:rated_power_factor","vlink":"/config/pcs:RatedPowerFactor"},"ui_rated_reactive_power":{"value":"/assets/pcs/summary:rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"ui_reactive_power":{"value":"/assets/pcs/summary:reactive_power","vlink":"/status/pcs:ReactivePower"},"ui_reactive_power_ramp_rate_feedback":{"value":"/assets/pcs/summary:reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"ui_reactive_power_setpoint_feedback":{"value":"/assets/pcs/summary:reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"ui_status":{"value":"/assets/pcs/summary:status","vlink":"/status/pcs:Status"},"ui_system_state":{"value":"/assets/pcs/summary:system_state","vlink":"/status/pcs:SystemState"},"ui_voltage_setpoint_feedback":{"value":"/assets/pcs/summary:voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}}}
[4.46731s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[4.46821s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/pcs/summary:alarms",
	"FaultDestination":	"/assets/pcs/summary:faults",
	"FrequencySetpointMargin":	5,
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"PowerSetpointMargin":	5,
	"RampRateMargin":	5,
	"RatedActivePower":	4200,
	"RatedApparentPower":	4200,
	"RatedPowerFactor":	0.8,
	"RatedReactivePower":	2100,
	"VoltageSetpointMargin":	5,
	"enable":	false,
	"enum_opt":	false
}].
[4.46909s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:alarms]
[4.46968s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:alarms]
[4.47356s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:faults]
[4.47501s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:faults]
[4.47567s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.4762s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.47724s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.47797s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.4789s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerCmdReal":	{
		"value":	"/controls/pcs:ActivePowerCmdReal"
	},
	"ActivePowerSetpoint":	{
		"value":	"/controls/pcs:ActivePowerSetpoint"
	},
	"MaxPCSChargePower":	{
		"value":	"/limits/pcs:MaxPCSChargePower"
	},
	"MaxPCSDischargePower":	{
		"value":	"/limits/pcs:MaxPCSDischargePower"
	},
	"RatedActivePower":	{
		"value":	"/limits/pcs:RatedActivePower"
	},
	"RatedApparentPower":	{
		"value":	"/limits/pcs:RatedApparentPower"
	},
	"RatedReactivePower":	{
		"value":	"/limits/pcs:RatedReactivePower"
	},
	"ReactivePowerCmdReal":	{
		"value":	"/controls/pcs:ReactivePowerCmdReal"
	},
	"ReactivePowerSetpoint":	{
		"value":	"/controls/pcs:ReactivePowerSetpoint"
	}
}].
[4.4796s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ActivePowerCmdReal]
[4.48028s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ActivePowerCmdReal]
[4.48097s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ActivePowerSetpoint]
[4.48148s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ActivePowerSetpoint]
[4.48213s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:MaxPCSChargePower]
[4.48266s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:MaxPCSChargePower]
[4.48324s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:MaxPCSDischargePower]
[4.48376s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:MaxPCSDischargePower]
[4.48457s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:RatedActivePower]
[4.48515s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:RatedActivePower]
[4.48569s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:RatedApparentPower]
[4.48616s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:RatedApparentPower]
[4.48665s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:RatedReactivePower]
[4.48709s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:RatedReactivePower]
[4.4876s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ReactivePowerCmdReal]
[4.48793s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ReactivePowerCmdReal]
[4.4885s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ReactivePowerSetpoint]
[4.48977s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ReactivePowerSetpoint]
[4.49149s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"LocalStandbyPCS":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LocalStandbyPCS"
						}]
				}]
		},
		"every":	0.5,
		"value":	"LocalStandbyPCS"
	},
	"LocalStartPCS":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LocalStartPCS"
						}]
				}]
		},
		"every":	0.5,
		"value":	"LocalStartPCS"
	},
	"LocalStopPCS":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LocalStopPCS"
						}]
				}]
		},
		"every":	0.5,
		"value":	"LocalStopPCS"
	},
	"StandbyEnable":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"StandbyEnable"
						}]
				}]
		},
		"value":	"StandbyEnable"
	},
	"StartEnable":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"StartEnable"
						}]
				}]
		},
		"value":	"StartEnable"
	},
	"StopEnable":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"StopEnable"
						}]
				}]
		},
		"value":	"StopEnable"
	},
	"handlePowerCmd_pcs":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandlePowerCmd"
						}]
				}]
		},
		"bms":	"bms",
		"ess":	"ess",
		"note":	"Processes active and reactive power commands before they are sent",
		"pcs":	"pcs",
		"value":	1
	},
	"pubAssetsSummary_pcs":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"mode":	"ui",
		"note":	"Publishes UI summary data (/assets/pcs/summary)",
		"table":	"/assets/pcs/summary",
		"value":	1
	},
	"runMonitor_pcs":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"pcs",
		"enable":	"/config/pcs:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs",
		"value":	1
	},
	"updateHeartbeatWrite_pcs":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"CalculateVar",
							"inAv":	"/status/pcs:HeartbeatWrite"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"note":	"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite",
		"value":	1
	}
}].
[4.49298s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [LocalStandbyPCS]
[4.49358s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [LocalStandbyPCS]
[4.49425s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [LocalStartPCS]
[4.49479s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [LocalStartPCS]
[4.4953s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [LocalStopPCS]
[4.49582s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [LocalStopPCS]
[4.49623s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [StandbyEnable]
[4.4966s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [StandbyEnable]
[4.49737s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/pcs:perf_StandbyEnable]
[4.49812s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/pcs:perf_StandbyEnable]
[4.49867s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:StandbyEnable_pcs]
[4.4992s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:StandbyEnable_pcs]
[4.49989s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [StartEnable]
[4.50014s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [StartEnable]
[4.50059s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/pcs:perf_StartEnable]
[4.5011s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/pcs:perf_StartEnable]
[4.50171s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:StartEnable_pcs]
[4.50205s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:StartEnable_pcs]
[4.50263s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [StopEnable]
[4.5035s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [StopEnable]
[4.5062s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/pcs:perf_StopEnable]
[4.50671s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/pcs:perf_StopEnable]
[4.50759s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:StopEnable_pcs]
[4.50818s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:StopEnable_pcs]
[4.50912s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/pcs:perf_HandlePowerCmd]
[4.50959s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/pcs:perf_HandlePowerCmd]
[4.51023s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:HandlePowerCmd_ess]
[4.51054s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:HandlePowerCmd_ess]
[4.51115s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/ess:MaxChargePower]
[4.51161s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/ess:MaxChargePower]
[4.51279s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/ess:MaxDischargePower]
[4.51328s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/ess:MaxDischargePower]
[4.51419s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/ess:MaxReactivePower]
[4.51475s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/ess:MaxReactivePower]
[4.51526s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/ess:MaxApparentPower]
[4.5161s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/ess:MaxApparentPower]
[4.51685s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:PowerPriority]
[4.51726s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:PowerPriority]
[4.5189s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:PCSLimitsChanged]
[4.51942s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:PCSLimitsChanged]
[4.52006s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs:PCSConfigChanged]
[4.52055s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs:PCSConfigChanged]
[4.52117s  ] [info    ] [HandlePowerInit] RUNNING RELOAD 0 for pcs
[4.52214s  ] [info    ] [HandlePowerInit] Done checking hw and config
[4.52277s  ] [info    ] [HandlePowerInit] pcs Found Pr_c [4200]
[4.52398s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:RatedActivePower_Config]
[4.52477s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:RatedActivePower_Config]
[4.5255s   ] [info    ] [HandlePowerInit] pcs Found Qr_c [2100]
[4.52661s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:RatedReactivePower_Config]
[4.52741s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:RatedReactivePower_Config]
[4.52831s  ] [info    ] [HandlePowerInit] pcs Found Sr_c [4200]
[4.52938s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:RatedApparentPower_Config]
[4.53008s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:RatedApparentPower_Config]
[4.5309s   ] [info    ] [HandlePowerInit] pcs Found pfr_c [0.8]
[4.53129s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:RatedPowerFactor_Config]
[4.53182s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:RatedPowerFactor_Config]
[4.53226s  ] [info    ] [HandlePowerInit] Done initializing vars
[4.53292s  ] [info    ] [HandlePowerInit] pcs No priority found in /config or /controls. Setting power priority for pcs to default P P
[4.53368s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [P]
[4.53427s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [P]
[4.53463s  ] [info    ] [HandlePowerInit] Done initializing Priority
[4.53539s  ] [info    ] [HandlePowerInit] Done initializing Ps and Qs
[4.53584s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:MaxPCSReactivePower]
[4.53627s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:MaxPCSReactivePower]
[4.53697s  ] [info    ] [HandlePowerInit] Rated Active/Reactive/Apparent Powers set to 4200/2100/4200
[4.53765s  ] [info    ] [HandlePowerInit] Done initing vars
[4.53801s  ] [info    ] [HandlePowerInit] Done setting max Ps
[4.53852s  ] [info    ] [HandlePowerInit] Rated Power for pcs:
[4.53908s  ] [info    ] [HandlePowerInit]        Apparent Power  [4200]
[4.53965s  ] [info    ] [HandlePowerInit]        Reactive Power  [2100]
[4.54048s  ] [info    ] [HandlePowerInit] Max Powers for pcs:
[4.54102s  ] [info    ] [HandlePowerInit]        Charge Power    [-4200]
[4.5414s   ] [info    ] [HandlePowerInit]        Discharge Power [4200]
[4.54194s  ] [info    ] [HandlePowerInit] RUNNING RELOAD 2 for pcs
[4.54259s  ] [info    ] [HandlePowerInit] Done checking hw and config
[4.54314s  ] [info    ] [HandlePowerInit] pcs Found Pr_c [4200]
[4.54398s  ] [info    ] [HandlePowerInit] pcs Found Qr_c [2100]
[4.54439s  ] [info    ] [HandlePowerInit] pcs Found Sr_c [4200]
[4.54523s  ] [info    ] [HandlePowerInit] pcs Found pfr_c [0.8]
[4.54574s  ] [info    ] [HandlePowerInit] Done initializing vars
[4.54636s  ] [info    ] [HandlePowerInit] pcs No priority found in /config or /controls. Setting power priority for pcs to default P P
[4.54796s  ] [info    ] [HandlePowerInit] Done initializing Priority
[4.54852s  ] [info    ] [HandlePowerInit] Done initializing Ps and Qs
[4.54919s  ] [info    ] [HandlePowerInit] Rated Active/Reactive/Apparent Powers set to 4200/2100/4200
[4.54967s  ] [info    ] [HandlePowerInit] Done initing vars
[4.55007s  ] [info    ] [HandlePowerInit] Done setting max Ps
[4.55065s  ] [info    ] [HandlePowerInit] Rated Power for pcs:
[4.5511s   ] [info    ] [HandlePowerInit]        Apparent Power  [4200]
[4.55156s  ] [info    ] [HandlePowerInit]        Reactive Power  [2100]
[4.55204s  ] [info    ] [HandlePowerInit] Max Powers for pcs:
[4.55236s  ] [info    ] [HandlePowerInit]        Charge Power    [-4200]
[4.55311s  ] [info    ] [HandlePowerInit]        Discharge Power [4200]
[4.55389s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/pcs:AvgLineVoltage":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	}
}].
[4.55646s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AvgLineVoltage":	{
		"expression":	"({1} + {2} + {3}) / 3",
		"note":	"Calculates the average grid line voltage",
		"numVars":	3,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:L1L2Voltage",
		"variable2":	"/status/pcs:L2L3Voltage",
		"variable3":	"/status/pcs:L3L1Voltage"
	},
	"CommsOK":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	true,
							"uri":	"/site/ess:comms_faults[0]"
						}]
				}]
		},
		"note":	"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable",
		"value":	true
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/pcs:DCVoltage@EnableMinValCheck"
						}, {
							"uri":	"/status/bms:Voltage@EnableMinValCheck"
						}, {
							"uri":	"/status/pcs:NumModulesOnline@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"note":	"Enables/disables monitoring variables if PCS DC contactors are closed/opened",
		"value":	false
	},
	"GridMode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	"FollowPQ",
							"note":	"Bit 0 - FollowPQ",
							"outValue":	1,
							"uri":	"/site/ess:pcs_grid_mode"
						}, {
							"inValue":	"FormVF",
							"note":	"Bit 1 - FormVF",
							"outValue":	2,
							"uri":	"/site/ess:pcs_grid_mode"
						}, {
							"inValue":	"FormVSG",
							"note":	"Bit 2 - FormVSG",
							"outValue":	4,
							"uri":	"/site/ess:pcs_grid_mode"
						}]
				}]
		},
		"ifChanged":	true,
		"note1":	"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG",
		"value":	"INIT"
	},
	"HeartbeatWrite":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"fims":	"set",
							"uri":	"/components/pcs:heartbeat_write"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"excludeFromDefaultSched":	true,
		"expression":	"if (({1} >= 59), 0, ({1} + 1))",
		"note":	"Updates and then sends the heartbeat write value",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:HeartbeatWrite"
	},
	"NumModulesTotal":	6,
	"Status":	"INIT",
	"SystemState":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	"Stop",
							"outValue":	false,
							"uri":	"/status/pcs:DCClosed"
						}, {
							"inValue":	"Run",
							"outValue":	true,
							"uri":	"/status/pcs:DCClosed"
						}, {
							"inValue":	"Fault",
							"outValue":	false,
							"uri":	"/status/pcs:DCClosed"
						}, {
							"inValue":	"Standby",
							"outValue":	true,
							"uri":	"/status/pcs:DCClosed"
						}, {
							"inValue":	"Stop",
							"outValue":	false,
							"uri":	"/status/pcs:IsRunning"
						}, {
							"inValue":	"Run",
							"outValue":	true,
							"uri":	"/status/pcs:IsRunning"
						}, {
							"inValue":	"Fault",
							"outValue":	false,
							"uri":	"/status/pcs:IsRunning"
						}, {
							"inValue":	"Standby",
							"outValue":	false,
							"uri":	"/status/pcs:IsRunning"
						}, {
							"inValue":	"Stop",
							"outValue":	false,
							"uri":	"/status/pcs:SystemFault"
						}, {
							"inValue":	"Run",
							"outValue":	false,
							"uri":	"/status/pcs:SystemFault"
						}, {
							"inValue":	"Fault",
							"outValue":	true,
							"uri":	"/status/pcs:SystemFault"
						}, {
							"inValue":	"Standby",
							"outValue":	false,
							"uri":	"/status/pcs:SystemFault"
						}, {
							"inValue":	"Stop",
							"note":	"Bit 0 - Stop",
							"outValue":	1,
							"uri":	"/site/ess:pcs_system_state"
						}, {
							"inValue":	"Run",
							"note":	"Bit 1 - Run",
							"outValue":	2,
							"uri":	"/site/ess:pcs_system_state"
						}, {
							"inValue":	"Fault",
							"note":	"Bit 2 - Fault",
							"outValue":	4,
							"uri":	"/site/ess:pcs_system_state"
						}, {
							"inValue":	"Standby",
							"note":	"Bit 3 - Standby",
							"outValue":	8,
							"uri":	"/site/ess:pcs_system_state"
						}]
				}]
		},
		"ifChanged":	true,
		"note1":	"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby",
		"note2":	"Updates various PCS status variables depending on this variable's value",
		"value":	"INIT"
	}
}].
[4.55829s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.55914s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.56007s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.56052s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.56364s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.57252s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.57401s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_pcs":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/pcs) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"pcs",
				"every":	1,
				"uri":	"/sched/pcs:pubAssetsSummary_pcs",
				"value":	1
			}, {
				"aname":	"pcs",
				"every":	0.1,
				"uri":	"/sched/pcs:runMonitor_pcs",
				"value":	1
			}, {
				"aname":	"pcs",
				"every":	1,
				"uri":	"/sched/pcs:checkInputs_pcs",
				"value":	1
			}, {
				"aname":	"pcs",
				"every":	1,
				"uri":	"/sched/pcs:updateHeartbeatWrite_pcs",
				"value":	1
			}, {
				"aname":	"pcs",
				"every":	0.1,
				"uri":	"/sched/pcs:handlePowerCmd_pcs",
				"value":	1
			}, {
				"aname":	"pcs",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/pcs:LocalStartPCS",
				"value":	0
			}, {
				"aname":	"pcs",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/pcs:LocalStopPCS",
				"value":	0
			}, {
				"aname":	"pcs",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/pcs:LocalStandbyPCS",
				"value":	0
			}, {
				"aname":	"pcs",
				"debug":	0,
				"every":	0.1,
				"offset":	0,
				"uri":	"/sched/pcs:StartEnable",
				"value":	0
			}, {
				"aname":	"pcs",
				"debug":	0,
				"every":	0.1,
				"offset":	0,
				"uri":	"/sched/pcs:StopEnable",
				"value":	0
			}, {
				"aname":	"pcs",
				"debug":	0,
				"every":	0.1,
				"offset":	0,
				"uri":	"/sched/pcs:StandbyEnable",
				"value":	0
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[4.58051s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"cmdVar":	"/components/pcs_registers_fast:p_p_reference",
		"expression":	"{1} != Stop and {1} != Fault",
		"note1":	"Send active power command to PCS",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:SystemState"
	},
	"ActivePowerCmdConvert":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:ActivePowerCmd@triggerCmd"
						}, {
							"uri":	"/controls/pcs:ActivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1}",
		"ifChanged":	false,
		"note":	"Pass kW command to ActivePowerCmd",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ActivePowerCmdReal"
	},
	"ActivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"cmdVar":	"",
		"expression":	"{1} > 0",
		"note1":	"Send active power ramp rate to PCS",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ActivePowerRampRateCmd"
	},
	"ActivePowerRampRateCmdConvert":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"
						}, {
							"uri":	"/controls/pcs:ActivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1}",
		"ifChanged":	false,
		"note":	"Pass kW/s command to ActivePowerRampRateCmd",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ActivePowerRampRate"
	},
	"ActivePowerSetpointEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:active_power_setpoint@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and {2} != Stop and {2} != Fault",
		"note":	"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:SystemState"
	},
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"/components/pcs_registers_fast:reset",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	},
	"FrequencySetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"cmdVar":	"",
		"expression":	"{1} >= 55 and {1} <= 65 and {2} == FormVF",
		"note1":	"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	2,
		"useExpr":	true,
		"value":	60,
		"variable1":	"/controls/pcs:FrequencySetpoint",
		"variable2":	"/status/pcs:GridMode"
	},
	"FrequencySetpointEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:frequency_setpoint@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and {2} == FormVF",
		"note":	"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:GridMode"
	},
	"GridFollowPQ":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"expression":	"{1} == Stop or {1} == Fault",
		"note1":	"Grid-following mode command to send to PCS if the PCS is in Stop or Fault",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"sendCmdTimeout":	3,
		"useExpr":	true,
		"value":	1,
		"variable1":	"/status/pcs:SystemState"
	},
	"GridFollowPQEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:grid_follow_pq@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ",
		"note":	"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:SystemState",
		"variable3":	"/status/pcs:GridMode"
	},
	"GridFormVF":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"expression":	"{1} == Stop or {1} == Fault",
		"note1":	"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"sendCmdTimeout":	3,
		"useExpr":	true,
		"value":	2,
		"variable1":	"/status/pcs:SystemState"
	},
	"GridFormVFEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:grid_form_vf@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ",
		"note":	"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:SystemState",
		"variable3":	"/status/pcs:GridMode"
	},
	"GridFormVSG":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"expression":	"{1} == Stop or {1} == Fault",
		"note1":	"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"sendCmdTimeout":	3,
		"useExpr":	true,
		"value":	3,
		"variable1":	"/status/pcs:SystemState"
	},
	"GridFormVSGEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:grid_form_vsg@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ",
		"note":	"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:SystemState",
		"variable3":	"/status/pcs:GridMode"
	},
	"ReactivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"cmdVar":	"/components/pcs_registers_fast:q_q_reference",
		"expression":	"{1} != Stop and {1} != Fault",
		"note1":	"Send reactive power command to PCS",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:SystemState"
	},
	"ReactivePowerCmdConvert":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:ReactivePowerCmd@triggerCmd"
						}, {
							"uri":	"/controls/pcs:ReactivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1}",
		"ifChanged":	false,
		"note":	"Pass kVAR command to ReactivePowerCmd",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ReactivePowerCmdReal"
	},
	"ReactivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"cmdVar":	"",
		"expression":	"{1} > 0",
		"note1":	"Send reactive power ramp rate to PCS",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ReactivePowerRampRateCmd"
	},
	"ReactivePowerRampRateCmdConvert":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"
						}, {
							"uri":	"/controls/pcs:ReactivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1}",
		"ifChanged":	false,
		"note":	"Pass kVAR/s command to ReactivePowerRampRateCmd",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ReactivePowerRampRate"
	},
	"ReactivePowerSetpointEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:reactive_power_setpoint@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and {2} != Stop and {2} != Fault",
		"note":	"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:SystemState"
	},
	"Standby":	{
		"checkCmdHoldTimeout":	2,
		"checkCmdTimeout":	3,
		"cmdVar":	"/components/pcs_registers_slow:selector_status",
		"maxCmdTries":	2,
		"sendCmdTimeout":	3,
		"value":	2
	},
	"Start":	{
		"checkCmdHoldTimeout":	2,
		"checkCmdTimeout":	3,
		"cmdVar":	"/components/pcs_registers_slow:selector_status",
		"maxCmdTries":	2,
		"sendCmdTimeout":	3,
		"value":	1
	},
	"Stop":	{
		"checkCmdHoldTimeout":	2,
		"checkCmdTimeout":	3,
		"cmdVar":	"/components/pcs_registers_slow:selector_status",
		"maxCmdTries":	2,
		"sendCmdTimeout":	3,
		"value":	0
	},
	"VerifyActivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ActivePowerCmd",
		"variable2":	"/status/pcs:ActivePowerSetpointFeedback",
		"variable3":	"/config/pcs:PowerSetpointMargin"
	},
	"VerifyActivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ActivePowerRampRateCmd",
		"variable2":	"/status/pcs:ActivePowerRampRateFeedback",
		"variable3":	"/config/pcs:RampRateMargin"
	},
	"VerifyFrequencySetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:FrequencySetpoint",
		"variable2":	"/status/pcs:FrequencySetpointFeedback",
		"variable3":	"/config/pcs:FrequencySetpointMargin"
	},
	"VerifyGridFollowPQ":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"{1} == GridFollowPQ",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:GridMode"
	},
	"VerifyGridFormVF":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"{1} == GridFormVF",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:GridMode"
	},
	"VerifyGridFormVSG":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"{1} == GridFormVSG",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:GridMode"
	},
	"VerifyReactivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ReactivePowerCmd",
		"variable2":	"/status/pcs:ReactivePowerSetpointFeedback",
		"variable3":	"/config/pcs:PowerSetpointMargin"
	},
	"VerifyReactivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ReactivePowerRampRateCmd",
		"variable2":	"/status/pcs:ReactivePowerRampRateFeedback",
		"variable3":	"/config/pcs:RampRateMargin"
	},
	"VerifyStandby":	{
		"enableAlert":	false,
		"expression":	"{1} == Standby",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:SystemState"
	},
	"VerifyStart":	{
		"enableAlert":	false,
		"expression":	"{1} == Run",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:SystemState"
	},
	"VerifyStop":	{
		"enableAlert":	false,
		"expression":	"{1} == Stop",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:SystemState"
	},
	"VerifyVoltageSetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:VoltageSetpoint",
		"variable2":	"/status/pcs:VoltageSetpointFeedback",
		"variable3":	"/config/pcs:VoltageSetpointMargin"
	},
	"VoltageSetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"cmdVar":	"",
		"expression":	"{1} >= 460 and {1} <= 500 and {2} == FormVF",
		"note1":	"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	2,
		"useExpr":	true,
		"value":	480,
		"variable1":	"/controls/pcs:VoltageSetpoint",
		"variable2":	"/status/pcs:GridMode"
	},
	"VoltageSetpointEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:voltage_setpoint@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and {2} == FormVF",
		"note":	"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:GridMode"
	}
}].
[4.6006s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_ActivePowerCmd]
[4.60128s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_ActivePowerCmd]
[4.60166s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:ActivePowerCmd]  reload 0
[4.60212s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:ActivePowerCmd]
[4.60254s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:ActivePowerCmd] to amap in asset [pcs]
[4.60304s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ActivePowerCmd]
[4.60368s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ActivePowerCmd]
[4.60507s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_ActivePowerRampRateCmd]
[4.6061s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_ActivePowerRampRateCmd]
[4.60667s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:ActivePowerRampRateCmd]  reload 0
[4.60749s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:ActivePowerRampRateCmd]
[4.60826s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:ActivePowerRampRateCmd] to amap in asset [pcs]
[4.61364s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ActivePowerRampRateCmd]
[4.61496s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ActivePowerRampRateCmd]
[4.6182s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_ClearFaults]
[4.61929s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_ClearFaults]
[4.62003s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:ClearFaults]  reload 0
[4.62047s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:ClearFaults]
[4.6211s   ] [info    ] [HandleCmd      ] Adding [/controls/pcs:ClearFaults] to amap in asset [pcs]
[4.62161s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ClearFaults]
[4.62233s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ClearFaults]
[4.62324s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_FrequencySetpoint]
[4.62357s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_FrequencySetpoint]
[4.62412s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:FrequencySetpoint]  reload 0
[4.62473s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:FrequencySetpoint]
[4.62529s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:FrequencySetpoint] to amap in asset [pcs]
[4.62586s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:FrequencySetpoint]
[4.62619s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:FrequencySetpoint]
[4.62683s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_GridFollowPQ]
[4.62725s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_GridFollowPQ]
[4.62761s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:GridFollowPQ]  reload 0
[4.628s    ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:GridFollowPQ]
[4.6283s   ] [info    ] [HandleCmd      ] Adding [/controls/pcs:GridFollowPQ] to amap in asset [pcs]
[4.62881s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:GridFollowPQ]
[4.62911s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:GridFollowPQ]
[4.62997s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_GridFormVF]
[4.63033s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_GridFormVF]
[4.6308s   ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:GridFormVF]  reload 0
[4.63133s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:GridFormVF]
[4.63175s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:GridFormVF] to amap in asset [pcs]
[4.6326s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:GridFormVF]
[4.63317s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:GridFormVF]
[4.63397s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_GridFormVSG]
[4.63432s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_GridFormVSG]
[4.63468s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:GridFormVSG]  reload 0
[4.63517s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:GridFormVSG]
[4.63561s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:GridFormVSG] to amap in asset [pcs]
[4.63703s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:GridFormVSG]
[4.63759s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:GridFormVSG]
[4.63889s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_ReactivePowerCmd]
[4.63961s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_ReactivePowerCmd]
[4.64014s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:ReactivePowerCmd]  reload 0
[4.64056s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:ReactivePowerCmd]
[4.64114s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:ReactivePowerCmd] to amap in asset [pcs]
[4.64156s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ReactivePowerCmd]
[4.64195s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ReactivePowerCmd]
[4.64275s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_ReactivePowerRampRateCmd]
[4.64352s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_ReactivePowerRampRateCmd]
[4.644s    ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:ReactivePowerRampRateCmd]  reload 0
[4.6443s   ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:ReactivePowerRampRateCmd]
[4.64487s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:ReactivePowerRampRateCmd] to amap in asset [pcs]
[4.64637s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ReactivePowerRampRateCmd]
[4.64693s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ReactivePowerRampRateCmd]
[4.64811s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyActivePowerCmd]
[4.64869s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyActivePowerCmd]
[4.6493s   ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyActivePowerCmd]  reload 0
[4.64979s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyActivePowerCmd]
[4.65042s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyActivePowerCmd] to amap in asset [pcs]
[4.65083s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyActivePowerCmd]
[4.65126s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyActivePowerCmd]
[4.65203s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyActivePowerRampRateCmd]
[4.65247s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyActivePowerRampRateCmd]
[4.65295s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyActivePowerRampRateCmd]  reload 0
[4.65348s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyActivePowerRampRateCmd]
[4.65415s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyActivePowerRampRateCmd] to amap in asset [pcs]
[4.65467s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyActivePowerRampRateCmd]
[4.65578s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyActivePowerRampRateCmd]
[4.6565s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyFrequencySetpoint]
[4.65707s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyFrequencySetpoint]
[4.65771s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyFrequencySetpoint]  reload 0
[4.65838s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyFrequencySetpoint]
[4.65885s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyFrequencySetpoint] to amap in asset [pcs]
[4.65917s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyFrequencySetpoint]
[4.65961s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyFrequencySetpoint]
[4.66038s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyGridFollowPQ]
[4.66083s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyGridFollowPQ]
[4.6611s   ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyGridFollowPQ]  reload 0
[4.66164s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyGridFollowPQ]
[4.66234s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyGridFollowPQ] to amap in asset [pcs]
[4.66268s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyGridFollowPQ]
[4.66314s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyGridFollowPQ]
[4.66384s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyGridFormVF]
[4.66445s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyGridFormVF]
[4.66518s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyGridFormVF]  reload 0
[4.66555s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyGridFormVF]
[4.66594s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyGridFormVF] to amap in asset [pcs]
[4.6663s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyGridFormVF]
[4.66668s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyGridFormVF]
[4.66733s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyGridFormVSG]
[4.66772s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyGridFormVSG]
[4.66832s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyGridFormVSG]  reload 0
[4.66887s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyGridFormVSG]
[4.66927s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyGridFormVSG] to amap in asset [pcs]
[4.66993s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyGridFormVSG]
[4.67057s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyGridFormVSG]
[4.67105s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyReactivePowerCmd]
[4.67192s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyReactivePowerCmd]
[4.67256s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyReactivePowerCmd]  reload 0
[4.6729s   ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyReactivePowerCmd]
[4.67329s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyReactivePowerCmd] to amap in asset [pcs]
[4.67375s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyReactivePowerCmd]
[4.67504s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyReactivePowerCmd]
[4.67614s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyReactivePowerRampRateCmd]
[4.67654s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyReactivePowerRampRateCmd]
[4.67704s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyReactivePowerRampRateCmd]  reload 0
[4.67748s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyReactivePowerRampRateCmd]
[4.67807s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyReactivePowerRampRateCmd] to amap in asset [pcs]
[4.67903s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyReactivePowerRampRateCmd]
[4.67959s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyReactivePowerRampRateCmd]
[4.6825s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyVoltageSetpoint]
[4.68337s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyVoltageSetpoint]
[4.68406s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyVoltageSetpoint]  reload 0
[4.68565s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyVoltageSetpoint]
[4.68831s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyVoltageSetpoint] to amap in asset [pcs]
[4.6888s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyVoltageSetpoint]
[4.6902s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyVoltageSetpoint]
[4.69234s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VoltageSetpoint]
[4.6939s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VoltageSetpoint]
[4.69471s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VoltageSetpoint]  reload 0
[4.69583s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VoltageSetpoint]
[4.69845s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VoltageSetpoint] to amap in asset [pcs]
[4.69895s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VoltageSetpoint]
[4.70071s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VoltageSetpoint]
[4.70174s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/pcs:ActivePowerCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:ActivePowerCmdConvert":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ActivePowerRampRateCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:ActivePowerRampRateCmdConvert":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ActivePowerSetpointEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ClearFaults":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:FrequencySetpoint":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:FrequencySetpointEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:GridFollowPQ":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:GridFollowPQEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:GridFormVF":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:GridFormVFEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:GridFormVSG":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:GridFormVSGEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ReactivePowerCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:ReactivePowerCmdConvert":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ReactivePowerRampRateCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:ReactivePowerRampRateCmdConvert":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ReactivePowerSetpointEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:VerifyActivePowerCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyActivePowerRampRateCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyFrequencySetpoint":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyGridFollowPQ":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyGridFormVF":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyGridFormVSG":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyReactivePowerCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyReactivePowerRampRateCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyVoltageSetpoint":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VoltageSetpoint":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VoltageSetpointEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	}
}].
[4.70398s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:ActivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs:ActivePowerCmd",
		"value":	false
	},
	"ActivePowerRampRateCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:ActivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs:ActivePowerRampRateCmd",
		"value":	false
	},
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:ClearFaults"
						}, {
							"outValue":	"Clear",
							"uri":	"/faults/pcs:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/pcs:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear",
		"value":	false
	},
	"FrequencySetpointSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:FrequencySetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs:FrequencySetpoint",
		"value":	false
	},
	"GridFollowPQSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:VerifyGridFollowPQ@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:VerifyGridFollowPQ"
						}, {
							"inValue":	false,
							"outValue":	"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:GridFollowPQ"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm",
		"value":	false
	},
	"GridFormVFSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:VerifyGridFormVF@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:VerifyGridFormVF"
						}, {
							"inValue":	false,
							"outValue":	"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:GridFormVF"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm",
		"value":	false
	},
	"GridFormVSGSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:VerifyGridFormVSG@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:VerifyGridFormVSG"
						}, {
							"inValue":	false,
							"outValue":	"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:GridFormVSG"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm",
		"value":	false
	},
	"ReactivePowerCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:ReactivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs:ReactivePowerCmd",
		"value":	false
	},
	"ReactivePowerRampRateCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:ReactivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs:ReactivePowerRampRateCmd",
		"value":	false
	},
	"StandbySuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:VerifyStandby@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:VerifyStandby"
						}, {
							"inValue":	false,
							"outValue":	"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:Standby"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm",
		"value":	false
	},
	"StartSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:VerifyStart@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:VerifyStart"
						}, {
							"inValue":	false,
							"outValue":	"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:Start"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm",
		"value":	false
	},
	"StopSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:VerifyStop@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:VerifyStop"
						}, {
							"inValue":	false,
							"outValue":	"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:Stop"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm",
		"value":	false
	},
	"VerifyActivePowerCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyActivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm",
		"value":	false
	},
	"VerifyActivePowerRampRateCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyActivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm",
		"value":	false
	},
	"VerifyFrequencySetpointSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyFrequencySetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm",
		"value":	false
	},
	"VerifyGridFollowPQSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyGridFollowPQ"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not in grid-following after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyGridFormVFSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyGridFormVF"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyGridFormVSGSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyGridFormVSG"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyReactivePowerCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyReactivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm",
		"value":	false
	},
	"VerifyReactivePowerRampRateCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyReactivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm",
		"value":	false
	},
	"VerifyStandbySuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyStandby"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not on standby after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyStartSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyStart"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not running after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyStopSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyStop"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not stopped after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyVoltageSetpointSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyVoltageSetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm",
		"value":	false
	},
	"VoltageSetpointSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:VoltageSetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs:VoltageSetpoint",
		"value":	false
	}
}].
[4.70859s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[0]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending active power command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"ActivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[1]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[2]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending clear faults command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"FrequencySetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[3]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"GridFollowPQ":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[4]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending grid-following mode command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"GridFormVF":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[5]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"GridFormVSG":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[6]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"HeartbeatRead":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"type":	"alarm",
		"value":	"Normal"
	},
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"HeartbeatRead_state",
							"outValue":	"PCS Communication Failure",
							"uri":	"/alarms/pcs:HeartbeatRead"
						}, {
							"inValue":	"ActivePower_limit_max",
							"note":	"Bit 0 - PCS Active Power Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_alarms[0]"
						}, {
							"inValue":	"DCVoltage_limit_max",
							"note":	"Bit 1 - PCS DC Voltage Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_alarms[1]"
						}, {
							"inValue":	"DCVoltage_limit_min",
							"note":	"Bit 2 - PCS DC Voltage Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_alarms[2]"
						}, {
							"inValue":	"NumModulesOnline_limit_min",
							"note":	"Bit 3 - PCS Number of Modules Online Below Min Threshold",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_alarms[3]"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"ReactivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[7]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending reactive power command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"ReactivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[8]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"Standby":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[9]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending standby command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"Start":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[10]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending start command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"Stop":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[11]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending stop command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyActivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[12]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyActivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[13]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyFrequencySetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[14]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyGridFollowPQ":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[15]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to transition to grid-following",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyGridFormVF":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[16]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyGridFormVSG":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[17]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyReactivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[18]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyReactivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[19]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyStandby":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[20]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to transition to standby",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyStart":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[21]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to start",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyStop":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[22]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to stop",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyVoltageSetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[23]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VoltageSetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[24]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"numVars":	4,
		"type":	"alarm",
		"value":	"Normal",
		"variable1":	"DCVoltage",
		"variable2":	"HeartbeatRead",
		"variable3":	"ActivePower",
		"variable4":	"NumModulesOnline"
	}
}].
[4.71293s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.71383s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.71498s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs:FaultDestination]
[4.71576s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs:FaultDestination]
[4.71637s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs:NoFaultMsg]
[4.71789s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs:NoFaultMsg]
[4.71893s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:FaultCnt]
[4.71944s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:FaultCnt]
[4.71988s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs:AlarmDestination]
[4.72044s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs:AlarmDestination]
[4.7212s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs:NoAlarmMsg]
[4.72165s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs:NoAlarmMsg]
[4.72216s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:AlarmCnt]
[4.72275s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:AlarmCnt]
[4.72332s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.72401s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.72472s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.72528s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.72628s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.72678s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.72727s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.72762s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.72817s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.72849s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.72893s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.72915s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.7298s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.73017s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.7309s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.73118s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.73194s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.73247s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.73298s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.73361s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.73469s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.73514s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.73572s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.73637s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.73779s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.7383s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.73885s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.73931s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.73999s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.74043s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.74107s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.74156s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.7425s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.74278s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.74324s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.74358s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.74539s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.74567s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.74645s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.74682s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.74747s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.7481s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.74882s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.74928s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.74989s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.75033s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.75084s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.75128s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.75188s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.75227s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.75293s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.75325s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.75507s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.75539s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.75741s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"HeartbeatRead":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"type":	"fault",
		"value":	"Normal"
	},
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"HeartbeatRead_state",
							"outValue":	"PCS Communication Failure",
							"uri":	"/faults/pcs:HeartbeatRead"
						}, {
							"inValue":	"ActivePower_limit_max",
							"note":	"Bit 0 - PCS Active Power Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_faults[0]"
						}, {
							"inValue":	"DCVoltage_limit_max",
							"note":	"Bit 1 - PCS DC Voltage Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_faults[1]"
						}, {
							"inValue":	"DCVoltage_limit_min",
							"note":	"Bit 2 - PCS DC Voltage Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_faults[2]"
						}, {
							"inValue":	"NumModulesOnline_limit_min",
							"note":	"Bit 3 - PCS Number of Modules Online Below Min Threshold",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_faults[3]"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"numVars":	4,
		"type":	"fault",
		"value":	"Normal",
		"variable1":	"DCVoltage",
		"variable2":	"HeartbeatRead",
		"variable3":	"ActivePower",
		"variable4":	"NumModulesOnline"
	}
}].
[4.75769s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.75788s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.75822s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.75844s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.75898s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.75956s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.76001s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/pcs:ActivePower":	{
		"amap":	"pcs",
		"func":	"CheckMonitorVar"
	},
	"/status/pcs:DCVoltage":	{
		"amap":	"pcs",
		"func":	"CheckMonitorVar"
	},
	"/status/pcs:HeartbeatRead":	{
		"amap":	"pcs",
		"func":	"CheckMonitorVar"
	},
	"/status/pcs:IsAlarming":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:IsFaulted":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:NumModulesOnline":	{
		"amap":	"pcs",
		"func":	"CheckMonitorVar"
	},
	"/status/pcs:TotalAlarmCnt":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:TotalFaultCnt":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	}
}].
[4.76106s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePower":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	true,
		"MaxAlarmThreshold":	4200,
		"MaxAlarmTimeout":	1,
		"MaxFaultThreshold":	4250,
		"MaxFaultTimeout":	1.5,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	3510,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over active power conditions",
		"value":	0
	},
	"AlarmCnt":	0,
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	0,
							"uri":	"/site/ess:pcs_monitor_faults"
						}, {
							"outValue":	0,
							"uri":	"/site/ess:pcs_monitor_alarms"
						}, {
							"outValue":	0,
							"uri":	"/site/ess:pcs_control_alarms"
						}]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"DCVoltage":	{
		"EnableFaultCheck":	false,
		"EnableMaxValCheck":	false,
		"EnableMinValCheck":	false,
		"MaxAlarmThreshold":	3000,
		"MaxAlarmTimeout":	0,
		"MaxFaultThreshold":	4000,
		"MaxFaultTimeout":	0,
		"MaxRecoverTimeout":	0,
		"MaxResetValue":	2000,
		"MinAlarmThreshold":	1200,
		"MinAlarmTimeout":	0,
		"MinFaultThreshold":	1100,
		"MinFaultTimeout":	1,
		"MinRecoverTimeout":	1,
		"MinResetValue":	1140,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions",
		"value":	0
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ActivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ReactivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:Stop@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:Stop"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS",
		"value":	false
	},
	"HeartbeatRead":	{
		"AlarmTimeout":	10,
		"EnableAlert":	false,
		"EnableCommsCheck":	true,
		"EnableStateCheck":	true,
		"FaultTimeout":	15,
		"RecoverTimeout":	0.1,
		"Type":	"int",
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS",
		"value":	0
	},
	"IsAlarming":	{
		"expression":	"{1} > 0",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/pcs:TotalAlarmCnt"
	},
	"IsFaulted":	{
		"expression":	"{1} or {2} > 0",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/pcs:SystemFault",
		"variable2":	"/status/pcs:TotalFaultCnt"
	},
	"NumModulesOnline":	{
		"EnableFaultCheck":	true,
		"EnableMinValCheck":	false,
		"MinAlarmThreshold":	5,
		"MinAlarmTimeout":	5,
		"MinFaultThreshold":	2,
		"MinFaultTimeout":	10,
		"MinRecoverTimeout":	1,
		"MinResetValue":	5,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for under num instances condition",
		"note2":	"TODO: Update min alarm/fault/reset thresholds and timeouts",
		"note3":	"TODO: Decode or calculate num instances online and remap/link value to this variable",
		"value":	0
	},
	"SystemFault":	false,
	"TotalAlarmCnt":	{
		"numVars":	2,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:TotalAlarmCnt",
		"variable2":	"/status/pcs:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"numVars":	2,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:TotalFaultCnt",
		"variable2":	"/status/pcs:FaultCnt"
	}
}].
[4.76198s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:ActivePower_reload]
[4.7625s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:ActivePower_reload]
[4.76295s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/alarms/pcs:MonitorVarAlarm]
[4.76324s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/alarms/pcs:MonitorVarAlarm]
[4.76374s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/faults/pcs:MonitorVarFault]
[4.7641s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/faults/pcs:MonitorVarFault]
[4.76443s  ] [info    ] [CheckMonitorVar] Fault Destination for pcs with assetVar /status/pcs:ActivePower is /assets/pcs/summary:faults
[4.76474s  ] [info    ] [CheckMonitorVar] Alarm Destination for pcs with assetVar /status/pcs:ActivePower is /assets/pcs/summary:alarms
[4.7652s   ] [info    ] [CheckMonitorVar] Not set up for [ActivePower] reloadStr [ActivePower_reload]
[4.76631s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:DCVoltage_reload]
[4.76745s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:DCVoltage_reload]
[4.76852s  ] [info    ] [CheckMonitorVar] Fault Destination for pcs with assetVar /status/pcs:DCVoltage is /assets/pcs/summary:faults
[4.76894s  ] [info    ] [CheckMonitorVar] Alarm Destination for pcs with assetVar /status/pcs:DCVoltage is /assets/pcs/summary:alarms
[4.76938s  ] [info    ] [CheckMonitorVar] Not set up for [DCVoltage] reloadStr [DCVoltage_reload]
[4.77013s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:FaultShutdown]
[4.77086s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:FaultShutdown]
[4.77288s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HeartbeatRead_reload]
[4.77332s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HeartbeatRead_reload]
[4.7739s   ] [info    ] [CheckMonitorVar] Fault Destination for pcs with assetVar /status/pcs:HeartbeatRead is /assets/pcs/summary:faults
[4.7742s   ] [info    ] [CheckMonitorVar] Alarm Destination for pcs with assetVar /status/pcs:HeartbeatRead is /assets/pcs/summary:alarms
[4.77538s  ] [info    ] [CheckMonitorVar] Not set up for [HeartbeatRead] reloadStr [HeartbeatRead_reload]
[4.77603s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:NumModulesOnline_reload]
[4.77641s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:NumModulesOnline_reload]
[4.77676s  ] [info    ] [CheckMonitorVar] Fault Destination for pcs with assetVar /status/pcs:NumModulesOnline is /assets/pcs/summary:faults
[4.77709s  ] [info    ] [CheckMonitorVar] Alarm Destination for pcs with assetVar /status/pcs:NumModulesOnline is /assets/pcs/summary:alarms
[4.77751s  ] [info    ] [CheckMonitorVar] Not set up for [NumModulesOnline] reloadStr [NumModulesOnline_reload]
[4.77853s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"current_status":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	1,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	2,
							"outValue":	"Run",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	3,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	4,
							"outValue":	"Standby",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	5,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	6,
							"outValue":	"Fault",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	7,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	8,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	9,
							"outValue":	"Standby",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	10,
							"outValue":	"Fault",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	11,
							"outValue":	"Fault",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	12,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	13,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	14,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	15,
							"outValue":	"Standby",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	17,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	18,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	19,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	20,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	21,
							"outValue":	"Fault",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	22,
							"outValue":	"Fault",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	24,
							"outValue":	"Fault",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	0,
							"outValue":	"Power up",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	1,
							"outValue":	"Off",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	2,
							"outValue":	"On",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	3,
							"outValue":	"Precharge",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	4,
							"outValue":	"Ready",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	5,
							"outValue":	"Wait",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	6,
							"outValue":	"Off",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	7,
							"outValue":	"Stop",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	8,
							"outValue":	"Discharge",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	9,
							"outValue":	"Fault",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	10,
							"outValue":	"LVRT",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	11,
							"outValue":	"OVRT",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	12,
							"outValue":	"Night",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	13,
							"outValue":	"Night DC off",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	14,
							"outValue":	"Standby",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	15,
							"outValue":	"HVPL",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	17,
							"outValue":	"Pre-on",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	18,
							"outValue":	"Self-diagnosis",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	19,
							"outValue":	"Filter contactors",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	20,
							"outValue":	"Premagnetization",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	21,
							"outValue":	"Bank balancing",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	22,
							"outValue":	"CV stand by",
							"uri":	"/status/pcs:Status"
						}, {
							"enable":	"/config/pcs:enum_opt",
							"outValue":	true,
							"uri":	"/components/pcs_registers_fast:current_status@ifChanged",
							"useAv":	true
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[4.781s    ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"checkInputs_pcs":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	false,
							"uri":	"/components/pcs_registers_fast:current_status@ifChanged"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"note":	"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change",
		"value":	0
	}
}].
[4.78168s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	"/components/pcs_registers_fast:active_power",
		"vlink":	"/status/pcs:ActivePower"
	},
	"active_power_setpoint_feedback":	{
		"value":	"/components/pcs_registers_fast:p_p_reference",
		"vlink":	"/status/pcs:ActivePowerSetpointFeedback"
	},
	"apparent_power":	{
		"value":	"/components/pcs_registers_fast:apparent_power",
		"vlink":	"/status/pcs:ApparentPower"
	},
	"frequency":	{
		"value":	"/components/pcs_registers_fast:grid_frequency",
		"vlink":	"/status/pcs:Frequency"
	},
	"heartbeat_read":	{
		"value":	"/components/pcs_registers_fast:seconds",
		"vlink":	"/status/pcs:HeartbeatRead"
	},
	"l1_current":	{
		"value":	"/components/pcs_registers_fast:grid_current_1",
		"vlink":	"/status/pcs:L1Current"
	},
	"l1_l2_voltage":	{
		"value":	"/components/pcs_registers_fast:grid_voltage_rs",
		"vlink":	"/status/pcs:L1L2Voltage"
	},
	"l2_current":	{
		"value":	"/components/pcs_registers_fast:grid_current_2",
		"vlink":	"/status/pcs:L2Current"
	},
	"l2_l3_voltage":	{
		"value":	"/components/pcs_registers_fast:grid_voltage_st",
		"vlink":	"/status/pcs:L2L3Voltage"
	},
	"l3_current":	{
		"value":	"/components/pcs_registers_fast:grid_current_3",
		"vlink":	"/status/pcs:L3Current"
	},
	"l3_l1_voltage":	{
		"value":	"/components/pcs_registers_fast:grid_voltage_tr",
		"vlink":	"/status/pcs:L3L1Voltage"
	},
	"modules_online":	{
		"value":	"/components/pcs_registers_fast:num_running_modules",
		"vlink":	"/status/pcs:NumModulesOnline"
	},
	"pcs_dc_current":	{
		"value":	"/components/pcs_registers_fast:dc_total_i_input",
		"vlink":	"/status/pcs:DCCurrent"
	},
	"pcs_dc_power":	{
		"value":	"/components/pcs_registers_fast:dc_p_input",
		"vlink":	"/status/pcs:DCPower"
	},
	"pcs_dc_voltage":	{
		"value":	"/components/pcs_registers_fast:vdc_bus_1",
		"vlink":	"/status/pcs:DCVoltage"
	},
	"power_factor":	{
		"value":	"/components/pcs_registers_fast:cosphi",
		"vlink":	"/status/pcs:PowerFactor"
	},
	"reactive_power":	{
		"value":	"/components/pcs_registers_fast:reactive_power",
		"vlink":	"/status/pcs:ReactivePower"
	},
	"reactive_power_setpoint_feedback":	{
		"value":	"/components/pcs_registers_fast:q_q_reference",
		"vlink":	"/status/pcs:ReactivePowerSetpointFeedback"
	}
}].
[4.78225s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:active_power]
[4.78257s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:active_power]
[4.78311s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:p_p_reference]
[4.78371s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:p_p_reference]
[4.78429s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:apparent_power]
[4.78485s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:apparent_power]
[4.78524s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:grid_frequency]
[4.78593s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:grid_frequency]
[4.78631s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:seconds]
[4.78672s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:seconds]
[4.78722s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:grid_current_1]
[4.78787s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:grid_current_1]
[4.78855s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:grid_voltage_rs]
[4.78938s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:grid_voltage_rs]
[4.79002s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:grid_current_2]
[4.79086s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:grid_current_2]
[4.79134s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:grid_voltage_st]
[4.79283s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:grid_voltage_st]
[4.79354s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:grid_current_3]
[4.79389s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:grid_current_3]
[4.79443s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:grid_voltage_tr]
[4.79491s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:grid_voltage_tr]
[4.7956s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:num_running_modules]
[4.79604s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:num_running_modules]
[4.79642s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:dc_total_i_input]
[4.79717s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:dc_total_i_input]
[4.79785s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:dc_p_input]
[4.79835s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:dc_p_input]
[4.79875s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:vdc_bus_1]
[4.79923s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:vdc_bus_1]
[4.79985s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:cosphi]
[4.80019s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:cosphi]
[4.80096s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:reactive_power]
[4.80182s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:reactive_power]
[4.80231s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:q_q_reference]
[4.80267s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:q_q_reference]
[4.8048s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power_ramp_rate":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/controls/pcs:ActivePowerRampRate"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"name":	"Active Power Ramp Rate",
		"note":	"Sets the active power ramp rate",
		"type":	"control",
		"units":	"kW/s",
		"value":	0
	},
	"active_power_setpoint":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/controls/pcs:ActivePowerSetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"name":	"Active Power Setpoint",
		"note":	"Sets the active power setpoint",
		"signed":	true,
		"type":	"control",
		"units":	"kW",
		"value":	0
	},
	"frequency_setpoint":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:FrequencySetpoint@triggerCmd"
						}, {
							"uri":	"/controls/pcs:FrequencySetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"name":	"Frequency Setpoint",
		"note":	"Sets the frequency setpoint",
		"type":	"control",
		"units":	"Hz",
		"value":	0
	},
	"on_off_grid_mode_setting":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	1,
							"outValue":	true,
							"uri":	"/controls/pcs:GridFollowPQ@triggerCmd"
						}, {
							"inValue":	1,
							"outValue":	1,
							"uri":	"/controls/pcs:GridFollowPQ"
						}, {
							"inValue":	2,
							"outValue":	true,
							"uri":	"/controls/pcs:GridFormVF@triggerCmd"
						}, {
							"inValue":	2,
							"outValue":	2,
							"uri":	"/controls/pcs:GridFormVF"
						}, {
							"inValue":	3,
							"outValue":	true,
							"uri":	"/controls/pcs:GridFormVSG@triggerCmd"
						}, {
							"inValue":	3,
							"outValue":	3,
							"uri":	"/controls/pcs:GridFormVSG"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"name":	"Grid-following/forming Mode Command",
		"note":	"Initiates PCS grid-following/forming command routines",
		"type":	"control",
		"value":	0
	},
	"pcs_active_power":	{
		"name":	"PCS Active Power",
		"signed":	true,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"pcs_active_power_ramp_rate_feedback":	{
		"name":	"PCS Active Power Ramp Rate Feedback",
		"type":	"status",
		"units":	"kW/s",
		"value":	0
	},
	"pcs_active_power_setpoint_feedback":	{
		"name":	"PCS Active Power Setpoint Feedback",
		"signed":	true,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"pcs_alarm_active":	{
		"name":	"PCS Alarm Active",
		"type":	"status",
		"value":	false
	},
	"pcs_apparent_power":	{
		"name":	"PCS Apparent Power",
		"signed":	true,
		"type":	"status",
		"units":	"kVA",
		"value":	0
	},
	"pcs_avg_line_voltage":	{
		"name":	"PCS Average Line Voltage",
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"pcs_comms_ok":	{
		"name":	"PCS Comms OK",
		"type":	"status",
		"value":	false
	},
	"pcs_control_alarms":	{
		"bit0":	"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit1":	"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit10":	"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit11":	"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit12":	"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout",
		"bit13":	"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
		"bit14":	"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout",
		"bit15":	"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout",
		"bit16":	"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout",
		"bit17":	"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout",
		"bit18":	"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout",
		"bit19":	"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
		"bit2":	"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit20":	"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout",
		"bit21":	"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout",
		"bit22":	"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout",
		"bit23":	"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout",
		"bit24":	"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit3":	"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit4":	"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit5":	"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit6":	"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit7":	"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit8":	"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit9":	"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"name":	"PCS Control Alarms",
		"type":	"bitfield",
		"value":	0
	},
	"pcs_dc_current":	{
		"name":	"PCS DC Current",
		"scale":	10,
		"signed":	true,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"pcs_dc_power":	{
		"name":	"PCS DC Power",
		"scale":	10,
		"signed":	true,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"pcs_dc_voltage":	{
		"name":	"PCS DC Voltage",
		"scale":	10,
		"signed":	true,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"pcs_fault_active":	{
		"name":	"PCS Fault Active",
		"type":	"status",
		"value":	false
	},
	"pcs_frequency":	{
		"name":	"PCS Grid Frequency",
		"scale":	100,
		"type":	"status",
		"units":	"Hz",
		"value":	0
	},
	"pcs_frequency_setpoint_feedback":	{
		"name":	"PCS Frequency Setpoint Feedback",
		"type":	"status",
		"units":	"Hz",
		"value":	0
	},
	"pcs_grid_mode":	{
		"bit0":	"FollowPQ",
		"bit1":	"FormVF",
		"bit2":	"FormVSG",
		"name":	"PCS Grid Mode",
		"type":	"bitfield",
		"value":	0
	},
	"pcs_is_running":	{
		"name":	"PCS is Running",
		"type":	"status",
		"value":	false
	},
	"pcs_l1_current":	{
		"name":	"PCS Grid Current 1",
		"scale":	10,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"pcs_l1_l2_voltage":	{
		"name":	"PCS Grid Voltage L1-L2",
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"pcs_l2_current":	{
		"name":	"PCS Grid Current 2",
		"scale":	10,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"pcs_l2_l3_voltage":	{
		"name":	"PCS Grid Voltage L2-L3",
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"pcs_l3_current":	{
		"name":	"PCS Grid Current 3",
		"scale":	10,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"pcs_l3_l1_voltage":	{
		"name":	"PCS Grid Voltage L3-L1",
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"pcs_max_charge_power":	{
		"name":	"PCS Max Charge Power",
		"signed":	true,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"pcs_max_discharge_power":	{
		"name":	"PCS Max Discharge Power",
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"pcs_max_igbt_temperature":	{
		"name":	"PCS Max IGBT Temperature",
		"scale":	100,
		"type":	"status",
		"units":	"°C",
		"value":	0
	},
	"pcs_monitor_alarms":	{
		"bit0":	"PCS Active Power Max Threshold Exceeded",
		"bit1":	"PCS DC Voltage Max Threshold Exceeded",
		"bit2":	"PCS DC Voltage Min Threshold Exceeded",
		"bit3":	"PCS Number of Modules Online Below Min Threshold",
		"name":	"PCS Monitor Alarms",
		"type":	"bitfield",
		"value":	0
	},
	"pcs_monitor_faults":	{
		"bit0":	"PCS Active Power Max Threshold Exceeded",
		"bit1":	"PCS DC Voltage Max Threshold Exceeded",
		"bit2":	"PCS DC Voltage Min Threshold Exceeded",
		"bit3":	"PCS Number of Modules Online Below Min Threshold",
		"name":	"PCS Monitor Faults",
		"type":	"bitfield",
		"value":	0
	},
	"pcs_num_modules_online":	{
		"name":	"PCS Number of Modules Online",
		"type":	"status",
		"value":	0
	},
	"pcs_num_modules_total":	{
		"name":	"PCS Number of Modules Total",
		"type":	"status",
		"value":	0
	},
	"pcs_power_factor":	{
		"name":	"PCS Power Factor",
		"scale":	1000,
		"signed":	true,
		"type":	"status",
		"value":	0
	},
	"pcs_rated_active_power":	{
		"name":	"PCS Rated Active Power",
		"signed":	true,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"pcs_rated_apparent_power":	{
		"name":	"PCS Rated Apparent Power",
		"signed":	true,
		"type":	"status",
		"units":	"kVA",
		"value":	0
	},
	"pcs_rated_reactive_power":	{
		"name":	"PCS Rated Reactive Power",
		"signed":	true,
		"type":	"status",
		"units":	"kVAR",
		"value":	0
	},
	"pcs_reactive_power":	{
		"name":	"PCS Reactive Power",
		"signed":	true,
		"type":	"status",
		"units":	"kVAR",
		"value":	0
	},
	"pcs_reactive_power_ramp_rate_feedback":	{
		"name":	"PCS Reactive Power Ramp Rate Feedback",
		"type":	"status",
		"units":	"kVAR/s",
		"value":	0
	},
	"pcs_reactive_power_setpoint_feedback":	{
		"name":	"PCS Reactive Power Setpoint Feedback",
		"signed":	true,
		"type":	"status",
		"units":	"kVAR",
		"value":	0
	},
	"pcs_standby_enabled":	{
		"excludeFromFile":	true,
		"name":	"PCS Standby Enabled",
		"type":	"status",
		"value":	false
	},
	"pcs_start_enabled":	{
		"excludeFromFile":	true,
		"name":	"PCS Start Enabled",
		"type":	"status",
		"value":	false
	},
	"pcs_status":	{
		"excludeFromFile":	true,
		"name":	"PCS Status",
		"type":	"status",
		"value":	"INIT"
	},
	"pcs_stop_enabled":	{
		"excludeFromFile":	true,
		"name":	"PCS Stop Enabled",
		"type":	"status",
		"value":	false
	},
	"pcs_system_state":	{
		"bit0":	"Stop",
		"bit1":	"Run",
		"bit2":	"Fault",
		"bit3":	"Standby",
		"name":	"PCS System State",
		"type":	"bitfield",
		"value":	0
	},
	"pcs_voltage_setpoint_feedback":	{
		"name":	"PCS Voltage Setpoint Feedback",
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"reactive_power_ramp_rate":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/controls/pcs:ReactivePowerRampRate"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"name":	"Reactive Power Ramp Rate",
		"note":	"Sets the reactive power ramp rate",
		"type":	"control",
		"units":	"kVAR/s",
		"value":	0
	},
	"reactive_power_setpoint":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/controls/pcs:ReactivePowerSetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"name":	"Reactive Power Setpoint",
		"note":	"Sets the reactive power setpoint",
		"signed":	true,
		"type":	"control",
		"units":	"kVAR",
		"value":	0
	},
	"start_stop_standby_command":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched"
						}]
				}]
		},
		"aname":	"ess",
		"debug":	0,
		"enable":	"/config/pcs:enable",
		"every":	0.5,
		"ifChanged":	false,
		"name":	"Start/Stop/Standby Command",
		"note1":	"Initiates PCS start, standby, or stop command routines",
		"note2":	"0->stop | 1->start | 2->standby",
		"offset":	0,
		"size":	1,
		"type":	"control",
		"uri":	"/sched/ess:SitePCSStatusControl",
		"value":	-1
	},
	"voltage_setpoint":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:VoltageSetpoint@triggerCmd"
						}, {
							"uri":	"/controls/pcs:VoltageSetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"name":	"Voltage Setpoint",
		"note":	"Sets the voltage setpoint",
		"type":	"control",
		"units":	"V",
		"value":	0
	}
}].
[4.81488s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.81857s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.82285s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"site_pcs_active_power":	{
		"value":	"/site/ess:pcs_active_power",
		"vlink":	"/status/pcs:ActivePower"
	},
	"site_pcs_active_power_ramp_rate_feedback":	{
		"value":	"/site/ess:pcs_active_power_ramp_rate_feedback",
		"vlink":	"/status/pcs:ActivePowerRampRateFeedback"
	},
	"site_pcs_active_power_setpoint_feedback":	{
		"value":	"/site/ess:pcs_active_power_setpoint_feedback",
		"vlink":	"/status/pcs:ActivePowerSetpointFeedback"
	},
	"site_pcs_alarm_active":	{
		"value":	"/site/ess:pcs_alarm_active",
		"vlink":	"/status/pcs:IsAlarming"
	},
	"site_pcs_apparent_power":	{
		"value":	"/site/ess:pcs_apparent_power",
		"vlink":	"/status/pcs:ApparentPower"
	},
	"site_pcs_avg_line_voltage":	{
		"value":	"/site/ess:pcs_avg_line_voltage",
		"vlink":	"/status/pcs:AvgLineVoltage"
	},
	"site_pcs_comms_ok":	{
		"value":	"/site/ess:pcs_comms_ok",
		"vlink":	"/status/pcs:CommsOK"
	},
	"site_pcs_dc_current":	{
		"value":	"/site/ess:pcs_dc_current",
		"vlink":	"/status/pcs:DCCurrent"
	},
	"site_pcs_dc_power":	{
		"value":	"/site/ess:pcs_dc_power",
		"vlink":	"/status/pcs:DCPower"
	},
	"site_pcs_dc_voltage":	{
		"value":	"/site/ess:pcs_dc_voltage",
		"vlink":	"/status/pcs:DCVoltage"
	},
	"site_pcs_fault_active":	{
		"value":	"/site/ess:pcs_fault_active",
		"vlink":	"/status/pcs:IsFaulted"
	},
	"site_pcs_frequency":	{
		"value":	"/site/ess:pcs_frequency",
		"vlink":	"/status/pcs:Frequency"
	},
	"site_pcs_frequency_setpoint_feedback":	{
		"value":	"/site/ess:pcs_frequency_setpoint_feedback",
		"vlink":	"/status/pcs:FrequencySetpointFeedback"
	},
	"site_pcs_is_running":	{
		"value":	"/site/ess:pcs_is_running",
		"vlink":	"/status/pcs:IsRunning"
	},
	"site_pcs_l1_current":	{
		"value":	"/site/ess:pcs_l1_current",
		"vlink":	"/status/pcs:L1Current"
	},
	"site_pcs_l1_l2_voltage":	{
		"value":	"/site/ess:pcs_l1_l2_voltage",
		"vlink":	"/status/pcs:L1L2Voltage"
	},
	"site_pcs_l2_current":	{
		"value":	"/site/ess:pcs_l2_current",
		"vlink":	"/status/pcs:L2Current"
	},
	"site_pcs_l2_l3_voltage":	{
		"value":	"/site/ess:pcs_l2_l3_voltage",
		"vlink":	"/status/pcs:L2L3Voltage"
	},
	"site_pcs_l3_current":	{
		"value":	"/site/ess:pcs_l3_current",
		"vlink":	"/status/pcs:L3Current"
	},
	"site_pcs_l3_l1_voltage":	{
		"value":	"/site/ess:pcs_l3_l1_voltage",
		"vlink":	"/status/pcs:L3L1Voltage"
	},
	"site_pcs_max_charge_power":	{
		"value":	"/site/ess:pcs_max_charge_power",
		"vlink":	"/limits/pcs:MaxPCSChargePower"
	},
	"site_pcs_max_discharge_power":	{
		"value":	"/site/ess:pcs_max_discharge_power",
		"vlink":	"/limits/pcs:MaxPCSDischargePower"
	},
	"site_pcs_max_igbt_temperature":	{
		"value":	"/site/ess:pcs_max_igbt_temperature",
		"vlink":	"/status/pcs:MaxIGBTTemperature"
	},
	"site_pcs_num_modules_online":	{
		"value":	"/site/ess:pcs_num_modules_online",
		"vlink":	"/status/pcs:NumModulesOnline"
	},
	"site_pcs_num_modules_total":	{
		"value":	"/site/ess:pcs_num_modules_total",
		"vlink":	"/status/pcs:NumModulesTotal"
	},
	"site_pcs_power_factor":	{
		"value":	"/site/ess:pcs_power_factor",
		"vlink":	"/status/pcs:PowerFactor"
	},
	"site_pcs_rated_active_power":	{
		"value":	"/site/ess:pcs_rated_active_power",
		"vlink":	"/limits/pcs:RatedActivePower"
	},
	"site_pcs_rated_apparent_power":	{
		"value":	"/site/ess:pcs_rated_apparent_power",
		"vlink":	"/limits/pcs:RatedApparentPower"
	},
	"site_pcs_rated_reactive_power":	{
		"value":	"/site/ess:pcs_rated_reactive_power",
		"vlink":	"/limits/pcs:RatedReactivePower"
	},
	"site_pcs_reactive_power":	{
		"value":	"/site/ess:pcs_reactive_power",
		"vlink":	"/status/pcs:ReactivePower"
	},
	"site_pcs_reactive_power_ramp_rate_feedback":	{
		"value":	"/site/ess:pcs_reactive_power_ramp_rate_feedback",
		"vlink":	"/status/pcs:ReactivePowerRampRateFeedback"
	},
	"site_pcs_reactive_power_setpoint_feedback":	{
		"value":	"/site/ess:pcs_reactive_power_setpoint_feedback",
		"vlink":	"/status/pcs:ReactivePowerSetpointFeedback"
	},
	"site_pcs_standby_enabled":	{
		"value":	"/site/ess:pcs_standby_enabled",
		"vlink":	"/status/pcs:StandbyEnabled"
	},
	"site_pcs_start_enabled":	{
		"value":	"/site/ess:pcs_start_enabled",
		"vlink":	"/status/pcs:StartEnabled"
	},
	"site_pcs_status":	{
		"value":	"/site/ess:pcs_status",
		"vlink":	"/status/pcs:Status"
	},
	"site_pcs_stop_enabled":	{
		"value":	"/site/ess:pcs_stop_enabled",
		"vlink":	"/status/pcs:StopEnabled"
	},
	"site_pcs_voltage_setpoint_feedback":	{
		"value":	"/site/ess:pcs_voltage_setpoint_feedback",
		"vlink":	"/status/pcs:VoltageSetpointFeedback"
	}
}].
[4.82435s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_active_power]
[4.82491s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_active_power]
[4.82539s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_active_power_ramp_rate_feedback]
[4.82577s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_active_power_ramp_rate_feedback]
[4.82653s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_active_power_setpoint_feedback]
[4.82702s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_active_power_setpoint_feedback]
[4.82762s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_alarm_active]
[4.82791s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_alarm_active]
[4.82878s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_apparent_power]
[4.82919s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_apparent_power]
[4.82982s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_avg_line_voltage]
[4.83067s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_avg_line_voltage]
[4.83098s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_comms_ok]
[4.83123s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_comms_ok]
[4.83155s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_dc_current]
[4.83174s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_dc_current]
[4.83198s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_dc_power]
[4.83235s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_dc_power]
[4.83258s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_dc_voltage]
[4.8328s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_dc_voltage]
[4.83315s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_fault_active]
[4.83363s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_fault_active]
[4.83392s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_frequency]
[4.83421s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_frequency]
[4.83461s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_frequency_setpoint_feedback]
[4.83522s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_frequency_setpoint_feedback]
[4.83564s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_is_running]
[4.83612s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_is_running]
[4.83677s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_l1_current]
[4.83724s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_l1_current]
[4.83779s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_l1_l2_voltage]
[4.83855s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_l1_l2_voltage]
[4.83898s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_l2_current]
[4.8395s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_l2_current]
[4.83987s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_l2_l3_voltage]
[4.84062s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_l2_l3_voltage]
[4.84191s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_l3_current]
[4.84307s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_l3_current]
[4.8436s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_l3_l1_voltage]
[4.84399s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_l3_l1_voltage]
[4.8445s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_max_charge_power]
[4.84479s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_max_charge_power]
[4.84578s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_max_discharge_power]
[4.84605s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_max_discharge_power]
[4.84654s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_max_igbt_temperature]
[4.84681s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_max_igbt_temperature]
[4.84716s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_num_modules_online]
[4.84756s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_num_modules_online]
[4.84785s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_num_modules_total]
[4.8481s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_num_modules_total]
[4.84851s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_power_factor]
[4.84876s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_power_factor]
[4.84913s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_rated_active_power]
[4.84953s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_rated_active_power]
[4.84999s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_rated_apparent_power]
[4.85047s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_rated_apparent_power]
[4.85104s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_rated_reactive_power]
[4.85149s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_rated_reactive_power]
[4.85198s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_reactive_power]
[4.85239s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_reactive_power]
[4.85277s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_reactive_power_ramp_rate_feedback]
[4.85317s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_reactive_power_ramp_rate_feedback]
[4.85347s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_reactive_power_setpoint_feedback]
[4.85382s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_reactive_power_setpoint_feedback]
[4.85437s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_standby_enabled]
[4.85525s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_standby_enabled]
[4.85575s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_start_enabled]
[4.85659s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_start_enabled]
[4.85726s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_status]
[4.85833s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_status]
[4.85934s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_stop_enabled]
[4.85983s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_stop_enabled]
[4.86022s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_voltage_setpoint_feedback]
[4.8606s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_voltage_setpoint_feedback]
[4.86303s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	0
	},
	"active_power_ramp_rate":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/controls/pcs:ActivePowerRampRate"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the active power ramp rate",
		"value":	0
	},
	"active_power_ramp_rate_feedback":	{
		"value":	0
	},
	"active_power_setpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/controls/pcs:ActivePowerSetpoint"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the active power setpoint",
		"value":	0
	},
	"active_power_setpoint_feedback":	{
		"value":	0
	},
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"apparent_power":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"comms_ok":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"frequency":	{
		"value":	0
	},
	"frequency_setpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:FrequencySetpoint@triggerCmd"
						}, {
							"uri":	"/controls/pcs:FrequencySetpoint"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the frequency setpoint while the PCS is in grid-forming (VF)",
		"value":	0
	},
	"frequency_setpoint_feedback":	{
		"value":	0
	},
	"grid_follow_pq":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:GridFollowPQ@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	1,
							"uri":	"/controls/pcs:GridFollowPQ"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate command routine for setting PCS to grid-following",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"grid_form_vf":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:GridFormVF@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	2,
							"uri":	"/controls/pcs:GridFormVF"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate command routine for setting PCS to grid-forming (voltage and frequency)",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"grid_form_vsg":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:GridFormVSG@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	3,
							"uri":	"/controls/pcs:GridFormVSG"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate command routine for setting PCS to grid-forming (virtual synchronous generator)",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"grid_mode":	{
		"value":	"INIT"
	},
	"l1_current":	{
		"value":	0
	},
	"l1_l2_voltage":	{
		"value":	0
	},
	"l2_current":	{
		"value":	0
	},
	"l2_l3_voltage":	{
		"value":	0
	},
	"l3_current":	{
		"value":	0
	},
	"l3_l1_voltage":	{
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/pcs/summary:clear_faults@enabled"
						}, {
							"uri":	"/assets/pcs/summary:active_power_ramp_rate@enabled"
						}, {
							"uri":	"/assets/pcs/summary:reactive_power_ramp_rate@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"max_igbt_temperature":	{
		"value":	0
	},
	"num_modules_online":	{
		"value":	0
	},
	"num_modules_total":	{
		"value":	0
	},
	"power_factor":	{
		"value":	0
	},
	"rated_active_power":	{
		"value":	0
	},
	"rated_apparent_power":	{
		"value":	0
	},
	"rated_power_factor":	{
		"value":	0
	},
	"rated_reactive_power":	{
		"value":	0
	},
	"reactive_power":	{
		"value":	0
	},
	"reactive_power_ramp_rate":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/controls/pcs:ReactivePowerRampRate"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the reactive power ramp rate",
		"value":	0
	},
	"reactive_power_ramp_rate_feedback":	{
		"value":	0
	},
	"reactive_power_setpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/controls/pcs:ReactivePowerSetpoint"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the reactive power setpoint",
		"value":	0
	},
	"reactive_power_setpoint_feedback":	{
		"value":	0
	},
	"standby":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched",
							"inValue":	true
						}]
				}]
		},
		"aname":	"pcs",
		"debug":	0,
		"enabled":	false,
		"every":	0.5,
		"name":	"Standby PCS",
		"note":	"Enabled conditions: [/status/bms/DCClosed] && [/assets/pcs/summary/maint_mode] && [/status/pcs/SystemState == (Stop || Run)]",
		"offset":	0,
		"scaler":	0,
		"type":	"enum_button",
		"ui_type":	"control",
		"unit":	"",
		"uri":	"/sched/pcs:LocalStandbyPCS",
		"value":	false
	},
	"start":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched",
							"inValue":	true
						}]
				}]
		},
		"aname":	"pcs",
		"debug":	0,
		"enabled":	false,
		"every":	0.5,
		"name":	"Start PCS",
		"note":	"Enabled conditions: [/status/bms/DCClosed] && [/assets/pcs/summary/maint_mode] && ![/status/pcs/IsFaulted]",
		"offset":	0,
		"scaler":	0,
		"type":	"enum_button",
		"ui_type":	"control",
		"unit":	"",
		"uri":	"/sched/pcs:LocalStartPCS",
		"value":	false
	},
	"status":	{
		"value":	"INIT"
	},
	"stop":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched",
							"inValue":	true
						}]
				}]
		},
		"aname":	"pcs",
		"debug":	0,
		"enabled":	false,
		"every":	0.5,
		"name":	"Stop PCS",
		"note":	"Enabled conditions: [/assets/pcs/summary/maint_mode] && [/status/pcs/SystemState != Stop]",
		"offset":	0,
		"scaler":	0,
		"type":	"enum_button",
		"ui_type":	"control",
		"unit":	"",
		"uri":	"/sched/pcs:LocalStopPCS",
		"value":	false
	},
	"system_state":	{
		"value":	"INIT"
	},
	"voltage_setpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:VoltageSetpoint@triggerCmd"
						}, {
							"uri":	"/controls/pcs:VoltageSetpoint"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the voltage setpoint while the PCS is in grid-forming (VF)",
		"value":	0
	},
	"voltage_setpoint_feedback":	{
		"value":	0
	}
}].
[4.8662s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.86665s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.86755s  ] [info    ] [LogInfo        ] [/assets/pcs/summary:maint_mode] received a value of [false]
[4.86816s  ] [info    ] [setParamfromAf ]  created var for uri [/assets/pcs/summary] as [/assets/pcs/summary:reactive_power_ramp_rate]
[4.87s     ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.87068s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.87149s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.87228s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.87511s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_active_power":	{
		"value":	"/assets/pcs/summary:active_power",
		"vlink":	"/status/pcs:ActivePower"
	},
	"ui_active_power_ramp_rate_feedback":	{
		"value":	"/assets/pcs/summary:active_power_ramp_rate_feedback",
		"vlink":	"/status/pcs:ActivePowerRampRateFeedback"
	},
	"ui_active_power_setpoint_feedback":	{
		"value":	"/assets/pcs/summary:active_power_setpoint_feedback",
		"vlink":	"/status/pcs:ActivePowerSetpointFeedback"
	},
	"ui_apparent_power":	{
		"value":	"/assets/pcs/summary:apparent_power",
		"vlink":	"/status/pcs:ApparentPower"
	},
	"ui_comms_ok":	{
		"value":	"/assets/pcs/summary:comms_ok",
		"vlink":	"/status/pcs:CommsOK"
	},
	"ui_dc_current":	{
		"value":	"/assets/pcs/summary:dc_current",
		"vlink":	"/status/pcs:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/pcs/summary:dc_power",
		"vlink":	"/status/pcs:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/pcs/summary:dc_voltage",
		"vlink":	"/status/pcs:DCVoltage"
	},
	"ui_frequency":	{
		"value":	"/assets/pcs/summary:frequency",
		"vlink":	"/status/pcs:Frequency"
	},
	"ui_frequency_setpoint_feedback":	{
		"value":	"/assets/pcs/summary:frequency_setpoint_feedback",
		"vlink":	"/status/pcs:FrequencySetpointFeedback"
	},
	"ui_grid_mode":	{
		"value":	"/assets/pcs/summary:grid_mode",
		"vlink":	"/status/pcs:GridMode"
	},
	"ui_l1_current":	{
		"value":	"/assets/pcs/summary:l1_current",
		"vlink":	"/status/pcs:L1Current"
	},
	"ui_l1_l2_voltage":	{
		"value":	"/assets/pcs/summary:l1_l2_voltage",
		"vlink":	"/status/pcs:L1L2Voltage"
	},
	"ui_l2_current":	{
		"value":	"/assets/pcs/summary:l2_current",
		"vlink":	"/status/pcs:L2Current"
	},
	"ui_l2_l3_voltage":	{
		"value":	"/assets/pcs/summary:l2_l3_voltage",
		"vlink":	"/status/pcs:L2L3Voltage"
	},
	"ui_l3_current":	{
		"value":	"/assets/pcs/summary:l3_current",
		"vlink":	"/status/pcs:L3Current"
	},
	"ui_l3_l1_voltage":	{
		"value":	"/assets/pcs/summary:l3_l1_voltage",
		"vlink":	"/status/pcs:L3L1Voltage"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/pcs/summary:max_charge_power",
		"vlink":	"/limits/pcs:MaxPCSChargePower"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/pcs/summary:max_discharge_power",
		"vlink":	"/limits/pcs:MaxPCSDischargePower"
	},
	"ui_max_igbt_temperature":	{
		"value":	"/assets/pcs/summary:max_igbt_temperature",
		"vlink":	"/status/pcs:MaxIGBTTemperature"
	},
	"ui_num_modules_online":	{
		"value":	"/assets/pcs/summary:num_modules_online",
		"vlink":	"/status/pcs:NumModulesOnline"
	},
	"ui_num_modules_total":	{
		"value":	"/assets/pcs/summary:num_modules_total",
		"vlink":	"/status/pcs:NumModulesTotal"
	},
	"ui_power_factor":	{
		"value":	"/assets/pcs/summary:power_factor",
		"vlink":	"/status/pcs:PowerFactor"
	},
	"ui_rated_active_power":	{
		"value":	"/assets/pcs/summary:rated_active_power",
		"vlink":	"/limits/pcs:RatedActivePower"
	},
	"ui_rated_apparent_power":	{
		"value":	"/assets/pcs/summary:rated_apparent_power",
		"vlink":	"/limits/pcs:RatedApparentPower"
	},
	"ui_rated_power_factor":	{
		"value":	"/assets/pcs/summary:rated_power_factor",
		"vlink":	"/config/pcs:RatedPowerFactor"
	},
	"ui_rated_reactive_power":	{
		"value":	"/assets/pcs/summary:rated_reactive_power",
		"vlink":	"/limits/pcs:RatedReactivePower"
	},
	"ui_reactive_power":	{
		"value":	"/assets/pcs/summary:reactive_power",
		"vlink":	"/status/pcs:ReactivePower"
	},
	"ui_reactive_power_ramp_rate_feedback":	{
		"value":	"/assets/pcs/summary:reactive_power_ramp_rate_feedback",
		"vlink":	"/status/pcs:ReactivePowerRampRateFeedback"
	},
	"ui_reactive_power_setpoint_feedback":	{
		"value":	"/assets/pcs/summary:reactive_power_setpoint_feedback",
		"vlink":	"/status/pcs:ReactivePowerSetpointFeedback"
	},
	"ui_status":	{
		"value":	"/assets/pcs/summary:status",
		"vlink":	"/status/pcs:Status"
	},
	"ui_system_state":	{
		"value":	"/assets/pcs/summary:system_state",
		"vlink":	"/status/pcs:SystemState"
	},
	"ui_voltage_setpoint_feedback":	{
		"value":	"/assets/pcs/summary:voltage_setpoint_feedback",
		"vlink":	"/status/pcs:VoltageSetpointFeedback"
	}
}].
[4.87877s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:active_power]
[4.87977s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:active_power]
[4.88058s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:active_power_ramp_rate_feedback]
[4.89488s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:active_power_ramp_rate_feedback]
[4.89588s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:active_power_setpoint_feedback]
[4.89641s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:active_power_setpoint_feedback]
[4.897s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:apparent_power]
[4.89776s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:apparent_power]
[4.89827s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:comms_ok]
[4.89875s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:comms_ok]
[4.89955s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:dc_current]
[4.90004s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:dc_current]
[4.90073s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:dc_power]
[4.90121s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:dc_power]
[4.90155s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:dc_voltage]
[4.90234s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:dc_voltage]
[4.90297s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:frequency]
[4.90347s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:frequency]
[4.90409s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:frequency_setpoint_feedback]
[4.9046s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:frequency_setpoint_feedback]
[4.90544s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:grid_mode]
[4.90596s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:grid_mode]
[4.90657s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:l1_current]
[4.9069s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:l1_current]
[4.90732s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:l1_l2_voltage]
[4.90759s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:l1_l2_voltage]
[4.90796s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:l2_current]
[4.90816s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:l2_current]
[4.90984s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:l2_l3_voltage]
[4.91021s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:l2_l3_voltage]
[4.91054s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:l3_current]
[4.91089s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:l3_current]
[4.91154s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:l3_l1_voltage]
[4.91193s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:l3_l1_voltage]
[4.91243s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:max_charge_power]
[4.91303s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:max_charge_power]
[4.91385s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:max_discharge_power]
[4.91413s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:max_discharge_power]
[4.91529s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:max_igbt_temperature]
[4.91562s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:max_igbt_temperature]
[4.91602s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:num_modules_online]
[4.91782s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:num_modules_online]
[4.91812s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:num_modules_total]
[4.91842s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:num_modules_total]
[4.91878s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:power_factor]
[4.91911s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:power_factor]
[4.91962s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:rated_active_power]
[4.9199s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:rated_active_power]
[4.92033s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:rated_apparent_power]
[4.92064s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:rated_apparent_power]
[4.92135s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:rated_power_factor]
[4.92191s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:rated_power_factor]
[4.92252s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:rated_reactive_power]
[4.92329s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:rated_reactive_power]
[4.92767s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:reactive_power]
[4.92813s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:reactive_power]
[4.92849s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:reactive_power_ramp_rate_feedback]
[4.9289s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:reactive_power_ramp_rate_feedback]
[4.92934s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:reactive_power_setpoint_feedback]
[4.92977s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:reactive_power_setpoint_feedback]
[4.93024s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:status]
[4.93066s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:status]
[4.931s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:system_state]
[4.93144s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:system_state]
[4.93174s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:voltage_setpoint_feedback]
[4.93215s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:voltage_setpoint_feedback]
[4.9357s   ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [module_1]
[4.93607s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [module_1] parent am [pcs] 
[4.93674s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [module_1]
[4.93812s  ] [info    ] [configure_vmapS] body: {"/config/module_1":{"AlarmDestination":"/assets/pcs/module_1:alarms","FaultDestination":"/assets/pcs/module_1:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/module_1":{"pubAssets_module_1":{"actions":{"onSet":[{"func":[{"amap":"module_1","func":"RunPub"}]}]},"enable":"/config/module_1:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/module_1)","table":"/assets/pcs/module_1","value":1},"runMonitor_module_1":{"actions":{"onSet":[{"func":[{"amap":"module_1","func":"RunMonitor"}]}]},"aname":"module_1","enable":"/config/module_1:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/module_1","value":1}},"/status/module_1":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"module_1","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/module_1) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"module_1","every":1,"uri":"/sched/module_1:pubAssets_module_1","value":1},{"aname":"module_1","every":0.1,"uri":"/sched/module_1:runMonitor_module_1","value":1},{"aname":"module_1","every":1,"uri":"/sched/module_1:checkInputs_module_1","value":1}],"targav":"/system/commands:run","value":false}},"/controls/module_1":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"module_1","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/module_1":{"/controls/module_1:ClearFaults":{"amap":"module_1","func":"HandleCmd"}},"/status/module_1":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/module_1:clear_faults"},{"outValue":"Clear","uri":"/alarms/module_1:clear_alarms"}]}]},"enable":"/config/module_1:enable","ifChanged":false,"note":"When this variable is set, /faults/module_1:clear_faults and /alarms/module_1:clear_alarms will be set to Clear","value":false}},"/alarms/module_1":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"module_1","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/module_1) will be reset to the normal state (defined in /config/module_1:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/module_1":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_1","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/module_1) will be reset to the normal state (defined in /config/module_1:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/module_1":{"/status/module_1:TotalAlarmCnt":{"amap":"module_1","func":"CalculateVar"},"/status/module_1:TotalFaultCnt":{"amap":"module_1","func":"CalculateVar"}},"/status/module_1":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"module_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_1:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_1:FaultCnt"}},"/schedule/wake_monitor/module_1":{"/status/module_1:CurrentFault":{"func":"CalculateVar"},"/status/module_1:CurrentWarning":{"func":"CalculateVar"},"/status/module_1:PCSDCPower":{"func":"CalculateVar"}},"/status/module_1":{"CurrentFault":{"expression":"if ((1 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((1 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/module_1:PCSDCVoltage","variable2":"/status/module_1:PCSDCCurrent"}},"/vlinks/module_1":{"active_power":{"value":"/components/pcs_registers_fast:module_1_p","vlink":"/status/module_1:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:module_1_dc_voltage_p","vlink":"/status/module_1:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:module_1_current_r","vlink":"/status/module_1:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:module_1_current_s","vlink":"/status/module_1:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:module_1_current_t","vlink":"/status/module_1:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:module_1_max_temp","vlink":"/status/module_1:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:module_1_dc_current","vlink":"/status/module_1:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:module_1_dc_voltage","vlink":"/status/module_1:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:module_1_q","vlink":"/status/module_1:ReactivePower"}},"/assets/pcs/module_1":{"active_power":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/module_1:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/module_1:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"l1_current":{"value":0},"l2_current":{"value":0},"l3_current":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"module_1","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/module_1:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_igbt_temperature":{"value":0},"reactive_power":{"value":0},"status":{"value":"INIT"}},"/vlinks/module_1":{"ui_active_power":{"value":"/assets/pcs/module_1:active_power","vlink":"/status/module_1:ActivePower"},"ui_apparent_power":{"value":"/assets/pcs/module_1:apparent_power","vlink":"/status/module_1:ApparentPower"},"ui_dc_current":{"value":"/assets/pcs/module_1:dc_current","vlink":"/status/module_1:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/module_1:dc_power","vlink":"/status/module_1:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/module_1:dc_voltage","vlink":"/status/module_1:DCVoltage"},"ui_l1_current":{"value":"/assets/pcs/module_1:l1_current","vlink":"/status/module_1:L1Current"},"ui_l2_current":{"value":"/assets/pcs/module_1:l2_current","vlink":"/status/module_1:L2Current"},"ui_l3_current":{"value":"/assets/pcs/module_1:l3_current","vlink":"/status/module_1:L3Current"},"ui_max_igbt_temperature":{"value":"/assets/pcs/module_1:max_igbt_temperature","vlink":"/status/module_1:MaxIGBTTemperature"},"ui_reactive_power":{"value":"/assets/pcs/module_1:reactive_power","vlink":"/status/module_1:ReactivePower"},"ui_status":{"value":"/assets/pcs/module_1:status","vlink":"/status/module_1:Status"}}}
[4.93923s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[4.93964s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/pcs/module_1:alarms",
	"FaultDestination":	"/assets/pcs/module_1:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[4.94019s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:alarms]
[4.94088s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:alarms]
[4.94135s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:faults]
[4.94172s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:faults]
[4.94209s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.9425s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.94313s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.94357s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.94444s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_module_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_1",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/module_1:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/pcs/module_1)",
		"table":	"/assets/pcs/module_1",
		"value":	1
	},
	"runMonitor_module_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_1",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"module_1",
		"enable":	"/config/module_1:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/module_1",
		"value":	1
	}
}].
[4.94649s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"Status":	"INIT"
}].
[4.94707s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.94746s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.94984s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_module":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_1",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/module_1) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"module_1",
				"every":	1,
				"uri":	"/sched/module_1:pubAssets_module_1",
				"value":	1
			}, {
				"aname":	"module_1",
				"every":	0.1,
				"uri":	"/sched/module_1:runMonitor_module_1",
				"value":	1
			}, {
				"aname":	"module_1",
				"every":	1,
				"uri":	"/sched/module_1:checkInputs_module_1",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[4.95124s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[4.95234s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_1:HandleCmd_ClearFaults]
[4.95326s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_1:HandleCmd_ClearFaults]
[4.95399s  ] [info    ] [HandleCmd      ] reload first run [module_1] [/controls/module_1:ClearFaults]  reload 0
[4.95446s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/module_1:ClearFaults]
[4.95564s  ] [info    ] [HandleCmd      ] Adding [/controls/module_1:ClearFaults] to amap in asset [module_1]
[4.95667s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/module_1:ClearFaults]
[4.95718s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/module_1:ClearFaults]
[4.95792s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/module_1:ClearFaults":	{
		"amap":	"module_1",
		"func":	"HandleCmd"
	}
}].
[4.95878s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/module_1:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/module_1:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/module_1:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/module_1:clear_faults and /alarms/module_1:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[4.96238s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_1",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/module_1) will be reset to the normal state (defined in /config/module_1:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[4.96739s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.96814s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.9685s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.9694s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.96978s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_1:FaultDestination]
[4.97024s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_1:FaultDestination]
[4.97086s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_1:NoFaultMsg]
[4.9725s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_1:NoFaultMsg]
[4.9729s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_1:FaultCnt]
[4.97368s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_1:FaultCnt]
[4.97404s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_1:AlarmDestination]
[4.97431s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_1:AlarmDestination]
[4.97499s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_1:NoAlarmMsg]
[4.97652s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_1:NoAlarmMsg]
[4.97683s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_1:AlarmCnt]
[4.97725s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_1:AlarmCnt]
[4.97788s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_1",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/module_1) will be reset to the normal state (defined in /config/module_1:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[4.97906s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.97936s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.97975s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.98012s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.98052s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_1:TotalAlarmCnt":	{
		"amap":	"module_1",
		"func":	"CalculateVar"
	},
	"/status/module_1:TotalFaultCnt":	{
		"amap":	"module_1",
		"func":	"CalculateVar"
	}
}].
[4.98115s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/pcs:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the PCS Module faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_1:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_1:FaultCnt"
	}
}].
[4.99597s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_1:CurrentFault":	{
		"func":	"CalculateVar"
	},
	"/status/module_1:CurrentWarning":	{
		"func":	"CalculateVar"
	},
	"/status/module_1:PCSDCPower":	{
		"func":	"CalculateVar"
	}
}].
[4.99652s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CurrentFault":	{
		"expression":	"if ((1 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_fault"
	},
	"CurrentWarning":	{
		"expression":	"if ((1 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_warning"
	},
	"PCSDCPower":	{
		"expression":	"{1} * {2}",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_1:PCSDCVoltage",
		"variable2":	"/status/module_1:PCSDCCurrent"
	}
}].
[4.99863s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	"/components/pcs_registers_fast:module_1_p",
		"vlink":	"/status/module_1:ActivePower"
	},
	"apparent_power":	{
		"value":	"/components/pcs_registers_fast:module_1_dc_voltage_p",
		"vlink":	"/status/module_1:ApparentPower"
	},
	"l1_current":	{
		"value":	"/components/pcs_registers_fast:module_1_current_r",
		"vlink":	"/status/module_1:L1Current"
	},
	"l2_current":	{
		"value":	"/components/pcs_registers_fast:module_1_current_s",
		"vlink":	"/status/module_1:L2Current"
	},
	"l3_current":	{
		"value":	"/components/pcs_registers_fast:module_1_current_t",
		"vlink":	"/status/module_1:L3Current"
	},
	"max_igbt_temperature":	{
		"value":	"/components/pcs_registers_fast:module_1_max_temp",
		"vlink":	"/status/module_1:MaxIGBTTemperature"
	},
	"pcs_dc_current":	{
		"value":	"/components/pcs_registers_fast:module_1_dc_current",
		"vlink":	"/status/module_1:PCSDCCurrent"
	},
	"pcs_dc_voltage":	{
		"value":	"/components/pcs_registers_fast:module_1_dc_voltage",
		"vlink":	"/status/module_1:PCSDCVoltage"
	},
	"reactive_power":	{
		"value":	"/components/pcs_registers_fast:module_1_q",
		"vlink":	"/status/module_1:ReactivePower"
	}
}].
[4.99928s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_1_p]
[5.00027s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_1_p]
[5.00074s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_1_dc_voltage_p]
[5.00102s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_1_dc_voltage_p]
[5.00129s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_1_current_r]
[5.00202s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_1_current_r]
[5.00236s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_1_current_s]
[5.00279s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_1_current_s]
[5.0031s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_1_current_t]
[5.00354s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_1_current_t]
[5.00443s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_1_max_temp]
[5.00503s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_1_max_temp]
[5.00556s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_1_dc_current]
[5.00593s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_1_dc_current]
[5.00664s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_1_dc_voltage]
[5.00709s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_1_dc_voltage]
[5.00757s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_1_q]
[5.00813s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_1_q]
[5.01269s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	0
	},
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"apparent_power":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/module_1:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/module_1:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"l1_current":	{
		"value":	0
	},
	"l2_current":	{
		"value":	0
	},
	"l3_current":	{
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/pcs/module_1:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_igbt_temperature":	{
		"value":	0
	},
	"reactive_power":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[5.01617s  ] [info    ] [LogInfo        ] [/assets/pcs/module_1:maint_mode] received a value of [false]
[5.01764s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.01844s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.01952s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_active_power":	{
		"value":	"/assets/pcs/module_1:active_power",
		"vlink":	"/status/module_1:ActivePower"
	},
	"ui_apparent_power":	{
		"value":	"/assets/pcs/module_1:apparent_power",
		"vlink":	"/status/module_1:ApparentPower"
	},
	"ui_dc_current":	{
		"value":	"/assets/pcs/module_1:dc_current",
		"vlink":	"/status/module_1:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/pcs/module_1:dc_power",
		"vlink":	"/status/module_1:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/pcs/module_1:dc_voltage",
		"vlink":	"/status/module_1:DCVoltage"
	},
	"ui_l1_current":	{
		"value":	"/assets/pcs/module_1:l1_current",
		"vlink":	"/status/module_1:L1Current"
	},
	"ui_l2_current":	{
		"value":	"/assets/pcs/module_1:l2_current",
		"vlink":	"/status/module_1:L2Current"
	},
	"ui_l3_current":	{
		"value":	"/assets/pcs/module_1:l3_current",
		"vlink":	"/status/module_1:L3Current"
	},
	"ui_max_igbt_temperature":	{
		"value":	"/assets/pcs/module_1:max_igbt_temperature",
		"vlink":	"/status/module_1:MaxIGBTTemperature"
	},
	"ui_reactive_power":	{
		"value":	"/assets/pcs/module_1:reactive_power",
		"vlink":	"/status/module_1:ReactivePower"
	},
	"ui_status":	{
		"value":	"/assets/pcs/module_1:status",
		"vlink":	"/status/module_1:Status"
	}
}].
[5.02052s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:active_power]
[5.02182s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:active_power]
[5.02281s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:apparent_power]
[5.02312s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:apparent_power]
[5.02374s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:dc_current]
[5.02552s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:dc_current]
[5.027s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:dc_power]
[5.02782s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:dc_power]
[5.02891s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:dc_voltage]
[5.02922s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:dc_voltage]
[5.02954s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:l1_current]
[5.02986s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:l1_current]
[5.03039s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:l2_current]
[5.03377s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:l2_current]
[5.0352s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:l3_current]
[5.03558s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:l3_current]
[5.03627s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:max_igbt_temperature]
[5.03658s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:max_igbt_temperature]
[5.03702s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:reactive_power]
[5.03742s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:reactive_power]
[5.03784s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:status]
[5.03811s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:status]
[5.04234s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [module_2]
[5.0428s   ] [info    ] [setVecAmAi     ]  ainame Setting ai  [module_2] parent am [pcs] 
[5.04642s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [module_2]
[5.04715s  ] [info    ] [configure_vmapS] body: {"/config/module_2":{"AlarmDestination":"/assets/pcs/module_2:alarms","FaultDestination":"/assets/pcs/module_2:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/module_2":{"pubAssets_module_2":{"actions":{"onSet":[{"func":[{"amap":"module_2","func":"RunPub"}]}]},"enable":"/config/module_2:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/module_2)","table":"/assets/pcs/module_2","value":1},"runMonitor_module_2":{"actions":{"onSet":[{"func":[{"amap":"module_2","func":"RunMonitor"}]}]},"aname":"module_2","enable":"/config/module_2:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/module_2","value":1}},"/status/module_2":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"module_2","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/module_2) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"module_2","every":1,"uri":"/sched/module_2:pubAssets_module_2","value":1},{"aname":"module_2","every":0.1,"uri":"/sched/module_2:runMonitor_module_2","value":1},{"aname":"module_2","every":1,"uri":"/sched/module_2:checkInputs_module_2","value":1}],"targav":"/system/commands:run","value":false}},"/controls/module_2":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"module_2","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/module_2":{"/controls/module_2:ClearFaults":{"amap":"module_2","func":"HandleCmd"}},"/status/module_2":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/module_2:clear_faults"},{"outValue":"Clear","uri":"/alarms/module_2:clear_alarms"}]}]},"enable":"/config/module_2:enable","ifChanged":false,"note":"When this variable is set, /faults/module_2:clear_faults and /alarms/module_2:clear_alarms will be set to Clear","value":false}},"/alarms/module_2":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"module_2","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/module_2) will be reset to the normal state (defined in /config/module_2:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/module_2":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_2","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/module_2) will be reset to the normal state (defined in /config/module_2:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/module_2":{"/status/module_2:TotalAlarmCnt":{"amap":"module_2","func":"CalculateVar"},"/status/module_2:TotalFaultCnt":{"amap":"module_2","func":"CalculateVar"}},"/status/module_2":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"module_2","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_2:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_2:FaultCnt"}},"/schedule/wake_monitor/module_2":{"/status/module_2:CurrentFault":{"func":"CalculateVar"},"/status/module_2:CurrentWarning":{"func":"CalculateVar"},"/status/module_2:PCSDCPower":{"func":"CalculateVar"}},"/status/module_2":{"CurrentFault":{"expression":"if ((2 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((2 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/module_2:PCSDCVoltage","variable2":"/status/module_2:PCSDCCurrent"}},"/vlinks/module_2":{"active_power":{"value":"/components/pcs_registers_fast:module_2_p","vlink":"/status/module_2:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:module_2_dc_voltage_p","vlink":"/status/module_2:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:module_2_current_r","vlink":"/status/module_2:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:module_2_current_s","vlink":"/status/module_2:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:module_2_current_t","vlink":"/status/module_2:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:module_2_max_temp","vlink":"/status/module_2:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:module_2_dc_current","vlink":"/status/module_2:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:module_2_dc_voltage","vlink":"/status/module_2:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:module_2_q","vlink":"/status/module_2:ReactivePower"}},"/assets/pcs/module_2":{"active_power":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_2","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/module_2:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/module_2:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"l1_current":{"value":0},"l2_current":{"value":0},"l3_current":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"module_2","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/module_2:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_igbt_temperature":{"value":0},"reactive_power":{"value":0},"status":{"value":"INIT"}},"/vlinks/module_2":{"ui_active_power":{"value":"/assets/pcs/module_2:active_power","vlink":"/status/module_2:ActivePower"},"ui_apparent_power":{"value":"/assets/pcs/module_2:apparent_power","vlink":"/status/module_2:ApparentPower"},"ui_dc_current":{"value":"/assets/pcs/module_2:dc_current","vlink":"/status/module_2:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/module_2:dc_power","vlink":"/status/module_2:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/module_2:dc_voltage","vlink":"/status/module_2:DCVoltage"},"ui_l1_current":{"value":"/assets/pcs/module_2:l1_current","vlink":"/status/module_2:L1Current"},"ui_l2_current":{"value":"/assets/pcs/module_2:l2_current","vlink":"/status/module_2:L2Current"},"ui_l3_current":{"value":"/assets/pcs/module_2:l3_current","vlink":"/status/module_2:L3Current"},"ui_max_igbt_temperature":{"value":"/assets/pcs/module_2:max_igbt_temperature","vlink":"/status/module_2:MaxIGBTTemperature"},"ui_reactive_power":{"value":"/assets/pcs/module_2:reactive_power","vlink":"/status/module_2:ReactivePower"},"ui_status":{"value":"/assets/pcs/module_2:status","vlink":"/status/module_2:Status"}}}
[5.04945s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[5.05017s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/pcs/module_2:alarms",
	"FaultDestination":	"/assets/pcs/module_2:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[5.05085s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:alarms]
[5.05136s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:alarms]
[5.05175s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:faults]
[5.05215s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:faults]
[5.05261s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.05311s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.05351s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.05412s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.05619s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_module_2":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_2",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/module_2:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/pcs/module_2)",
		"table":	"/assets/pcs/module_2",
		"value":	1
	},
	"runMonitor_module_2":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_2",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"module_2",
		"enable":	"/config/module_2:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/module_2",
		"value":	1
	}
}].
[5.05923s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"Status":	"INIT"
}].
[5.06002s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.06036s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.06138s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_module":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_2",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/module_2) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"module_2",
				"every":	1,
				"uri":	"/sched/module_2:pubAssets_module_2",
				"value":	1
			}, {
				"aname":	"module_2",
				"every":	0.1,
				"uri":	"/sched/module_2:runMonitor_module_2",
				"value":	1
			}, {
				"aname":	"module_2",
				"every":	1,
				"uri":	"/sched/module_2:checkInputs_module_2",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[5.06298s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_2",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[5.06448s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_2:HandleCmd_ClearFaults]
[5.06564s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_2:HandleCmd_ClearFaults]
[5.06597s  ] [info    ] [HandleCmd      ] reload first run [module_2] [/controls/module_2:ClearFaults]  reload 0
[5.06646s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/module_2:ClearFaults]
[5.06722s  ] [info    ] [HandleCmd      ] Adding [/controls/module_2:ClearFaults] to amap in asset [module_2]
[5.06865s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/module_2:ClearFaults]
[5.06905s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/module_2:ClearFaults]
[5.06967s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/module_2:ClearFaults":	{
		"amap":	"module_2",
		"func":	"HandleCmd"
	}
}].
[5.07095s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/module_2:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/module_2:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/module_2:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/module_2:clear_faults and /alarms/module_2:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[5.0723s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_2",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/module_2) will be reset to the normal state (defined in /config/module_2:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[5.07439s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.07481s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.07629s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.07746s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.07893s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_2:FaultDestination]
[5.07963s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_2:FaultDestination]
[5.08021s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_2:NoFaultMsg]
[5.08054s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_2:NoFaultMsg]
[5.08083s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_2:FaultCnt]
[5.08115s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_2:FaultCnt]
[5.08171s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_2:AlarmDestination]
[5.08215s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_2:AlarmDestination]
[5.08352s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_2:NoAlarmMsg]
[5.08413s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_2:NoAlarmMsg]
[5.08464s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_2:AlarmCnt]
[5.08496s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_2:AlarmCnt]
[5.08562s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_2",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/module_2) will be reset to the normal state (defined in /config/module_2:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[5.08644s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.08683s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.08735s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.0877s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.08845s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_2:TotalAlarmCnt":	{
		"amap":	"module_2",
		"func":	"CalculateVar"
	},
	"/status/module_2:TotalFaultCnt":	{
		"amap":	"module_2",
		"func":	"CalculateVar"
	}
}].
[5.08963s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_2",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/pcs:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the PCS Module faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_2:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_2:FaultCnt"
	}
}].
[5.09138s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_2:CurrentFault":	{
		"func":	"CalculateVar"
	},
	"/status/module_2:CurrentWarning":	{
		"func":	"CalculateVar"
	},
	"/status/module_2:PCSDCPower":	{
		"func":	"CalculateVar"
	}
}].
[5.09559s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CurrentFault":	{
		"expression":	"if ((2 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_fault"
	},
	"CurrentWarning":	{
		"expression":	"if ((2 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_warning"
	},
	"PCSDCPower":	{
		"expression":	"{1} * {2}",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_2:PCSDCVoltage",
		"variable2":	"/status/module_2:PCSDCCurrent"
	}
}].
[5.0966s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	"/components/pcs_registers_fast:module_2_p",
		"vlink":	"/status/module_2:ActivePower"
	},
	"apparent_power":	{
		"value":	"/components/pcs_registers_fast:module_2_dc_voltage_p",
		"vlink":	"/status/module_2:ApparentPower"
	},
	"l1_current":	{
		"value":	"/components/pcs_registers_fast:module_2_current_r",
		"vlink":	"/status/module_2:L1Current"
	},
	"l2_current":	{
		"value":	"/components/pcs_registers_fast:module_2_current_s",
		"vlink":	"/status/module_2:L2Current"
	},
	"l3_current":	{
		"value":	"/components/pcs_registers_fast:module_2_current_t",
		"vlink":	"/status/module_2:L3Current"
	},
	"max_igbt_temperature":	{
		"value":	"/components/pcs_registers_fast:module_2_max_temp",
		"vlink":	"/status/module_2:MaxIGBTTemperature"
	},
	"pcs_dc_current":	{
		"value":	"/components/pcs_registers_fast:module_2_dc_current",
		"vlink":	"/status/module_2:PCSDCCurrent"
	},
	"pcs_dc_voltage":	{
		"value":	"/components/pcs_registers_fast:module_2_dc_voltage",
		"vlink":	"/status/module_2:PCSDCVoltage"
	},
	"reactive_power":	{
		"value":	"/components/pcs_registers_fast:module_2_q",
		"vlink":	"/status/module_2:ReactivePower"
	}
}].
[5.09705s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_2_p]
[5.09864s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_2_p]
[5.09908s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_2_dc_voltage_p]
[5.09978s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_2_dc_voltage_p]
[5.10032s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_2_current_r]
[5.10059s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_2_current_r]
[5.10102s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_2_current_s]
[5.10193s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_2_current_s]
[5.10264s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_2_current_t]
[5.10308s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_2_current_t]
[5.10344s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_2_max_temp]
[5.10372s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_2_max_temp]
[5.10412s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_2_dc_current]
[5.10445s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_2_dc_current]
[5.10482s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_2_dc_voltage]
[5.10518s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_2_dc_voltage]
[5.1057s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_2_q]
[5.10605s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_2_q]
[5.10679s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	0
	},
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"apparent_power":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_2",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/module_2:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/module_2:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"l1_current":	{
		"value":	0
	},
	"l2_current":	{
		"value":	0
	},
	"l3_current":	{
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_2",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/pcs/module_2:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_igbt_temperature":	{
		"value":	0
	},
	"reactive_power":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[5.10786s  ] [info    ] [LogInfo        ] [/assets/pcs/module_2:maint_mode] received a value of [false]
[5.10837s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.10856s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.10896s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_active_power":	{
		"value":	"/assets/pcs/module_2:active_power",
		"vlink":	"/status/module_2:ActivePower"
	},
	"ui_apparent_power":	{
		"value":	"/assets/pcs/module_2:apparent_power",
		"vlink":	"/status/module_2:ApparentPower"
	},
	"ui_dc_current":	{
		"value":	"/assets/pcs/module_2:dc_current",
		"vlink":	"/status/module_2:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/pcs/module_2:dc_power",
		"vlink":	"/status/module_2:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/pcs/module_2:dc_voltage",
		"vlink":	"/status/module_2:DCVoltage"
	},
	"ui_l1_current":	{
		"value":	"/assets/pcs/module_2:l1_current",
		"vlink":	"/status/module_2:L1Current"
	},
	"ui_l2_current":	{
		"value":	"/assets/pcs/module_2:l2_current",
		"vlink":	"/status/module_2:L2Current"
	},
	"ui_l3_current":	{
		"value":	"/assets/pcs/module_2:l3_current",
		"vlink":	"/status/module_2:L3Current"
	},
	"ui_max_igbt_temperature":	{
		"value":	"/assets/pcs/module_2:max_igbt_temperature",
		"vlink":	"/status/module_2:MaxIGBTTemperature"
	},
	"ui_reactive_power":	{
		"value":	"/assets/pcs/module_2:reactive_power",
		"vlink":	"/status/module_2:ReactivePower"
	},
	"ui_status":	{
		"value":	"/assets/pcs/module_2:status",
		"vlink":	"/status/module_2:Status"
	}
}].
[5.10954s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:active_power]
[5.11006s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:active_power]
[5.11048s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:apparent_power]
[5.11074s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:apparent_power]
[5.11098s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:dc_current]
[5.11179s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:dc_current]
[5.11209s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:dc_power]
[5.11238s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:dc_power]
[5.11266s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:dc_voltage]
[5.11291s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:dc_voltage]
[5.11319s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:l1_current]
[5.11353s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:l1_current]
[5.11392s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:l2_current]
[5.11422s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:l2_current]
[5.11446s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:l3_current]
[5.11473s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:l3_current]
[5.11512s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:max_igbt_temperature]
[5.11549s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:max_igbt_temperature]
[5.11583s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:reactive_power]
[5.11608s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:reactive_power]
[5.11639s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:status]
[5.11669s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:status]
[5.11747s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [module_3]
[5.11776s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [module_3] parent am [pcs] 
[5.11841s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [module_3]
[5.11871s  ] [info    ] [configure_vmapS] body: {"/config/module_3":{"AlarmDestination":"/assets/pcs/module_3:alarms","FaultDestination":"/assets/pcs/module_3:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/module_3":{"pubAssets_module_3":{"actions":{"onSet":[{"func":[{"amap":"module_3","func":"RunPub"}]}]},"enable":"/config/module_3:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/module_3)","table":"/assets/pcs/module_3","value":1},"runMonitor_module_3":{"actions":{"onSet":[{"func":[{"amap":"module_3","func":"RunMonitor"}]}]},"aname":"module_3","enable":"/config/module_3:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/module_3","value":1}},"/status/module_3":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"module_3","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/module_3) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"module_3","every":1,"uri":"/sched/module_3:pubAssets_module_3","value":1},{"aname":"module_3","every":0.1,"uri":"/sched/module_3:runMonitor_module_3","value":1},{"aname":"module_3","every":1,"uri":"/sched/module_3:checkInputs_module_3","value":1}],"targav":"/system/commands:run","value":false}},"/controls/module_3":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"module_3","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/module_3":{"/controls/module_3:ClearFaults":{"amap":"module_3","func":"HandleCmd"}},"/status/module_3":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/module_3:clear_faults"},{"outValue":"Clear","uri":"/alarms/module_3:clear_alarms"}]}]},"enable":"/config/module_3:enable","ifChanged":false,"note":"When this variable is set, /faults/module_3:clear_faults and /alarms/module_3:clear_alarms will be set to Clear","value":false}},"/alarms/module_3":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"module_3","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/module_3) will be reset to the normal state (defined in /config/module_3:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/module_3":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_3","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/module_3) will be reset to the normal state (defined in /config/module_3:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/module_3":{"/status/module_3:TotalAlarmCnt":{"amap":"module_3","func":"CalculateVar"},"/status/module_3:TotalFaultCnt":{"amap":"module_3","func":"CalculateVar"}},"/status/module_3":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"module_3","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_3:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_3:FaultCnt"}},"/schedule/wake_monitor/module_3":{"/status/module_3:CurrentFault":{"func":"CalculateVar"},"/status/module_3:CurrentWarning":{"func":"CalculateVar"},"/status/module_3:PCSDCPower":{"func":"CalculateVar"}},"/status/module_3":{"CurrentFault":{"expression":"if ((3 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((3 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/module_3:PCSDCVoltage","variable2":"/status/module_3:PCSDCCurrent"}},"/vlinks/module_3":{"active_power":{"value":"/components/pcs_registers_fast:module_3_p","vlink":"/status/module_3:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:module_3_dc_voltage_p","vlink":"/status/module_3:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:module_3_current_r","vlink":"/status/module_3:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:module_3_current_s","vlink":"/status/module_3:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:module_3_current_t","vlink":"/status/module_3:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:module_3_max_temp","vlink":"/status/module_3:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:module_3_dc_current","vlink":"/status/module_3:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:module_3_dc_voltage","vlink":"/status/module_3:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:module_3_q","vlink":"/status/module_3:ReactivePower"}},"/assets/pcs/module_3":{"active_power":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_3","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/module_3:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/module_3:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"l1_current":{"value":0},"l2_current":{"value":0},"l3_current":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"module_3","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/module_3:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_igbt_temperature":{"value":0},"reactive_power":{"value":0},"status":{"value":"INIT"}},"/vlinks/module_3":{"ui_active_power":{"value":"/assets/pcs/module_3:active_power","vlink":"/status/module_3:ActivePower"},"ui_apparent_power":{"value":"/assets/pcs/module_3:apparent_power","vlink":"/status/module_3:ApparentPower"},"ui_dc_current":{"value":"/assets/pcs/module_3:dc_current","vlink":"/status/module_3:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/module_3:dc_power","vlink":"/status/module_3:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/module_3:dc_voltage","vlink":"/status/module_3:DCVoltage"},"ui_l1_current":{"value":"/assets/pcs/module_3:l1_current","vlink":"/status/module_3:L1Current"},"ui_l2_current":{"value":"/assets/pcs/module_3:l2_current","vlink":"/status/module_3:L2Current"},"ui_l3_current":{"value":"/assets/pcs/module_3:l3_current","vlink":"/status/module_3:L3Current"},"ui_max_igbt_temperature":{"value":"/assets/pcs/module_3:max_igbt_temperature","vlink":"/status/module_3:MaxIGBTTemperature"},"ui_reactive_power":{"value":"/assets/pcs/module_3:reactive_power","vlink":"/status/module_3:ReactivePower"},"ui_status":{"value":"/assets/pcs/module_3:status","vlink":"/status/module_3:Status"}}}
[5.11935s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[5.1196s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/pcs/module_3:alarms",
	"FaultDestination":	"/assets/pcs/module_3:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[5.11996s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:alarms]
[5.1202s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:alarms]
[5.12045s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:faults]
[5.12075s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:faults]
[5.12102s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.12119s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.12164s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.12186s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.12236s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_module_3":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_3",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/module_3:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/pcs/module_3)",
		"table":	"/assets/pcs/module_3",
		"value":	1
	},
	"runMonitor_module_3":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_3",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"module_3",
		"enable":	"/config/module_3:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/module_3",
		"value":	1
	}
}].
[5.12291s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"Status":	"INIT"
}].
[5.12317s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.12334s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.12364s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_module":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_3",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/module_3) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"module_3",
				"every":	1,
				"uri":	"/sched/module_3:pubAssets_module_3",
				"value":	1
			}, {
				"aname":	"module_3",
				"every":	0.1,
				"uri":	"/sched/module_3:runMonitor_module_3",
				"value":	1
			}, {
				"aname":	"module_3",
				"every":	1,
				"uri":	"/sched/module_3:checkInputs_module_3",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[5.12414s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_3",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[5.12461s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_3:HandleCmd_ClearFaults]
[5.12484s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_3:HandleCmd_ClearFaults]
[5.12514s  ] [info    ] [HandleCmd      ] reload first run [module_3] [/controls/module_3:ClearFaults]  reload 0
[5.12538s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/module_3:ClearFaults]
[5.12579s  ] [info    ] [HandleCmd      ] Adding [/controls/module_3:ClearFaults] to amap in asset [module_3]
[5.12608s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/module_3:ClearFaults]
[5.12626s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/module_3:ClearFaults]
[5.12648s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/module_3:ClearFaults":	{
		"amap":	"module_3",
		"func":	"HandleCmd"
	}
}].
[5.12677s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/module_3:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/module_3:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/module_3:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/module_3:clear_faults and /alarms/module_3:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[5.1272s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_3",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/module_3) will be reset to the normal state (defined in /config/module_3:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[5.12745s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.12761s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.12782s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.12802s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.12823s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_3:FaultDestination]
[5.12842s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_3:FaultDestination]
[5.12864s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_3:NoFaultMsg]
[5.12886s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_3:NoFaultMsg]
[5.12912s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_3:FaultCnt]
[5.1293s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_3:FaultCnt]
[5.12955s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_3:AlarmDestination]
[5.12979s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_3:AlarmDestination]
[5.13004s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_3:NoAlarmMsg]
[5.13021s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_3:NoAlarmMsg]
[5.13039s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_3:AlarmCnt]
[5.13056s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_3:AlarmCnt]
[5.13094s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_3",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/module_3) will be reset to the normal state (defined in /config/module_3:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[5.13139s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.13164s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.13198s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.13225s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.13283s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_3:TotalAlarmCnt":	{
		"amap":	"module_3",
		"func":	"CalculateVar"
	},
	"/status/module_3:TotalFaultCnt":	{
		"amap":	"module_3",
		"func":	"CalculateVar"
	}
}].
[5.13328s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_3",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/pcs:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the PCS Module faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_3:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_3:FaultCnt"
	}
}].
[5.13442s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_3:CurrentFault":	{
		"func":	"CalculateVar"
	},
	"/status/module_3:CurrentWarning":	{
		"func":	"CalculateVar"
	},
	"/status/module_3:PCSDCPower":	{
		"func":	"CalculateVar"
	}
}].
[5.1351s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CurrentFault":	{
		"expression":	"if ((3 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_fault"
	},
	"CurrentWarning":	{
		"expression":	"if ((3 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_warning"
	},
	"PCSDCPower":	{
		"expression":	"{1} * {2}",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_3:PCSDCVoltage",
		"variable2":	"/status/module_3:PCSDCCurrent"
	}
}].
[5.13604s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	"/components/pcs_registers_fast:module_3_p",
		"vlink":	"/status/module_3:ActivePower"
	},
	"apparent_power":	{
		"value":	"/components/pcs_registers_fast:module_3_dc_voltage_p",
		"vlink":	"/status/module_3:ApparentPower"
	},
	"l1_current":	{
		"value":	"/components/pcs_registers_fast:module_3_current_r",
		"vlink":	"/status/module_3:L1Current"
	},
	"l2_current":	{
		"value":	"/components/pcs_registers_fast:module_3_current_s",
		"vlink":	"/status/module_3:L2Current"
	},
	"l3_current":	{
		"value":	"/components/pcs_registers_fast:module_3_current_t",
		"vlink":	"/status/module_3:L3Current"
	},
	"max_igbt_temperature":	{
		"value":	"/components/pcs_registers_fast:module_3_max_temp",
		"vlink":	"/status/module_3:MaxIGBTTemperature"
	},
	"pcs_dc_current":	{
		"value":	"/components/pcs_registers_fast:module_3_dc_current",
		"vlink":	"/status/module_3:PCSDCCurrent"
	},
	"pcs_dc_voltage":	{
		"value":	"/components/pcs_registers_fast:module_3_dc_voltage",
		"vlink":	"/status/module_3:PCSDCVoltage"
	},
	"reactive_power":	{
		"value":	"/components/pcs_registers_fast:module_3_q",
		"vlink":	"/status/module_3:ReactivePower"
	}
}].
[5.1363s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_3_p]
[5.13648s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_3_p]
[5.13669s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_3_dc_voltage_p]
[5.13685s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_3_dc_voltage_p]
[5.13702s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_3_current_r]
[5.13733s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_3_current_r]
[5.13753s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_3_current_s]
[5.13773s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_3_current_s]
[5.13797s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_3_current_t]
[5.13818s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_3_current_t]
[5.13851s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_3_max_temp]
[5.13873s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_3_max_temp]
[5.13897s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_3_dc_current]
[5.13928s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_3_dc_current]
[5.13953s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_3_dc_voltage]
[5.13972s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_3_dc_voltage]
[5.13994s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_3_q]
[5.1401s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_3_q]
[5.14044s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	0
	},
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"apparent_power":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_3",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/module_3:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/module_3:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"l1_current":	{
		"value":	0
	},
	"l2_current":	{
		"value":	0
	},
	"l3_current":	{
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_3",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/pcs/module_3:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_igbt_temperature":	{
		"value":	0
	},
	"reactive_power":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[5.14097s  ] [info    ] [LogInfo        ] [/assets/pcs/module_3:maint_mode] received a value of [false]
[5.14127s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.1414s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.1417s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_active_power":	{
		"value":	"/assets/pcs/module_3:active_power",
		"vlink":	"/status/module_3:ActivePower"
	},
	"ui_apparent_power":	{
		"value":	"/assets/pcs/module_3:apparent_power",
		"vlink":	"/status/module_3:ApparentPower"
	},
	"ui_dc_current":	{
		"value":	"/assets/pcs/module_3:dc_current",
		"vlink":	"/status/module_3:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/pcs/module_3:dc_power",
		"vlink":	"/status/module_3:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/pcs/module_3:dc_voltage",
		"vlink":	"/status/module_3:DCVoltage"
	},
	"ui_l1_current":	{
		"value":	"/assets/pcs/module_3:l1_current",
		"vlink":	"/status/module_3:L1Current"
	},
	"ui_l2_current":	{
		"value":	"/assets/pcs/module_3:l2_current",
		"vlink":	"/status/module_3:L2Current"
	},
	"ui_l3_current":	{
		"value":	"/assets/pcs/module_3:l3_current",
		"vlink":	"/status/module_3:L3Current"
	},
	"ui_max_igbt_temperature":	{
		"value":	"/assets/pcs/module_3:max_igbt_temperature",
		"vlink":	"/status/module_3:MaxIGBTTemperature"
	},
	"ui_reactive_power":	{
		"value":	"/assets/pcs/module_3:reactive_power",
		"vlink":	"/status/module_3:ReactivePower"
	},
	"ui_status":	{
		"value":	"/assets/pcs/module_3:status",
		"vlink":	"/status/module_3:Status"
	}
}].
[5.14193s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:active_power]
[5.14207s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:active_power]
[5.1423s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:apparent_power]
[5.14246s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:apparent_power]
[5.14265s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:dc_current]
[5.14285s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:dc_current]
[5.14308s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:dc_power]
[5.14323s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:dc_power]
[5.14373s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:dc_voltage]
[5.14392s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:dc_voltage]
[5.14421s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:l1_current]
[5.14443s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:l1_current]
[5.1447s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:l2_current]
[5.14488s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:l2_current]
[5.14517s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:l3_current]
[5.14537s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:l3_current]
[5.14566s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:max_igbt_temperature]
[5.14596s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:max_igbt_temperature]
[5.14619s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:reactive_power]
[5.1464s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:reactive_power]
[5.14662s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:status]
[5.14685s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:status]
[5.14748s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [module_4]
[5.14791s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [module_4] parent am [pcs] 
[5.14854s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [module_4]
[5.14885s  ] [info    ] [configure_vmapS] body: {"/config/module_4":{"AlarmDestination":"/assets/pcs/module_4:alarms","FaultDestination":"/assets/pcs/module_4:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/module_4":{"pubAssets_module_4":{"actions":{"onSet":[{"func":[{"amap":"module_4","func":"RunPub"}]}]},"enable":"/config/module_4:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/module_4)","table":"/assets/pcs/module_4","value":1},"runMonitor_module_4":{"actions":{"onSet":[{"func":[{"amap":"module_4","func":"RunMonitor"}]}]},"aname":"module_4","enable":"/config/module_4:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/module_4","value":1}},"/status/module_4":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"module_4","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/module_4) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"module_4","every":1,"uri":"/sched/module_4:pubAssets_module_4","value":1},{"aname":"module_4","every":0.1,"uri":"/sched/module_4:runMonitor_module_4","value":1},{"aname":"module_4","every":1,"uri":"/sched/module_4:checkInputs_module_4","value":1}],"targav":"/system/commands:run","value":false}},"/controls/module_4":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"module_4","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/module_4":{"/controls/module_4:ClearFaults":{"amap":"module_4","func":"HandleCmd"}},"/status/module_4":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/module_4:clear_faults"},{"outValue":"Clear","uri":"/alarms/module_4:clear_alarms"}]}]},"enable":"/config/module_4:enable","ifChanged":false,"note":"When this variable is set, /faults/module_4:clear_faults and /alarms/module_4:clear_alarms will be set to Clear","value":false}},"/alarms/module_4":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"module_4","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/module_4) will be reset to the normal state (defined in /config/module_4:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/module_4":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_4","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/module_4) will be reset to the normal state (defined in /config/module_4:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/module_4":{"/status/module_4:TotalAlarmCnt":{"amap":"module_4","func":"CalculateVar"},"/status/module_4:TotalFaultCnt":{"amap":"module_4","func":"CalculateVar"}},"/status/module_4":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"module_4","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_4:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_4:FaultCnt"}},"/schedule/wake_monitor/module_4":{"/status/module_4:CurrentFault":{"func":"CalculateVar"},"/status/module_4:CurrentWarning":{"func":"CalculateVar"},"/status/module_4:PCSDCPower":{"func":"CalculateVar"}},"/status/module_4":{"CurrentFault":{"expression":"if ((4 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((4 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/module_4:PCSDCVoltage","variable2":"/status/module_4:PCSDCCurrent"}},"/vlinks/module_4":{"active_power":{"value":"/components/pcs_registers_fast:module_4_p","vlink":"/status/module_4:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:module_4_dc_voltage_p","vlink":"/status/module_4:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:module_4_current_r","vlink":"/status/module_4:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:module_4_current_s","vlink":"/status/module_4:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:module_4_current_t","vlink":"/status/module_4:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:module_4_max_temp","vlink":"/status/module_4:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:module_4_dc_current","vlink":"/status/module_4:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:module_4_dc_voltage","vlink":"/status/module_4:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:module_4_q","vlink":"/status/module_4:ReactivePower"}},"/assets/pcs/module_4":{"active_power":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_4","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/module_4:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/module_4:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"l1_current":{"value":0},"l2_current":{"value":0},"l3_current":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"module_4","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/module_4:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_igbt_temperature":{"value":0},"reactive_power":{"value":0},"status":{"value":"INIT"}},"/vlinks/module_4":{"ui_active_power":{"value":"/assets/pcs/module_4:active_power","vlink":"/status/module_4:ActivePower"},"ui_apparent_power":{"value":"/assets/pcs/module_4:apparent_power","vlink":"/status/module_4:ApparentPower"},"ui_dc_current":{"value":"/assets/pcs/module_4:dc_current","vlink":"/status/module_4:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/module_4:dc_power","vlink":"/status/module_4:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/module_4:dc_voltage","vlink":"/status/module_4:DCVoltage"},"ui_l1_current":{"value":"/assets/pcs/module_4:l1_current","vlink":"/status/module_4:L1Current"},"ui_l2_current":{"value":"/assets/pcs/module_4:l2_current","vlink":"/status/module_4:L2Current"},"ui_l3_current":{"value":"/assets/pcs/module_4:l3_current","vlink":"/status/module_4:L3Current"},"ui_max_igbt_temperature":{"value":"/assets/pcs/module_4:max_igbt_temperature","vlink":"/status/module_4:MaxIGBTTemperature"},"ui_reactive_power":{"value":"/assets/pcs/module_4:reactive_power","vlink":"/status/module_4:ReactivePower"},"ui_status":{"value":"/assets/pcs/module_4:status","vlink":"/status/module_4:Status"}}}
[5.14972s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[5.14999s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/pcs/module_4:alarms",
	"FaultDestination":	"/assets/pcs/module_4:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[5.15032s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:alarms]
[5.15058s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:alarms]
[5.15081s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:faults]
[5.1511s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:faults]
[5.15813s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.15845s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.15864s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.15881s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.15911s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_module_4":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_4",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/module_4:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/pcs/module_4)",
		"table":	"/assets/pcs/module_4",
		"value":	1
	},
	"runMonitor_module_4":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_4",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"module_4",
		"enable":	"/config/module_4:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/module_4",
		"value":	1
	}
}].
[5.15949s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"Status":	"INIT"
}].
[5.15982s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.16001s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.16036s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_module":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_4",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/module_4) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"module_4",
				"every":	1,
				"uri":	"/sched/module_4:pubAssets_module_4",
				"value":	1
			}, {
				"aname":	"module_4",
				"every":	0.1,
				"uri":	"/sched/module_4:runMonitor_module_4",
				"value":	1
			}, {
				"aname":	"module_4",
				"every":	1,
				"uri":	"/sched/module_4:checkInputs_module_4",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[5.16079s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_4",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[5.16115s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_4:HandleCmd_ClearFaults]
[5.16136s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_4:HandleCmd_ClearFaults]
[5.1617s   ] [info    ] [HandleCmd      ] reload first run [module_4] [/controls/module_4:ClearFaults]  reload 0
[5.16187s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/module_4:ClearFaults]
[5.16211s  ] [info    ] [HandleCmd      ] Adding [/controls/module_4:ClearFaults] to amap in asset [module_4]
[5.1623s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/module_4:ClearFaults]
[5.16252s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/module_4:ClearFaults]
[5.16292s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/module_4:ClearFaults":	{
		"amap":	"module_4",
		"func":	"HandleCmd"
	}
}].
[5.16341s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/module_4:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/module_4:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/module_4:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/module_4:clear_faults and /alarms/module_4:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[5.16439s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_4",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/module_4) will be reset to the normal state (defined in /config/module_4:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[5.16492s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.16597s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.1666s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.16716s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.16829s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_4:FaultDestination]
[5.16859s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_4:FaultDestination]
[5.16897s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_4:NoFaultMsg]
[5.16928s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_4:NoFaultMsg]
[5.17002s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_4:FaultCnt]
[5.17062s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_4:FaultCnt]
[5.17114s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_4:AlarmDestination]
[5.17221s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_4:AlarmDestination]
[5.17266s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_4:NoAlarmMsg]
[5.173s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_4:NoAlarmMsg]
[5.17335s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_4:AlarmCnt]
[5.17353s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_4:AlarmCnt]
[5.17413s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_4",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/module_4) will be reset to the normal state (defined in /config/module_4:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[5.17465s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.17569s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.17619s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.17656s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.177s    ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_4:TotalAlarmCnt":	{
		"amap":	"module_4",
		"func":	"CalculateVar"
	},
	"/status/module_4:TotalFaultCnt":	{
		"amap":	"module_4",
		"func":	"CalculateVar"
	}
}].
[5.17754s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_4",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/pcs:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the PCS Module faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_4:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_4:FaultCnt"
	}
}].
[5.17814s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_4:CurrentFault":	{
		"func":	"CalculateVar"
	},
	"/status/module_4:CurrentWarning":	{
		"func":	"CalculateVar"
	},
	"/status/module_4:PCSDCPower":	{
		"func":	"CalculateVar"
	}
}].
[5.17861s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CurrentFault":	{
		"expression":	"if ((4 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_fault"
	},
	"CurrentWarning":	{
		"expression":	"if ((4 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_warning"
	},
	"PCSDCPower":	{
		"expression":	"{1} * {2}",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_4:PCSDCVoltage",
		"variable2":	"/status/module_4:PCSDCCurrent"
	}
}].
[5.17937s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	"/components/pcs_registers_fast:module_4_p",
		"vlink":	"/status/module_4:ActivePower"
	},
	"apparent_power":	{
		"value":	"/components/pcs_registers_fast:module_4_dc_voltage_p",
		"vlink":	"/status/module_4:ApparentPower"
	},
	"l1_current":	{
		"value":	"/components/pcs_registers_fast:module_4_current_r",
		"vlink":	"/status/module_4:L1Current"
	},
	"l2_current":	{
		"value":	"/components/pcs_registers_fast:module_4_current_s",
		"vlink":	"/status/module_4:L2Current"
	},
	"l3_current":	{
		"value":	"/components/pcs_registers_fast:module_4_current_t",
		"vlink":	"/status/module_4:L3Current"
	},
	"max_igbt_temperature":	{
		"value":	"/components/pcs_registers_fast:module_4_max_temp",
		"vlink":	"/status/module_4:MaxIGBTTemperature"
	},
	"pcs_dc_current":	{
		"value":	"/components/pcs_registers_fast:module_4_dc_current",
		"vlink":	"/status/module_4:PCSDCCurrent"
	},
	"pcs_dc_voltage":	{
		"value":	"/components/pcs_registers_fast:module_4_dc_voltage",
		"vlink":	"/status/module_4:PCSDCVoltage"
	},
	"reactive_power":	{
		"value":	"/components/pcs_registers_fast:module_4_q",
		"vlink":	"/status/module_4:ReactivePower"
	}
}].
[5.17981s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_4_p]
[5.18022s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_4_p]
[5.18081s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_4_dc_voltage_p]
[5.18137s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_4_dc_voltage_p]
[5.18183s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_4_current_r]
[5.18226s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_4_current_r]
[5.1828s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_4_current_s]
[5.18336s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_4_current_s]
[5.18443s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_4_current_t]
[5.18522s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_4_current_t]
[5.18562s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_4_max_temp]
[5.18622s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_4_max_temp]
[5.18721s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_4_dc_current]
[5.20272s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_4_dc_current]
[5.20572s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_4_dc_voltage]
[5.2064s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_4_dc_voltage]
[5.20706s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_4_q]
[5.21079s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_4_q]
[5.21156s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	0
	},
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"apparent_power":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_4",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/module_4:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/module_4:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"l1_current":	{
		"value":	0
	},
	"l2_current":	{
		"value":	0
	},
	"l3_current":	{
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_4",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/pcs/module_4:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_igbt_temperature":	{
		"value":	0
	},
	"reactive_power":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[5.21295s  ] [info    ] [LogInfo        ] [/assets/pcs/module_4:maint_mode] received a value of [false]
[5.21359s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.21398s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.21479s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_active_power":	{
		"value":	"/assets/pcs/module_4:active_power",
		"vlink":	"/status/module_4:ActivePower"
	},
	"ui_apparent_power":	{
		"value":	"/assets/pcs/module_4:apparent_power",
		"vlink":	"/status/module_4:ApparentPower"
	},
	"ui_dc_current":	{
		"value":	"/assets/pcs/module_4:dc_current",
		"vlink":	"/status/module_4:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/pcs/module_4:dc_power",
		"vlink":	"/status/module_4:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/pcs/module_4:dc_voltage",
		"vlink":	"/status/module_4:DCVoltage"
	},
	"ui_l1_current":	{
		"value":	"/assets/pcs/module_4:l1_current",
		"vlink":	"/status/module_4:L1Current"
	},
	"ui_l2_current":	{
		"value":	"/assets/pcs/module_4:l2_current",
		"vlink":	"/status/module_4:L2Current"
	},
	"ui_l3_current":	{
		"value":	"/assets/pcs/module_4:l3_current",
		"vlink":	"/status/module_4:L3Current"
	},
	"ui_max_igbt_temperature":	{
		"value":	"/assets/pcs/module_4:max_igbt_temperature",
		"vlink":	"/status/module_4:MaxIGBTTemperature"
	},
	"ui_reactive_power":	{
		"value":	"/assets/pcs/module_4:reactive_power",
		"vlink":	"/status/module_4:ReactivePower"
	},
	"ui_status":	{
		"value":	"/assets/pcs/module_4:status",
		"vlink":	"/status/module_4:Status"
	}
}].
[5.21547s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:active_power]
[5.21589s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:active_power]
[5.21647s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:apparent_power]
[5.21705s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:apparent_power]
[5.21751s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:dc_current]
[5.21796s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:dc_current]
[5.21853s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:dc_power]
[5.21897s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:dc_power]
[5.21952s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:dc_voltage]
[5.21997s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:dc_voltage]
[5.22069s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:l1_current]
[5.22123s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:l1_current]
[5.22153s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:l2_current]
[5.22213s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:l2_current]
[5.22259s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:l3_current]
[5.22304s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:l3_current]
[5.2239s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:max_igbt_temperature]
[5.22431s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:max_igbt_temperature]
[5.22478s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:reactive_power]
[5.22513s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:reactive_power]
[5.22552s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:status]
[5.22671s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:status]
[5.2275s   ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [module_5]
[5.22774s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [module_5] parent am [pcs] 
[5.22831s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [module_5]
[5.22854s  ] [info    ] [configure_vmapS] body: {"/config/module_5":{"AlarmDestination":"/assets/pcs/module_5:alarms","FaultDestination":"/assets/pcs/module_5:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/module_5":{"pubAssets_module_5":{"actions":{"onSet":[{"func":[{"amap":"module_5","func":"RunPub"}]}]},"enable":"/config/module_5:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/module_5)","table":"/assets/pcs/module_5","value":1},"runMonitor_module_5":{"actions":{"onSet":[{"func":[{"amap":"module_5","func":"RunMonitor"}]}]},"aname":"module_5","enable":"/config/module_5:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/module_5","value":1}},"/status/module_5":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"module_5","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/module_5) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"module_5","every":1,"uri":"/sched/module_5:pubAssets_module_5","value":1},{"aname":"module_5","every":0.1,"uri":"/sched/module_5:runMonitor_module_5","value":1},{"aname":"module_5","every":1,"uri":"/sched/module_5:checkInputs_module_5","value":1}],"targav":"/system/commands:run","value":false}},"/controls/module_5":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"module_5","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/module_5":{"/controls/module_5:ClearFaults":{"amap":"module_5","func":"HandleCmd"}},"/status/module_5":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/module_5:clear_faults"},{"outValue":"Clear","uri":"/alarms/module_5:clear_alarms"}]}]},"enable":"/config/module_5:enable","ifChanged":false,"note":"When this variable is set, /faults/module_5:clear_faults and /alarms/module_5:clear_alarms will be set to Clear","value":false}},"/alarms/module_5":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"module_5","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/module_5) will be reset to the normal state (defined in /config/module_5:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/module_5":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_5","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/module_5) will be reset to the normal state (defined in /config/module_5:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/module_5":{"/status/module_5:TotalAlarmCnt":{"amap":"module_5","func":"CalculateVar"},"/status/module_5:TotalFaultCnt":{"amap":"module_5","func":"CalculateVar"}},"/status/module_5":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"module_5","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_5:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_5:FaultCnt"}},"/schedule/wake_monitor/module_5":{"/status/module_5:CurrentFault":{"func":"CalculateVar"},"/status/module_5:CurrentWarning":{"func":"CalculateVar"},"/status/module_5:PCSDCPower":{"func":"CalculateVar"}},"/status/module_5":{"CurrentFault":{"expression":"if ((5 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((5 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/module_5:PCSDCVoltage","variable2":"/status/module_5:PCSDCCurrent"}},"/vlinks/module_5":{"active_power":{"value":"/components/pcs_registers_fast:module_5_p","vlink":"/status/module_5:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:module_5_dc_voltage_p","vlink":"/status/module_5:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:module_5_current_r","vlink":"/status/module_5:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:module_5_current_s","vlink":"/status/module_5:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:module_5_current_t","vlink":"/status/module_5:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:module_5_max_temp","vlink":"/status/module_5:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:module_5_dc_current","vlink":"/status/module_5:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:module_5_dc_voltage","vlink":"/status/module_5:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:module_5_q","vlink":"/status/module_5:ReactivePower"}},"/assets/pcs/module_5":{"active_power":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_5","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/module_5:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/module_5:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"l1_current":{"value":0},"l2_current":{"value":0},"l3_current":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"module_5","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/module_5:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_igbt_temperature":{"value":0},"reactive_power":{"value":0},"status":{"value":"INIT"}},"/vlinks/module_5":{"ui_active_power":{"value":"/assets/pcs/module_5:active_power","vlink":"/status/module_5:ActivePower"},"ui_apparent_power":{"value":"/assets/pcs/module_5:apparent_power","vlink":"/status/module_5:ApparentPower"},"ui_dc_current":{"value":"/assets/pcs/module_5:dc_current","vlink":"/status/module_5:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/module_5:dc_power","vlink":"/status/module_5:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/module_5:dc_voltage","vlink":"/status/module_5:DCVoltage"},"ui_l1_current":{"value":"/assets/pcs/module_5:l1_current","vlink":"/status/module_5:L1Current"},"ui_l2_current":{"value":"/assets/pcs/module_5:l2_current","vlink":"/status/module_5:L2Current"},"ui_l3_current":{"value":"/assets/pcs/module_5:l3_current","vlink":"/status/module_5:L3Current"},"ui_max_igbt_temperature":{"value":"/assets/pcs/module_5:max_igbt_temperature","vlink":"/status/module_5:MaxIGBTTemperature"},"ui_reactive_power":{"value":"/assets/pcs/module_5:reactive_power","vlink":"/status/module_5:ReactivePower"},"ui_status":{"value":"/assets/pcs/module_5:status","vlink":"/status/module_5:Status"}}}
[5.22927s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[5.22958s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/pcs/module_5:alarms",
	"FaultDestination":	"/assets/pcs/module_5:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[5.22995s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:alarms]
[5.23019s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:alarms]
[5.23046s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:faults]
[5.23073s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:faults]
[5.23094s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.2312s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.23151s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.23177s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.23211s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_module_5":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_5",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/module_5:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/pcs/module_5)",
		"table":	"/assets/pcs/module_5",
		"value":	1
	},
	"runMonitor_module_5":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_5",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"module_5",
		"enable":	"/config/module_5:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/module_5",
		"value":	1
	}
}].
[5.23246s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"Status":	"INIT"
}].
[5.23272s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.23296s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.23329s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_module":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_5",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/module_5) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"module_5",
				"every":	1,
				"uri":	"/sched/module_5:pubAssets_module_5",
				"value":	1
			}, {
				"aname":	"module_5",
				"every":	0.1,
				"uri":	"/sched/module_5:runMonitor_module_5",
				"value":	1
			}, {
				"aname":	"module_5",
				"every":	1,
				"uri":	"/sched/module_5:checkInputs_module_5",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[5.23386s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_5",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[5.23422s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_5:HandleCmd_ClearFaults]
[5.23445s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_5:HandleCmd_ClearFaults]
[5.23476s  ] [info    ] [HandleCmd      ] reload first run [module_5] [/controls/module_5:ClearFaults]  reload 0
[5.23496s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/module_5:ClearFaults]
[5.23521s  ] [info    ] [HandleCmd      ] Adding [/controls/module_5:ClearFaults] to amap in asset [module_5]
[5.23546s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/module_5:ClearFaults]
[5.23571s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/module_5:ClearFaults]
[5.23624s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/module_5:ClearFaults":	{
		"amap":	"module_5",
		"func":	"HandleCmd"
	}
}].
[5.23668s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/module_5:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/module_5:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/module_5:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/module_5:clear_faults and /alarms/module_5:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[5.23746s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_5",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/module_5) will be reset to the normal state (defined in /config/module_5:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[5.23791s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.23825s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.23875s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.239s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.23932s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_5:FaultDestination]
[5.23957s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_5:FaultDestination]
[5.23984s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_5:NoFaultMsg]
[5.24011s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_5:NoFaultMsg]
[5.24047s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_5:FaultCnt]
[5.24083s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_5:FaultCnt]
[5.24109s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_5:AlarmDestination]
[5.24138s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_5:AlarmDestination]
[5.24172s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_5:NoAlarmMsg]
[5.24201s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_5:NoAlarmMsg]
[5.24233s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_5:AlarmCnt]
[5.24258s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_5:AlarmCnt]
[5.24306s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_5",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/module_5) will be reset to the normal state (defined in /config/module_5:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[5.24354s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.244s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.24437s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.24463s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.24508s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_5:TotalAlarmCnt":	{
		"amap":	"module_5",
		"func":	"CalculateVar"
	},
	"/status/module_5:TotalFaultCnt":	{
		"amap":	"module_5",
		"func":	"CalculateVar"
	}
}].
[5.24565s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_5",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/pcs:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the PCS Module faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_5:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_5:FaultCnt"
	}
}].
[5.24627s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_5:CurrentFault":	{
		"func":	"CalculateVar"
	},
	"/status/module_5:CurrentWarning":	{
		"func":	"CalculateVar"
	},
	"/status/module_5:PCSDCPower":	{
		"func":	"CalculateVar"
	}
}].
[5.24662s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CurrentFault":	{
		"expression":	"if ((5 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_fault"
	},
	"CurrentWarning":	{
		"expression":	"if ((5 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_warning"
	},
	"PCSDCPower":	{
		"expression":	"{1} * {2}",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_5:PCSDCVoltage",
		"variable2":	"/status/module_5:PCSDCCurrent"
	}
}].
[5.2473s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	"/components/pcs_registers_fast:module_5_p",
		"vlink":	"/status/module_5:ActivePower"
	},
	"apparent_power":	{
		"value":	"/components/pcs_registers_fast:module_5_dc_voltage_p",
		"vlink":	"/status/module_5:ApparentPower"
	},
	"l1_current":	{
		"value":	"/components/pcs_registers_fast:module_5_current_r",
		"vlink":	"/status/module_5:L1Current"
	},
	"l2_current":	{
		"value":	"/components/pcs_registers_fast:module_5_current_s",
		"vlink":	"/status/module_5:L2Current"
	},
	"l3_current":	{
		"value":	"/components/pcs_registers_fast:module_5_current_t",
		"vlink":	"/status/module_5:L3Current"
	},
	"max_igbt_temperature":	{
		"value":	"/components/pcs_registers_fast:module_5_max_temp",
		"vlink":	"/status/module_5:MaxIGBTTemperature"
	},
	"pcs_dc_current":	{
		"value":	"/components/pcs_registers_fast:module_5_dc_current",
		"vlink":	"/status/module_5:PCSDCCurrent"
	},
	"pcs_dc_voltage":	{
		"value":	"/components/pcs_registers_fast:module_5_dc_voltage",
		"vlink":	"/status/module_5:PCSDCVoltage"
	},
	"reactive_power":	{
		"value":	"/components/pcs_registers_fast:module_5_q",
		"vlink":	"/status/module_5:ReactivePower"
	}
}].
[5.24767s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_5_p]
[5.24793s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_5_p]
[5.24821s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_5_dc_voltage_p]
[5.24851s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_5_dc_voltage_p]
[5.24884s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_5_current_r]
[5.24928s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_5_current_r]
[5.24957s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_5_current_s]
[5.24977s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_5_current_s]
[5.25003s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_5_current_t]
[5.25033s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_5_current_t]
[5.25063s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_5_max_temp]
[5.25087s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_5_max_temp]
[5.2511s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_5_dc_current]
[5.25135s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_5_dc_current]
[5.25172s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_5_dc_voltage]
[5.25205s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_5_dc_voltage]
[5.25239s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_5_q]
[5.25271s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_5_q]
[5.25336s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	0
	},
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"apparent_power":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_5",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/module_5:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/module_5:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"l1_current":	{
		"value":	0
	},
	"l2_current":	{
		"value":	0
	},
	"l3_current":	{
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_5",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/pcs/module_5:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_igbt_temperature":	{
		"value":	0
	},
	"reactive_power":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[5.25453s  ] [info    ] [LogInfo        ] [/assets/pcs/module_5:maint_mode] received a value of [false]
[5.25514s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.25548s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.256s    ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_active_power":	{
		"value":	"/assets/pcs/module_5:active_power",
		"vlink":	"/status/module_5:ActivePower"
	},
	"ui_apparent_power":	{
		"value":	"/assets/pcs/module_5:apparent_power",
		"vlink":	"/status/module_5:ApparentPower"
	},
	"ui_dc_current":	{
		"value":	"/assets/pcs/module_5:dc_current",
		"vlink":	"/status/module_5:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/pcs/module_5:dc_power",
		"vlink":	"/status/module_5:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/pcs/module_5:dc_voltage",
		"vlink":	"/status/module_5:DCVoltage"
	},
	"ui_l1_current":	{
		"value":	"/assets/pcs/module_5:l1_current",
		"vlink":	"/status/module_5:L1Current"
	},
	"ui_l2_current":	{
		"value":	"/assets/pcs/module_5:l2_current",
		"vlink":	"/status/module_5:L2Current"
	},
	"ui_l3_current":	{
		"value":	"/assets/pcs/module_5:l3_current",
		"vlink":	"/status/module_5:L3Current"
	},
	"ui_max_igbt_temperature":	{
		"value":	"/assets/pcs/module_5:max_igbt_temperature",
		"vlink":	"/status/module_5:MaxIGBTTemperature"
	},
	"ui_reactive_power":	{
		"value":	"/assets/pcs/module_5:reactive_power",
		"vlink":	"/status/module_5:ReactivePower"
	},
	"ui_status":	{
		"value":	"/assets/pcs/module_5:status",
		"vlink":	"/status/module_5:Status"
	}
}].
[5.25679s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:active_power]
[5.25723s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:active_power]
[5.25772s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:apparent_power]
[5.25818s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:apparent_power]
[5.25867s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:dc_current]
[5.25906s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:dc_current]
[5.25943s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:dc_power]
[5.25987s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:dc_power]
[5.26022s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:dc_voltage]
[5.26046s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:dc_voltage]
[5.26077s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:l1_current]
[5.26114s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:l1_current]
[5.26144s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:l2_current]
[5.26178s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:l2_current]
[5.26203s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:l3_current]
[5.26233s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:l3_current]
[5.26261s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:max_igbt_temperature]
[5.26285s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:max_igbt_temperature]
[5.26315s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:reactive_power]
[5.2634s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:reactive_power]
[5.26368s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:status]
[5.26389s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:status]
[5.26497s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [module_6]
[5.26522s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [module_6] parent am [pcs] 
[5.26588s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [module_6]
[5.26659s  ] [info    ] [configure_vmapS] body: {"/config/module_6":{"AlarmDestination":"/assets/pcs/module_6:alarms","FaultDestination":"/assets/pcs/module_6:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/module_6":{"pubAssets_module_6":{"actions":{"onSet":[{"func":[{"amap":"module_6","func":"RunPub"}]}]},"enable":"/config/module_6:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/module_6)","table":"/assets/pcs/module_6","value":1},"runMonitor_module_6":{"actions":{"onSet":[{"func":[{"amap":"module_6","func":"RunMonitor"}]}]},"aname":"module_6","enable":"/config/module_6:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/module_6","value":1}},"/status/module_6":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"module_6","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/module_6) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"module_6","every":1,"uri":"/sched/module_6:pubAssets_module_6","value":1},{"aname":"module_6","every":0.1,"uri":"/sched/module_6:runMonitor_module_6","value":1},{"aname":"module_6","every":1,"uri":"/sched/module_6:checkInputs_module_6","value":1}],"targav":"/system/commands:run","value":false}},"/controls/module_6":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"module_6","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/module_6":{"/controls/module_6:ClearFaults":{"amap":"module_6","func":"HandleCmd"}},"/status/module_6":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/module_6:clear_faults"},{"outValue":"Clear","uri":"/alarms/module_6:clear_alarms"}]}]},"enable":"/config/module_6:enable","ifChanged":false,"note":"When this variable is set, /faults/module_6:clear_faults and /alarms/module_6:clear_alarms will be set to Clear","value":false}},"/alarms/module_6":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"module_6","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/module_6) will be reset to the normal state (defined in /config/module_6:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/module_6":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_6","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/module_6) will be reset to the normal state (defined in /config/module_6:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/module_6":{"/status/module_6:TotalAlarmCnt":{"amap":"module_6","func":"CalculateVar"},"/status/module_6:TotalFaultCnt":{"amap":"module_6","func":"CalculateVar"}},"/status/module_6":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"module_6","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_6:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_6:FaultCnt"}},"/schedule/wake_monitor/module_6":{"/status/module_6:CurrentFault":{"func":"CalculateVar"},"/status/module_6:CurrentWarning":{"func":"CalculateVar"},"/status/module_6:PCSDCPower":{"func":"CalculateVar"}},"/status/module_6":{"CurrentFault":{"expression":"if ((6 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((6 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/module_6:PCSDCVoltage","variable2":"/status/module_6:PCSDCCurrent"}},"/vlinks/module_6":{"active_power":{"value":"/components/pcs_registers_fast:module_6_p","vlink":"/status/module_6:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:module_6_dc_voltage_p","vlink":"/status/module_6:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:module_6_current_r","vlink":"/status/module_6:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:module_6_current_s","vlink":"/status/module_6:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:module_6_current_t","vlink":"/status/module_6:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:module_6_max_temp","vlink":"/status/module_6:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:module_6_dc_current","vlink":"/status/module_6:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:module_6_dc_voltage","vlink":"/status/module_6:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:module_6_q","vlink":"/status/module_6:ReactivePower"}},"/assets/pcs/module_6":{"active_power":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_6","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/module_6:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/module_6:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"l1_current":{"value":0},"l2_current":{"value":0},"l3_current":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"module_6","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/module_6:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_igbt_temperature":{"value":0},"reactive_power":{"value":0},"status":{"value":"INIT"}},"/vlinks/module_6":{"ui_active_power":{"value":"/assets/pcs/module_6:active_power","vlink":"/status/module_6:ActivePower"},"ui_apparent_power":{"value":"/assets/pcs/module_6:apparent_power","vlink":"/status/module_6:ApparentPower"},"ui_dc_current":{"value":"/assets/pcs/module_6:dc_current","vlink":"/status/module_6:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/module_6:dc_power","vlink":"/status/module_6:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/module_6:dc_voltage","vlink":"/status/module_6:DCVoltage"},"ui_l1_current":{"value":"/assets/pcs/module_6:l1_current","vlink":"/status/module_6:L1Current"},"ui_l2_current":{"value":"/assets/pcs/module_6:l2_current","vlink":"/status/module_6:L2Current"},"ui_l3_current":{"value":"/assets/pcs/module_6:l3_current","vlink":"/status/module_6:L3Current"},"ui_max_igbt_temperature":{"value":"/assets/pcs/module_6:max_igbt_temperature","vlink":"/status/module_6:MaxIGBTTemperature"},"ui_reactive_power":{"value":"/assets/pcs/module_6:reactive_power","vlink":"/status/module_6:ReactivePower"},"ui_status":{"value":"/assets/pcs/module_6:status","vlink":"/status/module_6:Status"}}}
[5.26763s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[5.26807s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/pcs/module_6:alarms",
	"FaultDestination":	"/assets/pcs/module_6:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[5.26839s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:alarms]
[5.26879s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:alarms]
[5.26925s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:faults]
[5.26958s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:faults]
[5.27021s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.27078s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.27138s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.27204s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.27248s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_module_6":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_6",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/module_6:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/pcs/module_6)",
		"table":	"/assets/pcs/module_6",
		"value":	1
	},
	"runMonitor_module_6":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_6",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"module_6",
		"enable":	"/config/module_6:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/module_6",
		"value":	1
	}
}].
[5.27338s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"Status":	"INIT"
}].
[5.27399s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.27456s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.27532s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_module":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_6",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/module_6) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"module_6",
				"every":	1,
				"uri":	"/sched/module_6:pubAssets_module_6",
				"value":	1
			}, {
				"aname":	"module_6",
				"every":	0.1,
				"uri":	"/sched/module_6:runMonitor_module_6",
				"value":	1
			}, {
				"aname":	"module_6",
				"every":	1,
				"uri":	"/sched/module_6:checkInputs_module_6",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[5.27619s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_6",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[5.27681s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_6:HandleCmd_ClearFaults]
[5.27761s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_6:HandleCmd_ClearFaults]
[5.2784s   ] [info    ] [HandleCmd      ] reload first run [module_6] [/controls/module_6:ClearFaults]  reload 0
[5.27891s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/module_6:ClearFaults]
[5.27952s  ] [info    ] [HandleCmd      ] Adding [/controls/module_6:ClearFaults] to amap in asset [module_6]
[5.28025s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/module_6:ClearFaults]
[5.28086s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/module_6:ClearFaults]
[5.28163s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/module_6:ClearFaults":	{
		"amap":	"module_6",
		"func":	"HandleCmd"
	}
}].
[5.28298s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/module_6:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/module_6:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/module_6:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/module_6:clear_faults and /alarms/module_6:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[5.28461s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_6",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/module_6) will be reset to the normal state (defined in /config/module_6:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[5.28539s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.28576s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.28633s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.28937s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.28992s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_6:FaultDestination]
[5.29026s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_6:FaultDestination]
[5.29064s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_6:NoFaultMsg]
[5.29099s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_6:NoFaultMsg]
[5.29126s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_6:FaultCnt]
[5.29158s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_6:FaultCnt]
[5.29192s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_6:AlarmDestination]
[5.29227s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_6:AlarmDestination]
[5.29506s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_6:NoAlarmMsg]
[5.29559s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_6:NoAlarmMsg]
[5.29639s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_6:AlarmCnt]
[5.29678s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_6:AlarmCnt]
[5.29813s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_6",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/module_6) will be reset to the normal state (defined in /config/module_6:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[5.29875s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.29926s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.29978s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.30008s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.30064s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_6:TotalAlarmCnt":	{
		"amap":	"module_6",
		"func":	"CalculateVar"
	},
	"/status/module_6:TotalFaultCnt":	{
		"amap":	"module_6",
		"func":	"CalculateVar"
	}
}].
[5.30125s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_6",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/pcs:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the PCS Module faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_6:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_6:FaultCnt"
	}
}].
[5.30237s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_6:CurrentFault":	{
		"func":	"CalculateVar"
	},
	"/status/module_6:CurrentWarning":	{
		"func":	"CalculateVar"
	},
	"/status/module_6:PCSDCPower":	{
		"func":	"CalculateVar"
	}
}].
[5.30304s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CurrentFault":	{
		"expression":	"if ((6 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_fault"
	},
	"CurrentWarning":	{
		"expression":	"if ((6 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_warning"
	},
	"PCSDCPower":	{
		"expression":	"{1} * {2}",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_6:PCSDCVoltage",
		"variable2":	"/status/module_6:PCSDCCurrent"
	}
}].
[5.30392s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	"/components/pcs_registers_fast:module_6_p",
		"vlink":	"/status/module_6:ActivePower"
	},
	"apparent_power":	{
		"value":	"/components/pcs_registers_fast:module_6_dc_voltage_p",
		"vlink":	"/status/module_6:ApparentPower"
	},
	"l1_current":	{
		"value":	"/components/pcs_registers_fast:module_6_current_r",
		"vlink":	"/status/module_6:L1Current"
	},
	"l2_current":	{
		"value":	"/components/pcs_registers_fast:module_6_current_s",
		"vlink":	"/status/module_6:L2Current"
	},
	"l3_current":	{
		"value":	"/components/pcs_registers_fast:module_6_current_t",
		"vlink":	"/status/module_6:L3Current"
	},
	"max_igbt_temperature":	{
		"value":	"/components/pcs_registers_fast:module_6_max_temp",
		"vlink":	"/status/module_6:MaxIGBTTemperature"
	},
	"pcs_dc_current":	{
		"value":	"/components/pcs_registers_fast:module_6_dc_current",
		"vlink":	"/status/module_6:PCSDCCurrent"
	},
	"pcs_dc_voltage":	{
		"value":	"/components/pcs_registers_fast:module_6_dc_voltage",
		"vlink":	"/status/module_6:PCSDCVoltage"
	},
	"reactive_power":	{
		"value":	"/components/pcs_registers_fast:module_6_q",
		"vlink":	"/status/module_6:ReactivePower"
	}
}].
[5.30449s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_6_p]
[5.30489s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_6_p]
[5.30536s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_6_dc_voltage_p]
[5.30576s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_6_dc_voltage_p]
[5.3061s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_6_current_r]
[5.30647s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_6_current_r]
[5.30684s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_6_current_s]
[5.30721s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_6_current_s]
[5.30763s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_6_current_t]
[5.30793s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_6_current_t]
[5.30833s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_6_max_temp]
[5.30854s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_6_max_temp]
[5.309s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_6_dc_current]
[5.30938s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_6_dc_current]
[5.30996s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_6_dc_voltage]
[5.31032s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_6_dc_voltage]
[5.31072s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_6_q]
[5.31103s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_6_q]
[5.31153s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	0
	},
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"apparent_power":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_6",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/module_6:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/module_6:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"l1_current":	{
		"value":	0
	},
	"l2_current":	{
		"value":	0
	},
	"l3_current":	{
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_6",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/pcs/module_6:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_igbt_temperature":	{
		"value":	0
	},
	"reactive_power":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[5.31264s  ] [info    ] [LogInfo        ] [/assets/pcs/module_6:maint_mode] received a value of [false]
[5.31325s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.31385s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.31442s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_active_power":	{
		"value":	"/assets/pcs/module_6:active_power",
		"vlink":	"/status/module_6:ActivePower"
	},
	"ui_apparent_power":	{
		"value":	"/assets/pcs/module_6:apparent_power",
		"vlink":	"/status/module_6:ApparentPower"
	},
	"ui_dc_current":	{
		"value":	"/assets/pcs/module_6:dc_current",
		"vlink":	"/status/module_6:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/pcs/module_6:dc_power",
		"vlink":	"/status/module_6:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/pcs/module_6:dc_voltage",
		"vlink":	"/status/module_6:DCVoltage"
	},
	"ui_l1_current":	{
		"value":	"/assets/pcs/module_6:l1_current",
		"vlink":	"/status/module_6:L1Current"
	},
	"ui_l2_current":	{
		"value":	"/assets/pcs/module_6:l2_current",
		"vlink":	"/status/module_6:L2Current"
	},
	"ui_l3_current":	{
		"value":	"/assets/pcs/module_6:l3_current",
		"vlink":	"/status/module_6:L3Current"
	},
	"ui_max_igbt_temperature":	{
		"value":	"/assets/pcs/module_6:max_igbt_temperature",
		"vlink":	"/status/module_6:MaxIGBTTemperature"
	},
	"ui_reactive_power":	{
		"value":	"/assets/pcs/module_6:reactive_power",
		"vlink":	"/status/module_6:ReactivePower"
	},
	"ui_status":	{
		"value":	"/assets/pcs/module_6:status",
		"vlink":	"/status/module_6:Status"
	}
}].
[5.31497s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:active_power]
[5.3153s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:active_power]
[5.31569s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:apparent_power]
[5.31607s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:apparent_power]
[5.31657s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:dc_current]
[5.31691s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:dc_current]
[5.31723s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:dc_power]
[5.31756s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:dc_power]
[5.31814s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:dc_voltage]
[5.31844s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:dc_voltage]
[5.3189s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:l1_current]
[5.31921s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:l1_current]
[5.31968s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:l2_current]
[5.32002s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:l2_current]
[5.32032s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:l3_current]
[5.32071s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:l3_current]
[5.32105s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:max_igbt_temperature]
[5.32145s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:max_igbt_temperature]
[5.3219s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:reactive_power]
[5.32225s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:reactive_power]
[5.32282s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:status]
[5.32315s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:status]
[5.32431s  ] [info    ] [SiteBMSContacto] SiteBMSContactorControl
[5.32465s  ] [info    ] [SiteBMSContacto] Right before reload == 1
[5.32509s  ] [info    ] [PrintAssetVar  ] 
{
  "/site/ess:bms_dc_contactor_control": {
    "value": 0,
    "note2": "2->close contactors | 3->open contactors",
    "every": 0,
    "for": 0,
    "offset": 0,
    "uri": "none",
    "size": 1,
    "after": 0,
    "debug": 0,
    "name": "BMS Contactor Control Command",
    "aname": "ess",
    "type": "control",
    "note1": "Initiates BMS close and open contactors",
    "enable": "/config/pcs:enable",
    "ifChanged": false
  }
}


[5.32534s  ] [info    ] [SiteBMSContacto] reload == 1
[5.32565s  ] [info    ] [PullOffSchedule] PullOffScheduler
[5.32598s  ] [info    ] [PrintAssetVar  ] 
{
  "/site/ess:bms_dc_contactor_control": {
    "value": 0,
    "note2": "2->close contactors | 3->open contactors",
    "every": 0,
    "for": 0,
    "offset": 0,
    "uri": "none",
    "size": 1,
    "after": 0,
    "debug": 0,
    "name": "BMS Contactor Control Command",
    "aname": "ess",
    "type": "control",
    "note1": "Initiates BMS close and open contactors",
    "enable": "/config/pcs:enable",
    "ifChanged": false
  }
}


[5.32642s  ] [info    ] [runConfig      ]  All files loaded for loader [ess_controller] ready to run av [/config/load:ess_controller] load
[5.32693s  ] [info    ] [requestFfile   ]  fims send [/dbi/ess_controller/configs_ess_final] reply [/ess/cfg/cfile/ess/ess_final] cfile [ess_final]
[5.32725s  ] [info    ] [runConfig      ]  After requestFfile, requesting final [ess_final]
[5.41822s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:ess_final]  am at start [ess]
[5.41913s  ] [info    ] [configure_vmapS] process file seeking header stuff am [ess] ai [no ai]
[5.41966s  ] [info    ] [configure_vmapS] body: {"/system/commands":{"addSchedVars_ess":{"actions":{"onSet":[{"remap":[{"uri":"/system/commands:runOpts_ess@enabled"},{"uri":"/system/commands:runOpts_ess"},{"uri":"/system/commands:runOpts_bms@enabled"},{"uri":"/system/commands:runOpts_bms"},{"uri":"/system/commands:runOpts_rack@enabled"},{"uri":"/system/commands:runOpts_rack"},{"uri":"/system/commands:runOpts_pcs@enabled"},{"uri":"/system/commands:runOpts_pcs"},{"uri":"/system/commands:runOpts_module@enabled"},{"uri":"/system/commands:runOpts_module"}]}]},"enabled":false,"ifChanged":false,"note":"Sets /system/commands:runOpts_\u003casset\u003e to add schedule variables to scheduler","value":true},"enableVars_ess":{"actions":{"onSet":[{"remap":[{"uri":"/config/ess:enable"},{"uri":"/config/bms:enable"},{"uri":"/config/bms:enum_opt"},{"uri":"/config/rack_1:enable"},{"uri":"/config/rack_1:enum_opt"},{"uri":"/config/rack_2:enable"},{"uri":"/config/rack_2:enum_opt"},{"uri":"/config/rack_3:enable"},{"uri":"/config/rack_3:enum_opt"},{"uri":"/config/rack_4:enable"},{"uri":"/config/rack_4:enum_opt"},{"uri":"/config/rack_5:enable"},{"uri":"/config/rack_5:enum_opt"},{"uri":"/config/rack_6:enable"},{"uri":"/config/rack_6:enum_opt"},{"uri":"/config/rack_7:enable"},{"uri":"/config/rack_7:enum_opt"},{"uri":"/config/rack_8:enable"},{"uri":"/config/rack_8:enum_opt"},{"uri":"/config/rack_9:enable"},{"uri":"/config/rack_9:enum_opt"},{"uri":"/config/pcs:enable"},{"uri":"/config/pcs:enum_opt"},{"uri":"/config/module_1:enable"},{"uri":"/config/module_1:enum_opt"},{"uri":"/config/module_2:enable"},{"uri":"/config/module_2:enum_opt"},{"uri":"/config/module_3:enable"},{"uri":"/config/module_3:enum_opt"},{"uri":"/config/module_4:enable"},{"uri":"/config/module_4:enum_opt"},{"uri":"/config/module_5:enable"},{"uri":"/config/module_5:enum_opt"},{"uri":"/config/module_6:enable"},{"uri":"/config/module_6:enum_opt"}]}]},"enabled":false,"ifChanged":false,"note1":"Sets /config/\u003casset\u003e:enable and /config/\u003casset\u003e:enum_opt","note2":"Enable actions, if any, and other operations for variables that have the enable parameter","value":true},"link":{"actions":{"onSet":[{"func":[{"func":"RunAllLinks"}]}]},"enabled":false,"ifChanged":false,"note":"Command variable used to link all variables defined in /links","value":true},"run":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"enabled":true,"ifChanged":false,"note":"Command variable used to start scheduled tasks","value":true},"stop":{"actions":{"onSet":[{"func":[{"func":"StopSched"}]}]},"enabled":true,"ifChanged":false,"note":"Command variable used to stop scheduled tasks","value":true},"vlink":{"actions":{"onSet":[{"func":[{"func":"RunAllVLinks"}]}]},"enabled":false,"ifChanged":false,"note":"Command variable used to link all variables defined in /vlinks","value":true}},"/system/sequences":{"triggerSysCmds_ess":{"actions":{"onSet":[{"remap":[{"uri":"/system/commands:enableVars_ess@enabled"},{"uri":"/system/commands:enableVars_ess"},{"uri":"/system/commands:link@enabled"},{"uri":"/system/commands:link"},{"uri":"/system/commands:vlink@enabled"},{"uri":"/system/commands:vlink"},{"uri":"/system/commands:addSchedVars_ess@enabled"},{"uri":"/system/commands:addSchedVars_ess"}]}]},"enabled":true,"ifChanged":false,"note1":"Trigger some variables defined in /system/commands","note2":"Specifically, enableVars_ess, link, vlink, and addSchedVars_ess are triggered","value":true}}}
[5.42015s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[5.42138s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"addSchedVars_ess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/system/commands:runOpts_ess@enabled"
						}, {
							"uri":	"/system/commands:runOpts_ess"
						}, {
							"uri":	"/system/commands:runOpts_bms@enabled"
						}, {
							"uri":	"/system/commands:runOpts_bms"
						}, {
							"uri":	"/system/commands:runOpts_rack@enabled"
						}, {
							"uri":	"/system/commands:runOpts_rack"
						}, {
							"uri":	"/system/commands:runOpts_pcs@enabled"
						}, {
							"uri":	"/system/commands:runOpts_pcs"
						}, {
							"uri":	"/system/commands:runOpts_module@enabled"
						}, {
							"uri":	"/system/commands:runOpts_module"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"Sets /system/commands:runOpts_<asset> to add schedule variables to scheduler",
		"value":	true
	},
	"enableVars_ess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/config/ess:enable"
						}, {
							"uri":	"/config/bms:enable"
						}, {
							"uri":	"/config/bms:enum_opt"
						}, {
							"uri":	"/config/rack_1:enable"
						}, {
							"uri":	"/config/rack_1:enum_opt"
						}, {
							"uri":	"/config/rack_2:enable"
						}, {
							"uri":	"/config/rack_2:enum_opt"
						}, {
							"uri":	"/config/rack_3:enable"
						}, {
							"uri":	"/config/rack_3:enum_opt"
						}, {
							"uri":	"/config/rack_4:enable"
						}, {
							"uri":	"/config/rack_4:enum_opt"
						}, {
							"uri":	"/config/rack_5:enable"
						}, {
							"uri":	"/config/rack_5:enum_opt"
						}, {
							"uri":	"/config/rack_6:enable"
						}, {
							"uri":	"/config/rack_6:enum_opt"
						}, {
							"uri":	"/config/rack_7:enable"
						}, {
							"uri":	"/config/rack_7:enum_opt"
						}, {
							"uri":	"/config/rack_8:enable"
						}, {
							"uri":	"/config/rack_8:enum_opt"
						}, {
							"uri":	"/config/rack_9:enable"
						}, {
							"uri":	"/config/rack_9:enum_opt"
						}, {
							"uri":	"/config/pcs:enable"
						}, {
							"uri":	"/config/pcs:enum_opt"
						}, {
							"uri":	"/config/module_1:enable"
						}, {
							"uri":	"/config/module_1:enum_opt"
						}, {
							"uri":	"/config/module_2:enable"
						}, {
							"uri":	"/config/module_2:enum_opt"
						}, {
							"uri":	"/config/module_3:enable"
						}, {
							"uri":	"/config/module_3:enum_opt"
						}, {
							"uri":	"/config/module_4:enable"
						}, {
							"uri":	"/config/module_4:enum_opt"
						}, {
							"uri":	"/config/module_5:enable"
						}, {
							"uri":	"/config/module_5:enum_opt"
						}, {
							"uri":	"/config/module_6:enable"
						}, {
							"uri":	"/config/module_6:enum_opt"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note1":	"Sets /config/<asset>:enable and /config/<asset>:enum_opt",
		"note2":	"Enable actions, if any, and other operations for variables that have the enable parameter",
		"value":	true
	},
	"link":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunAllLinks"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"Command variable used to link all variables defined in /links",
		"value":	true
	},
	"run":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"Command variable used to start scheduled tasks",
		"value":	true
	},
	"stop":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"StopSched"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"Command variable used to stop scheduled tasks",
		"value":	true
	},
	"vlink":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunAllVLinks"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"Command variable used to link all variables defined in /vlinks",
		"value":	true
	}
}].
RunSched >>  [/system/commands:run] missing uri
StopSched >>  [/system/commands:stop] missing uri
[5.42948s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"triggerSysCmds_ess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/system/commands:enableVars_ess@enabled"
						}, {
							"uri":	"/system/commands:enableVars_ess"
						}, {
							"uri":	"/system/commands:link@enabled"
						}, {
							"uri":	"/system/commands:link"
						}, {
							"uri":	"/system/commands:vlink@enabled"
						}, {
							"uri":	"/system/commands:vlink"
						}, {
							"uri":	"/system/commands:addSchedVars_ess@enabled"
						}, {
							"uri":	"/system/commands:addSchedVars_ess"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Trigger some variables defined in /system/commands",
		"note2":	"Specifically, enableVars_ess, link, vlink, and addSchedVars_ess are triggered",
		"value":	true
	}
}].
[5.43065s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_alllinks]
[5.43101s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_alllinks]
[5.43337s  ] [info    ] [RunAllLinks    ] found 18 keys
[5.43391s  ] [info    ] [RunAllLinks    ]  processing idx [00]  >> xx->aname :[/links/bms]->[bms] parent [ess]
[5.43422s  ] [info    ] [RunALink       ]  found am [bms]
[5.43464s  ] [info    ] [RunAllLinks    ]  processing idx [01]  >> xx->aname :[/links/ess]->[ess] parent [ess]
[5.43494s  ] [info    ] [RunALink       ]  found am [ess]
[5.43525s  ] [info    ] [RunAllLinks    ]  processing idx [02]  >> xx->aname :[/links/module_1]->[module_1] parent [ess]
[5.4356s   ] [info    ] [RunALink       ]  found ai [module_1]
[5.43608s  ] [info    ] [RunAllLinks    ]  processing idx [03]  >> xx->aname :[/links/module_2]->[module_2] parent [ess]
[5.43636s  ] [info    ] [RunALink       ]  found ai [module_2]
[5.4368s   ] [info    ] [RunAllLinks    ]  processing idx [04]  >> xx->aname :[/links/module_3]->[module_3] parent [ess]
[5.43713s  ] [info    ] [RunALink       ]  found ai [module_3]
[5.43741s  ] [info    ] [RunAllLinks    ]  processing idx [05]  >> xx->aname :[/links/module_4]->[module_4] parent [ess]
[5.43772s  ] [info    ] [RunALink       ]  found ai [module_4]
[5.43804s  ] [info    ] [RunAllLinks    ]  processing idx [06]  >> xx->aname :[/links/module_5]->[module_5] parent [ess]
[5.43829s  ] [info    ] [RunALink       ]  found ai [module_5]
[5.43865s  ] [info    ] [RunAllLinks    ]  processing idx [07]  >> xx->aname :[/links/module_6]->[module_6] parent [ess]
[5.43888s  ] [info    ] [RunALink       ]  found ai [module_6]
[5.43916s  ] [info    ] [RunAllLinks    ]  processing idx [08]  >> xx->aname :[/links/pcs]->[pcs] parent [ess]
[5.43943s  ] [info    ] [RunALink       ]  found am [pcs]
[5.44006s  ] [info    ] [RunAllLinks    ]  processing idx [09]  >> xx->aname :[/links/rack_1]->[rack_1] parent [ess]
[5.4403s   ] [info    ] [RunALink       ]  found ai [rack_1]
[5.44059s  ] [info    ] [RunAllLinks    ]  processing idx [10]  >> xx->aname :[/links/rack_2]->[rack_2] parent [ess]
[5.44075s  ] [info    ] [RunALink       ]  found ai [rack_2]
[5.44108s  ] [info    ] [RunAllLinks    ]  processing idx [11]  >> xx->aname :[/links/rack_3]->[rack_3] parent [ess]
[5.4413s   ] [info    ] [RunALink       ]  found ai [rack_3]
[5.44164s  ] [info    ] [RunAllLinks    ]  processing idx [12]  >> xx->aname :[/links/rack_4]->[rack_4] parent [ess]
[5.44189s  ] [info    ] [RunALink       ]  found ai [rack_4]
[5.44216s  ] [info    ] [RunAllLinks    ]  processing idx [13]  >> xx->aname :[/links/rack_5]->[rack_5] parent [ess]
[5.44243s  ] [info    ] [RunALink       ]  found ai [rack_5]
[5.44278s  ] [info    ] [RunAllLinks    ]  processing idx [14]  >> xx->aname :[/links/rack_6]->[rack_6] parent [ess]
[5.44315s  ] [info    ] [RunALink       ]  found ai [rack_6]
[5.44348s  ] [info    ] [RunAllLinks    ]  processing idx [15]  >> xx->aname :[/links/rack_7]->[rack_7] parent [ess]
[5.44387s  ] [info    ] [RunALink       ]  found ai [rack_7]
[5.44428s  ] [info    ] [RunAllLinks    ]  processing idx [16]  >> xx->aname :[/links/rack_8]->[rack_8] parent [ess]
[5.44456s  ] [info    ] [RunALink       ]  found ai [rack_8]
[5.44495s  ] [info    ] [RunAllLinks    ]  processing idx [17]  >> xx->aname :[/links/rack_9]->[rack_9] parent [ess]
[5.44516s  ] [info    ] [RunALink       ]  found ai [rack_9]
[5.44565s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_allvlinks]
[5.446s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_allvlinks]
[5.44794s  ] [info    ] [RunAllVLinks   ] found 18 keys
[5.44829s  ] [info    ] [RunAllVLinks   ]  processing idx [0]  >> [/vlinks/bms] vmkey [bms]
[5.44912s  ] [info    ] [RunAllVLinks   ]  processing idx [1]  >> [/vlinks/ess] vmkey [ess]
[5.44965s  ] [info    ] [RunAllVLinks   ]  processing idx [2]  >> [/vlinks/module_1] vmkey [module_1]
[5.45027s  ] [info    ] [RunAllVLinks   ]  processing idx [3]  >> [/vlinks/module_2] vmkey [module_2]
[5.45082s  ] [info    ] [RunAllVLinks   ]  processing idx [4]  >> [/vlinks/module_3] vmkey [module_3]
[5.45134s  ] [info    ] [RunAllVLinks   ]  processing idx [5]  >> [/vlinks/module_4] vmkey [module_4]
[5.4521s   ] [info    ] [RunAllVLinks   ]  processing idx [6]  >> [/vlinks/module_5] vmkey [module_5]
[5.45282s  ] [info    ] [RunAllVLinks   ]  processing idx [7]  >> [/vlinks/module_6] vmkey [module_6]
[5.45351s  ] [info    ] [RunAllVLinks   ]  processing idx [8]  >> [/vlinks/pcs] vmkey [pcs]
[5.45523s  ] [info    ] [RunAllVLinks   ]  processing idx [9]  >> [/vlinks/rack_1] vmkey [rack_1]
[5.45586s  ] [info    ] [RunAllVLinks   ]  processing idx [10]  >> [/vlinks/rack_2] vmkey [rack_2]
[5.45673s  ] [info    ] [RunAllVLinks   ]  processing idx [11]  >> [/vlinks/rack_3] vmkey [rack_3]
[5.45735s  ] [info    ] [RunAllVLinks   ]  processing idx [12]  >> [/vlinks/rack_4] vmkey [rack_4]
[5.45798s  ] [info    ] [RunAllVLinks   ]  processing idx [13]  >> [/vlinks/rack_5] vmkey [rack_5]
[5.45921s  ] [info    ] [RunAllVLinks   ]  processing idx [14]  >> [/vlinks/rack_6] vmkey [rack_6]
[5.45997s  ] [info    ] [RunAllVLinks   ]  processing idx [15]  >> [/vlinks/rack_7] vmkey [rack_7]
[5.46057s  ] [info    ] [RunAllVLinks   ]  processing idx [16]  >> [/vlinks/rack_8] vmkey [rack_8]
[5.46115s  ] [info    ] [RunAllVLinks   ]  processing idx [17]  >> [/vlinks/rack_9] vmkey [rack_9]
[5.46194s  ] [info    ] [SchedItemOpts  ] @@@@@ [/system/commands:runOpts_ess] found cjopts ready to schedule res1 [0x0] tav [/system/commands:run]
[5.46234s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/ess/ess_1]
[5.46262s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/ess/ess_1]
[5.46314s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_ess]
[5.46342s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_ess]
[5.46377s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:heartbeat_to_ess_reload]
[5.46406s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:heartbeat_to_ess_reload]
[5.46445s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:FaultCnt]
[5.46466s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:FaultCnt]
[5.46494s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:AlarmCnt]
[5.46524s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:AlarmCnt]
[5.46552s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/ess:FaultDestination]
[5.46584s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/ess:FaultDestination]
[5.46613s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/ess:AlarmDestination]
[5.46636s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/ess:AlarmDestination]
[5.46664s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/alarms/ess:MonitorVarAlarm]
[5.46688s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/alarms/ess:MonitorVarAlarm]
[5.46719s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/faults/ess:MonitorVarFault]
[5.46749s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/faults/ess:MonitorVarFault]
[5.46787s  ] [info    ] [CheckMonitorVar] Fault Destination for ess with assetVar /site/ess:heartbeat_to_ess is /assets/ess/ess_1:faults
[5.4682s   ] [info    ] [CheckMonitorVar] Alarm Destination for ess with assetVar /site/ess:heartbeat_to_ess is /assets/ess/ess_1:alarms
[5.46841s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.46866s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.46887s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.46915s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.46941s  ] [info    ] [CheckMonitorVar] Not set up for [heartbeat_to_ess] reloadStr [heartbeat_to_ess_reload]
[5.46987s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:CalculateVar_IsAlarming]
[5.47017s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:CalculateVar_IsAlarming]
[5.47052s  ] [info    ] [setupCalculateV] Setting up params for [/status/ess:IsAlarming]
[5.47087s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:IsAlarming]
[5.47123s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:IsAlarming]
[5.47176s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:CalculateVar_IsFaulted]
[5.47214s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:CalculateVar_IsFaulted]
[5.47244s  ] [info    ] [setupCalculateV] Setting up params for [/status/ess:IsFaulted]
[5.47275s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:IsFaulted]
[5.47309s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:IsFaulted]
[5.47366s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_ess]
[5.47399s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_ess]
[5.47446s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:CalculateVar_HeartbeatWrite]
[5.47543s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:CalculateVar_HeartbeatWrite]
[5.4757s   ] [info    ] [setupCalculateV] Setting up params for [/status/ess:HeartbeatWrite]
[5.47597s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:HeartbeatWrite]
[5.47635s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:HeartbeatWrite]
[5.47701s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [updateHeartbeatWrite_ess]
[5.47727s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [updateHeartbeatWrite_ess]
[5.47776s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/site/ess]
[5.47815s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/site/ess]
[5.47874s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubESS]
[5.47896s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubESS]
[5.47927s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_Every1000mS]
[5.47947s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_Every1000mS]
[5.47974s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_HandleCpuStats]
[5.48s     ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_HandleCpuStats]
[5.48093s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [every1000ms_ess]
[5.48124s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [every1000ms_ess]
[5.48187s  ] [info    ] [SiteBMSContacto] SiteBMSContactorControl
[5.48215s  ] [info    ] [SiteBMSContacto] Right before reload == 1
[5.48248s  ] [info    ] [PrintAssetVar  ] 
{
  "/site/ess:bms_dc_contactor_control": {
    "value": 0,
    "note2": "2->close contactors | 3->open contactors",
    "every": 0.5,
    "for": 0,
    "offset": 0,
    "uri": "/sched/ess:SiteBMSContactorControl",
    "size": 1,
    "after": 0,
    "debug": 0,
    "name": "BMS Contactor Control Command",
    "aname": "ess",
    "type": "control",
    "note1": "Initiates BMS close and open contactors",
    "enable": "/config/pcs:enable",
    "ifChanged": false
  }
}


[5.48273s  ] [info    ] [SiteBMSContacto] reload == 1
[5.48305s  ] [info    ] [PullOffSchedule] PullOffScheduler
[5.48337s  ] [info    ] [PrintAssetVar  ] 
{
  "/site/ess:bms_dc_contactor_control": {
    "value": 0,
    "note2": "2->close contactors | 3->open contactors",
    "every": 0.5,
    "for": 0,
    "offset": 0,
    "uri": "/sched/ess:SiteBMSContactorControl",
    "size": 1,
    "after": 0,
    "debug": 0,
    "name": "BMS Contactor Control Command",
    "aname": "ess",
    "type": "control",
    "note1": "Initiates BMS close and open contactors",
    "enable": "/config/pcs:enable",
    "ifChanged": false
  }
}


[5.48392s  ] [info    ] [SiteBMSContacto] SiteBMSContactorControl
[5.4843s   ] [info    ] [SiteBMSContacto] Right before reload == 1
[5.48465s  ] [info    ] [PrintAssetVar  ] 
{
  "/site/ess:bms_dc_contactor_control": {
    "value": 0,
    "note2": "2->close contactors | 3->open contactors",
    "every": 0.5,
    "for": 0,
    "offset": 0,
    "uri": "/sched/ess:SiteBMSContactorControl",
    "size": 1,
    "after": 0,
    "debug": 0,
    "name": "BMS Contactor Control Command",
    "aname": "ess",
    "type": "control",
    "note1": "Initiates BMS close and open contactors",
    "enable": "/config/pcs:enable",
    "ifChanged": false
  }
}


[5.48485s  ] [info    ] [SiteBMSContacto] reload == 1
[5.48511s  ] [info    ] [PullOffSchedule] PullOffScheduler
[5.48557s  ] [info    ] [PrintAssetVar  ] 
{
  "/site/ess:bms_dc_contactor_control": {
    "value": 0,
    "note2": "2->close contactors | 3->open contactors",
    "every": 0.5,
    "for": 0,
    "offset": 0,
    "uri": "/sched/ess:SiteBMSContactorControl",
    "size": 1,
    "after": 0,
    "debug": 0,
    "name": "BMS Contactor Control Command",
    "aname": "ess",
    "type": "control",
    "note1": "Initiates BMS close and open contactors",
    "enable": "/config/pcs:enable",
    "ifChanged": false
  }
}


[5.48619s  ] [info    ] [SchedItemOpts  ] @@@@@ [/system/commands:runOpts_bms] found cjopts ready to schedule res1 [0x0] tav [/system/commands:run]
[5.48675s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/summary]
[5.48702s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/summary]
[5.48751s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssetsSummary_bms]
[5.48824s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssetsSummary_bms]
[5.48962s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_AnyFireFaultActive]
[5.49003s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_AnyFireFaultActive]
[5.49246s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:AnyFireFaultActive]
[5.50202s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:AnyFireFaultActive]. This indicates we are including all of asset instance's assetVars with name AnyFireFaultActive for aggregation
[5.519s    ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [rack_1]
[5.52046s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [rack_1]
[5.52176s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_1:AnyFireFaultActive]
[5.53581s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_1:AnyFireFaultActive]
[5.55347s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/rack_1:AnyFireFaultActive] ptr am [0x0] ai [0x7f32a82ae410] 
[5.55499s  ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [rack_2]
[5.55556s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [rack_2]
[5.55591s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_2:AnyFireFaultActive]
[5.55621s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_2:AnyFireFaultActive]
[5.5565s   ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/rack_2:AnyFireFaultActive] ptr am [0x0] ai [0x7f32a82bf2c0] 
[5.55693s  ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [rack_3]
[5.55743s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [rack_3]
[5.55779s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_3:AnyFireFaultActive]
[5.55818s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_3:AnyFireFaultActive]
[5.55855s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/rack_3:AnyFireFaultActive] ptr am [0x0] ai [0x7f32a82bf550] 
[5.55882s  ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [rack_4]
[5.55919s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [rack_4]
[5.55963s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_4:AnyFireFaultActive]
[5.5599s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_4:AnyFireFaultActive]
[5.56025s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/rack_4:AnyFireFaultActive] ptr am [0x0] ai [0x7f32a82bf7a0] 
[5.56048s  ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [rack_5]
[5.56068s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [rack_5]
[5.56095s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_5:AnyFireFaultActive]
[5.56135s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_5:AnyFireFaultActive]
[5.56225s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/rack_5:AnyFireFaultActive] ptr am [0x0] ai [0x7f32a8438710] 
[5.56254s  ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [rack_6]
[5.56287s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [rack_6]
[5.56503s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_6:AnyFireFaultActive]
[5.56549s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_6:AnyFireFaultActive]
[5.56593s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/rack_6:AnyFireFaultActive] ptr am [0x0] ai [0x7f32a8438960] 
[5.56641s  ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [rack_7]
[5.56675s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [rack_7]
[5.56713s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_7:AnyFireFaultActive]
[5.5683s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_7:AnyFireFaultActive]
[5.56862s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/rack_7:AnyFireFaultActive] ptr am [0x0] ai [0x7f32a8438bb0] 
[5.56893s  ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [rack_8]
[5.56958s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [rack_8]
[5.57006s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_8:AnyFireFaultActive]
[5.57055s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_8:AnyFireFaultActive]
[5.5709s   ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/rack_8:AnyFireFaultActive] ptr am [0x0] ai [0x7f32a84ad510] 
[5.57227s  ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [rack_9]
[5.57269s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [rack_9]
[5.57314s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_9:AnyFireFaultActive]
[5.57362s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_9:AnyFireFaultActive]
[5.57402s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/rack_9:AnyFireFaultActive] ptr am [0x0] ai [0x7f32a84ad820] 
[5.57539s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:AnyFireFaultActive]
[5.57569s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:AnyFireFaultActive]
[5.57674s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_CellTempDelta_Calculated]
[5.57777s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_CellTempDelta_Calculated]
[5.57831s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:CellTempDelta_Calculated]
[5.57885s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:CellTempDelta_Calculated]
[5.57936s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:CellTempDelta_Calculated]
[5.58023s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_CellVoltageDelta_Calculated]
[5.58073s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_CellVoltageDelta_Calculated]
[5.58115s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:CellVoltageDelta_Calculated]
[5.58159s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:CellVoltageDelta_Calculated]
[5.58197s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:CellVoltageDelta_Calculated]
[5.5825s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_CurrentBeforeStopIsOK]
[5.58295s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_CurrentBeforeStopIsOK]
[5.5834s   ] [info    ] [setupCalculateV] Setting up params for [/status/bms:CurrentBeforeStopIsOK]
[5.58388s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:CurrentBeforeStopIsOK]
[5.58446s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:CurrentBeforeStopIsOK]
[5.585s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_DCCharging]
[5.58539s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_DCCharging]
[5.58567s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:DCCharging]
[5.58612s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:DCCharging]
[5.58644s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:DCCharging]
[5.58698s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_DCDischarging]
[5.58727s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_DCDischarging]
[5.58757s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:DCDischarging]
[5.58786s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:DCDischarging]
[5.58813s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:DCDischarging]
[5.58872s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_IsAlarming]
[5.58905s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_IsAlarming]
[5.58935s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:IsAlarming]
[5.58961s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:IsAlarming]
[5.58982s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:IsAlarming]
[5.5902s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_IsFaulted]
[5.59045s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_IsFaulted]
[5.59073s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:IsFaulted]
[5.59101s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:IsFaulted]
[5.59128s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:IsFaulted]
[5.59193s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_OverCurrentAlarm]
[5.59226s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_OverCurrentAlarm]
[5.5927s   ] [info    ] [setupCalculateV] Setting up params for [/status/bms:OverCurrentAlarm]
[5.59304s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:OverCurrentAlarm]
[5.59325s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:OverCurrentAlarm]
[5.59363s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_OverCurrentFault]
[5.59394s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_OverCurrentFault]
[5.59424s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:OverCurrentFault]
[5.5945s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:OverCurrentFault]
[5.59484s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:OverCurrentFault]
[5.59545s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_TotalAlarmCnt]
[5.59574s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_TotalAlarmCnt]
[5.596s    ] [info    ] [setupCalculateV] Setting up params for [/status/bms:TotalAlarmCnt]
[5.59624s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:TotalAlarmCnt]. This indicates we are including all of asset instance's assetVars with name TotalAlarmCnt for aggregation
[5.59653s  ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [rack_1]
[5.59681s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [rack_1]
[5.59707s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_1:TotalAlarmCnt]
[5.59746s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_1:TotalAlarmCnt]
[5.5983s   ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/rack_1:TotalAlarmCnt] ptr am [0x0] ai [0x7f32a82ae410] 
[5.59858s  ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [rack_2]
[5.5989s   ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [rack_2]
[5.59919s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_2:TotalAlarmCnt]
[5.59949s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_2:TotalAlarmCnt]
[5.59973s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/rack_2:TotalAlarmCnt] ptr am [0x0] ai [0x7f32a82bf2c0] 
[5.60002s  ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [rack_3]
[5.60031s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [rack_3]
[5.60058s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_3:TotalAlarmCnt]
[5.60082s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_3:TotalAlarmCnt]
[5.60113s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/rack_3:TotalAlarmCnt] ptr am [0x0] ai [0x7f32a82bf550] 
[5.60134s  ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [rack_4]
[5.60163s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [rack_4]
[5.60191s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_4:TotalAlarmCnt]
[5.60212s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_4:TotalAlarmCnt]
[5.60244s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/rack_4:TotalAlarmCnt] ptr am [0x0] ai [0x7f32a82bf7a0] 
[5.60267s  ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [rack_5]
[5.60294s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [rack_5]
[5.60322s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_5:TotalAlarmCnt]
[5.60351s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_5:TotalAlarmCnt]
[5.6039s   ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/rack_5:TotalAlarmCnt] ptr am [0x0] ai [0x7f32a8438710] 
[5.60422s  ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [rack_6]
[5.60446s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [rack_6]
[5.60469s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_6:TotalAlarmCnt]
[5.60496s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_6:TotalAlarmCnt]
[5.60527s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/rack_6:TotalAlarmCnt] ptr am [0x0] ai [0x7f32a8438960] 
[5.60564s  ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [rack_7]
[5.60592s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [rack_7]
[5.60617s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_7:TotalAlarmCnt]
[5.60656s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_7:TotalAlarmCnt]
[5.60681s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/rack_7:TotalAlarmCnt] ptr am [0x0] ai [0x7f32a8438bb0] 
[5.60708s  ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [rack_8]
[5.60733s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [rack_8]
[5.60759s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_8:TotalAlarmCnt]
[5.60784s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_8:TotalAlarmCnt]
[5.60814s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/rack_8:TotalAlarmCnt] ptr am [0x0] ai [0x7f32a84ad510] 
[5.60841s  ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [rack_9]
[5.60873s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [rack_9]
[5.60914s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_9:TotalAlarmCnt]
[5.6094s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_9:TotalAlarmCnt]
[5.60972s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/rack_9:TotalAlarmCnt] ptr am [0x0] ai [0x7f32a84ad820] 
[5.61015s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:TotalAlarmCnt]
[5.61047s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:TotalAlarmCnt]
[5.61084s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_TotalFaultCnt]
[5.6112s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_TotalFaultCnt]
[5.61166s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:TotalFaultCnt]
[5.61198s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:TotalFaultCnt]. This indicates we are including all of asset instance's assetVars with name TotalFaultCnt for aggregation
[5.61238s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [rack_1]
[5.61268s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [rack_1]
[5.61371s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_1:TotalFaultCnt]
[5.61441s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_1:TotalFaultCnt]
[5.61493s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/rack_1:TotalFaultCnt] ptr am [0x0] ai [0x7f32a82ae410] 
[5.61536s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [rack_2]
[5.61574s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [rack_2]
[5.61616s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_2:TotalFaultCnt]
[5.61651s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_2:TotalFaultCnt]
[5.61679s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/rack_2:TotalFaultCnt] ptr am [0x0] ai [0x7f32a82bf2c0] 
[5.61704s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [rack_3]
[5.61737s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [rack_3]
[5.61771s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_3:TotalFaultCnt]
[5.61794s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_3:TotalFaultCnt]
[5.61823s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/rack_3:TotalFaultCnt] ptr am [0x0] ai [0x7f32a82bf550] 
[5.61849s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [rack_4]
[5.61873s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [rack_4]
[5.61899s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_4:TotalFaultCnt]
[5.61919s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_4:TotalFaultCnt]
[5.61942s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/rack_4:TotalFaultCnt] ptr am [0x0] ai [0x7f32a82bf7a0] 
[5.61965s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [rack_5]
[5.61985s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [rack_5]
[5.62007s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_5:TotalFaultCnt]
[5.62032s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_5:TotalFaultCnt]
[5.6206s   ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/rack_5:TotalFaultCnt] ptr am [0x0] ai [0x7f32a8438710] 
[5.62084s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [rack_6]
[5.62113s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [rack_6]
[5.62146s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_6:TotalFaultCnt]
[5.62168s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_6:TotalFaultCnt]
[5.62193s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/rack_6:TotalFaultCnt] ptr am [0x0] ai [0x7f32a8438960] 
[5.62223s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [rack_7]
[5.62249s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [rack_7]
[5.62279s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_7:TotalFaultCnt]
[5.62309s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_7:TotalFaultCnt]
[5.62348s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/rack_7:TotalFaultCnt] ptr am [0x0] ai [0x7f32a8438bb0] 
[5.62377s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [rack_8]
[5.62399s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [rack_8]
[5.62433s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_8:TotalFaultCnt]
[5.62469s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_8:TotalFaultCnt]
[5.62493s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/rack_8:TotalFaultCnt] ptr am [0x0] ai [0x7f32a84ad510] 
[5.62524s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [rack_9]
[5.62556s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [rack_9]
[5.6258s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_9:TotalFaultCnt]
[5.62608s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_9:TotalFaultCnt]
[5.62635s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/rack_9:TotalFaultCnt] ptr am [0x0] ai [0x7f32a84ad820] 
[5.62663s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:TotalFaultCnt]
[5.62688s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:TotalFaultCnt]
[5.62732s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_UnderCurrentAlarm]
[5.62763s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_UnderCurrentAlarm]
[5.62786s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:UnderCurrentAlarm]
[5.62819s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:UnderCurrentAlarm]
[5.62846s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:UnderCurrentAlarm]
[5.62886s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_UnderCurrentFault]
[5.62911s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_UnderCurrentFault]
[5.62948s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:UnderCurrentFault]
[5.62979s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:UnderCurrentFault]
[5.63s     ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:UnderCurrentFault]
[5.63157s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_bms]
[5.63184s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_bms]
[5.63224s  ] [info    ] [setParamfromAf ]  created var for uri [/components/bms] as [/components/bms:status]
[5.63263s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_bms]
[5.63293s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_bms]
[5.63336s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_HeartbeatWrite]
[5.63367s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_HeartbeatWrite]
[5.63398s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:HeartbeatWrite]
[5.63435s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:HeartbeatWrite]
[5.63457s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:HeartbeatWrite]
[5.63572s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [updateHeartbeatWrite_bms]
[5.63599s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [updateHeartbeatWrite_bms]
[5.6371s   ] [info    ] [SchedItemOpts  ] @@@@@ [/system/commands:runOpts_rack] found cjopts ready to schedule res1 [0x0] tav [/system/commands:run]
[5.63753s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_1]
[5.6378s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_1]
[5.6383s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_rack_1]
[5.63851s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_rack_1]
[5.63904s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_1:AnyFireFaultActive]  aname [rack_1] av->am 0x0
[5.63952s  ] [warning ] [runMonitorList2] avm [/status/rack_1:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.63985s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_1:CalculateVar_AnyFireFaultActive]
[5.64009s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_1:CalculateVar_AnyFireFaultActive]
[5.64038s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_1:AnyFireFaultActive]
[5.64073s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_1:CellTempDelta_Calculated]  aname [rack_1] av->am 0x0
[5.64101s  ] [warning ] [runMonitorList2] avm [/status/rack_1:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.64134s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_1:CalculateVar_CellTempDelta_Calculated]
[5.6416s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_1:CalculateVar_CellTempDelta_Calculated]
[5.64195s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_1:CellTempDelta_Calculated]
[5.64229s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_1:CellTempDelta_Calculated]
[5.64256s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_1:CellTempDelta_Calculated]
[5.64287s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_1:CellVoltageDelta_Calculated]  aname [rack_1] av->am 0x0
[5.64314s  ] [warning ] [runMonitorList2] avm [/status/rack_1:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.64336s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_1:CalculateVar_CellVoltageDelta_Calculated]
[5.64374s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_1:CalculateVar_CellVoltageDelta_Calculated]
[5.64402s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_1:CellVoltageDelta_Calculated]
[5.64431s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_1:CellVoltageDelta_Calculated]
[5.64457s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_1:CellVoltageDelta_Calculated]
[5.6449s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_1:TotalAlarmCnt]  aname [rack_1] av->am 0x0
[5.64527s  ] [warning ] [runMonitorList2] avm [/status/rack_1:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.64551s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_1:CalculateVar_TotalAlarmCnt]
[5.64592s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_1:CalculateVar_TotalAlarmCnt]
[5.64615s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_1:TotalAlarmCnt]
[5.64645s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_1:TotalFaultCnt]  aname [rack_1] av->am 0x0
[5.64669s  ] [warning ] [runMonitorList2] avm [/status/rack_1:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.64699s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_1:CalculateVar_TotalFaultCnt]
[5.64729s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_1:CalculateVar_TotalFaultCnt]
[5.64757s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_1:TotalFaultCnt]
[5.64826s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_rack_1]
[5.64872s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_rack_1]
[5.64949s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_rack_1]
[5.65007s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_rack_1]
[5.65083s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_2]
[5.6516s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_2]
[5.65238s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_rack_2]
[5.65283s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_rack_2]
[5.65348s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_2:AnyFireFaultActive]  aname [rack_2] av->am 0x0
[5.65446s  ] [warning ] [runMonitorList2] avm [/status/rack_2:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.6554s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_2:CalculateVar_AnyFireFaultActive]
[5.65608s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_2:CalculateVar_AnyFireFaultActive]
[5.65639s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_2:AnyFireFaultActive]
[5.65686s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_2:CellTempDelta_Calculated]  aname [rack_2] av->am 0x0
[5.65735s  ] [warning ] [runMonitorList2] avm [/status/rack_2:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.65791s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_2:CalculateVar_CellTempDelta_Calculated]
[5.65856s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_2:CalculateVar_CellTempDelta_Calculated]
[5.65944s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_2:CellTempDelta_Calculated]
[5.65992s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_2:CellTempDelta_Calculated]
[5.66035s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_2:CellTempDelta_Calculated]
[5.66118s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_2:CellVoltageDelta_Calculated]  aname [rack_2] av->am 0x0
[5.6615s   ] [warning ] [runMonitorList2] avm [/status/rack_2:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.66185s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_2:CalculateVar_CellVoltageDelta_Calculated]
[5.66245s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_2:CalculateVar_CellVoltageDelta_Calculated]
[5.66295s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_2:CellVoltageDelta_Calculated]
[5.66338s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_2:CellVoltageDelta_Calculated]
[5.66371s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_2:CellVoltageDelta_Calculated]
[5.6642s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_2:TotalAlarmCnt]  aname [rack_2] av->am 0x0
[5.66456s  ] [warning ] [runMonitorList2] avm [/status/rack_2:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.66493s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_2:CalculateVar_TotalAlarmCnt]
[5.66527s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_2:CalculateVar_TotalAlarmCnt]
[5.66652s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_2:TotalAlarmCnt]
[5.66709s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_2:TotalFaultCnt]  aname [rack_2] av->am 0x0
[5.66742s  ] [warning ] [runMonitorList2] avm [/status/rack_2:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.66798s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_2:CalculateVar_TotalFaultCnt]
[5.66846s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_2:CalculateVar_TotalFaultCnt]
[5.66899s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_2:TotalFaultCnt]
[5.67114s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_rack_2]
[5.6717s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_rack_2]
[5.6725s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_rack_2]
[5.67296s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_rack_2]
[5.67348s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_3]
[5.67415s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_3]
[5.67514s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_rack_3]
[5.67547s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_rack_3]
[5.67635s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_3:AnyFireFaultActive]  aname [rack_3] av->am 0x0
[5.6767s   ] [warning ] [runMonitorList2] avm [/status/rack_3:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.67734s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_3:CalculateVar_AnyFireFaultActive]
[5.67759s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_3:CalculateVar_AnyFireFaultActive]
[5.67805s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_3:AnyFireFaultActive]
[5.67934s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_3:CellTempDelta_Calculated]  aname [rack_3] av->am 0x0
[5.68102s  ] [warning ] [runMonitorList2] avm [/status/rack_3:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.68185s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_3:CalculateVar_CellTempDelta_Calculated]
[5.68243s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_3:CalculateVar_CellTempDelta_Calculated]
[5.68295s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_3:CellTempDelta_Calculated]
[5.68337s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_3:CellTempDelta_Calculated]
[5.68365s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_3:CellTempDelta_Calculated]
[5.68419s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_3:CellVoltageDelta_Calculated]  aname [rack_3] av->am 0x0
[5.6846s   ] [warning ] [runMonitorList2] avm [/status/rack_3:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.69121s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_3:CalculateVar_CellVoltageDelta_Calculated]
[5.69251s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_3:CalculateVar_CellVoltageDelta_Calculated]
[5.69296s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_3:CellVoltageDelta_Calculated]
[5.69435s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_3:CellVoltageDelta_Calculated]
[5.69521s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_3:CellVoltageDelta_Calculated]
[5.69571s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_3:TotalAlarmCnt]  aname [rack_3] av->am 0x0
[5.69605s  ] [warning ] [runMonitorList2] avm [/status/rack_3:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.69635s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_3:CalculateVar_TotalAlarmCnt]
[5.69658s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_3:CalculateVar_TotalAlarmCnt]
[5.69687s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_3:TotalAlarmCnt]
[5.69738s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_3:TotalFaultCnt]  aname [rack_3] av->am 0x0
[5.69768s  ] [warning ] [runMonitorList2] avm [/status/rack_3:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.69799s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_3:CalculateVar_TotalFaultCnt]
[5.69866s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_3:CalculateVar_TotalFaultCnt]
[5.69897s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_3:TotalFaultCnt]
[5.69963s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_rack_3]
[5.69994s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_rack_3]
[5.7004s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_rack_3]
[5.70086s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_rack_3]
[5.70141s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_4]
[5.70168s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_4]
[5.70249s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_rack_4]
[5.70298s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_rack_4]
[5.70408s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_4:AnyFireFaultActive]  aname [rack_4] av->am 0x0
[5.70451s  ] [warning ] [runMonitorList2] avm [/status/rack_4:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.70514s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_4:CalculateVar_AnyFireFaultActive]
[5.70577s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_4:CalculateVar_AnyFireFaultActive]
[5.70616s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_4:AnyFireFaultActive]
[5.70674s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_4:CellTempDelta_Calculated]  aname [rack_4] av->am 0x0
[5.70714s  ] [warning ] [runMonitorList2] avm [/status/rack_4:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.70779s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_4:CalculateVar_CellTempDelta_Calculated]
[5.7083s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_4:CalculateVar_CellTempDelta_Calculated]
[5.71195s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_4:CellTempDelta_Calculated]
[5.71431s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_4:CellTempDelta_Calculated]
[5.71603s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_4:CellTempDelta_Calculated]
[5.71794s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_4:CellVoltageDelta_Calculated]  aname [rack_4] av->am 0x0
[5.71887s  ] [warning ] [runMonitorList2] avm [/status/rack_4:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.72162s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_4:CalculateVar_CellVoltageDelta_Calculated]
[5.72227s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_4:CalculateVar_CellVoltageDelta_Calculated]
[5.72291s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_4:CellVoltageDelta_Calculated]
[5.72352s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_4:CellVoltageDelta_Calculated]
[5.7244s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_4:CellVoltageDelta_Calculated]
[5.72516s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_4:TotalAlarmCnt]  aname [rack_4] av->am 0x0
[5.72558s  ] [warning ] [runMonitorList2] avm [/status/rack_4:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.72596s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_4:CalculateVar_TotalAlarmCnt]
[5.72626s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_4:CalculateVar_TotalAlarmCnt]
[5.72674s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_4:TotalAlarmCnt]
[5.7271s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_4:TotalFaultCnt]  aname [rack_4] av->am 0x0
[5.72743s  ] [warning ] [runMonitorList2] avm [/status/rack_4:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.72773s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_4:CalculateVar_TotalFaultCnt]
[5.72812s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_4:CalculateVar_TotalFaultCnt]
[5.72869s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_4:TotalFaultCnt]
[5.72942s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_rack_4]
[5.72992s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_rack_4]
[5.73034s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_rack_4]
[5.73063s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_rack_4]
[5.73105s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_5]
[5.73155s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_5]
[5.73212s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_rack_5]
[5.73245s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_rack_5]
[5.73301s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_5:AnyFireFaultActive]  aname [rack_5] av->am 0x0
[5.73335s  ] [warning ] [runMonitorList2] avm [/status/rack_5:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.73403s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_5:CalculateVar_AnyFireFaultActive]
[5.73446s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_5:CalculateVar_AnyFireFaultActive]
[5.73484s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_5:AnyFireFaultActive]
[5.73532s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_5:CellTempDelta_Calculated]  aname [rack_5] av->am 0x0
[5.73565s  ] [warning ] [runMonitorList2] avm [/status/rack_5:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.73613s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_5:CalculateVar_CellTempDelta_Calculated]
[5.73654s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_5:CalculateVar_CellTempDelta_Calculated]
[5.73694s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_5:CellTempDelta_Calculated]
[5.7373s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_5:CellTempDelta_Calculated]
[5.7377s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_5:CellTempDelta_Calculated]
[5.73814s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_5:CellVoltageDelta_Calculated]  aname [rack_5] av->am 0x0
[5.73859s  ] [warning ] [runMonitorList2] avm [/status/rack_5:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.73897s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_5:CalculateVar_CellVoltageDelta_Calculated]
[5.73933s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_5:CalculateVar_CellVoltageDelta_Calculated]
[5.7396s   ] [info    ] [setupCalculateV] Setting up params for [/status/rack_5:CellVoltageDelta_Calculated]
[5.74001s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_5:CellVoltageDelta_Calculated]
[5.74028s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_5:CellVoltageDelta_Calculated]
[5.74076s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_5:TotalAlarmCnt]  aname [rack_5] av->am 0x0
[5.74105s  ] [warning ] [runMonitorList2] avm [/status/rack_5:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.74131s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_5:CalculateVar_TotalAlarmCnt]
[5.74162s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_5:CalculateVar_TotalAlarmCnt]
[5.74193s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_5:TotalAlarmCnt]
[5.74239s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_5:TotalFaultCnt]  aname [rack_5] av->am 0x0
[5.74267s  ] [warning ] [runMonitorList2] avm [/status/rack_5:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.74302s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_5:CalculateVar_TotalFaultCnt]
[5.74323s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_5:CalculateVar_TotalFaultCnt]
[5.74349s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_5:TotalFaultCnt]
[5.74434s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_rack_5]
[5.74484s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_rack_5]
[5.74548s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_rack_5]
[5.74762s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_rack_5]
[5.74858s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_6]
[5.74898s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_6]
[5.7503s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_rack_6]
[5.75071s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_rack_6]
[5.75131s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_6:AnyFireFaultActive]  aname [rack_6] av->am 0x0
[5.75163s  ] [warning ] [runMonitorList2] avm [/status/rack_6:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.75213s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_6:CalculateVar_AnyFireFaultActive]
[5.75245s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_6:CalculateVar_AnyFireFaultActive]
[5.7529s   ] [info    ] [setupCalculateV] Setting up params for [/status/rack_6:AnyFireFaultActive]
[5.75339s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_6:CellTempDelta_Calculated]  aname [rack_6] av->am 0x0
[5.75374s  ] [warning ] [runMonitorList2] avm [/status/rack_6:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.75417s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_6:CalculateVar_CellTempDelta_Calculated]
[5.75462s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_6:CalculateVar_CellTempDelta_Calculated]
[5.75512s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_6:CellTempDelta_Calculated]
[5.75569s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_6:CellTempDelta_Calculated]
[5.75613s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_6:CellTempDelta_Calculated]
[5.75669s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_6:CellVoltageDelta_Calculated]  aname [rack_6] av->am 0x0
[5.75714s  ] [warning ] [runMonitorList2] avm [/status/rack_6:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.75832s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_6:CalculateVar_CellVoltageDelta_Calculated]
[5.75893s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_6:CalculateVar_CellVoltageDelta_Calculated]
[5.75937s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_6:CellVoltageDelta_Calculated]
[5.76084s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_6:CellVoltageDelta_Calculated]
[5.76181s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_6:CellVoltageDelta_Calculated]
[5.76263s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_6:TotalAlarmCnt]  aname [rack_6] av->am 0x0
[5.76311s  ] [warning ] [runMonitorList2] avm [/status/rack_6:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.7636s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_6:CalculateVar_TotalAlarmCnt]
[5.76393s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_6:CalculateVar_TotalAlarmCnt]
[5.76437s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_6:TotalAlarmCnt]
[5.76488s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_6:TotalFaultCnt]  aname [rack_6] av->am 0x0
[5.76529s  ] [warning ] [runMonitorList2] avm [/status/rack_6:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.76562s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_6:CalculateVar_TotalFaultCnt]
[5.76598s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_6:CalculateVar_TotalFaultCnt]
[5.76755s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_6:TotalFaultCnt]
[5.77137s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_rack_6]
[5.77175s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_rack_6]
[5.77257s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_rack_6]
[5.77291s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_rack_6]
[5.7734s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_7]
[5.77373s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_7]
[5.77444s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_rack_7]
[5.77529s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_rack_7]
[5.77643s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_7:AnyFireFaultActive]  aname [rack_7] av->am 0x0
[5.77691s  ] [warning ] [runMonitorList2] avm [/status/rack_7:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.77738s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_7:CalculateVar_AnyFireFaultActive]
[5.77791s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_7:CalculateVar_AnyFireFaultActive]
[5.77824s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_7:AnyFireFaultActive]
[5.7787s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_7:CellTempDelta_Calculated]  aname [rack_7] av->am 0x0
[5.77891s  ] [warning ] [runMonitorList2] avm [/status/rack_7:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.77917s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_7:CalculateVar_CellTempDelta_Calculated]
[5.77958s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_7:CalculateVar_CellTempDelta_Calculated]
[5.77986s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_7:CellTempDelta_Calculated]
[5.78052s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_7:CellTempDelta_Calculated]
[5.78106s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_7:CellTempDelta_Calculated]
[5.78181s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_7:CellVoltageDelta_Calculated]  aname [rack_7] av->am 0x0
[5.78232s  ] [warning ] [runMonitorList2] avm [/status/rack_7:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.78276s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_7:CalculateVar_CellVoltageDelta_Calculated]
[5.78313s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_7:CalculateVar_CellVoltageDelta_Calculated]
[5.78387s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_7:CellVoltageDelta_Calculated]
[5.78412s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_7:CellVoltageDelta_Calculated]
[5.78469s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_7:CellVoltageDelta_Calculated]
[5.7851s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_7:TotalAlarmCnt]  aname [rack_7] av->am 0x0
[5.7853s   ] [warning ] [runMonitorList2] avm [/status/rack_7:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.78567s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_7:CalculateVar_TotalAlarmCnt]
[5.78628s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_7:CalculateVar_TotalAlarmCnt]
[5.78682s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_7:TotalAlarmCnt]
[5.78759s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_7:TotalFaultCnt]  aname [rack_7] av->am 0x0
[5.78794s  ] [warning ] [runMonitorList2] avm [/status/rack_7:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.78867s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_7:CalculateVar_TotalFaultCnt]
[5.78927s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_7:CalculateVar_TotalFaultCnt]
[5.79005s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_7:TotalFaultCnt]
[5.79169s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_rack_7]
[5.79216s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_rack_7]
[5.79292s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_rack_7]
[5.79344s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_rack_7]
[5.79457s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_8]
[5.79512s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_8]
[5.79585s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_rack_8]
[5.79615s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_rack_8]
[5.79774s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_8:AnyFireFaultActive]  aname [rack_8] av->am 0x0
[5.79815s  ] [warning ] [runMonitorList2] avm [/status/rack_8:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.79891s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_8:CalculateVar_AnyFireFaultActive]
[5.80016s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_8:CalculateVar_AnyFireFaultActive]
[5.80059s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_8:AnyFireFaultActive]
[5.80121s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_8:CellTempDelta_Calculated]  aname [rack_8] av->am 0x0
[5.8016s   ] [warning ] [runMonitorList2] avm [/status/rack_8:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.80178s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_8:CalculateVar_CellTempDelta_Calculated]
[5.80207s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_8:CalculateVar_CellTempDelta_Calculated]
[5.80241s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_8:CellTempDelta_Calculated]
[5.80277s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_8:CellTempDelta_Calculated]
[5.80311s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_8:CellTempDelta_Calculated]
[5.80346s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_8:CellVoltageDelta_Calculated]  aname [rack_8] av->am 0x0
[5.80451s  ] [warning ] [runMonitorList2] avm [/status/rack_8:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.805s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_8:CalculateVar_CellVoltageDelta_Calculated]
[5.80541s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_8:CalculateVar_CellVoltageDelta_Calculated]
[5.8057s   ] [info    ] [setupCalculateV] Setting up params for [/status/rack_8:CellVoltageDelta_Calculated]
[5.80615s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_8:CellVoltageDelta_Calculated]
[5.80648s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_8:CellVoltageDelta_Calculated]
[5.80707s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_8:TotalAlarmCnt]  aname [rack_8] av->am 0x0
[5.80762s  ] [warning ] [runMonitorList2] avm [/status/rack_8:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.80819s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_8:CalculateVar_TotalAlarmCnt]
[5.80871s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_8:CalculateVar_TotalAlarmCnt]
[5.80917s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_8:TotalAlarmCnt]
[5.81013s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_8:TotalFaultCnt]  aname [rack_8] av->am 0x0
[5.81089s  ] [warning ] [runMonitorList2] avm [/status/rack_8:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.81125s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_8:CalculateVar_TotalFaultCnt]
[5.81175s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_8:CalculateVar_TotalFaultCnt]
[5.81236s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_8:TotalFaultCnt]
[5.81319s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_rack_8]
[5.81364s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_rack_8]
[5.8142s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_rack_8]
[5.81456s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_rack_8]
[5.81663s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_9]
[5.81706s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_9]
[5.81909s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_rack_9]
[5.81973s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_rack_9]
[5.82079s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_9:AnyFireFaultActive]  aname [rack_9] av->am 0x0
[5.82151s  ] [warning ] [runMonitorList2] avm [/status/rack_9:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.82212s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_9:CalculateVar_AnyFireFaultActive]
[5.82242s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_9:CalculateVar_AnyFireFaultActive]
[5.82266s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_9:AnyFireFaultActive]
[5.8234s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_9:CellTempDelta_Calculated]  aname [rack_9] av->am 0x0
[5.82411s  ] [warning ] [runMonitorList2] avm [/status/rack_9:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.82468s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_9:CalculateVar_CellTempDelta_Calculated]
[5.82505s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_9:CalculateVar_CellTempDelta_Calculated]
[5.82573s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_9:CellTempDelta_Calculated]
[5.82643s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_9:CellTempDelta_Calculated]
[5.82691s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_9:CellTempDelta_Calculated]
[5.82768s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_9:CellVoltageDelta_Calculated]  aname [rack_9] av->am 0x0
[5.8281s   ] [warning ] [runMonitorList2] avm [/status/rack_9:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.82855s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_9:CalculateVar_CellVoltageDelta_Calculated]
[5.82895s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_9:CalculateVar_CellVoltageDelta_Calculated]
[5.82922s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_9:CellVoltageDelta_Calculated]
[5.8295s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_9:CellVoltageDelta_Calculated]
[5.82969s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_9:CellVoltageDelta_Calculated]
[5.83005s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_9:TotalAlarmCnt]  aname [rack_9] av->am 0x0
[5.83024s  ] [warning ] [runMonitorList2] avm [/status/rack_9:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.83047s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_9:CalculateVar_TotalAlarmCnt]
[5.83072s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_9:CalculateVar_TotalAlarmCnt]
[5.831s    ] [info    ] [setupCalculateV] Setting up params for [/status/rack_9:TotalAlarmCnt]
[5.83166s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_9:TotalFaultCnt]  aname [rack_9] av->am 0x0
[5.83194s  ] [warning ] [runMonitorList2] avm [/status/rack_9:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.83223s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_9:CalculateVar_TotalFaultCnt]
[5.83252s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_9:CalculateVar_TotalFaultCnt]
[5.83281s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_9:TotalFaultCnt]
[5.83345s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_rack_9]
[5.83372s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_rack_9]
[5.83426s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_rack_9]
[5.83451s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_rack_9]
[5.83518s  ] [info    ] [SchedItemOpts  ] @@@@@ [/system/commands:runOpts_pcs] found cjopts ready to schedule res1 [0x0] tav [/system/commands:run]
[5.83624s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/summary]
[5.83681s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/summary]
[5.83812s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssetsSummary_pcs]
[5.83838s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssetsSummary_pcs]
[5.83926s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerCmdConvert]
[5.83955s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerCmdConvert]
[5.83999s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ActivePowerCmdConvert]
[5.84042s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ActivePowerCmdConvert]
[5.84071s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ActivePowerCmdConvert]
[5.84135s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerRampRateCmdConvert]
[5.84164s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerRampRateCmdConvert]
[5.84192s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ActivePowerRampRateCmdConvert]
[5.8425s   ] [info    ] [setupCalculateV] assetVar param /controls/pcs:ActivePowerRampRate does not exist. Creating new one for am [pcs]
[5.84281s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ActivePowerRampRateCmdConvert]
[5.84306s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ActivePowerRampRateCmdConvert]
[5.84383s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerRampRateCmd]
[5.84499s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [1] to [/controls/pcs:ActivePowerRampRateCmd]","severity":1}]
[5.84549s  ] [info    ] [record         ] Sent command value [1] to [/controls/pcs:ActivePowerRampRateCmd]
[5.84608s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ActivePowerRampRateCmdSuccess]
[5.84647s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ActivePowerRampRateCmdSuccess]
[5.84724s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [1] from [/controls/pcs:ActivePowerRampRateCmd]","severity":1}]
[5.84748s  ] [info    ] [record         ] Received command value [1] from [/controls/pcs:ActivePowerRampRateCmd]
[5.84881s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerSetpointEnable]
[5.84928s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerSetpointEnable]
[5.85238s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ActivePowerSetpointEnable]
[5.85294s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ActivePowerSetpointEnable]
[5.85365s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ActivePowerSetpointEnable]
[5.8591s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_FrequencySetpointEnable]
[5.86007s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_FrequencySetpointEnable]
[5.861s    ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:FrequencySetpointEnable]
[5.86162s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:FrequencySetpointEnable]
[5.86209s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:FrequencySetpointEnable]
[5.86266s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_GridFollowPQEnable]
[5.86351s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_GridFollowPQEnable]
[5.86412s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:GridFollowPQEnable]
[5.86464s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:GridFollowPQEnable]
[5.86506s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:GridFollowPQEnable]
[5.86603s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_GridFormVFEnable]
[5.86638s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_GridFormVFEnable]
[5.8669s   ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:GridFormVFEnable]
[5.86764s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:GridFormVFEnable]
[5.87403s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:GridFormVFEnable]
[5.87607s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_GridFormVSGEnable]
[5.88591s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_GridFormVSGEnable]
[5.89032s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:GridFormVSGEnable]
[5.89073s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:GridFormVSGEnable]
[5.89101s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:GridFormVSGEnable]
[5.89164s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerCmdConvert]
[5.8918s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerCmdConvert]
[5.89228s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ReactivePowerCmdConvert]
[5.89268s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ReactivePowerCmdConvert]
[5.893s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ReactivePowerCmdConvert]
[5.89352s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerRampRateCmdConvert]
[5.89379s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerRampRateCmdConvert]
[5.8942s   ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ReactivePowerRampRateCmdConvert]
[5.8946s   ] [info    ] [setupCalculateV] assetVar param /controls/pcs:ReactivePowerRampRate does not exist. Creating new one for am [pcs]
[5.89487s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ReactivePowerRampRateCmdConvert]
[5.89511s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ReactivePowerRampRateCmdConvert]
[5.89565s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ReactivePowerRampRateCmd]
[5.89598s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [1] to [/controls/pcs:ReactivePowerRampRateCmd]","severity":1}]
[5.89636s  ] [info    ] [record         ] Sent command value [1] to [/controls/pcs:ReactivePowerRampRateCmd]
[5.89678s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ReactivePowerRampRateCmdSuccess]
[5.89713s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ReactivePowerRampRateCmdSuccess]
[5.89749s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [1] from [/controls/pcs:ReactivePowerRampRateCmd]","severity":1}]
[5.8978s   ] [info    ] [record         ] Received command value [1] from [/controls/pcs:ReactivePowerRampRateCmd]
[5.89817s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerSetpointEnable]
[5.89851s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerSetpointEnable]
[5.89884s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ReactivePowerSetpointEnable]
[5.89919s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ReactivePowerSetpointEnable]
[5.89944s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ReactivePowerSetpointEnable]
[5.90047s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_VoltageSetpointEnable]
[5.90082s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_VoltageSetpointEnable]
[5.90126s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:VoltageSetpointEnable]
[5.90171s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:VoltageSetpointEnable]
[5.9029s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:VoltageSetpointEnable]
[5.90639s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_AvgLineVoltage]
[5.90689s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_AvgLineVoltage]
[5.90832s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:AvgLineVoltage]
[5.90918s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:AvgLineVoltage]
[5.9098s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:AvgLineVoltage]
[5.911s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_IsAlarming]
[5.91141s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_IsAlarming]
[5.91178s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:IsAlarming]
[5.91225s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:IsAlarming]
[5.91264s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:IsAlarming]
[5.91323s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_IsFaulted]
[5.91353s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_IsFaulted]
[5.91397s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:IsFaulted]
[5.9152s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:IsFaulted]
[5.9159s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:IsFaulted]
[5.91726s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_TotalAlarmCnt]
[5.91835s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_TotalAlarmCnt]
[5.91935s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:TotalAlarmCnt]
[5.91979s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:TotalAlarmCnt]. This indicates we are including all of asset instance's assetVars with name TotalAlarmCnt for aggregation
[5.92041s  ] [info    ] [setupCalculateV] [/status/pcs:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [module_1]
[5.92078s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [module_1]
[5.92145s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_1:TotalAlarmCnt]
[5.92193s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_1:TotalAlarmCnt]
[5.92234s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/module_1:TotalAlarmCnt] ptr am [0x0] ai [0x7f32a868d470] 
[5.92313s  ] [info    ] [setupCalculateV] [/status/pcs:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [module_2]
[5.92366s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [module_2]
[5.92416s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_2:TotalAlarmCnt]
[5.92449s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_2:TotalAlarmCnt]
[5.92486s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/module_2:TotalAlarmCnt] ptr am [0x0] ai [0x7f32a852ab70] 
[5.92528s  ] [info    ] [setupCalculateV] [/status/pcs:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [module_3]
[5.92552s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [module_3]
[5.92585s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_3:TotalAlarmCnt]
[5.92619s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_3:TotalAlarmCnt]
[5.9266s   ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/module_3:TotalAlarmCnt] ptr am [0x0] ai [0x7f32a852adc0] 
[5.92737s  ] [info    ] [setupCalculateV] [/status/pcs:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [module_4]
[5.92785s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [module_4]
[5.92837s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_4:TotalAlarmCnt]
[5.92881s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_4:TotalAlarmCnt]
[5.92931s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/module_4:TotalAlarmCnt] ptr am [0x0] ai [0x7f32a857a840] 
[5.92979s  ] [info    ] [setupCalculateV] [/status/pcs:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [module_5]
[5.93016s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [module_5]
[5.93048s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_5:TotalAlarmCnt]
[5.9308s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_5:TotalAlarmCnt]
[5.93107s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/module_5:TotalAlarmCnt] ptr am [0x0] ai [0x7f32a857aa90] 
[5.93161s  ] [info    ] [setupCalculateV] [/status/pcs:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [module_6]
[5.93187s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [module_6]
[5.93215s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_6:TotalAlarmCnt]
[5.93248s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_6:TotalAlarmCnt]
[5.93303s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/module_6:TotalAlarmCnt] ptr am [0x0] ai [0x7f32a871b0c0] 
[5.93415s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:TotalAlarmCnt]
[5.93451s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:TotalAlarmCnt]
[5.93517s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_TotalFaultCnt]
[5.93575s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_TotalFaultCnt]
[5.93611s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:TotalFaultCnt]
[5.93642s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:TotalFaultCnt]. This indicates we are including all of asset instance's assetVars with name TotalFaultCnt for aggregation
[5.93677s  ] [info    ] [setupCalculateV] [/status/pcs:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [module_1]
[5.93708s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [module_1]
[5.93758s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_1:TotalFaultCnt]
[5.93792s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_1:TotalFaultCnt]
[5.93825s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/module_1:TotalFaultCnt] ptr am [0x0] ai [0x7f32a868d470] 
[5.93853s  ] [info    ] [setupCalculateV] [/status/pcs:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [module_2]
[5.93888s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [module_2]
[5.93915s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_2:TotalFaultCnt]
[5.93939s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_2:TotalFaultCnt]
[5.93961s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/module_2:TotalFaultCnt] ptr am [0x0] ai [0x7f32a852ab70] 
[5.93984s  ] [info    ] [setupCalculateV] [/status/pcs:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [module_3]
[5.94005s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [module_3]
[5.94034s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_3:TotalFaultCnt]
[5.94065s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_3:TotalFaultCnt]
[5.94094s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/module_3:TotalFaultCnt] ptr am [0x0] ai [0x7f32a852adc0] 
[5.9412s   ] [info    ] [setupCalculateV] [/status/pcs:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [module_4]
[5.9415s   ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [module_4]
[5.94179s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_4:TotalFaultCnt]
[5.94203s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_4:TotalFaultCnt]
[5.94236s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/module_4:TotalFaultCnt] ptr am [0x0] ai [0x7f32a857a840] 
[5.94269s  ] [info    ] [setupCalculateV] [/status/pcs:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [module_5]
[5.94302s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [module_5]
[5.94362s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_5:TotalFaultCnt]
[5.94397s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_5:TotalFaultCnt]
[5.94427s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/module_5:TotalFaultCnt] ptr am [0x0] ai [0x7f32a857aa90] 
[5.94477s  ] [info    ] [setupCalculateV] [/status/pcs:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [module_6]
[5.9452s   ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [module_6]
[5.94701s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_6:TotalFaultCnt]
[5.9474s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_6:TotalFaultCnt]
[5.94773s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/module_6:TotalFaultCnt] ptr am [0x0] ai [0x7f32a871b0c0] 
[5.94839s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:TotalFaultCnt]
[5.94858s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:TotalFaultCnt]
[5.95016s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_pcs]
[5.95054s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_pcs]
[5.95106s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_pcs]
[5.95125s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_pcs]
[5.95182s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_HeartbeatWrite]
[5.9529s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_HeartbeatWrite]
[5.95352s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:HeartbeatWrite]
[5.95413s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:HeartbeatWrite]
[5.95444s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:HeartbeatWrite]
[5.95533s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [updateHeartbeatWrite_pcs]
[5.95551s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [updateHeartbeatWrite_pcs]
[5.95602s  ] [info    ] [HandlePowerInit] RUNNING RELOAD 2 for pcs
[5.95646s  ] [info    ] [HandlePowerInit] Done checking hw and config
[5.95683s  ] [info    ] [HandlePowerInit] pcs Found Pr_c [4200]
[5.95714s  ] [info    ] [HandlePowerInit] pcs Found Qr_c [2100]
[5.95749s  ] [info    ] [HandlePowerInit] pcs Found Sr_c [4200]
[5.95794s  ] [info    ] [HandlePowerInit] pcs Found pfr_c [0.8]
[5.95841s  ] [info    ] [HandlePowerInit] Done initializing vars
[5.95882s  ] [info    ] [HandlePowerInit] pcs No priority found in /config or /controls. Setting power priority for pcs to default P P
[5.95929s  ] [info    ] [HandlePowerInit] Done initializing Priority
[5.95973s  ] [info    ] [HandlePowerInit] Done initializing Ps and Qs
[5.96079s  ] [info    ] [HandlePowerInit] Rated Active/Reactive/Apparent Powers set to 4200/2100/4200
[5.96119s  ] [info    ] [HandlePowerInit] Done initing vars
[5.96233s  ] [info    ] [HandlePowerInit] Done setting max Ps
[5.96348s  ] [info    ] [HandlePowerInit] Rated Power for pcs:
[5.96392s  ] [info    ] [HandlePowerInit]        Apparent Power  [4200]
[5.96427s  ] [info    ] [HandlePowerInit]        Reactive Power  [2100]
[5.96449s  ] [info    ] [HandlePowerInit] Max Powers for pcs:
[5.96472s  ] [info    ] [HandlePowerInit]        Charge Power    [-4200]
[5.96504s  ] [info    ] [HandlePowerInit]        Discharge Power [4200]
[5.96579s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [handlePowerCmd_pcs]
[5.96616s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [handlePowerCmd_pcs]
[5.96657s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 638.858 loops 129
[5.96687s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:LocalStartPCS] tRun(mS) 639.162 loops 130
[5.96725s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:LocalStopPCS] tRun(mS) 639.528 loops 131
[5.96762s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 639.897 loops 132
[5.96792s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:LocalStopPCS] tRun(mS) 640.214 loops 133
[5.96849s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:LocalStandbyPCS] tRun(mS) 640.785 loops 134
[5.96887s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 641.171 loops 135
[5.96929s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:LocalStandbyPCS] tRun(mS) 641.590 loops 136
[5.96977s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:StartEnable] tRun(mS) 642.059 loops 137
[5.97029s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 642.589 loops 138
[5.97066s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:StartEnable] tRun(mS) 642.958 loops 139
[5.97116s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:StopEnable] tRun(mS) 643.459 loops 140
[5.97211s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 644.409 loops 141
[5.97233s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:StopEnable] tRun(mS) 644.634 loops 142
[5.97281s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:StandbyEnable] tRun(mS) 645.110 loops 143
[5.97322s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 645.515 loops 144
[5.97359s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:StandbyEnable] tRun(mS) 645.883 loops 145
[5.97409s  ] [info    ] [SchedItemOpts  ] @@@@@ [/system/commands:runOpts_module] found cjopts ready to schedule res1 [0x0] tav [/system/commands:run]
[5.97901s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_1]
[5.97939s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_1]
[5.97981s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 652.107 loops 146
[5.98011s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_1:pubAssets_module_1] tRun(mS) 652.404 loops 147
[5.98049s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_module_1]
[5.98075s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_module_1]
[5.98143s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_1:CurrentFault]  aname [module_1] av->am 0x0
[5.98165s  ] [warning ] [runMonitorList2] avm [/status/module_1:CurrentFault] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[5.98208s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_1:CalculateVar_CurrentFault]
[5.98245s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_1:CalculateVar_CurrentFault]
[5.9828s   ] [info    ] [setupCalculateV] Setting up params for [/status/module_1:CurrentFault]
[5.98309s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_1:CurrentFault]
[5.98331s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_1:CurrentFault]
[5.9838s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_1:CurrentWarning]  aname [module_1] av->am 0x0
[5.984s    ] [warning ] [runMonitorList2] avm [/status/module_1:CurrentWarning] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[5.98442s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_1:CalculateVar_CurrentWarning]
[5.98475s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_1:CalculateVar_CurrentWarning]
[5.98501s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_1:CurrentWarning]
[5.98534s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_1:CurrentWarning]
[5.98557s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_1:CurrentWarning]
[5.98596s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_1:PCSDCPower]  aname [module_1] av->am 0x0
[5.98628s  ] [warning ] [runMonitorList2] avm [/status/module_1:PCSDCPower] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[5.98667s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_1:CalculateVar_PCSDCPower]
[5.98694s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_1:CalculateVar_PCSDCPower]
[5.98724s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_1:PCSDCPower]
[5.98753s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_1:PCSDCPower]
[5.98772s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_1:PCSDCPower]
[5.98809s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_1:TotalAlarmCnt]  aname [module_1] av->am 0x0
[5.98846s  ] [warning ] [runMonitorList2] avm [/status/module_1:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[5.98881s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_1:CalculateVar_TotalAlarmCnt]
[5.98911s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_1:CalculateVar_TotalAlarmCnt]
[5.98941s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_1:TotalAlarmCnt]
[5.98967s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_1:TotalFaultCnt]  aname [module_1] av->am 0x0
[5.98998s  ] [warning ] [runMonitorList2] avm [/status/module_1:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[5.99034s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_1:CalculateVar_TotalFaultCnt]
[5.99056s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_1:CalculateVar_TotalFaultCnt]
[5.99084s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_1:TotalFaultCnt]
[5.99119s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 663.485 loops 148
[5.99194s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_1:runMonitor_module_1] tRun(mS) 664.235 loops 149
[5.99245s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_module_1]
[5.9927s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_module_1]
[5.99309s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 665.384 loops 150
[5.99347s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_module_1]
[5.9939s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_module_1]
[5.99453s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_2]
[5.99511s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_2]
[5.99568s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 667.979 loops 151
[5.99603s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_2:pubAssets_module_2] tRun(mS) 668.322 loops 152
[5.99638s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_module_2]
[5.99661s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_module_2]
[5.99692s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_2:CurrentFault]  aname [module_2] av->am 0x0
[5.99716s  ] [warning ] [runMonitorList2] avm [/status/module_2:CurrentFault] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[5.99745s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_2:CalculateVar_CurrentFault]
[5.99766s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_2:CalculateVar_CurrentFault]
[5.99794s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_2:CurrentFault]
[5.99825s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_2:CurrentFault]
[5.99854s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_2:CurrentFault]
[5.99885s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_2:CurrentWarning]  aname [module_2] av->am 0x0
[5.99907s  ] [warning ] [runMonitorList2] avm [/status/module_2:CurrentWarning] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[5.99963s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_2:CalculateVar_CurrentWarning]
[6.00001s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_2:CalculateVar_CurrentWarning]
[6.00047s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_2:CurrentWarning]
[6.00097s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_2:CurrentWarning]
[6.00138s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_2:CurrentWarning]
[6.00197s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_2:PCSDCPower]  aname [module_2] av->am 0x0
[6.00223s  ] [warning ] [runMonitorList2] avm [/status/module_2:PCSDCPower] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.00248s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_2:CalculateVar_PCSDCPower]
[6.00276s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_2:CalculateVar_PCSDCPower]
[6.00302s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_2:PCSDCPower]
[6.00332s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_2:PCSDCPower]
[6.00374s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_2:PCSDCPower]
[6.0041s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_2:TotalAlarmCnt]  aname [module_2] av->am 0x0
[6.00439s  ] [warning ] [runMonitorList2] avm [/status/module_2:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.0047s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_2:CalculateVar_TotalAlarmCnt]
[6.00518s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_2:CalculateVar_TotalAlarmCnt]
[6.00545s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_2:TotalAlarmCnt]
[6.00604s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_2:TotalFaultCnt]  aname [module_2] av->am 0x0
[6.00634s  ] [warning ] [runMonitorList2] avm [/status/module_2:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.00726s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_2:CalculateVar_TotalFaultCnt]
[6.00762s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_2:CalculateVar_TotalFaultCnt]
[6.00798s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_2:TotalFaultCnt]
[6.00851s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 680.806 loops 153
[6.00898s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_2:runMonitor_module_2] tRun(mS) 681.272 loops 154
[6.00949s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_module_2]
[6.00992s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_module_2]
[6.01057s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 682.867 loops 155
[6.01094s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_module_2]
[6.01152s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_module_2]
[6.01194s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_3]
[6.01411s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_3]
[6.01489s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 687.177 loops 156
[6.01567s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_3:pubAssets_module_3] tRun(mS) 687.955 loops 157
[6.0162s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_module_3]
[6.01661s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_module_3]
[6.01723s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_3:CurrentFault]  aname [module_3] av->am 0x0
[6.01761s  ] [warning ] [runMonitorList2] avm [/status/module_3:CurrentFault] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.01797s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_3:CalculateVar_CurrentFault]
[6.01836s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_3:CalculateVar_CurrentFault]
[6.01863s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_3:CurrentFault]
[6.01896s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_3:CurrentFault]
[6.01924s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_3:CurrentFault]
[6.01966s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_3:CurrentWarning]  aname [module_3] av->am 0x0
[6.02003s  ] [warning ] [runMonitorList2] avm [/status/module_3:CurrentWarning] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.02042s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_3:CalculateVar_CurrentWarning]
[6.02088s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_3:CalculateVar_CurrentWarning]
[6.02138s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_3:CurrentWarning]
[6.02177s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_3:CurrentWarning]
[6.02203s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_3:CurrentWarning]
[6.02236s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_3:PCSDCPower]  aname [module_3] av->am 0x0
[6.02261s  ] [warning ] [runMonitorList2] avm [/status/module_3:PCSDCPower] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.02298s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_3:CalculateVar_PCSDCPower]
[6.02334s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_3:CalculateVar_PCSDCPower]
[6.02377s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_3:PCSDCPower]
[6.0242s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_3:PCSDCPower]
[6.02464s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_3:PCSDCPower]
[6.0251s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_3:TotalAlarmCnt]  aname [module_3] av->am 0x0
[6.02549s  ] [warning ] [runMonitorList2] avm [/status/module_3:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.02586s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_3:CalculateVar_TotalAlarmCnt]
[6.02621s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_3:CalculateVar_TotalAlarmCnt]
[6.02661s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_3:TotalAlarmCnt]
[6.02734s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_3:TotalFaultCnt]  aname [module_3] av->am 0x0
[6.02777s  ] [warning ] [runMonitorList2] avm [/status/module_3:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.02818s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_3:CalculateVar_TotalFaultCnt]
[6.02862s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_3:CalculateVar_TotalFaultCnt]
[6.02925s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_3:TotalFaultCnt]
[6.0297s   ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 701.996 loops 158
[6.03079s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_3:runMonitor_module_3] tRun(mS) 703.066 loops 159
[6.03129s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_module_3]
[6.03157s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_module_3]
[6.03195s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 704.251 loops 160
[6.0322s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_module_3]
[6.03256s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_module_3]
[6.03313s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_4]
[6.03357s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_4]
[6.03414s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 706.442 loops 161
[6.03461s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_4:pubAssets_module_4] tRun(mS) 706.909 loops 162
[6.03498s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_module_4]
[6.03518s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_module_4]
[6.03614s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_4:CurrentFault]  aname [module_4] av->am 0x0
[6.0364s   ] [warning ] [runMonitorList2] avm [/status/module_4:CurrentFault] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.03672s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_4:CalculateVar_CurrentFault]
[6.03698s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_4:CalculateVar_CurrentFault]
[6.03733s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_4:CurrentFault]
[6.03767s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_4:CurrentFault]
[6.03803s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_4:CurrentFault]
[6.03844s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_4:CurrentWarning]  aname [module_4] av->am 0x0
[6.03873s  ] [warning ] [runMonitorList2] avm [/status/module_4:CurrentWarning] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.03903s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_4:CalculateVar_CurrentWarning]
[6.0393s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_4:CalculateVar_CurrentWarning]
[6.03969s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_4:CurrentWarning]
[6.04014s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_4:CurrentWarning]
[6.0405s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_4:CurrentWarning]
[6.04104s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_4:PCSDCPower]  aname [module_4] av->am 0x0
[6.04169s  ] [warning ] [runMonitorList2] avm [/status/module_4:PCSDCPower] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.04206s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_4:CalculateVar_PCSDCPower]
[6.04254s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_4:CalculateVar_PCSDCPower]
[6.04284s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_4:PCSDCPower]
[6.04324s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_4:PCSDCPower]
[6.04351s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_4:PCSDCPower]
[6.0444s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_4:TotalAlarmCnt]  aname [module_4] av->am 0x0
[6.04477s  ] [warning ] [runMonitorList2] avm [/status/module_4:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.04514s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_4:CalculateVar_TotalAlarmCnt]
[6.04551s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_4:CalculateVar_TotalAlarmCnt]
[6.04595s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_4:TotalAlarmCnt]
[6.04633s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_4:TotalFaultCnt]  aname [module_4] av->am 0x0
[6.04668s  ] [warning ] [runMonitorList2] avm [/status/module_4:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.04701s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_4:CalculateVar_TotalFaultCnt]
[6.04739s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_4:CalculateVar_TotalFaultCnt]
[6.04765s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_4:TotalFaultCnt]
[6.04823s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 720.508 loops 163
[6.04854s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_4:runMonitor_module_4] tRun(mS) 720.831 loops 164
[6.04989s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_module_4]
[6.05031s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_module_4]
[6.05075s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 723.049 loops 165
[6.05105s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_module_4]
[6.05131s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_module_4]
[6.05177s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_5]
[6.05212s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_5]
[6.05258s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 724.872 loops 166
[6.05294s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_5:pubAssets_module_5] tRun(mS) 725.227 loops 167
[6.05329s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_module_5]
[6.05346s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_module_5]
[6.05401s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_5:CurrentFault]  aname [module_5] av->am 0x0
[6.05436s  ] [warning ] [runMonitorList2] avm [/status/module_5:CurrentFault] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.05464s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_5:CalculateVar_CurrentFault]
[6.05494s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_5:CalculateVar_CurrentFault]
[6.05541s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_5:CurrentFault]
[6.0558s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_5:CurrentFault]
[6.05608s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_5:CurrentFault]
[6.05641s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_5:CurrentWarning]  aname [module_5] av->am 0x0
[6.05664s  ] [warning ] [runMonitorList2] avm [/status/module_5:CurrentWarning] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.05692s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_5:CalculateVar_CurrentWarning]
[6.05713s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_5:CalculateVar_CurrentWarning]
[6.05742s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_5:CurrentWarning]
[6.05769s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_5:CurrentWarning]
[6.0579s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_5:CurrentWarning]
[6.05825s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_5:PCSDCPower]  aname [module_5] av->am 0x0
[6.05849s  ] [warning ] [runMonitorList2] avm [/status/module_5:PCSDCPower] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.05882s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_5:CalculateVar_PCSDCPower]
[6.05913s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_5:CalculateVar_PCSDCPower]
[6.05944s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_5:PCSDCPower]
[6.0598s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_5:PCSDCPower]
[6.06017s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_5:PCSDCPower]
[6.06062s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_5:TotalAlarmCnt]  aname [module_5] av->am 0x0
[6.06086s  ] [warning ] [runMonitorList2] avm [/status/module_5:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.0614s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_5:CalculateVar_TotalAlarmCnt]
[6.06194s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_5:CalculateVar_TotalAlarmCnt]
[6.06233s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_5:TotalAlarmCnt]
[6.06275s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_5:TotalFaultCnt]  aname [module_5] av->am 0x0
[6.0646s   ] [warning ] [runMonitorList2] avm [/status/module_5:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.06496s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_5:CalculateVar_TotalFaultCnt]
[6.06542s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_5:CalculateVar_TotalFaultCnt]
[6.0658s   ] [info    ] [setupCalculateV] Setting up params for [/status/module_5:TotalFaultCnt]
[6.06624s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 738.530 loops 168
[6.06655s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_5:runMonitor_module_5] tRun(mS) 738.844 loops 169
[6.06704s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_module_5]
[6.06731s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_module_5]
[6.06783s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 740.074 loops 170
[6.06824s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_module_5]
[6.06856s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_module_5]
[6.06902s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_6]
[6.06934s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_6]
[6.06991s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 742.204 loops 171
[6.0702s   ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_6:pubAssets_module_6] tRun(mS) 742.489 loops 172
[6.07061s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_module_6]
[6.07094s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_module_6]
[6.07134s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_6:CurrentFault]  aname [module_6] av->am 0x0
[6.07166s  ] [warning ] [runMonitorList2] avm [/status/module_6:CurrentFault] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.07196s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_6:CalculateVar_CurrentFault]
[6.07222s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_6:CalculateVar_CurrentFault]
[6.07248s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_6:CurrentFault]
[6.07278s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_6:CurrentFault]
[6.07299s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_6:CurrentFault]
[6.07339s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_6:CurrentWarning]  aname [module_6] av->am 0x0
[6.07361s  ] [warning ] [runMonitorList2] avm [/status/module_6:CurrentWarning] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.07392s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_6:CalculateVar_CurrentWarning]
[6.07418s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_6:CalculateVar_CurrentWarning]
[6.07443s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_6:CurrentWarning]
[6.07472s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_6:CurrentWarning]
[6.07493s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_6:CurrentWarning]
[6.07524s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_6:PCSDCPower]  aname [module_6] av->am 0x0
[6.07554s  ] [warning ] [runMonitorList2] avm [/status/module_6:PCSDCPower] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.07608s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_6:CalculateVar_PCSDCPower]
[6.07652s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_6:CalculateVar_PCSDCPower]
[6.07691s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_6:PCSDCPower]
[6.07735s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_6:PCSDCPower]
[6.07792s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_6:PCSDCPower]
[6.07861s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_6:TotalAlarmCnt]  aname [module_6] av->am 0x0
[6.0795s   ] [warning ] [runMonitorList2] avm [/status/module_6:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.08214s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_6:CalculateVar_TotalAlarmCnt]
[6.08256s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_6:CalculateVar_TotalAlarmCnt]
[6.08319s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_6:TotalAlarmCnt]
[6.0837s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_6:TotalFaultCnt]  aname [module_6] av->am 0x0
[6.08506s  ] [warning ] [runMonitorList2] avm [/status/module_6:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.08564s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_6:CalculateVar_TotalFaultCnt]
[6.08596s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_6:CalculateVar_TotalFaultCnt]
[6.08637s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_6:TotalFaultCnt]
[6.08961s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 761.807 loops 173
[6.0917s   ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_6:runMonitor_module_6] tRun(mS) 762.748 loops 174
[6.09321s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_module_6]
[6.09351s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_module_6]
[6.09445s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 766.741 loops 175
[6.09481s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_module_6]
[6.09513s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_module_6]
[6.09979s  ] [info    ] [schedThread    ] this is a replacement schedItem 0x7f32a82a9da0 id SiteRunCmd uri /sched/ess:SiteRunCmd
[6.10033s  ] [info    ] [schedThread    ] schedItem deleted, seting repTime to 0.0
[6.1224s   ] [info    ] [LogInfo        ] [/status/pcs:SystemState] received a value of [Stop]
[6.12388s  ] [info    ] [setParamfromAf ]  created var for uri [/status/bms] as [/status/bms:Voltage]
[6.12602s  ] [error   ] [setOutValue    ] Warning possible loopbackvar [/components/pcs_registers_fast:current_status] check abf->useAv [true]
[6.49951s  ] [info    ] [SiteBMSContacto] SiteBMSContactorControl
[6.49973s  ] [info    ] [SiteBMSContacto] Right before reload == 1
[6.50008s  ] [info    ] [PrintAssetVar  ] 
{
  "/site/ess:bms_dc_contactor_control": {
    "value": 0,
    "note2": "2->close contactors | 3->open contactors",
    "every": 0.5,
    "for": 0,
    "offset": 0,
    "uri": "/sched/ess:SiteBMSContactorControl",
    "size": 1,
    "after": 0,
    "debug": 0,
    "name": "BMS Contactor Control Command",
    "aname": "ess",
    "type": "control",
    "note1": "Initiates BMS close and open contactors",
    "enable": "/config/pcs:enable",
    "ifChanged": false
  }
}


[6.50034s  ] [info    ] [SiteBMSContacto] reload == 1
[6.5006s   ] [info    ] [PullOffSchedule] PullOffScheduler
[6.50094s  ] [info    ] [PrintAssetVar  ] 
{
  "/site/ess:bms_dc_contactor_control": {
    "value": 0,
    "note2": "2->close contactors | 3->open contactors",
    "every": 0.5,
    "for": 0,
    "offset": 0,
    "uri": "/sched/ess:SiteBMSContactorControl",
    "size": 1,
    "after": 0,
    "debug": 0,
    "name": "BMS Contactor Control Command",
    "aname": "ess",
    "type": "control",
    "note1": "Initiates BMS close and open contactors",
    "enable": "/config/pcs:enable",
    "ifChanged": false
  }
}


[7.04624s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:FaultShutdown]
[7.04683s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:FaultShutdown]
[7.04729s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:CommsOK]
[7.04762s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:CommsOK]
[7.28584s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:CommsOK]
[7.2869s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:CommsOK]
[15.5876s  ] [info    ] [sendAlarm      ] calling setAlarm [/site/ess:heartbeat_to_ess] in destAv [/assets/ess/ess_1:faults]
[15.5882s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"[heartbeat_to_ess] value [0] is not changing for 10.00 seconds at 12/21/2023 17:05:47","severity":4}]
[15.5892s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:FaultShutdown]
[15.5895s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:FaultShutdown]
[15.59s    ] [info    ] [LogInfo        ] [/status/ess:FaultShutdown] received a value of [true]
[15.5906s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:CommsOK]
[15.5913s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:CommsOK]
[15.592s   ] [info    ] [sendAlarm      ] calling setAlarm [/site/ess:heartbeat_to_ess] in destAv [/assets/ess/ess_1:alarms]
[15.5925s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"[heartbeat_to_ess] value [0] is not changing for 10.00 seconds at 12/21/2023 17:05:47","severity":3}]
[33.4952s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_config_after_30s]
[33.4954s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_config_after_30s]
[33.5595s  ] [info    ] [write_cjson    ] Wrote 903032 bytes to file /var/log/ess_controller/run_configs_ess_after_30_seconds.json
[34.4953s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_config_after_31s]
[34.4956s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_config_after_31s]
[34.5272s  ] [info    ] [Every1000mS    ] Wrote 561699 bytes to file /var/log/ess_controller/run_configs_ess_after_31_seconds.json
[35.4953s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_config_after_32s]
[35.4957s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_config_after_32s]
[35.5682s  ] [info    ] [write_cjson    ] Wrote 903644 bytes to file /var/log/ess_controller/run_configs_ess_after_32_seconds.json
[63.6926s  ] [info    ] [signal_handler ] signal of type 2 caught.
[63.693s   ] [info    ] [schedThread    ] shutting down
[63.7712s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"ess shutting down at 62.758","severity":1}]
[63.7719s  ] [info    ] [fimsThread     ] fims shutting down
[63.7722s  ] [info    ] [main_test_new_e] threads done cleaning up ...
[63.7774s  ] [info    ] [~asset_manager ] asset manager running cleanup
[63.7782s  ] [info    ] [cleanup        ] STARTING for ess
[63.7785s  ] [info    ] [cleanup        ] STARTING for ess amap.size 36
[63.7787s  ] [info    ] [cleanup        ] Running (no delete) for ess item [AlarmCnt] 0x7f32a82953d0
[63.7789s  ] [info    ] [cleanup        ] Running (no delete) for ess item [AlarmDestination] 0x7f32a8294140
[63.779s   ] [info    ] [cleanup        ] Running (no delete) for ess item [CalculateVar_HeartbeatWrite] 0x7f32a87857d0
[63.7793s  ] [info    ] [cleanup        ] Running (no delete) for ess item [CalculateVar_IsAlarming] 0x7f32a8783370
[63.7796s  ] [info    ] [cleanup        ] Running (no delete) for ess item [CalculateVar_IsFaulted] 0x7f32a8784020
[63.7798s  ] [info    ] [cleanup        ] Running (no delete) for ess item [CommsOK] 0x7f32a8294000
[63.7801s  ] [info    ] [cleanup        ] Running (no delete) for ess item [FaultCnt] 0x7f32a829f770
[63.7804s  ] [info    ] [cleanup        ] Running (no delete) for ess item [FaultDestination] 0x7f32a82946e0
[63.7811s  ] [info    ] [cleanup        ] Running (no delete) for ess item [FaultShutdown] 0x7f32a829e5c0
[63.7812s  ] [info    ] [cleanup        ] Running (no delete) for ess item [HandlePowerCmd_ess] 0x7f32a85b6eb0
[63.7817s  ] [info    ] [cleanup        ] Running (no delete) for ess item [HeartbeatWrite] 0x7f32a82a1620
[63.7822s  ] [info    ] [cleanup        ] Running (no delete) for ess item [IsAlarming] 0x7f32a82a29e0
[63.7824s  ] [info    ] [cleanup        ] Running (no delete) for ess item [IsFaulted] 0x7f32a82a3680
[63.7827s  ] [info    ] [cleanup        ] Running (no delete) for ess item [MaxApparentPower] 0x7f32a85b8730
[63.7831s  ] [info    ] [cleanup        ] Running (no delete) for ess item [MaxChargePower] 0x7f32a85b7420
[63.7832s  ] [info    ] [cleanup        ] Running (no delete) for ess item [MaxDischargePower] 0x7f32a85b7af0
[63.7835s  ] [info    ] [cleanup        ] Running (no delete) for ess item [MaxReactivePower] 0x7f32a85b8110
[63.784s   ] [info    ] [cleanup        ] Running (no delete) for ess item [MonitorVarAlarm] 0x7f32a8781d40
[63.7844s  ] [info    ] [cleanup        ] Running (no delete) for ess item [MonitorVarFault] 0x7f32a87823a0
[63.7847s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SendBms] 0x0
[63.7851s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SendPcs] 0x0
[63.7855s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SiteBMSContactorControl_ess] 0x7f32a8296520
[63.7859s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SitePCSStatusControl_ess] 0x7f32a8298070
[63.7862s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SiteRunCmd_ess] 0x7f32a8299ab0
[63.7865s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SiteRunCmd_maintModeBms] 0x7f32a8299fe0
[63.7872s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SiteRunCmd_maintModePcs] 0x7f32a829a5f0
[63.7914s  ] [info    ] [cleanup        ] Running (no delete) for ess item [bms_dc_contactor_control] 0x7f32a8296880
[63.7918s  ] [info    ] [cleanup        ] Running (no delete) for ess item [heartbeat_to_ess] 0x7f32a82a8140
[63.7923s  ] [info    ] [cleanup        ] Running (no delete) for ess item [heartbeat_to_ess_reload] 0x7f32a8758070
[63.7931s  ] [info    ] [cleanup        ] Running (no delete) for ess item [maint_mode_BMS] 0x7f32a829abd0
[63.7951s  ] [info    ] [cleanup        ] Running (no delete) for ess item [maint_mode_PCS] 0x7f32a829ae70
[63.7957s  ] [info    ] [cleanup        ] Running (no delete) for ess item [perf_SchedPerf] 0x7f32a8001590
[63.7968s  ] [info    ] [cleanup        ] Running (no delete) for ess item [perf_alllinks] 0x7f32a8760f50
[63.7977s  ] [info    ] [cleanup        ] Running (no delete) for ess item [runConfig] 0x7cda40
[63.7995s  ] [info    ] [cleanup        ] Running (no delete) for ess item [site_status_control_command] 0x7f32a829a920
[63.8003s  ] [info    ] [cleanup        ] Running (no delete) for ess item [start_stop_standby_command] 0x7f32a8298360
[63.8012s  ] [info    ] [cleanup        ] ess assetMap.size 0
[63.8022s  ] [info    ] [cleanup        ] asset_manager [bms] ->> [bms]
[63.8028s  ] [info    ] [~asset_manager ] asset manager running cleanup
[63.8032s  ] [info    ] [cleanup        ] STARTING for bms
[63.8035s  ] [info    ] [cleanup        ] STARTING for bms amap.size 84
[63.8048s  ] [info    ] [cleanup        ] Running (no delete) for bms item [AlarmCnt] 0x7f32a832f150
[63.8052s  ] [info    ] [cleanup        ] Running (no delete) for bms item [AlarmDestination] 0x7f32a8301370
[63.8171s  ] [info    ] [cleanup        ] Running (no delete) for bms item [AnyFireFaultActive] 0x7f32a8355460
[63.8334s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CalculateVar_AnyFireFaultActive] 0x7f32a878f5b0
[63.839s   ] [info    ] [cleanup        ] Running (no delete) for bms item [CalculateVar_CellTempDelta_Calculated] 0x7f32a8792300
[63.8396s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CalculateVar_CellVoltageDelta_Calculated] 0x7f32a8792fe0
[63.8401s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CalculateVar_CurrentBeforeStopIsOK] 0x7f32a8793a10
[63.8405s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CalculateVar_DCCharging] 0x7f32a87948d0
[63.8431s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CalculateVar_DCDischarging] 0x7f32a87954c0
[63.8436s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CalculateVar_HeartbeatWrite] 0x7f32a87a1970
[63.8443s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CalculateVar_IsAlarming] 0x7f32a87960c0
[63.8448s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CalculateVar_IsFaulted] 0x7f32a87969f0
[63.8452s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CalculateVar_OverCurrentAlarm] 0x7f32a8797970
[63.8456s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CalculateVar_OverCurrentFault] 0x7f32a8798590
[63.846s   ] [info    ] [cleanup        ] Running (no delete) for bms item [CalculateVar_TotalAlarmCnt] 0x7f32a8799110
[63.8466s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CalculateVar_TotalFaultCnt] 0x7f32a879bb90
[63.8473s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CalculateVar_UnderCurrentAlarm] 0x7f32a879e730
[63.8479s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CalculateVar_UnderCurrentFault] 0x7f32a879f450
[63.8486s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CellTempDelta] 0x7f32a8312950
[63.8492s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CellTempDelta_Calculated] 0x7f32a8305950
[63.8497s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CellTempDelta_reload] 0x7f32a83575b0
[63.8502s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CellVoltageDelta] 0x7f32a8314d60
[63.8505s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CellVoltageDelta_Calculated] 0x7f32a83131b0
[63.8509s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CellVoltageDelta_reload] 0x7f32a835b170
[63.8512s  ] [info    ] [cleanup        ] Running (no delete) for bms item [ChargeCurrentLimit] 0x7f32a877c810
[63.8517s  ] [info    ] [cleanup        ] Running (no delete) for bms item [ChargePowerLimit] 0x7f32a85ba970
[63.8521s  ] [info    ] [cleanup        ] Running (no delete) for bms item [ClearFaults] 0x7f32a8311860
[63.8527s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CloseContactorsEnable] 0x7f32a83084a0
[63.8531s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CloseContactorsEnable_bms] 0x7f32a8307a00
[63.8534s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CloseContactorsEnabled] 0x7f32a83081c0
[63.8546s  ] [info    ] [cleanup        ] Running (no delete) for bms item [CommsOK] 0x7f32a8315590
