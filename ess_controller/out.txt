10101 mongod --config /etc/mongod.conf
10116 dbi
ess_controller
Loading catl_bms_init.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_manager.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_manager_client_interface.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_manager_controls.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_manager_faults.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_manager_server_interface.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_manager_ui.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_rack.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_rack_client_interface.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_rack_controls.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_rack_faults.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_rack_server_interface.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_rack_ui.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/bms to database...
Loading ess_controller.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/ess to database...
Loading ess_controller_server_interface.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/ess to database...
Loading ess_controller_ui.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/ess to database...
Loading ess_final.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/ess to database...
Loading ess_init.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/ess to database...
Loading ess_file.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller to database...
Loading pe_pcs_init.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_manager.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_manager_client_interface.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_manager_controls.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_manager_faults.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_manager_server_interface.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_manager_ui.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_module.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_module_client_interface.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_module_controls.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_module_faults.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_module_server_interface.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
Loading pe_pcs_module_ui.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/ess_controller/pcs to database...
web_ui
Loading assets.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/web_ui to database...
Loading dashboard.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/web_ui to database...
Loading layout.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/web_ui to database...
Loading web_ui.json from /home/docker/config/vfakeco/config/lima/ess-controller/config/web_ui to database...
PSM: 2024/01/11 15:07:19 Configuring
PSM: 2024/01/11 15:07:19 Attempting to read configurations from dbi
PSM: 2024/01/11 15:07:19 Could not read tree structure from dbi.
PSM: 2024/01/11 15:07:19 Unable to receive psm asset tree. Attempting to configure using local configuration file.
/components/catl_ems_bms_rw
1000
PSM: 2024/01/11 15:07:19 Attempting to configure from local file...

2024-01-11T15:07:19Z  [GO_METRICS] | STARTUP |
 	Caller: logger.go:190
 	Message: File Logger startup!


2024-01-11T15:07:19Z  [GO_METRICS] | INFO  |
 	Caller: main.go:70
 	Message: Starting go_metrics


2024-01-11T15:07:19Z  [GO_METRICS] | INFO  |
 	Caller: main.go:79
 	Message: go_metrics 
	Tag:11.3.0.alpha.3.component 
	Version:310
	Commit: 5e05914


PSM: 2024/01/11 15:07:19 Reading in local file: /home/docker/config/vfakeco/config/lima/psm/config/psm/psm.json
{
	"/components/catl_bms_ems_r": {
		"Forward": {
			"bms_heartbeat": {
				"Uri": "/components/bms_1",
				"Register": "heart_heartbeat"
			},
			"bms_max_charge_allowed": {
				"Uri": "/components/bms_1",
				"Register": "pmax"
			},
			"bms_max_discharge_allowed": {
				"Uri": "/components/bms_1",
				"Register": "pmax"
			},
			"bms_poweron": {
				"Uri": "/components/bms_1",
				"Register": "status_0_value"
			},
			"bms_remain_charge_energy": {
				"Uri": "/components/bms_1",
				"Register": "echarge"
			},
			"bms_remain_discharge_energy": {
				"Uri": "/components/bms_1",
				"Register": "edischarge"
			},
			"num_hv_subsystem": {
				"Uri": "/components/bms_1",
				"Register": "numracks"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"bms_heartbeat": "heart_heartbeat",
				"bms_max_charge_allowed": "pmax",
				"bms_max_discharge_allowed": "pmax",
				"bms_poweron": "status_0_value",
				"bms_remain_charge_energy": "echarge",
				"bms_remain_discharge_energy": "edischarge",
				"num_hv_subsystem": "numracks"
			}
		}
	},
	"/components/catl_ems_bms_rw": {
		"Forward": {
			"ems_cmd": {
				"Uri": "/components/bms_1",
				"Register": "ctrlword1"
			},
			"ems_rtc_day": {
				"Uri": "/components/bms_1",
				"Register": "heart_day"
			},
			"ems_rtc_hour": {
				"Uri": "/components/bms_1",
				"Register": "heart_hour"
			},
			"ems_rtc_minute": {
				"Uri": "/components/bms_1",
				"Register": "heart_minute"
			},
			"ems_rtc_month": {
				"Uri": "/components/bms_1",
				"Register": "heart_month"
			},
			"ems_rtc_second": {
				"Uri": "/components/bms_1",
				"Register": "heart_second"
			},
			"ems_rtc_year": {
				"Uri": "/components/bms_1",
				"Register": "heart_year"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"ems_cmd": "ctrlword1",
				"ems_rtc_day": "heart_day",
				"ems_rtc_hour": "heart_hour",
				"ems_rtc_minute": "heart_minute",
				"ems_rtc_month": "heart_month",
				"ems_rtc_second": "heart_second",
				"ems_rtc_year": "heart_year"
			}
		}
	},
	"/components/catl_mbmu_stat_r": {
		"Forward": {},
		"Backward": {}
	},
	"/components/catl_mbmu_sum_r": {
		"Forward": {},
		"Backward": {}
	},
	"/components/catl_mbmu_summary_r": {
		"Forward": {
			"mbmu_avg_cell_temperature": {
				"Uri": "/components/bms_1",
				"Register": "avgcelltemp"
			},
			"mbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "avgcellvolt"
			},
			"mbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "idc_value"
			},
			"mbmu_max_cell_temperature": {
				"Uri": "/components/bms_1",
				"Register": "maxcelltemp_value"
			},
			"mbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "maxcellvolt_value"
			},
			"mbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "icharge"
			},
			"mbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "idischarge"
			},
			"mbmu_min_cell_temperature": {
				"Uri": "/components/bms_1",
				"Register": "mincelltemp_value"
			},
			"mbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "mincellvolt_value"
			},
			"mbmu_power": {
				"Uri": "/components/bms_1",
				"Register": "p"
			},
			"mbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "soc_value"
			},
			"mbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "soh"
			},
			"mbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "vdc_value"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"mbmu_avg_cell_temperature": "avgcelltemp",
				"mbmu_avg_cell_voltage": "avgcellvolt",
				"mbmu_current": "idc_value",
				"mbmu_max_cell_temperature": "maxcelltemp_value",
				"mbmu_max_cell_voltage": "maxcellvolt_value",
				"mbmu_max_charge_current": "icharge",
				"mbmu_max_discharge_current": "idischarge",
				"mbmu_min_cell_temperature": "mincelltemp_value",
				"mbmu_min_cell_voltage": "mincellvolt_value",
				"mbmu_power": "p",
				"mbmu_soc": "soc_value",
				"mbmu_soh": "soh",
				"mbmu_voltage": "vdc_value"
			}
		}
	},
	"/components/catl_rack_1": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_0_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_0_avgcellvolt",
				"sbmu_current": "sbmu_0_idc_value",
				"sbmu_master_negative": "sbmu_0_dccontactor",
				"sbmu_master_positive": "sbmu_0_dccontactor",
				"sbmu_max_cell_temp": "sbmu_0_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_0_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_0_icharge",
				"sbmu_max_discharge_current": "sbmu_0_idischarge",
				"sbmu_min_cell_temp": "sbmu_0_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_0_mincellvolt_value",
				"sbmu_soc": "sbmu_0_soc_value",
				"sbmu_soh": "sbmu_0_soh",
				"sbmu_voltage": "sbmu_0_vdc"
			}
		}
	},
	"/components/catl_rack_2": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_1_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_1_avgcellvolt",
				"sbmu_current": "sbmu_1_idc_value",
				"sbmu_master_negative": "sbmu_1_dccontactor",
				"sbmu_master_positive": "sbmu_1_dccontactor",
				"sbmu_max_cell_temp": "sbmu_1_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_1_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_1_icharge",
				"sbmu_max_discharge_current": "sbmu_1_idischarge",
				"sbmu_min_cell_temp": "sbmu_1_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_1_mincellvolt_value",
				"sbmu_soc": "sbmu_1_soc_value",
				"sbmu_soh": "sbmu_1_soh",
				"sbmu_voltage": "sbmu_1_vdc"
			}
		}
	},
	"/components/catl_rack_3": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_2_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_2_avgcellvolt",
				"sbmu_current": "sbmu_2_idc_value",
				"sbmu_master_negative": "sbmu_2_dccontactor",
				"sbmu_master_positive": "sbmu_2_dccontactor",
				"sbmu_max_cell_temp": "sbmu_2_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_2_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_2_icharge",
				"sbmu_max_discharge_current": "sbmu_2_idischarge",
				"sbmu_min_cell_temp": "sbmu_2_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_2_mincellvolt_value",
				"sbmu_soc": "sbmu_2_soc_value",
				"sbmu_soh": "sbmu_2_soh",
				"sbmu_voltage": "sbmu_2_vdc"
			}
		}
	},
	"/components/catl_rack_4": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_3_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_3_avgcellvolt",
				"sbmu_current": "sbmu_3_idc_value",
				"sbmu_master_negative": "sbmu_3_dccontactor",
				"sbmu_master_positive": "sbmu_3_dccontactor",
				"sbmu_max_cell_temp": "sbmu_3_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_3_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_3_icharge",
				"sbmu_max_discharge_current": "sbmu_3_idischarge",
				"sbmu_min_cell_temp": "sbmu_3_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_3_mincellvolt_value",
				"sbmu_soc": "sbmu_3_soc_value",
				"sbmu_soh": "sbmu_3_soh",
				"sbmu_voltage": "sbmu_3_vdc"
			}
		}
	},
	"/components/catl_rack_5": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_4_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_4_avgcellvolt",
				"sbmu_current": "sbmu_4_idc_value",
				"sbmu_master_negative": "sbmu_4_dccontactor",
				"sbmu_master_positive": "sbmu_4_dccontactor",
				"sbmu_max_cell_temp": "sbmu_4_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_4_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_4_icharge",
				"sbmu_max_discharge_current": "sbmu_4_idischarge",
				"sbmu_min_cell_temp": "sbmu_4_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_4_mincellvolt_value",
				"sbmu_soc": "sbmu_4_soc_value",
				"sbmu_soh": "sbmu_4_soh",
				"sbmu_voltage": "sbmu_4_vdc"
			}
		}
	},
	"/components/catl_rack_6": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_5_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_5_avgcellvolt",
				"sbmu_current": "sbmu_5_idc_value",
				"sbmu_master_negative": "sbmu_5_dccontactor",
				"sbmu_master_positive": "sbmu_5_dccontactor",
				"sbmu_max_cell_temp": "sbmu_5_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_5_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_5_icharge",
				"sbmu_max_discharge_current": "sbmu_5_idischarge",
				"sbmu_min_cell_temp": "sbmu_5_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_5_mincellvolt_value",
				"sbmu_soc": "sbmu_5_soc_value",
				"sbmu_soh": "sbmu_5_soh",
				"sbmu_voltage": "sbmu_5_vdc"
			}
		}
	},
	"/components/catl_rack_7": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_6_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_6_avgcellvolt",
				"sbmu_current": "sbmu_6_idc_value",
				"sbmu_master_negative": "sbmu_6_dccontactor",
				"sbmu_master_positive": "sbmu_6_dccontactor",
				"sbmu_max_cell_temp": "sbmu_6_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_6_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_6_icharge",
				"sbmu_max_discharge_current": "sbmu_6_idischarge",
				"sbmu_min_cell_temp": "sbmu_6_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_6_mincellvolt_value",
				"sbmu_soc": "sbmu_6_soc_value",
				"sbmu_soh": "sbmu_6_soh",
				"sbmu_voltage": "sbmu_6_vdc"
			}
		}
	},
	"/components/catl_rack_8": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_7_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_7_avgcellvolt",
				"sbmu_current": "sbmu_7_idc_value",
				"sbmu_master_negative": "sbmu_7_dccontactor",
				"sbmu_master_positive": "sbmu_7_dccontactor",
				"sbmu_max_cell_temp": "sbmu_7_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_7_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_7_icharge",
				"sbmu_max_discharge_current": "sbmu_7_idischarge",
				"sbmu_min_cell_temp": "sbmu_7_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_7_mincellvolt_value",
				"sbmu_soc": "sbmu_7_soc_value",
				"sbmu_soh": "sbmu_7_soh",
				"sbmu_voltage": "sbmu_7_vdc"
			}
		}
	},
	"/components/catl_rack_9": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_8_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_8_avgcellvolt",
				"sbmu_current": "sbmu_8_idc_value",
				"sbmu_master_negative": "sbmu_8_dccontactor",
				"sbmu_master_positive": "sbmu_8_dccontactor",
				"sbmu_max_cell_temp": "sbmu_8_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_8_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_8_icharge",
				"sbmu_max_discharge_current": "sbmu_8_idischarge",
				"sbmu_min_cell_temp": "sbmu_8_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_8_mincellvolt_value",
				"sbmu_soc": "sbmu_8_soc_value",
				"sbmu_soh": "sbmu_8_soh",
				"sbmu_voltage": "sbmu_8_vdc"
			}
		}
	}
}
PSM: 2024/01/11 15:07:19 transmission_line: Transformer magnetizing reactive power calculated from x.Mag, x.Eff, and X.Zpu is zero. Increase x.Mag.
PSM: 2024/01/11 15:07:19 tx_ess_1: Transformer magnetizing reactive power calculated from x.Mag, x.Eff, and X.Zpu is zero. Increase x.Mag.
PSM: 2024/01/11 15:07:19 tx_ess_2: Transformer magnetizing reactive power calculated from x.Mag, x.Eff, and X.Zpu is zero. Increase x.Mag.
PSM: 2024/01/11 15:07:19 tx_ess_3: Transformer magnetizing reactive power calculated from x.Mag, x.Eff, and X.Zpu is zero. Increase x.Mag.
PSM: 2024/01/11 15:07:19 Configured 15 assets
PSM: 2024/01/11 15:07:19 Starting main loop

2024-01-11T15:07:19Z  [GO_METRICS] | WARN  |
 	Caller: initialization.go:1638
 	Message: Error unmarshaling json file: 
[] echo > {} 1 > {} echo > selector_status: default value for echo input register 'selector_status' was not specified and echo object does not contain field 'null_value_default' to override the null register value; setting default value of register to 0 (warning only)



2024-01-11T15:07:19Z  [GO_METRICS] | INFO  |
 	Caller: eval.go:38
 	Message: Subscribed to:
		/go_metrics
		/components/pcs_1
		/components/twins_sel_735
		/components/bms_1
		/components/pcs_registers_fast
		/components/pcs_registers_slow


launching last ess ess_file with configs...
[0.000176312s] [info    ] [main_test_new_e]  -f option -> setup FlexCfile [ess_file]

[0.000973377s] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"Config":	"ess_init",
	"EssName":	"ess",
	"Subs":	":/assets:/site:/components:"
}].
tsc_ghz:2.8031980548921416
rdns_latency: 15 tmp: 2772881707698175888
[1.01232s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [ess_init]
[1.0128s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [ess_init]
[1.01313s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [ess]
[1.01337s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [ess]
[1.01374s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [:/assets:/site:/components:]
[1.01395s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [:/assets:/site:/components:]
[1.01425s  ] [info    ] [scheduler      ] hello scheduler [essSched]
[1.04458s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [ess]
[1.04505s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [ess]
[1.04536s  ] [info    ] [setFunc        ] Note: adding aname [ess] to funMap av 0x7f9b2093c010
[1.04566s  ] [info    ] [setFunc        ] Note: adding aname [bms] to funMap av 0x7f9b2093c010
[1.04611s  ] [info    ] [setFunc        ] Note: adding aname [pcs] to funMap av 0x7f9b2093c010
[1.04691s  ] [info    ] [setFunc        ] Note: adding aname [flex] to funMap av 0x7f9b209a3ad0
[1.04733s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [decode value bits  into a number  of different values]
[1.04771s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [decode value bits  into a number  of different values]
[1.04814s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [set or clear a bit in an output var]
[1.04838s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [set or clear a bit in an output var]
[1.04879s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [decode a value into a number of different values]
[1.0492s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [decode a value into a number of different values]
[1.04958s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [forward a value to a different uri]
[1.05001s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [forward a value to a different uri]
[1.05043s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [set limits on a value]
[1.05082s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [set limits on a value]
[1.05123s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [run a func using an assetVar as an argument]
[1.05167s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [run a func using an assetVar as an argument]
[1.05216s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [use a bitmap to set the output variable]
[1.05262s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [use a bitmap to set the output variable]
[1.05324s  ] [info    ] [showVecList    ] [0] :: [/ess]
[1.05404s  ] [info    ] [showVecList    ] [1] :: [/assets]
[1.05438s  ] [info    ] [showVecList    ] [2] :: [/site]
[1.05477s  ] [info    ] [showVecList    ] [3] :: [/components]
[1.05511s  ] [info    ] [getVecListbyNam] no entry in vecs for [Subs]
[1.05541s  ] [info    ] [main_test_new_e] recovered  [ess]  Subs [0x0] len  [0]
[1.05567s  ] [info    ] [main_test_new_e]  flex_man >> No Subs found in flex config
[1.0559s   ] [info    ] [fimsSetup      ] FIMSSETUP size of subs = 4
[1.0574s   ] [info    ] [fimsSetup      ] name FlexSched connected to FIMS at attempt 0
[1.05796s  ] [info    ] [fimsSetup      ] name FlexSched subscribed to FIMS [true] connected [true]
[1.05822s  ] [info    ] [main_test_new_e]  flex_man >> p_fims [0x19188f0]  sched [0x19188f0]
[1.05888s  ] [info    ] [write_cjson    ] Wrote 4793 bytes to file /var/log/ess_controller/run_configs/ess_after_assets.json
 main_test_new_ess >> aV [/config/system:ess]
[1.0603s   ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"ess starting  at 0.034","severity":1}]
[1.06095s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [ACO-155-Coarse-Battery-Rack-Balancing-Infrastructure]
[1.0614s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [ACO-155-Coarse-Battery-Rack-Balancing-Infrastructure]
[1.0619s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [cc96d6a]
[1.06245s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [cc96d6a]
[1.0629s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [v11.3.0-beta.4-397]
[1.06342s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [v11.3.0-beta.4-397]
[1.06448s  ] [info    ] [runConfig      ]  requesting cfile [ess_init] 
[1.06507s  ] [info    ] [requestCfile   ] Getting from DBI ess_init
[1.06557s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [ess_config]
[1.06601s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [ess_config]
[1.06643s  ] [info    ] [handleCfile    ]  Running Loader 
[1.06741s  ] [info    ] [setupControls  ] Created Fims var [/sched/fims:dummy]
[1.06816s  ] [info    ] [setupControls  ] Created Runvar var [/control/ess:runTime]
[1.06842s  ] [info    ] [setupControls  ] Created Stop var [/control/ess:stopTime]
[1.06872s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_SchedPerf]
[1.06921s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_SchedPerf]
[1.06989s  ] [info    ] [schedThread    ] this is a replacement schedItem 0x193b400 id ess_config uri /config/control:ess_config
[1.07032s  ] [info    ] [schedThread    ] schedItem deleted, seting repTime to 0.0
[1.07097s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:ess_init]  am at start [ess]
[1.07164s  ] [info    ] [configure_vmapS] process file seeking header stuff am [ess] ai [no ai]
[1.07218s  ] [info    ] [configure_vmapS] body: {"/config/load":{"ess_controller":{"aname":"ess","file":"ess_controller","final":"ess_final","new_options":[{"aname":"ess","file":"ess_controller_server_interface","pname":"ess"},{"aname":"ess","file":"ess_controller_ui","pname":"ess"},{"aname":"bms","load":"catl_bms_init","pname":"ess"},{"aname":"pcs","load":"pe_pcs_init","pname":"ess"}],"note1":"Loads ess_controller first. Then, configs defined in new_options, if any, are loaded next","note2":"Once all files are loaded, then ess_final is loaded","value":false}}}
[1.07257s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[1.07361s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ess_controller":	{
		"aname":	"ess",
		"file":	"ess_controller",
		"final":	"ess_final",
		"new_options":	[{
				"aname":	"ess",
				"file":	"ess_controller_server_interface",
				"pname":	"ess"
			}, {
				"aname":	"ess",
				"file":	"ess_controller_ui",
				"pname":	"ess"
			}, {
				"aname":	"bms",
				"load":	"catl_bms_init",
				"pname":	"ess"
			}, {
				"aname":	"pcs",
				"load":	"pe_pcs_init",
				"pname":	"ess"
			}],
		"note1":	"Loads ess_controller first. Then, configs defined in new_options, if any, are loaded next",
		"note2":	"Once all files are loaded, then ess_final is loaded",
		"value":	false
	}
}].
[1.95712s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [aux_load]
[1.95796s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [aux_load]
[1.95931s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_sel_3530_rtac]
[1.95993s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_sel_3530_rtac]
[1.96084s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_sel_651r]
[1.9613s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_sel_651r]
[1.9619s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_sel_735]
[1.96247s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_sel_735]
[1.96366s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [transmission_line]
[1.96446s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [transmission_line]
[1.96559s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [tx_aux]
[1.96612s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [tx_aux]
[1.96794s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [tx_ess_2]
[1.96855s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [tx_ess_2]
[1.9728s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[1.9735s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[1.97393s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[1.97441s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[1.97481s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[1.97527s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[1.97562s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[1.9762s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[1.97718s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [bms_1]
[1.97761s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [bms_1]
[1.99902s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Stopped]
[1.99962s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Stopped]
[2.00016s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.00082s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.00226s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.00282s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.00743s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [grid]
[2.00813s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [grid]
[2.00901s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_sel_3530_rtac]
[2.01022s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_sel_3530_rtac]
[2.01071s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_sel_651r]
[2.01137s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_sel_651r]
[2.01316s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_sel_735]
[2.01354s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_sel_735]
[2.01441s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_sel_3530_rtac]
[2.01479s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_sel_3530_rtac]
[2.01527s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_sel_651r]
[2.01577s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_sel_651r]
[2.01656s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_sel_735]
[2.0171s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_sel_735]
[2.02045s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.02153s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.02201s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.0225s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.02711s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.02766s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.02863s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.02907s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.03106s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [bms_2]
[2.03207s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [bms_2]
[2.05619s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Stopped]
[2.05709s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Stopped]
[2.05781s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.05817s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.05857s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.05898s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.06388s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.06504s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.06581s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.06629s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.06702s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.06762s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.06819s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.06861s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.06967s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [bms_3]
[2.0701s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [bms_3]
[2.08248s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Stopped]
[2.0831s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Stopped]
[2.08368s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.08411s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.08457s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.08502s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.08645s  ] [info    ] [runConfig      ]  requesting cfile [ess_controller] 
[2.08694s  ] [info    ] [requestCfile   ] Getting from DBI ess_controller
[2.08865s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.08902s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.08928s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.08986s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.09026s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standbycmd]
[2.09061s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standbycmd]
[2.09106s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.0914s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.09178s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.09215s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.09251s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standbycmd]
[2.09278s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standbycmd]
[2.09325s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.09371s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.09427s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.0947s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.09528s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standbycmd]
[2.09559s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standbycmd]
[2.09655s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pcs_1]
[2.09707s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pcs_1]
[2.098s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Stopped]
[2.09863s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Stopped]
[2.09927s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Not Standby]
[2.09999s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Not Standby]
[2.10071s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.10127s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.1019s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.10245s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.10308s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standby]
[2.10361s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standby]
[2.10417s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standby]
[2.10467s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standby]
[2.1057s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.10612s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.10702s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.10755s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.10801s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standbycmd]
[2.10849s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standbycmd]
[2.10977s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.11057s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.11127s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.1118s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.1123s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standbycmd]
[2.11278s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standbycmd]
[2.11338s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.11396s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.11447s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.11497s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.11542s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standbycmd]
[2.11588s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standbycmd]
[2.11726s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pcs_2]
[2.11795s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pcs_2]
[2.1191s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Stopped]
[2.11971s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Stopped]
[2.12024s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Standby]
[2.12089s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Standby]
[2.12152s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.12215s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.12276s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.12312s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.12373s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.12422s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.12615s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.12682s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.12716s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.12746s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.12787s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standbycmd]
[2.12837s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standbycmd]
[2.12918s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.12964s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.13021s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.13056s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.1311s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standbycmd]
[2.13162s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standbycmd]
[2.13298s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [oncmd]
[2.13361s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [oncmd]
[2.13417s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [offcmd]
[2.1346s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [offcmd]
[2.13492s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [standbycmd]
[2.13546s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [standbycmd]
[2.13671s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pcs_3]
[2.13723s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pcs_3]
[2.13838s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Stopped]
[2.13886s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Stopped]
[2.1396s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Standby]
[2.14016s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Standby]
[2.14097s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.14214s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.14271s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.14313s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.14377s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [on]
[2.14427s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [on]
[2.14577s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [psm_acuvim]
[2.14632s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [psm_acuvim]
[2.14749s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [tx_ess_1]
[2.14809s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [tx_ess_1]
[2.14978s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [tx_ess_3]
[2.15035s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [tx_ess_3]
[2.15275s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:ess_controller]  am at start [ess]
[2.15353s  ] [info    ] [configure_vmapS] process file seeking header stuff am [ess] ai [no ai]
[2.15396s  ] [info    ] [configure_vmapS] body: {"/config/ess":{"AlarmDestination":"/assets/ess/ess_1:alarms","EventSourceFormat":{"value":"assetName"},"FaultDestination":"/assets/ess/ess_1:faults","LogDir":"/var/log/ess_controller","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false},"/sched/ess":{"BatteryRackBalanceCoarse":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"BatteryRackBalanceCoarse"}]}]},"every":0.5,"value":"BatteryRackBalanceCoarse"},"SiteBMSContactorControl":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"SiteBMSContactorControl"}]}]},"every":1,"value":"SiteBMSContactorControl"},"SitePCSStatusControl":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"SitePCSStatusControl"}]}]},"every":0.5,"value":"SitePCSStatusControl"},"SiteRunCmd":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"SiteRunCmd"}]}]},"every":0.5,"value":"SiteRunCmd"},"every1000ms_ess":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"Every1000mS"}]}]},"enable":"/config/ess:enable","note1":"Periodically runs Every1000mS, which is useful for reporting CPU statistics","note2":"Also useful for writing currently loaded ESS Controller variables to /var/log/ess_controller/run_configs folder","value":1},"pubAssets_ess":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"RunPub"}]}]},"enable":"/config/ess:enable","mode":"ui","note":"Publishes UI asset data (/assets/ess/ess_1)","table":"/assets/ess/ess_1","value":1},"pubESS":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"RunPub"}]}]},"enable":"/config/ess:enable","mode":"naked","note":"Publishes ESS Controller data (/site/ess)","table":"/site/ess","value":1},"runMonitor_ess":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"RunMonitor"}]}]},"aname":"ess","enable":"/config/ess:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/ess","value":1},"updateHeartbeatWrite_ess":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"CalculateVar","inAv":"/status/ess:HeartbeatWrite"}]}]},"enable":"/config/ess:enable","note":"Periodically updates the heartbeat write variable defined in /status/ess:HeartbeatWrite","value":1}},"/schedule/wake_monitor/ess":{"/status/ess:IsAlarming":{"amap":"ess","func":"CalculateVar"},"/status/ess:IsFaulted":{"amap":"ess","func":"CalculateVar"}},"/status/ess":{"AlarmCnt":0,"CommsOK":false,"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"value":false},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"uri":"/site/ess:heartbeat_from_ess"}]}]},"enable":"/config/ess:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/ess:HeartbeatWrite"},"IsAlarming":{"expression":"{1} or {2} or {3} \u003e 0","numVars":3,"useExpr":true,"value":false,"variable1":"/status/bms:IsAlarming","variable2":"/status/pcs:IsAlarming","variable3":"/status/ess:AlarmCnt"},"IsFaulted":{"expression":"{1} or {2} or {3} \u003e 0","numVars":3,"useExpr":true,"value":false,"variable1":"/status/bms:IsFaulted","variable2":"/status/pcs:IsFaulted","variable3":"/status/ess:FaultCnt"}},"/system/commands":{"runOpts_ess":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/ess) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"ess","every":1,"uri":"/sched/ess:pubAssets_ess","value":1},{"aname":"ess","every":0.1,"uri":"/sched/ess:runMonitor_ess","value":1},{"aname":"ess","every":1,"uri":"/sched/ess:updateHeartbeatWrite_ess","value":1},{"aname":"ess","every":0.1,"uri":"/sched/ess:pubESS","value":1},{"aname":"ess","every":1,"uri":"/sched/ess:every1000ms_ess","value":1},{"aname":"ess","debug":0,"every":0,"offset":0,"uri":"/sched/ess:SiteRunCmd","value":0},{"aname":"ess","debug":0,"every":0,"offset":0,"uri":"/sched/ess:SiteBMSContactorControl","value":0},{"aname":"ess","debug":0,"every":0,"offset":0,"uri":"/sched/ess:SitePCSStatusControl","value":0},{"aname":"ess","debug":0,"every":0,"offset":0,"uri":"/sched/ess:BatteryRackBalanceCoarse","value":0}],"targav":"/system/commands:run","value":false}}}
[2.15485s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[2.15533s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/ess/ess_1:alarms",
	"EventSourceFormat":	{
		"value":	"assetName"
	},
	"FaultDestination":	"/assets/ess/ess_1:faults",
	"LogDir":	"/var/log/ess_controller",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false
}].
[2.15577s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:alarms]
[2.15601s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:alarms]
[2.15671s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [assetName]
[2.1572s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [assetName]
[2.1577s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:faults]
[2.15812s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:faults]
[2.15851s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/var/log/ess_controller]
[2.1589s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/var/log/ess_controller]
[2.15931s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[2.15976s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[2.16018s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[2.1606s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[2.16139s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"BatteryRackBalanceCoarse":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"BatteryRackBalanceCoarse"
						}]
				}]
		},
		"every":	0.5,
		"value":	"BatteryRackBalanceCoarse"
	},
	"SiteBMSContactorControl":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"SiteBMSContactorControl"
						}]
				}]
		},
		"every":	1,
		"value":	"SiteBMSContactorControl"
	},
	"SitePCSStatusControl":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"SitePCSStatusControl"
						}]
				}]
		},
		"every":	0.5,
		"value":	"SitePCSStatusControl"
	},
	"SiteRunCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"SiteRunCmd"
						}]
				}]
		},
		"every":	0.5,
		"value":	"SiteRunCmd"
	},
	"every1000ms_ess":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"Every1000mS"
						}]
				}]
		},
		"enable":	"/config/ess:enable",
		"note1":	"Periodically runs Every1000mS, which is useful for reporting CPU statistics",
		"note2":	"Also useful for writing currently loaded ESS Controller variables to /var/log/ess_controller/run_configs folder",
		"value":	1
	},
	"pubAssets_ess":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/ess:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/ess/ess_1)",
		"table":	"/assets/ess/ess_1",
		"value":	1
	},
	"pubESS":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/ess:enable",
		"mode":	"naked",
		"note":	"Publishes ESS Controller data (/site/ess)",
		"table":	"/site/ess",
		"value":	1
	},
	"runMonitor_ess":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"ess",
		"enable":	"/config/ess:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/ess",
		"value":	1
	},
	"updateHeartbeatWrite_ess":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"CalculateVar",
							"inAv":	"/status/ess:HeartbeatWrite"
						}]
				}]
		},
		"enable":	"/config/ess:enable",
		"note":	"Periodically updates the heartbeat write variable defined in /status/ess:HeartbeatWrite",
		"value":	1
	}
}].
[2.16205s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [BatteryRackBalanceCoarse]
[2.16254s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [BatteryRackBalanceCoarse]
[2.16289s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[2.16318s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:BatteryRackBalanceCoarse_ess]
[2.16352s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:BatteryRackBalanceCoarse_ess]
[2.16397s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [SiteBMSContactorControl]
[2.16432s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [SiteBMSContactorControl]
[2.16477s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:SiteBMSContactorControl_ess]
[2.16519s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:SiteBMSContactorControl_ess]
[2.16566s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [SitePCSStatusControl]
[2.16617s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [SitePCSStatusControl]
[2.16651s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:SitePCSStatusControl_ess]
[2.16696s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:SitePCSStatusControl_ess]
[2.16733s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [SiteRunCmd]
[2.16763s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [SiteRunCmd]
[2.16804s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:SiteRunCmd_ess]
[2.16845s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:SiteRunCmd_ess]
[2.16885s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:SiteRunCmd_maintModeBms]
[2.16917s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:SiteRunCmd_maintModeBms]
[2.16955s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:SiteRunCmd_maintModePcs]
[2.16998s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:SiteRunCmd_maintModePcs]
[2.17075s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/ess:IsAlarming":	{
		"amap":	"ess",
		"func":	"CalculateVar"
	},
	"/status/ess:IsFaulted":	{
		"amap":	"ess",
		"func":	"CalculateVar"
	}
}].
[2.17144s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"CommsOK":	false,
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ActivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ReactivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:Stop@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:Stop"
						}]
				}]
		},
		"ifChanged":	true,
		"value":	false
	},
	"HeartbeatWrite":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/site/ess:heartbeat_from_ess"
						}]
				}]
		},
		"enable":	"/config/ess:enable",
		"excludeFromDefaultSched":	true,
		"expression":	"if (({1} >= 59), 0, ({1} + 1))",
		"note":	"Updates and then sends the heartbeat write value",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/ess:HeartbeatWrite"
	},
	"IsAlarming":	{
		"expression":	"{1} or {2} or {3} > 0",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:IsAlarming",
		"variable2":	"/status/pcs:IsAlarming",
		"variable3":	"/status/ess:AlarmCnt"
	},
	"IsFaulted":	{
		"expression":	"{1} or {2} or {3} > 0",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:IsFaulted",
		"variable2":	"/status/pcs:IsFaulted",
		"variable3":	"/status/ess:FaultCnt"
	}
}].
[2.17259s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_ess":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/ess) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"ess",
				"every":	1,
				"uri":	"/sched/ess:pubAssets_ess",
				"value":	1
			}, {
				"aname":	"ess",
				"every":	0.1,
				"uri":	"/sched/ess:runMonitor_ess",
				"value":	1
			}, {
				"aname":	"ess",
				"every":	1,
				"uri":	"/sched/ess:updateHeartbeatWrite_ess",
				"value":	1
			}, {
				"aname":	"ess",
				"every":	0.1,
				"uri":	"/sched/ess:pubESS",
				"value":	1
			}, {
				"aname":	"ess",
				"every":	1,
				"uri":	"/sched/ess:every1000ms_ess",
				"value":	1
			}, {
				"aname":	"ess",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/ess:SiteRunCmd",
				"value":	0
			}, {
				"aname":	"ess",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/ess:SiteBMSContactorControl",
				"value":	0
			}, {
				"aname":	"ess",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/ess:SitePCSStatusControl",
				"value":	0
			}, {
				"aname":	"ess",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/ess:BatteryRackBalanceCoarse",
				"value":	0
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[2.27951s  ] [info    ] [runConfig      ]  requesting cfile [ess_controller_server_interface] 
[2.28052s  ] [info    ] [requestCfile   ] Getting from DBI ess_controller_server_interface
[2.28274s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:ess_controller_server_interface]  am at start [ess]
[2.28377s  ] [info    ] [configure_vmapS] process file seeking header stuff am [ess] ai [no ai]
[2.28503s  ] [info    ] [configure_vmapS] body: {"/schedule/wake_monitor/ess":{"/site/ess:heartbeat_to_ess":{"amap":"ess","func":"CheckMonitorVar"}},"/site/ess":{"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"LogInfo"}]},{"remap":[{"inValue":1,"outValue":true,"uri":"/controls/bms:ClearFaults@triggerCmd"},{"inValue":1,"outValue":1,"uri":"/controls/bms:ClearFaults"},{"inValue":1,"outValue":true,"uri":"/controls/pcs:ClearFaults@triggerCmd"},{"inValue":1,"outValue":0,"uri":"/controls/pcs:ClearFaults"}]}]},"enable":"/config/ess:enable","ifChanged":false,"name":"Clear Faults Command","note":"Initiates BMS/PCS clear faults command routines and clears ESS Controller alarms/faults","type":"control","value":0},"comms_faults":{"bit0":"PCS Communication Failure","bit1":"BMS Commnuication Failure","name":"Comms Faults","type":"bitfield","value":0},"ess_alarm_active":{"name":"ESS Alarm Active","type":"status","value":false},"ess_fault_active":{"name":"ESS Fault Active","type":"status","value":false},"ess_max_charge_power":{"name":"ESS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"ess_max_discharge_power":{"name":"ESS Max Discharge Power","type":"status","units":"kW","value":0},"heartbeat_from_ess":{"name":"Heartbeat From ESS Controller","type":"status","value":0},"heartbeat_to_ess":{"AlarmTimeout":10,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":10,"RecoverTimeout":0.1,"Type":"int","name":"Heartbeat To ESS Controller","note":"Checks if the ESS Controller is communicating with other processes (e.g. EMS, ESS Controller)","type":"control","value":0},"site_status_control_command":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/pcs:enable","every":0.5,"ifChanged":false,"name":"Start/Stop/Standby Command","note1":"Initiates ESS start, standby, or stop command routines","note2":"0-\u003estop | 1-\u003estart | 2-\u003estandby","offset":0,"size":1,"type":"control","uri":"/sched/ess:SiteRunCmd","value":-1}},"/vlinks/ess":{"site_ess_alarm_active":{"value":"/site/ess:ess_alarm_active","vlink":"/status/ess:IsAlarming"},"site_ess_fault_active":{"value":"/site/ess:ess_fault_active","vlink":"/status/ess:IsFaulted"},"site_ess_max_charge_power":{"value":"/site/ess:ess_max_charge_power","vlink":"/limits/ess:MaxChargePower"},"site_ess_max_discharge_power":{"value":"/site/ess:ess_max_discharge_power","vlink":"/limits/ess:MaxDischargePower"}}}
[2.28686s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[2.28758s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/site/ess:heartbeat_to_ess":	{
		"amap":	"ess",
		"func":	"CheckMonitorVar"
	}
}].
[2.289s    ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	1,
							"outValue":	true,
							"uri":	"/controls/bms:ClearFaults@triggerCmd"
						}, {
							"inValue":	1,
							"outValue":	1,
							"uri":	"/controls/bms:ClearFaults"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/controls/pcs:ClearFaults@triggerCmd"
						}, {
							"inValue":	1,
							"outValue":	0,
							"uri":	"/controls/pcs:ClearFaults"
						}]
				}]
		},
		"enable":	"/config/ess:enable",
		"ifChanged":	false,
		"name":	"Clear Faults Command",
		"note":	"Initiates BMS/PCS clear faults command routines and clears ESS Controller alarms/faults",
		"type":	"control",
		"value":	0
	},
	"comms_faults":	{
		"bit0":	"PCS Communication Failure",
		"bit1":	"BMS Commnuication Failure",
		"name":	"Comms Faults",
		"type":	"bitfield",
		"value":	0
	},
	"ess_alarm_active":	{
		"name":	"ESS Alarm Active",
		"type":	"status",
		"value":	false
	},
	"ess_fault_active":	{
		"name":	"ESS Fault Active",
		"type":	"status",
		"value":	false
	},
	"ess_max_charge_power":	{
		"name":	"ESS Max Charge Power",
		"signed":	true,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"ess_max_discharge_power":	{
		"name":	"ESS Max Discharge Power",
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"heartbeat_from_ess":	{
		"name":	"Heartbeat From ESS Controller",
		"type":	"status",
		"value":	0
	},
	"heartbeat_to_ess":	{
		"AlarmTimeout":	10,
		"EnableCommsCheck":	false,
		"EnableStateCheck":	false,
		"FaultTimeout":	10,
		"RecoverTimeout":	0.1,
		"Type":	"int",
		"name":	"Heartbeat To ESS Controller",
		"note":	"Checks if the ESS Controller is communicating with other processes (e.g. EMS, ESS Controller)",
		"type":	"control",
		"value":	0
	},
	"site_status_control_command":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched"
						}]
				}]
		},
		"aname":	"ess",
		"debug":	0,
		"enable":	"/config/pcs:enable",
		"every":	0.5,
		"ifChanged":	false,
		"name":	"Start/Stop/Standby Command",
		"note1":	"Initiates ESS start, standby, or stop command routines",
		"note2":	"0->stop | 1->start | 2->standby",
		"offset":	0,
		"size":	1,
		"type":	"control",
		"uri":	"/sched/ess:SiteRunCmd",
		"value":	-1
	}
}].
[2.2907s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"site_ess_alarm_active":	{
		"value":	"/site/ess:ess_alarm_active",
		"vlink":	"/status/ess:IsAlarming"
	},
	"site_ess_fault_active":	{
		"value":	"/site/ess:ess_fault_active",
		"vlink":	"/status/ess:IsFaulted"
	},
	"site_ess_max_charge_power":	{
		"value":	"/site/ess:ess_max_charge_power",
		"vlink":	"/limits/ess:MaxChargePower"
	},
	"site_ess_max_discharge_power":	{
		"value":	"/site/ess:ess_max_discharge_power",
		"vlink":	"/limits/ess:MaxDischargePower"
	}
}].
[2.29134s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:ess_alarm_active]
[2.29172s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:ess_alarm_active]
[2.2922s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:ess_fault_active]
[2.29257s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:ess_fault_active]
[2.29299s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:ess_max_charge_power]
[2.29336s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:ess_max_charge_power]
[2.29397s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:ess_max_discharge_power]
[2.2944s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:ess_max_discharge_power]
[2.47929s  ] [info    ] [runConfig      ]  requesting cfile [ess_controller_ui] 
[2.48684s  ] [info    ] [requestCfile   ] Getting from DBI ess_controller_ui
[2.49776s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:ess_controller_ui]  am at start [ess]
[2.49829s  ] [info    ] [configure_vmapS] process file seeking header stuff am [ess] ai [no ai]
[2.49868s  ] [info    ] [configure_vmapS] body: {"/assets/ess/ess_1":{"build":{"value":"INIT"},"comms_ok":{"value":false},"curr_real_mem":{"value":0},"max_apparent_power":{"value":0},"max_charge_power":{"value":0},"max_discharge_power":{"value":0},"max_reactive_power":{"value":0},"peak_real_mem":{"value":0},"system_temp":{"value":0}},"/assets/ess/summary":{"battery_rack_balance_coarse":{"ControlRate":"use every above for this","Gain":10,"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":true,"every":0.5,"name":"Battery Rack Balance Coarse","note":"Enabled conditions: ![/status/bms/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode] \u0026\u0026 ![/status/bms/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/ess:BatteryRackBalanceCoarse","value":false}},"/vlinks/ess":{"ui_build":{"value":"/assets/ess/ess_1:build","vlink":"/status/ess:build"},"ui_comms_ok":{"value":"/assets/ess/ess_1:comms_ok","vlink":"/status/ess:CommsOK"},"ui_curr_real_mem":{"value":"/assets/ess/ess_1:curr_real_mem","vlink":"/status/ess:currRealMem"},"ui_max_apparent_power":{"value":"/assets/ess/ess_1:max_apparent_power","vlink":"/limits/ess:MaxApparentPower"},"ui_max_charge_power":{"value":"/assets/ess/ess_1:max_charge_power","vlink":"/limits/ess:MaxChargePower"},"ui_max_discharge_power":{"value":"/assets/ess/ess_1:max_discharge_power","vlink":"/limits/ess:MaxDischargePower"},"ui_max_reactive_power":{"value":"/assets/ess/ess_1:max_reactive_power","vlink":"/limits/ess:MaxReactivePower"},"ui_peak_real_mem":{"value":"/assets/ess/ess_1:peak_real_mem","vlink":"/status/ess:peakRealMem"},"ui_system_temp":{"value":"/assets/ess/ess_1:system_temp","vlink":"/status/ess:system_temp"}}}
[2.49917s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[2.49958s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"build":	{
		"value":	"INIT"
	},
	"comms_ok":	{
		"value":	false
	},
	"curr_real_mem":	{
		"value":	0
	},
	"max_apparent_power":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"max_reactive_power":	{
		"value":	0
	},
	"peak_real_mem":	{
		"value":	0
	},
	"system_temp":	{
		"value":	0
	}
}].
[2.50037s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[2.50066s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[2.50138s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"battery_rack_balance_coarse":	{
		"ControlRate":	"use every above for this",
		"Gain":	10,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched",
							"inValue":	true
						}]
				}]
		},
		"aname":	"bms",
		"debug":	0,
		"enabled":	true,
		"every":	0.5,
		"name":	"Battery Rack Balance Coarse",
		"note":	"Enabled conditions: ![/status/bms/DCClosed] && [/assets/bms/summary/maint_mode] && ![/status/bms/IsFaulted]",
		"offset":	0,
		"scaler":	0,
		"type":	"enum_button",
		"ui_type":	"control",
		"unit":	"",
		"uri":	"/sched/ess:BatteryRackBalanceCoarse",
		"value":	false
	}
}].
[2.50195s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_build":	{
		"value":	"/assets/ess/ess_1:build",
		"vlink":	"/status/ess:build"
	},
	"ui_comms_ok":	{
		"value":	"/assets/ess/ess_1:comms_ok",
		"vlink":	"/status/ess:CommsOK"
	},
	"ui_curr_real_mem":	{
		"value":	"/assets/ess/ess_1:curr_real_mem",
		"vlink":	"/status/ess:currRealMem"
	},
	"ui_max_apparent_power":	{
		"value":	"/assets/ess/ess_1:max_apparent_power",
		"vlink":	"/limits/ess:MaxApparentPower"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/ess/ess_1:max_charge_power",
		"vlink":	"/limits/ess:MaxChargePower"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/ess/ess_1:max_discharge_power",
		"vlink":	"/limits/ess:MaxDischargePower"
	},
	"ui_max_reactive_power":	{
		"value":	"/assets/ess/ess_1:max_reactive_power",
		"vlink":	"/limits/ess:MaxReactivePower"
	},
	"ui_peak_real_mem":	{
		"value":	"/assets/ess/ess_1:peak_real_mem",
		"vlink":	"/status/ess:peakRealMem"
	},
	"ui_system_temp":	{
		"value":	"/assets/ess/ess_1:system_temp",
		"vlink":	"/status/ess:system_temp"
	}
}].
[2.50282s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:build]
[2.50314s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:build]
[2.5036s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:comms_ok]
[2.50398s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:comms_ok]
[2.5043s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:curr_real_mem]
[2.5047s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:curr_real_mem]
[2.50512s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:max_apparent_power]
[2.50577s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:max_apparent_power]
[2.50622s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:max_charge_power]
[2.50688s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:max_charge_power]
[2.50717s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:max_discharge_power]
[2.50742s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:max_discharge_power]
[2.5077s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:max_reactive_power]
[2.50804s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:max_reactive_power]
[2.50851s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:peak_real_mem]
[2.50895s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:peak_real_mem]
[2.50974s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:system_temp]
[2.5101s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:system_temp]
[2.77927s  ] [info    ] [runConfig      ]  requesting cfile [catl_bms_init] 
[2.77997s  ] [info    ] [requestCfile   ] Getting from DBI catl_bms_init
[2.78147s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:catl_bms_init]  am at start [no Am]
[2.78197s  ] [info    ] [configure_vmapS] process file seeking header stuff am [bms] ai [no ai]
[2.78234s  ] [info    ] [configure_vmapS] body: {"/config/load":{"catl_bms_init":{"aname":"bms","file":"catl_bms_init","new_options":[{"amname":"bms","from":1,"pname":"ess","reps":[{"replace":"##BMS_ID##","with":"bms_{:01d}"},{"replace":"##BMS_NUM##","with":"{:01d}"},{"replace":"##PCS_ID##","with":"pcs_{:01d}"},{"replace":"##ESS_ID##","with":"ess_{:01d}"}],"tmpls":["catl_bms_manager","catl_bms_manager_controls","catl_bms_manager_faults","catl_bms_manager_client_interface","catl_bms_manager_server_interface","catl_bms_manager_ui"],"to":1},{"ainame":"##RACK_ID##","from":1,"pname":"bms","reps":[{"replace":"##RACK_ID##","with":"rack_{:01d}"},{"replace":"##RACK_NUM##","with":"{:01d}"}],"tmpls":["catl_bms_rack","catl_bms_rack_controls","catl_bms_rack_faults","catl_bms_rack_client_interface","catl_bms_rack_server_interface","catl_bms_rack_ui"],"to":9}],"note":"Loads catl_bms_init first. Then, configs defined in new_options, if any, are loaded next","pname":"ess","value":false}}}
[2.78274s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[2.78324s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"catl_bms_init":	{
		"aname":	"bms",
		"file":	"catl_bms_init",
		"new_options":	[{
				"amname":	"bms",
				"from":	1,
				"pname":	"ess",
				"reps":	[{
						"replace":	"##BMS_ID##",
						"with":	"bms_{:01d}"
					}, {
						"replace":	"##BMS_NUM##",
						"with":	"{:01d}"
					}, {
						"replace":	"##PCS_ID##",
						"with":	"pcs_{:01d}"
					}, {
						"replace":	"##ESS_ID##",
						"with":	"ess_{:01d}"
					}],
				"tmpls":	["catl_bms_manager", "catl_bms_manager_controls", "catl_bms_manager_faults", "catl_bms_manager_client_interface", "catl_bms_manager_server_interface", "catl_bms_manager_ui"],
				"to":	1
			}, {
				"ainame":	"##RACK_ID##",
				"from":	1,
				"pname":	"bms",
				"reps":	[{
						"replace":	"##RACK_ID##",
						"with":	"rack_{:01d}"
					}, {
						"replace":	"##RACK_NUM##",
						"with":	"{:01d}"
					}],
				"tmpls":	["catl_bms_rack", "catl_bms_rack_controls", "catl_bms_rack_faults", "catl_bms_rack_client_interface", "catl_bms_rack_server_interface", "catl_bms_rack_ui"],
				"to":	9
			}],
		"note":	"Loads catl_bms_init first. Then, configs defined in new_options, if any, are loaded next",
		"pname":	"ess",
		"value":	false
	}
}].
[2.98014s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_manager] try number [1] 
[2.98136s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_manager_client_interface] try number [1] 
[2.98266s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_manager_controls] try number [1] 
[2.98389s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_manager_faults] try number [1] 
[2.98605s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_manager_server_interface] try number [1] 
[2.98754s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_manager_ui] try number [1] 
[3.17934s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_rack] try number [1] 
[3.18076s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_rack_client_interface] try number [1] 
[3.18169s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_rack_controls] try number [1] 
[3.18229s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_rack_faults] try number [1] 
[3.18288s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_rack_server_interface] try number [1] 
[3.18362s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_rack_ui] try number [1] 
[3.27942s  ] [info    ] [runConfig      ]  All files loaded for loader [catl_bms_init] ready to run av [/config/load:catl_bms_init] load
[3.28016s  ] [info    ] [configLoad     ] tmpls field is found in av [/config/load:catl_bms_init]. We'll perform template expansions with tmpls instead of tmpl
[3.28065s  ] [info    ] [configLoad     ] tbody before: {"/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","NumRacks":9,"enable":false,"enum_opt":false},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellTemp","variable2":"/status/bms:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellVoltage","variable2":"/status/bms:MaxCellVoltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCCharging":{"expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"NumRacksTotal":9,"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}}}
[3.28143s  ] [info    ] [configLoad     ] tbody now: "/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","NumRacks":9,"enable":false,"enum_opt":false},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellTemp","variable2":"/status/bms:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellVoltage","variable2":"/status/bms:MaxCellVoltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCCharging":{"expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"NumRacksTotal":9,"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}}
[3.28214s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","NumRacks":9,"enable":false,"enum_opt":false},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellTemp","variable2":"/status/bms:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellVoltage","variable2":"/status/bms:MaxCellVoltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCCharging":{"expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"NumRacksTotal":9,"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/catl_ems_bms_rw:fault_clear_cmd","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":1},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}}
[3.28308s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","NumRacks":9,"enable":false,"enum_opt":false},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellTemp","variable2":"/status/bms:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellVoltage","variable2":"/status/bms:MaxCellVoltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCCharging":{"expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"NumRacksTotal":9,"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/catl_ems_bms_rw:fault_clear_cmd","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":1},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/faults/bms":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/schedule/wake_monitor/bms":{"/status/bms:AnyFireFaultActive":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CellVoltageDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CurrentBeforeStopIsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:DCVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:HeartbeatRead":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:IsAlarming":{"amap":"bms","func":"CalculateVar"},"/status/bms:IsFaulted":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MaxCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:NumRacksOnline":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:OverCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:OverCurrentFault":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:SOH":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:TotalAlarmCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:TotalFaultCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentFault":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AlarmCnt":0,"AnyFireFaultActive":{"numVars":2,"operation":"or","value":false,"variable1":"bms:AnyFireFaultActive","variable2":"/status/bms:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms:enable","expression":"{1} \u003c= {2} and {1} \u003e= (-1 * {2})","note":"Set to true if the BMS DC current is within an acceptable level before stopping the PCS","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent","variable2":"/config/bms:CurrentBeforeStopThreshold"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmTimeout":1,"MaxFaultTimeout":2.5,"MinAlarmTimeout":1,"MinFaultTimeout":2.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:SystemFault","variable2":"/status/bms:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":52,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":53,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":52,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":-0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the max alarm threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalAlarmCnt","variable2":"/status/bms:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalFaultCnt","variable2":"/status/bms:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the min alarm threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"}}
[3.28404s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","NumRacks":9,"enable":false,"enum_opt":false},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellTemp","variable2":"/status/bms:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellVoltage","variable2":"/status/bms:MaxCellVoltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCCharging":{"expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"NumRacksTotal":9,"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/catl_ems_bms_rw:fault_clear_cmd","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":1},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/faults/bms":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/schedule/wake_monitor/bms":{"/status/bms:AnyFireFaultActive":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CellVoltageDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CurrentBeforeStopIsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:DCVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:HeartbeatRead":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:IsAlarming":{"amap":"bms","func":"CalculateVar"},"/status/bms:IsFaulted":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MaxCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:NumRacksOnline":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:OverCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:OverCurrentFault":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:SOH":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:TotalAlarmCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:TotalFaultCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentFault":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AlarmCnt":0,"AnyFireFaultActive":{"numVars":2,"operation":"or","value":false,"variable1":"bms:AnyFireFaultActive","variable2":"/status/bms:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms:enable","expression":"{1} \u003c= {2} and {1} \u003e= (-1 * {2})","note":"Set to true if the BMS DC current is within an acceptable level before stopping the PCS","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent","variable2":"/config/bms:CurrentBeforeStopThreshold"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmTimeout":1,"MaxFaultTimeout":2.5,"MinAlarmTimeout":1,"MinFaultTimeout":2.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:SystemFault","variable2":"/status/bms:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":52,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":53,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":52,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":-0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the max alarm threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalAlarmCnt","variable2":"/status/bms:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalFaultCnt","variable2":"/status/bms:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the min alarm threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"}},"/components/catl_bms_ems_r":{"bms_poweron":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":1,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":2,"outValue":"On Fault","uri":"/status/bms:Status"},{"inValue":3,"outValue":"Off Fault","uri":"/status/bms:Status"},{"inValue":0,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/bms:DCClosed"},{"inValue":2,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":3,"outValue":true,"uri":"/status/bms:DCClosed"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:status@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms":{"checkInputs_bms":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms:status@ifChanged"}]}]},"enable":"/config/bms:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms":{"avg_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_temperature","vlink":"/status/bms:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"dc_charge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"dc_charge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_charge_energy","vlink":"/status/bms:ChargeableEnergy"},"dc_charge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_charge_allowed","vlink":"/limits/bms:ChargePowerLimit"},"dc_current":{"value":"/components/catl_mbmu_summary_r:mbmu_current","vlink":"/status/bms:DCCurrent"},"dc_discharge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"dc_discharge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_discharge_energy","vlink":"/status/bms:DischargeableEnergy"},"dc_discharge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_discharge_allowed","vlink":"/limits/bms:DischargePowerLimit"},"dc_power":{"value":"/components/catl_mbmu_summary_r:mbmu_power","vlink":"/status/bms:DCPower"},"dc_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_voltage","vlink":"/status/bms:DCVoltage"},"heartbeat_read":{"value":"/components/catl_bms_ems_r:bms_heartbeat","vlink":"/status/bms:HeartbeatRead"},"max_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_temperature","vlink":"/status/bms:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"min_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_temperature","vlink":"/status/bms:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"num_online_racks":{"value":"/components/catl_bms_ems_r:num_hv_subsystem","vlink":"/status/bms:NumRacksOnline"},"soc":{"value":"/components/catl_mbmu_summary_r:mbmu_soc","vlink":"/status/bms:SOC"},"soh":{"value":"/components/catl_mbmu_summary_r:mbmu_soh","vlink":"/status/bms:SOH"}}
[3.28528s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","NumRacks":9,"enable":false,"enum_opt":false},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellTemp","variable2":"/status/bms:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellVoltage","variable2":"/status/bms:MaxCellVoltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCCharging":{"expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"NumRacksTotal":9,"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/catl_ems_bms_rw:fault_clear_cmd","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":1},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/faults/bms":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/schedule/wake_monitor/bms":{"/status/bms:AnyFireFaultActive":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CellVoltageDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CurrentBeforeStopIsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:DCVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:HeartbeatRead":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:IsAlarming":{"amap":"bms","func":"CalculateVar"},"/status/bms:IsFaulted":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MaxCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:NumRacksOnline":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:OverCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:OverCurrentFault":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:SOH":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:TotalAlarmCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:TotalFaultCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentFault":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AlarmCnt":0,"AnyFireFaultActive":{"numVars":2,"operation":"or","value":false,"variable1":"bms:AnyFireFaultActive","variable2":"/status/bms:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms:enable","expression":"{1} \u003c= {2} and {1} \u003e= (-1 * {2})","note":"Set to true if the BMS DC current is within an acceptable level before stopping the PCS","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent","variable2":"/config/bms:CurrentBeforeStopThreshold"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmTimeout":1,"MaxFaultTimeout":2.5,"MinAlarmTimeout":1,"MinFaultTimeout":2.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:SystemFault","variable2":"/status/bms:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":52,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":53,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":52,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":-0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the max alarm threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalAlarmCnt","variable2":"/status/bms:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalFaultCnt","variable2":"/status/bms:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the min alarm threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"}},"/components/catl_bms_ems_r":{"bms_poweron":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":1,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":2,"outValue":"On Fault","uri":"/status/bms:Status"},{"inValue":3,"outValue":"Off Fault","uri":"/status/bms:Status"},{"inValue":0,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/bms:DCClosed"},{"inValue":2,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":3,"outValue":true,"uri":"/status/bms:DCClosed"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:status@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms":{"checkInputs_bms":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms:status@ifChanged"}]}]},"enable":"/config/bms:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms":{"avg_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_temperature","vlink":"/status/bms:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"dc_charge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"dc_charge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_charge_energy","vlink":"/status/bms:ChargeableEnergy"},"dc_charge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_charge_allowed","vlink":"/limits/bms:ChargePowerLimit"},"dc_current":{"value":"/components/catl_mbmu_summary_r:mbmu_current","vlink":"/status/bms:DCCurrent"},"dc_discharge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"dc_discharge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_discharge_energy","vlink":"/status/bms:DischargeableEnergy"},"dc_discharge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_discharge_allowed","vlink":"/limits/bms:DischargePowerLimit"},"dc_power":{"value":"/components/catl_mbmu_summary_r:mbmu_power","vlink":"/status/bms:DCPower"},"dc_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_voltage","vlink":"/status/bms:DCVoltage"},"heartbeat_read":{"value":"/components/catl_bms_ems_r:bms_heartbeat","vlink":"/status/bms:HeartbeatRead"},"max_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_temperature","vlink":"/status/bms:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"min_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_temperature","vlink":"/status/bms:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"num_online_racks":{"value":"/components/catl_bms_ems_r:num_hv_subsystem","vlink":"/status/bms:NumRacksOnline"},"soc":{"value":"/components/catl_mbmu_summary_r:mbmu_soc","vlink":"/status/bms:SOC"},"soh":{"value":"/components/catl_mbmu_summary_r:mbmu_soh","vlink":"/status/bms:SOH"}},"/site/ess":{"bms_alarm_active":{"name":"BMS Alarm Active","type":"status","value":false},"bms_avg_cell_temp":{"name":"BMS Avg Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_avg_cell_voltage":{"name":"BMS Avg Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_cell_temp_delta":{"name":"BMS Cell Temperature Delta","scale":100,"type":"status","units":"°C","value":0},"bms_cell_voltage_delta":{"name":"BMS Cell Voltage Delta","scale":10000,"type":"status","units":"V","value":0},"bms_chargeable_energy":{"name":"BMS Chargeable Energy","scale":10,"type":"status","units":"kWh","value":0},"bms_close_contactors_enabled":{"excludeFromFile":true,"name":"BMS Close Contactors Enabled","type":"status","value":false},"bms_comms_ok":{"name":"BMS Comms OK","type":"status","value":false},"bms_control_alarms":{"bit0":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit2":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","bit4":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","name":"BMS Control Alarms","type":"bitfield","value":0},"bms_current_before_stop_is_ok":{"excludeFromFile":true,"name":"BMS Current Before Stop is OK","type":"status","value":false},"bms_dc_charging":{"name":"BMS DC Charging","type":"status","value":false},"bms_dc_contactor_control":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/pcs:enable","every":1,"ifChanged":false,"name":"BMS Contactor Control Command","note1":"Initiates BMS close and open contactors","note2":"2-\u003eclose contactors | 3-\u003eopen contactors","offset":0,"size":1,"type":"control","uri":"/sched/ess:SiteBMSContactorControl","value":0},"bms_dc_contactors_closed":{"name":"BMS DC Contactors Closed","type":"status","value":false},"bms_dc_current":{"name":"BMS DC Current","scale":10,"signed":true,"type":"status","units":"A","value":0},"bms_dc_discharging":{"name":"BMS DC Discharging","type":"status","value":false},"bms_dc_power":{"name":"BMS DC Power","scale":10,"signed":true,"type":"status","units":"kW","value":0},"bms_dc_voltage":{"name":"BMS DC Voltage","scale":10,"signed":true,"type":"status","units":"V","value":0},"bms_dischargeable_energy":{"name":"BMS Dischargeable Energy","scale":10,"type":"status","units":"kWh","value":0},"bms_fault_active":{"name":"BMS Fault Active","type":"status","value":false},"bms_fire_fault_active":{"name":"BMS Fire Fault Active","type":"status","value":false},"bms_max_cell_temp":{"name":"BMS Max Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_max_cell_voltage":{"name":"BMS Max Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_max_charge_current":{"name":"BMS Max Charge Current","signed":true,"type":"status","units":"A","value":0},"bms_max_charge_power":{"name":"BMS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"bms_max_discharge_current":{"name":"BMS Max Discharge Current","type":"status","units":"A","value":0},"bms_max_discharge_power":{"name":"BMS Max Discharge Power","type":"status","units":"kW","value":0},"bms_min_cell_temp":{"name":"BMS Min Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_min_cell_voltage":{"name":"BMS Min Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_monitor_alarms":{"bit0":"BMS DC Current Max Threshold Exceeded","bit1":"BMS DC Current Min Threshold Exceeded","bit10":"BMS SOC Min Threshold Exceeded","bit11":"BMS Cell Voltage Delta Max Threshold Exceeded","bit12":"BMS Cell Temperature Delta Max Threshold Exceeded","bit13":"BMS Number of Racks Online Below Min Threshold","bit2":"BMS Max Cell Temperature Threshold Exceeded","bit3":"BMS Max Cell Voltage Threshold Exceeded","bit4":"BMS Min Cell Temperature Threshold Exceeded","bit5":"BMS Min Cell Voltage Threshold Exceeded","bit6":"BMS State of Health Below Threshold","bit7":"BMS DC Voltage Max Threshold Exceeded","bit8":"BMS DC Voltage Min Threshold Exceeded","bit9":"BMS SOC Max Threshold Exceeded","name":"BMS Monitor Alarms","type":"bitfield","value":0},"bms_monitor_faults":{"bit0":"BMS DC Current Max Threshold Exceeded","bit1":"BMS DC Current Min Threshold Exceeded","bit10":"BMS SOC Min Threshold Exceeded","bit11":"BMS Cell Voltage Delta Max Threshold Exceeded","bit12":"BMS Cell Temperature Delta Max Threshold Exceeded","bit13":"BMS Number of Racks Online Below Min Threshold","bit2":"BMS Max Cell Temperature Threshold Exceeded","bit3":"BMS Max Cell Voltage Threshold Exceeded","bit4":"BMS Min Cell Temperature Threshold Exceeded","bit5":"BMS Min Cell Voltage Threshold Exceeded","bit6":"BMS State of Health Below Threshold","bit7":"BMS DC Voltage Max Threshold Exceeded","bit8":"BMS DC Voltage Min Threshold Exceeded","bit9":"BMS SOC Max Threshold Exceeded","name":"BMS Monitor Faults","type":"bitfield","value":0},"bms_num_racks_online":{"name":"BMS Number of Racks Online","type":"status","value":0},"bms_num_racks_total":{"name":"BMS Number of Racks Total","type":"status","value":0},"bms_open_contactors_enabled":{"excludeFromFile":true,"name":"BMS Open Contactors Enabled","type":"status","value":false},"bms_soc":{"name":"BMS State of Charge (SOC)","scale":10,"type":"status","units":"%","value":0},"bms_soh":{"name":"BMS State of Health (SOH)","scale":10,"type":"status","units":"%","value":0},"bms_status":{"excludeFromFile":true,"name":"BMS Status","type":"status","value":"INIT"}},"/vlinks/bms":{"site_bms_alarm_active":{"value":"/site/ess:bms_alarm_active","vlink":"/status/bms:IsAlarming"},"site_bms_avg_cell_temp":{"value":"/site/ess:bms_avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"site_bms_avg_cell_voltage":{"value":"/site/ess:bms_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"site_bms_cell_temp_delta":{"value":"/site/ess:bms_cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"site_bms_cell_voltage_delta":{"value":"/site/ess:bms_cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"site_bms_chargeable_energy":{"value":"/site/ess:bms_chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"site_bms_close_contactors_enabled":{"value":"/site/ess:bms_close_contactors_enabled","vlink":"/status/bms:CloseContactorsEnabled"},"site_bms_comms_ok":{"value":"/site/ess:bms_comms_ok","vlink":"/status/bms:CommsOK"},"site_bms_current_before_stop_is_ok":{"value":"/site/ess:bms_current_before_stop_is_ok","vlink":"/status/bms:CurrentBeforeStopIsOK"},"site_bms_dc_charging":{"value":"/site/ess:bms_dc_charging","vlink":"/status/bms:DCCharging"},"site_bms_dc_contactors_closed":{"value":"/site/ess:bms_dc_contactors_closed","vlink":"/status/bms:DCClosed"},"site_bms_dc_current":{"value":"/site/ess:bms_dc_current","vlink":"/status/bms:DCCurrent"},"site_bms_dc_discharging":{"value":"/site/ess:bms_dc_discharging","vlink":"/status/bms:DCDischarging"},"site_bms_dc_power":{"value":"/site/ess:bms_dc_power","vlink":"/status/bms:DCPower"},"site_bms_dc_voltage":{"value":"/site/ess:bms_dc_voltage","vlink":"/status/bms:DCVoltage"},"site_bms_dischargeable_energy":{"value":"/site/ess:bms_dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"site_bms_fault_active":{"value":"/site/ess:bms_fault_active","vlink":"/status/bms:IsFaulted"},"site_bms_fire_fault_active":{"value":"/site/ess:bms_fire_fault_active","vlink":"/status/bms:AnyFireFaultActive"},"site_bms_max_cell_temp":{"value":"/site/ess:bms_max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"site_bms_max_cell_voltage":{"value":"/site/ess:bms_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"site_bms_max_charge_current":{"value":"/site/ess:bms_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"site_bms_max_charge_power":{"value":"/site/ess:bms_max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"site_bms_max_discharge_current":{"value":"/site/ess:bms_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"site_bms_max_discharge_power":{"value":"/site/ess:bms_max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"site_bms_min_cell_temp":{"value":"/site/ess:bms_min_cell_temp","vlink":"/status/bms:MinCellTemp"},"site_bms_min_cell_voltage":{"value":"/site/ess:bms_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"site_bms_num_racks_online":{"value":"/site/ess:bms_num_racks_online","vlink":"/status/bms:NumRacksOnline"},"site_bms_num_racks_total":{"value":"/site/ess:bms_num_racks_total","vlink":"/status/bms:NumRacksTotal"},"site_bms_open_contactors_enabled":{"value":"/site/ess:bms_open_contactors_enabled","vlink":"/status/bms:OpenContactorsEnabled"},"site_bms_soc":{"value":"/site/ess:bms_soc","vlink":"/status/bms:SOC"},"site_bms_soh":{"value":"/site/ess:bms_soh","vlink":"/status/bms:SOH"},"site_bms_status":{"value":"/site/ess:bms_status","vlink":"/status/bms:Status"}}
[3.28699s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","NumRacks":9,"enable":false,"enum_opt":false},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellTemp","variable2":"/status/bms:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellVoltage","variable2":"/status/bms:MaxCellVoltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCCharging":{"expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"NumRacksTotal":9,"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/catl_ems_bms_rw:fault_clear_cmd","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":1},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/faults/bms":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/schedule/wake_monitor/bms":{"/status/bms:AnyFireFaultActive":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CellVoltageDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CurrentBeforeStopIsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:DCVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:HeartbeatRead":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:IsAlarming":{"amap":"bms","func":"CalculateVar"},"/status/bms:IsFaulted":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MaxCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:NumRacksOnline":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:OverCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:OverCurrentFault":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:SOH":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:TotalAlarmCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:TotalFaultCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentFault":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AlarmCnt":0,"AnyFireFaultActive":{"numVars":2,"operation":"or","value":false,"variable1":"bms:AnyFireFaultActive","variable2":"/status/bms:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms:enable","expression":"{1} \u003c= {2} and {1} \u003e= (-1 * {2})","note":"Set to true if the BMS DC current is within an acceptable level before stopping the PCS","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent","variable2":"/config/bms:CurrentBeforeStopThreshold"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmTimeout":1,"MaxFaultTimeout":2.5,"MinAlarmTimeout":1,"MinFaultTimeout":2.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:SystemFault","variable2":"/status/bms:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":52,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":53,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":52,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":-0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the max alarm threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalAlarmCnt","variable2":"/status/bms:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalFaultCnt","variable2":"/status/bms:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the min alarm threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"}},"/components/catl_bms_ems_r":{"bms_poweron":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":1,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":2,"outValue":"On Fault","uri":"/status/bms:Status"},{"inValue":3,"outValue":"Off Fault","uri":"/status/bms:Status"},{"inValue":0,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/bms:DCClosed"},{"inValue":2,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":3,"outValue":true,"uri":"/status/bms:DCClosed"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:status@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms":{"checkInputs_bms":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms:status@ifChanged"}]}]},"enable":"/config/bms:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms":{"avg_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_temperature","vlink":"/status/bms:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"dc_charge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"dc_charge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_charge_energy","vlink":"/status/bms:ChargeableEnergy"},"dc_charge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_charge_allowed","vlink":"/limits/bms:ChargePowerLimit"},"dc_current":{"value":"/components/catl_mbmu_summary_r:mbmu_current","vlink":"/status/bms:DCCurrent"},"dc_discharge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"dc_discharge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_discharge_energy","vlink":"/status/bms:DischargeableEnergy"},"dc_discharge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_discharge_allowed","vlink":"/limits/bms:DischargePowerLimit"},"dc_power":{"value":"/components/catl_mbmu_summary_r:mbmu_power","vlink":"/status/bms:DCPower"},"dc_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_voltage","vlink":"/status/bms:DCVoltage"},"heartbeat_read":{"value":"/components/catl_bms_ems_r:bms_heartbeat","vlink":"/status/bms:HeartbeatRead"},"max_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_temperature","vlink":"/status/bms:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"min_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_temperature","vlink":"/status/bms:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"num_online_racks":{"value":"/components/catl_bms_ems_r:num_hv_subsystem","vlink":"/status/bms:NumRacksOnline"},"soc":{"value":"/components/catl_mbmu_summary_r:mbmu_soc","vlink":"/status/bms:SOC"},"soh":{"value":"/components/catl_mbmu_summary_r:mbmu_soh","vlink":"/status/bms:SOH"}},"/site/ess":{"bms_alarm_active":{"name":"BMS Alarm Active","type":"status","value":false},"bms_avg_cell_temp":{"name":"BMS Avg Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_avg_cell_voltage":{"name":"BMS Avg Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_cell_temp_delta":{"name":"BMS Cell Temperature Delta","scale":100,"type":"status","units":"°C","value":0},"bms_cell_voltage_delta":{"name":"BMS Cell Voltage Delta","scale":10000,"type":"status","units":"V","value":0},"bms_chargeable_energy":{"name":"BMS Chargeable Energy","scale":10,"type":"status","units":"kWh","value":0},"bms_close_contactors_enabled":{"excludeFromFile":true,"name":"BMS Close Contactors Enabled","type":"status","value":false},"bms_comms_ok":{"name":"BMS Comms OK","type":"status","value":false},"bms_control_alarms":{"bit0":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit2":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","bit4":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","name":"BMS Control Alarms","type":"bitfield","value":0},"bms_current_before_stop_is_ok":{"excludeFromFile":true,"name":"BMS Current Before Stop is OK","type":"status","value":false},"bms_dc_charging":{"name":"BMS DC Charging","type":"status","value":false},"bms_dc_contactor_control":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/pcs:enable","every":1,"ifChanged":false,"name":"BMS Contactor Control Command","note1":"Initiates BMS close and open contactors","note2":"2-\u003eclose contactors | 3-\u003eopen contactors","offset":0,"size":1,"type":"control","uri":"/sched/ess:SiteBMSContactorControl","value":0},"bms_dc_contactors_closed":{"name":"BMS DC Contactors Closed","type":"status","value":false},"bms_dc_current":{"name":"BMS DC Current","scale":10,"signed":true,"type":"status","units":"A","value":0},"bms_dc_discharging":{"name":"BMS DC Discharging","type":"status","value":false},"bms_dc_power":{"name":"BMS DC Power","scale":10,"signed":true,"type":"status","units":"kW","value":0},"bms_dc_voltage":{"name":"BMS DC Voltage","scale":10,"signed":true,"type":"status","units":"V","value":0},"bms_dischargeable_energy":{"name":"BMS Dischargeable Energy","scale":10,"type":"status","units":"kWh","value":0},"bms_fault_active":{"name":"BMS Fault Active","type":"status","value":false},"bms_fire_fault_active":{"name":"BMS Fire Fault Active","type":"status","value":false},"bms_max_cell_temp":{"name":"BMS Max Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_max_cell_voltage":{"name":"BMS Max Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_max_charge_current":{"name":"BMS Max Charge Current","signed":true,"type":"status","units":"A","value":0},"bms_max_charge_power":{"name":"BMS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"bms_max_discharge_current":{"name":"BMS Max Discharge Current","type":"status","units":"A","value":0},"bms_max_discharge_power":{"name":"BMS Max Discharge Power","type":"status","units":"kW","value":0},"bms_min_cell_temp":{"name":"BMS Min Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_min_cell_voltage":{"name":"BMS Min Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_monitor_alarms":{"bit0":"BMS DC Current Max Threshold Exceeded","bit1":"BMS DC Current Min Threshold Exceeded","bit10":"BMS SOC Min Threshold Exceeded","bit11":"BMS Cell Voltage Delta Max Threshold Exceeded","bit12":"BMS Cell Temperature Delta Max Threshold Exceeded","bit13":"BMS Number of Racks Online Below Min Threshold","bit2":"BMS Max Cell Temperature Threshold Exceeded","bit3":"BMS Max Cell Voltage Threshold Exceeded","bit4":"BMS Min Cell Temperature Threshold Exceeded","bit5":"BMS Min Cell Voltage Threshold Exceeded","bit6":"BMS State of Health Below Threshold","bit7":"BMS DC Voltage Max Threshold Exceeded","bit8":"BMS DC Voltage Min Threshold Exceeded","bit9":"BMS SOC Max Threshold Exceeded","name":"BMS Monitor Alarms","type":"bitfield","value":0},"bms_monitor_faults":{"bit0":"BMS DC Current Max Threshold Exceeded","bit1":"BMS DC Current Min Threshold Exceeded","bit10":"BMS SOC Min Threshold Exceeded","bit11":"BMS Cell Voltage Delta Max Threshold Exceeded","bit12":"BMS Cell Temperature Delta Max Threshold Exceeded","bit13":"BMS Number of Racks Online Below Min Threshold","bit2":"BMS Max Cell Temperature Threshold Exceeded","bit3":"BMS Max Cell Voltage Threshold Exceeded","bit4":"BMS Min Cell Temperature Threshold Exceeded","bit5":"BMS Min Cell Voltage Threshold Exceeded","bit6":"BMS State of Health Below Threshold","bit7":"BMS DC Voltage Max Threshold Exceeded","bit8":"BMS DC Voltage Min Threshold Exceeded","bit9":"BMS SOC Max Threshold Exceeded","name":"BMS Monitor Faults","type":"bitfield","value":0},"bms_num_racks_online":{"name":"BMS Number of Racks Online","type":"status","value":0},"bms_num_racks_total":{"name":"BMS Number of Racks Total","type":"status","value":0},"bms_open_contactors_enabled":{"excludeFromFile":true,"name":"BMS Open Contactors Enabled","type":"status","value":false},"bms_soc":{"name":"BMS State of Charge (SOC)","scale":10,"type":"status","units":"%","value":0},"bms_soh":{"name":"BMS State of Health (SOH)","scale":10,"type":"status","units":"%","value":0},"bms_status":{"excludeFromFile":true,"name":"BMS Status","type":"status","value":"INIT"}},"/vlinks/bms":{"site_bms_alarm_active":{"value":"/site/ess:bms_alarm_active","vlink":"/status/bms:IsAlarming"},"site_bms_avg_cell_temp":{"value":"/site/ess:bms_avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"site_bms_avg_cell_voltage":{"value":"/site/ess:bms_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"site_bms_cell_temp_delta":{"value":"/site/ess:bms_cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"site_bms_cell_voltage_delta":{"value":"/site/ess:bms_cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"site_bms_chargeable_energy":{"value":"/site/ess:bms_chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"site_bms_close_contactors_enabled":{"value":"/site/ess:bms_close_contactors_enabled","vlink":"/status/bms:CloseContactorsEnabled"},"site_bms_comms_ok":{"value":"/site/ess:bms_comms_ok","vlink":"/status/bms:CommsOK"},"site_bms_current_before_stop_is_ok":{"value":"/site/ess:bms_current_before_stop_is_ok","vlink":"/status/bms:CurrentBeforeStopIsOK"},"site_bms_dc_charging":{"value":"/site/ess:bms_dc_charging","vlink":"/status/bms:DCCharging"},"site_bms_dc_contactors_closed":{"value":"/site/ess:bms_dc_contactors_closed","vlink":"/status/bms:DCClosed"},"site_bms_dc_current":{"value":"/site/ess:bms_dc_current","vlink":"/status/bms:DCCurrent"},"site_bms_dc_discharging":{"value":"/site/ess:bms_dc_discharging","vlink":"/status/bms:DCDischarging"},"site_bms_dc_power":{"value":"/site/ess:bms_dc_power","vlink":"/status/bms:DCPower"},"site_bms_dc_voltage":{"value":"/site/ess:bms_dc_voltage","vlink":"/status/bms:DCVoltage"},"site_bms_dischargeable_energy":{"value":"/site/ess:bms_dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"site_bms_fault_active":{"value":"/site/ess:bms_fault_active","vlink":"/status/bms:IsFaulted"},"site_bms_fire_fault_active":{"value":"/site/ess:bms_fire_fault_active","vlink":"/status/bms:AnyFireFaultActive"},"site_bms_max_cell_temp":{"value":"/site/ess:bms_max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"site_bms_max_cell_voltage":{"value":"/site/ess:bms_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"site_bms_max_charge_current":{"value":"/site/ess:bms_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"site_bms_max_charge_power":{"value":"/site/ess:bms_max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"site_bms_max_discharge_current":{"value":"/site/ess:bms_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"site_bms_max_discharge_power":{"value":"/site/ess:bms_max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"site_bms_min_cell_temp":{"value":"/site/ess:bms_min_cell_temp","vlink":"/status/bms:MinCellTemp"},"site_bms_min_cell_voltage":{"value":"/site/ess:bms_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"site_bms_num_racks_online":{"value":"/site/ess:bms_num_racks_online","vlink":"/status/bms:NumRacksOnline"},"site_bms_num_racks_total":{"value":"/site/ess:bms_num_racks_total","vlink":"/status/bms:NumRacksTotal"},"site_bms_open_contactors_enabled":{"value":"/site/ess:bms_open_contactors_enabled","vlink":"/status/bms:OpenContactorsEnabled"},"site_bms_soc":{"value":"/site/ess:bms_soc","vlink":"/status/bms:SOC"},"site_bms_soh":{"value":"/site/ess:bms_soh","vlink":"/status/bms:SOH"},"site_bms_status":{"value":"/site/ess:bms_status","vlink":"/status/bms:Status"}},"/assets/bms/summary":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"chargeable_energy":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:ClearFaults@triggerCmd"},{"inValue":true,"outValue":1,"uri":"/controls/bms:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"close_contactors":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":false,"every":0.5,"name":"Close DC Contactor","note":"Enabled conditions: ![/status/bms/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode] \u0026\u0026 ![/status/bms/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/bms:LocalStartBMS","value":false},"comms_ok":{"value":false},"dc_charging":{"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_discharging":{"value":false},"dc_power":{"value":0},"dc_voltage":{"value":0},"dischargeable_energy":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/summary:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"num_racks_online":{"value":0},"num_racks_total":{"value":0},"open_contactors":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":false,"every":0.5,"name":"Open DC Contactor","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 ![/status/pcs/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/bms:LocalStopBMS","value":false},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/bms":{"ui_avg_cell_temp":{"value":"/assets/bms/summary:avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/summary:avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/summary:cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/summary:cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"ui_chargeable_energy":{"value":"/assets/bms/summary:chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"ui_comms_ok":{"value":"/assets/bms/summary:comms_ok","vlink":"/status/bms:CommsOK"},"ui_dc_charging":{"value":"/assets/bms/summary:dc_charging","vlink":"/status/bms:DCCharging"},"ui_dc_contactors_closed":{"value":"/assets/bms/summary:dc_contactors_closed","vlink":"/status/bms:DCClosed"},"ui_dc_current":{"value":"/assets/bms/summary:dc_current","vlink":"/status/bms:DCCurrent"},"ui_dc_discharging":{"value":"/assets/bms/summary:dc_discharging","vlink":"/status/bms:DCDischarging"},"ui_dc_power":{"value":"/assets/bms/summary:dc_power","vlink":"/status/bms:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/summary:dc_voltage","vlink":"/status/bms:DCVoltage"},"ui_dischargeable_energy":{"value":"/assets/bms/summary:dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"ui_max_cell_temp":{"value":"/assets/bms/summary:max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/summary:max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/summary:max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/summary:max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/summary:max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/summary:max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/summary:min_cell_temp","vlink":"/status/bms:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/summary:min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"ui_num_racks_online":{"value":"/assets/bms/summary:num_racks_online","vlink":"/status/bms:NumRacksOnline"},"ui_num_racks_total":{"value":"/assets/bms/summary:num_racks_total","vlink":"/status/bms:NumRacksTotal"},"ui_soc":{"value":"/assets/bms/summary:soc","vlink":"/status/bms:SOC"},"ui_soh":{"value":"/assets/bms/summary:soh","vlink":"/status/bms:SOH"},"ui_status":{"value":"/assets/bms/summary:status","vlink":"/status/bms:Status"}}
[3.28876s  ] [info    ] [configLoad     ] Final tbody: {"/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","NumRacks":9,"enable":false,"enum_opt":false},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellTemp","variable2":"/status/bms:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellVoltage","variable2":"/status/bms:MaxCellVoltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCCharging":{"expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"NumRacksTotal":9,"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/catl_ems_bms_rw:fault_clear_cmd","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":1},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/faults/bms":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/schedule/wake_monitor/bms":{"/status/bms:AnyFireFaultActive":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CellVoltageDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CurrentBeforeStopIsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:DCVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:HeartbeatRead":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:IsAlarming":{"amap":"bms","func":"CalculateVar"},"/status/bms:IsFaulted":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MaxCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:NumRacksOnline":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:OverCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:OverCurrentFault":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:SOH":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:TotalAlarmCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:TotalFaultCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentFault":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AlarmCnt":0,"AnyFireFaultActive":{"numVars":2,"operation":"or","value":false,"variable1":"bms:AnyFireFaultActive","variable2":"/status/bms:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms:enable","expression":"{1} \u003c= {2} and {1} \u003e= (-1 * {2})","note":"Set to true if the BMS DC current is within an acceptable level before stopping the PCS","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent","variable2":"/config/bms:CurrentBeforeStopThreshold"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmTimeout":1,"MaxFaultTimeout":2.5,"MinAlarmTimeout":1,"MinFaultTimeout":2.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:SystemFault","variable2":"/status/bms:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":52,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":53,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":52,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":-0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the max alarm threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalAlarmCnt","variable2":"/status/bms:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalFaultCnt","variable2":"/status/bms:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the min alarm threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"}},"/components/catl_bms_ems_r":{"bms_poweron":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":1,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":2,"outValue":"On Fault","uri":"/status/bms:Status"},{"inValue":3,"outValue":"Off Fault","uri":"/status/bms:Status"},{"inValue":0,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/bms:DCClosed"},{"inValue":2,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":3,"outValue":true,"uri":"/status/bms:DCClosed"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:status@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms":{"checkInputs_bms":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms:status@ifChanged"}]}]},"enable":"/config/bms:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms":{"avg_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_temperature","vlink":"/status/bms:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"dc_charge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"dc_charge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_charge_energy","vlink":"/status/bms:ChargeableEnergy"},"dc_charge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_charge_allowed","vlink":"/limits/bms:ChargePowerLimit"},"dc_current":{"value":"/components/catl_mbmu_summary_r:mbmu_current","vlink":"/status/bms:DCCurrent"},"dc_discharge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"dc_discharge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_discharge_energy","vlink":"/status/bms:DischargeableEnergy"},"dc_discharge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_discharge_allowed","vlink":"/limits/bms:DischargePowerLimit"},"dc_power":{"value":"/components/catl_mbmu_summary_r:mbmu_power","vlink":"/status/bms:DCPower"},"dc_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_voltage","vlink":"/status/bms:DCVoltage"},"heartbeat_read":{"value":"/components/catl_bms_ems_r:bms_heartbeat","vlink":"/status/bms:HeartbeatRead"},"max_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_temperature","vlink":"/status/bms:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"min_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_temperature","vlink":"/status/bms:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"num_online_racks":{"value":"/components/catl_bms_ems_r:num_hv_subsystem","vlink":"/status/bms:NumRacksOnline"},"soc":{"value":"/components/catl_mbmu_summary_r:mbmu_soc","vlink":"/status/bms:SOC"},"soh":{"value":"/components/catl_mbmu_summary_r:mbmu_soh","vlink":"/status/bms:SOH"}},"/site/ess":{"bms_alarm_active":{"name":"BMS Alarm Active","type":"status","value":false},"bms_avg_cell_temp":{"name":"BMS Avg Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_avg_cell_voltage":{"name":"BMS Avg Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_cell_temp_delta":{"name":"BMS Cell Temperature Delta","scale":100,"type":"status","units":"°C","value":0},"bms_cell_voltage_delta":{"name":"BMS Cell Voltage Delta","scale":10000,"type":"status","units":"V","value":0},"bms_chargeable_energy":{"name":"BMS Chargeable Energy","scale":10,"type":"status","units":"kWh","value":0},"bms_close_contactors_enabled":{"excludeFromFile":true,"name":"BMS Close Contactors Enabled","type":"status","value":false},"bms_comms_ok":{"name":"BMS Comms OK","type":"status","value":false},"bms_control_alarms":{"bit0":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit2":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","bit4":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","name":"BMS Control Alarms","type":"bitfield","value":0},"bms_current_before_stop_is_ok":{"excludeFromFile":true,"name":"BMS Current Before Stop is OK","type":"status","value":false},"bms_dc_charging":{"name":"BMS DC Charging","type":"status","value":false},"bms_dc_contactor_control":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/pcs:enable","every":1,"ifChanged":false,"name":"BMS Contactor Control Command","note1":"Initiates BMS close and open contactors","note2":"2-\u003eclose contactors | 3-\u003eopen contactors","offset":0,"size":1,"type":"control","uri":"/sched/ess:SiteBMSContactorControl","value":0},"bms_dc_contactors_closed":{"name":"BMS DC Contactors Closed","type":"status","value":false},"bms_dc_current":{"name":"BMS DC Current","scale":10,"signed":true,"type":"status","units":"A","value":0},"bms_dc_discharging":{"name":"BMS DC Discharging","type":"status","value":false},"bms_dc_power":{"name":"BMS DC Power","scale":10,"signed":true,"type":"status","units":"kW","value":0},"bms_dc_voltage":{"name":"BMS DC Voltage","scale":10,"signed":true,"type":"status","units":"V","value":0},"bms_dischargeable_energy":{"name":"BMS Dischargeable Energy","scale":10,"type":"status","units":"kWh","value":0},"bms_fault_active":{"name":"BMS Fault Active","type":"status","value":false},"bms_fire_fault_active":{"name":"BMS Fire Fault Active","type":"status","value":false},"bms_max_cell_temp":{"name":"BMS Max Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_max_cell_voltage":{"name":"BMS Max Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_max_charge_current":{"name":"BMS Max Charge Current","signed":true,"type":"status","units":"A","value":0},"bms_max_charge_power":{"name":"BMS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"bms_max_discharge_current":{"name":"BMS Max Discharge Current","type":"status","units":"A","value":0},"bms_max_discharge_power":{"name":"BMS Max Discharge Power","type":"status","units":"kW","value":0},"bms_min_cell_temp":{"name":"BMS Min Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_min_cell_voltage":{"name":"BMS Min Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_monitor_alarms":{"bit0":"BMS DC Current Max Threshold Exceeded","bit1":"BMS DC Current Min Threshold Exceeded","bit10":"BMS SOC Min Threshold Exceeded","bit11":"BMS Cell Voltage Delta Max Threshold Exceeded","bit12":"BMS Cell Temperature Delta Max Threshold Exceeded","bit13":"BMS Number of Racks Online Below Min Threshold","bit2":"BMS Max Cell Temperature Threshold Exceeded","bit3":"BMS Max Cell Voltage Threshold Exceeded","bit4":"BMS Min Cell Temperature Threshold Exceeded","bit5":"BMS Min Cell Voltage Threshold Exceeded","bit6":"BMS State of Health Below Threshold","bit7":"BMS DC Voltage Max Threshold Exceeded","bit8":"BMS DC Voltage Min Threshold Exceeded","bit9":"BMS SOC Max Threshold Exceeded","name":"BMS Monitor Alarms","type":"bitfield","value":0},"bms_monitor_faults":{"bit0":"BMS DC Current Max Threshold Exceeded","bit1":"BMS DC Current Min Threshold Exceeded","bit10":"BMS SOC Min Threshold Exceeded","bit11":"BMS Cell Voltage Delta Max Threshold Exceeded","bit12":"BMS Cell Temperature Delta Max Threshold Exceeded","bit13":"BMS Number of Racks Online Below Min Threshold","bit2":"BMS Max Cell Temperature Threshold Exceeded","bit3":"BMS Max Cell Voltage Threshold Exceeded","bit4":"BMS Min Cell Temperature Threshold Exceeded","bit5":"BMS Min Cell Voltage Threshold Exceeded","bit6":"BMS State of Health Below Threshold","bit7":"BMS DC Voltage Max Threshold Exceeded","bit8":"BMS DC Voltage Min Threshold Exceeded","bit9":"BMS SOC Max Threshold Exceeded","name":"BMS Monitor Faults","type":"bitfield","value":0},"bms_num_racks_online":{"name":"BMS Number of Racks Online","type":"status","value":0},"bms_num_racks_total":{"name":"BMS Number of Racks Total","type":"status","value":0},"bms_open_contactors_enabled":{"excludeFromFile":true,"name":"BMS Open Contactors Enabled","type":"status","value":false},"bms_soc":{"name":"BMS State of Charge (SOC)","scale":10,"type":"status","units":"%","value":0},"bms_soh":{"name":"BMS State of Health (SOH)","scale":10,"type":"status","units":"%","value":0},"bms_status":{"excludeFromFile":true,"name":"BMS Status","type":"status","value":"INIT"}},"/vlinks/bms":{"site_bms_alarm_active":{"value":"/site/ess:bms_alarm_active","vlink":"/status/bms:IsAlarming"},"site_bms_avg_cell_temp":{"value":"/site/ess:bms_avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"site_bms_avg_cell_voltage":{"value":"/site/ess:bms_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"site_bms_cell_temp_delta":{"value":"/site/ess:bms_cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"site_bms_cell_voltage_delta":{"value":"/site/ess:bms_cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"site_bms_chargeable_energy":{"value":"/site/ess:bms_chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"site_bms_close_contactors_enabled":{"value":"/site/ess:bms_close_contactors_enabled","vlink":"/status/bms:CloseContactorsEnabled"},"site_bms_comms_ok":{"value":"/site/ess:bms_comms_ok","vlink":"/status/bms:CommsOK"},"site_bms_current_before_stop_is_ok":{"value":"/site/ess:bms_current_before_stop_is_ok","vlink":"/status/bms:CurrentBeforeStopIsOK"},"site_bms_dc_charging":{"value":"/site/ess:bms_dc_charging","vlink":"/status/bms:DCCharging"},"site_bms_dc_contactors_closed":{"value":"/site/ess:bms_dc_contactors_closed","vlink":"/status/bms:DCClosed"},"site_bms_dc_current":{"value":"/site/ess:bms_dc_current","vlink":"/status/bms:DCCurrent"},"site_bms_dc_discharging":{"value":"/site/ess:bms_dc_discharging","vlink":"/status/bms:DCDischarging"},"site_bms_dc_power":{"value":"/site/ess:bms_dc_power","vlink":"/status/bms:DCPower"},"site_bms_dc_voltage":{"value":"/site/ess:bms_dc_voltage","vlink":"/status/bms:DCVoltage"},"site_bms_dischargeable_energy":{"value":"/site/ess:bms_dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"site_bms_fault_active":{"value":"/site/ess:bms_fault_active","vlink":"/status/bms:IsFaulted"},"site_bms_fire_fault_active":{"value":"/site/ess:bms_fire_fault_active","vlink":"/status/bms:AnyFireFaultActive"},"site_bms_max_cell_temp":{"value":"/site/ess:bms_max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"site_bms_max_cell_voltage":{"value":"/site/ess:bms_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"site_bms_max_charge_current":{"value":"/site/ess:bms_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"site_bms_max_charge_power":{"value":"/site/ess:bms_max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"site_bms_max_discharge_current":{"value":"/site/ess:bms_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"site_bms_max_discharge_power":{"value":"/site/ess:bms_max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"site_bms_min_cell_temp":{"value":"/site/ess:bms_min_cell_temp","vlink":"/status/bms:MinCellTemp"},"site_bms_min_cell_voltage":{"value":"/site/ess:bms_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"site_bms_num_racks_online":{"value":"/site/ess:bms_num_racks_online","vlink":"/status/bms:NumRacksOnline"},"site_bms_num_racks_total":{"value":"/site/ess:bms_num_racks_total","vlink":"/status/bms:NumRacksTotal"},"site_bms_open_contactors_enabled":{"value":"/site/ess:bms_open_contactors_enabled","vlink":"/status/bms:OpenContactorsEnabled"},"site_bms_soc":{"value":"/site/ess:bms_soc","vlink":"/status/bms:SOC"},"site_bms_soh":{"value":"/site/ess:bms_soh","vlink":"/status/bms:SOH"},"site_bms_status":{"value":"/site/ess:bms_status","vlink":"/status/bms:Status"}},"/assets/bms/summary":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"chargeable_energy":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:ClearFaults@triggerCmd"},{"inValue":true,"outValue":1,"uri":"/controls/bms:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"close_contactors":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":false,"every":0.5,"name":"Close DC Contactor","note":"Enabled conditions: ![/status/bms/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode] \u0026\u0026 ![/status/bms/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/bms:LocalStartBMS","value":false},"comms_ok":{"value":false},"dc_charging":{"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_discharging":{"value":false},"dc_power":{"value":0},"dc_voltage":{"value":0},"dischargeable_energy":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/summary:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"num_racks_online":{"value":0},"num_racks_total":{"value":0},"open_contactors":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":false,"every":0.5,"name":"Open DC Contactor","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 ![/status/pcs/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/bms:LocalStopBMS","value":false},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/bms":{"ui_avg_cell_temp":{"value":"/assets/bms/summary:avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/summary:avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/summary:cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/summary:cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"ui_chargeable_energy":{"value":"/assets/bms/summary:chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"ui_comms_ok":{"value":"/assets/bms/summary:comms_ok","vlink":"/status/bms:CommsOK"},"ui_dc_charging":{"value":"/assets/bms/summary:dc_charging","vlink":"/status/bms:DCCharging"},"ui_dc_contactors_closed":{"value":"/assets/bms/summary:dc_contactors_closed","vlink":"/status/bms:DCClosed"},"ui_dc_current":{"value":"/assets/bms/summary:dc_current","vlink":"/status/bms:DCCurrent"},"ui_dc_discharging":{"value":"/assets/bms/summary:dc_discharging","vlink":"/status/bms:DCDischarging"},"ui_dc_power":{"value":"/assets/bms/summary:dc_power","vlink":"/status/bms:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/summary:dc_voltage","vlink":"/status/bms:DCVoltage"},"ui_dischargeable_energy":{"value":"/assets/bms/summary:dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"ui_max_cell_temp":{"value":"/assets/bms/summary:max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/summary:max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/summary:max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/summary:max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/summary:max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/summary:max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/summary:min_cell_temp","vlink":"/status/bms:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/summary:min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"ui_num_racks_online":{"value":"/assets/bms/summary:num_racks_online","vlink":"/status/bms:NumRacksOnline"},"ui_num_racks_total":{"value":"/assets/bms/summary:num_racks_total","vlink":"/status/bms:NumRacksTotal"},"ui_soc":{"value":"/assets/bms/summary:soc","vlink":"/status/bms:SOC"},"ui_soh":{"value":"/assets/bms/summary:soh","vlink":"/status/bms:SOH"},"ui_status":{"value":"/assets/bms/summary:status","vlink":"/status/bms:Status"}}}
[3.29047s  ] [info    ] [configLoad     ] tmpls field is found in av [/config/load:catl_bms_init]. We'll perform template expansions with tmpls instead of tmpl
[3.29093s  ] [info    ] [configLoad     ] tbody before: {"/config/##RACK_ID##":{"AlarmDestination":"/assets/bms/##RACK_ID##:alarms","FaultDestination":"/assets/bms/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##RACK_ID##:DischargePowerLimit"}},"/sched/##RACK_ID##":{"pubAssets_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##RACK_ID##)","table":"/assets/bms/##RACK_ID##","value":1},"runMonitor_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##RACK_ID##","enable":"/config/##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##RACK_ID##","value":1}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:CellTempDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellTemp","variable2":"/status/##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellVoltage","variable2":"/status/##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##RACK_ID##:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:pubAssets_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":0.1,"uri":"/sched/##RACK_ID##:runMonitor_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:checkInputs_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}}}
[3.29138s  ] [info    ] [configLoad     ] tbody now: "/config/##RACK_ID##":{"AlarmDestination":"/assets/bms/##RACK_ID##:alarms","FaultDestination":"/assets/bms/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##RACK_ID##:DischargePowerLimit"}},"/sched/##RACK_ID##":{"pubAssets_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##RACK_ID##)","table":"/assets/bms/##RACK_ID##","value":1},"runMonitor_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##RACK_ID##","enable":"/config/##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##RACK_ID##","value":1}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:CellTempDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellTemp","variable2":"/status/##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellVoltage","variable2":"/status/##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##RACK_ID##:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:pubAssets_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":0.1,"uri":"/sched/##RACK_ID##:runMonitor_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:checkInputs_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}}
[3.29187s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##RACK_ID##":{"AlarmDestination":"/assets/bms/##RACK_ID##:alarms","FaultDestination":"/assets/bms/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##RACK_ID##:DischargePowerLimit"}},"/sched/##RACK_ID##":{"pubAssets_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##RACK_ID##)","table":"/assets/bms/##RACK_ID##","value":1},"runMonitor_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##RACK_ID##","enable":"/config/##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##RACK_ID##","value":1}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:CellTempDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellTemp","variable2":"/status/##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellVoltage","variable2":"/status/##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##RACK_ID##:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:pubAssets_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":0.1,"uri":"/sched/##RACK_ID##:runMonitor_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:checkInputs_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##RACK_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##RACK_ID##":{"/controls/##RACK_ID##:ClearFaults":{"amap":"##RACK_ID##","func":"HandleCmd"}},"/status/##RACK_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##RACK_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##RACK_ID##:clear_alarms"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##RACK_ID##:clear_faults and /alarms/##RACK_ID##:clear_alarms will be set to Clear","value":false}}
[3.29241s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##RACK_ID##":{"AlarmDestination":"/assets/bms/##RACK_ID##:alarms","FaultDestination":"/assets/bms/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##RACK_ID##:DischargePowerLimit"}},"/sched/##RACK_ID##":{"pubAssets_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##RACK_ID##)","table":"/assets/bms/##RACK_ID##","value":1},"runMonitor_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##RACK_ID##","enable":"/config/##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##RACK_ID##","value":1}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:CellTempDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellTemp","variable2":"/status/##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellVoltage","variable2":"/status/##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##RACK_ID##:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:pubAssets_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":0.1,"uri":"/sched/##RACK_ID##:runMonitor_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:checkInputs_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##RACK_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##RACK_ID##":{"/controls/##RACK_ID##:ClearFaults":{"amap":"##RACK_ID##","func":"HandleCmd"}},"/status/##RACK_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##RACK_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##RACK_ID##:clear_alarms"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##RACK_ID##:clear_faults and /alarms/##RACK_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##RACK_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##RACK_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:AnyFireFaultActive":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalAlarmCnt":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalFaultCnt":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##RACK_ID##:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:FaultCnt"}}
[3.29352s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##RACK_ID##":{"AlarmDestination":"/assets/bms/##RACK_ID##:alarms","FaultDestination":"/assets/bms/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##RACK_ID##:DischargePowerLimit"}},"/sched/##RACK_ID##":{"pubAssets_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##RACK_ID##)","table":"/assets/bms/##RACK_ID##","value":1},"runMonitor_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##RACK_ID##","enable":"/config/##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##RACK_ID##","value":1}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:CellTempDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellTemp","variable2":"/status/##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellVoltage","variable2":"/status/##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##RACK_ID##:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:pubAssets_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":0.1,"uri":"/sched/##RACK_ID##:runMonitor_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:checkInputs_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##RACK_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##RACK_ID##":{"/controls/##RACK_ID##:ClearFaults":{"amap":"##RACK_ID##","func":"HandleCmd"}},"/status/##RACK_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##RACK_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##RACK_ID##:clear_alarms"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##RACK_ID##:clear_faults and /alarms/##RACK_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##RACK_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##RACK_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:AnyFireFaultActive":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalAlarmCnt":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalFaultCnt":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##RACK_ID##:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:FaultCnt"}},"/components/catl_##RACK_ID##":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/##RACK_ID##:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/##RACK_ID##:DCClosed"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/##RACK_ID##":{"avg_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_avg_cell_temp","vlink":"/status/##RACK_ID##:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_avg_cell_voltage","vlink":"/status/##RACK_ID##:AvgCellVoltage"},"dc_current":{"value":"/components/catl_##RACK_ID##:sbmu_current","vlink":"/status/##RACK_ID##:DCCurrent"},"dc_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_voltage","vlink":"/status/##RACK_ID##:DCVoltage"},"max_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_max_cell_temp","vlink":"/status/##RACK_ID##:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_max_cell_voltage","vlink":"/status/##RACK_ID##:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_min_cell_temp","vlink":"/status/##RACK_ID##:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_min_cell_voltage","vlink":"/status/##RACK_ID##:MinCellVoltage"},"soc":{"value":"/components/catl_##RACK_ID##:sbmu_soc","vlink":"/status/##RACK_ID##:SOC"},"soh":{"value":"/components/catl_##RACK_ID##:sbmu_soh","vlink":"/status/##RACK_ID##:SOH"}}
[3.29537s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##RACK_ID##":{"AlarmDestination":"/assets/bms/##RACK_ID##:alarms","FaultDestination":"/assets/bms/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##RACK_ID##:DischargePowerLimit"}},"/sched/##RACK_ID##":{"pubAssets_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##RACK_ID##)","table":"/assets/bms/##RACK_ID##","value":1},"runMonitor_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##RACK_ID##","enable":"/config/##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##RACK_ID##","value":1}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:CellTempDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellTemp","variable2":"/status/##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellVoltage","variable2":"/status/##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##RACK_ID##:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:pubAssets_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":0.1,"uri":"/sched/##RACK_ID##:runMonitor_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:checkInputs_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##RACK_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##RACK_ID##":{"/controls/##RACK_ID##:ClearFaults":{"amap":"##RACK_ID##","func":"HandleCmd"}},"/status/##RACK_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##RACK_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##RACK_ID##:clear_alarms"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##RACK_ID##:clear_faults and /alarms/##RACK_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##RACK_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##RACK_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:AnyFireFaultActive":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalAlarmCnt":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalFaultCnt":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##RACK_ID##:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:FaultCnt"}},"/components/catl_##RACK_ID##":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/##RACK_ID##:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/##RACK_ID##:DCClosed"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/##RACK_ID##":{"avg_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_avg_cell_temp","vlink":"/status/##RACK_ID##:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_avg_cell_voltage","vlink":"/status/##RACK_ID##:AvgCellVoltage"},"dc_current":{"value":"/components/catl_##RACK_ID##:sbmu_current","vlink":"/status/##RACK_ID##:DCCurrent"},"dc_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_voltage","vlink":"/status/##RACK_ID##:DCVoltage"},"max_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_max_cell_temp","vlink":"/status/##RACK_ID##:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_max_cell_voltage","vlink":"/status/##RACK_ID##:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_min_cell_temp","vlink":"/status/##RACK_ID##:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_min_cell_voltage","vlink":"/status/##RACK_ID##:MinCellVoltage"},"soc":{"value":"/components/catl_##RACK_ID##:sbmu_soc","vlink":"/status/##RACK_ID##:SOC"},"soh":{"value":"/components/catl_##RACK_ID##:sbmu_soh","vlink":"/status/##RACK_ID##:SOH"}}
[3.2974s   ] [info    ] [configLoad     ] pi's av tbody now: "/config/##RACK_ID##":{"AlarmDestination":"/assets/bms/##RACK_ID##:alarms","FaultDestination":"/assets/bms/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##RACK_ID##:DischargePowerLimit"}},"/sched/##RACK_ID##":{"pubAssets_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##RACK_ID##)","table":"/assets/bms/##RACK_ID##","value":1},"runMonitor_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##RACK_ID##","enable":"/config/##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##RACK_ID##","value":1}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:CellTempDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellTemp","variable2":"/status/##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellVoltage","variable2":"/status/##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##RACK_ID##:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:pubAssets_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":0.1,"uri":"/sched/##RACK_ID##:runMonitor_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:checkInputs_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##RACK_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##RACK_ID##":{"/controls/##RACK_ID##:ClearFaults":{"amap":"##RACK_ID##","func":"HandleCmd"}},"/status/##RACK_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##RACK_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##RACK_ID##:clear_alarms"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##RACK_ID##:clear_faults and /alarms/##RACK_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##RACK_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##RACK_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:AnyFireFaultActive":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalAlarmCnt":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalFaultCnt":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##RACK_ID##:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:FaultCnt"}},"/components/catl_##RACK_ID##":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/##RACK_ID##:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/##RACK_ID##:DCClosed"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/##RACK_ID##":{"avg_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_avg_cell_temp","vlink":"/status/##RACK_ID##:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_avg_cell_voltage","vlink":"/status/##RACK_ID##:AvgCellVoltage"},"dc_current":{"value":"/components/catl_##RACK_ID##:sbmu_current","vlink":"/status/##RACK_ID##:DCCurrent"},"dc_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_voltage","vlink":"/status/##RACK_ID##:DCVoltage"},"max_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_max_cell_temp","vlink":"/status/##RACK_ID##:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_max_cell_voltage","vlink":"/status/##RACK_ID##:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_min_cell_temp","vlink":"/status/##RACK_ID##:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_min_cell_voltage","vlink":"/status/##RACK_ID##:MinCellVoltage"},"soc":{"value":"/components/catl_##RACK_ID##:sbmu_soc","vlink":"/status/##RACK_ID##:SOC"},"soh":{"value":"/components/catl_##RACK_ID##:sbmu_soh","vlink":"/status/##RACK_ID##:SOH"}},"/assets/bms/##RACK_ID##":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##RACK_ID##:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##RACK_ID##:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/##RACK_ID##:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/##RACK_ID##":{"ui_avg_cell_temp":{"value":"/assets/bms/##RACK_ID##:avg_cell_temp","vlink":"/status/##RACK_ID##:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/##RACK_ID##:avg_cell_voltage","vlink":"/status/##RACK_ID##:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/##RACK_ID##:cell_temp_delta","vlink":"/status/##RACK_ID##:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/##RACK_ID##:cell_voltage_delta","vlink":"/status/##RACK_ID##:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/##RACK_ID##:dc_contactors_closed","vlink":"/status/##RACK_ID##:DCClosed"},"ui_dc_current":{"value":"/assets/bms/##RACK_ID##:dc_current","vlink":"/status/##RACK_ID##:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/##RACK_ID##:dc_power","vlink":"/status/##RACK_ID##:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/##RACK_ID##:dc_voltage","vlink":"/status/##RACK_ID##:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/##RACK_ID##:max_cell_temp","vlink":"/status/##RACK_ID##:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/##RACK_ID##:max_cell_voltage","vlink":"/status/##RACK_ID##:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/##RACK_ID##:max_charge_current","vlink":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/##RACK_ID##:max_charge_power","vlink":"/limits/##RACK_ID##:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/##RACK_ID##:max_discharge_current","vlink":"/limits/##RACK_ID##:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/##RACK_ID##:max_discharge_power","vlink":"/limits/##RACK_ID##:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/##RACK_ID##:min_cell_temp","vlink":"/status/##RACK_ID##:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/##RACK_ID##:min_cell_voltage","vlink":"/status/##RACK_ID##:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/##RACK_ID##:soc","vlink":"/status/##RACK_ID##:SOC"},"ui_soh":{"value":"/assets/bms/##RACK_ID##:soh","vlink":"/status/##RACK_ID##:SOH"},"ui_status":{"value":"/assets/bms/##RACK_ID##:status","vlink":"/status/##RACK_ID##:Status"}}
[3.29926s  ] [info    ] [configLoad     ] Final tbody: {"/config/##RACK_ID##":{"AlarmDestination":"/assets/bms/##RACK_ID##:alarms","FaultDestination":"/assets/bms/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##RACK_ID##:DischargePowerLimit"}},"/sched/##RACK_ID##":{"pubAssets_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##RACK_ID##)","table":"/assets/bms/##RACK_ID##","value":1},"runMonitor_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##RACK_ID##","enable":"/config/##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##RACK_ID##","value":1}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:CellTempDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellTemp","variable2":"/status/##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:MinCellVoltage","variable2":"/status/##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##RACK_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##RACK_ID##:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:pubAssets_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":0.1,"uri":"/sched/##RACK_ID##:runMonitor_##RACK_ID##","value":1},{"aname":"##RACK_ID##","every":1,"uri":"/sched/##RACK_ID##:checkInputs_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##RACK_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##RACK_ID##":{"/controls/##RACK_ID##:ClearFaults":{"amap":"##RACK_ID##","func":"HandleCmd"}},"/status/##RACK_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##RACK_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##RACK_ID##:clear_alarms"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##RACK_ID##:clear_faults and /alarms/##RACK_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##RACK_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##RACK_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##RACK_ID##) will be reset to the normal state (defined in /config/##RACK_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##RACK_ID##":{"/status/##RACK_ID##:AnyFireFaultActive":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalAlarmCnt":{"amap":"##RACK_ID##","func":"CalculateVar"},"/status/##RACK_ID##:TotalFaultCnt":{"amap":"##RACK_ID##","func":"CalculateVar"}},"/status/##RACK_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##RACK_ID##:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##RACK_ID##:FaultCnt"}},"/components/catl_##RACK_ID##":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/##RACK_ID##:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/##RACK_ID##:DCClosed"}]}]},"enable":"/config/##RACK_ID##:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/##RACK_ID##":{"avg_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_avg_cell_temp","vlink":"/status/##RACK_ID##:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_avg_cell_voltage","vlink":"/status/##RACK_ID##:AvgCellVoltage"},"dc_current":{"value":"/components/catl_##RACK_ID##:sbmu_current","vlink":"/status/##RACK_ID##:DCCurrent"},"dc_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_voltage","vlink":"/status/##RACK_ID##:DCVoltage"},"max_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_max_cell_temp","vlink":"/status/##RACK_ID##:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_max_cell_voltage","vlink":"/status/##RACK_ID##:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_##RACK_ID##:sbmu_min_cell_temp","vlink":"/status/##RACK_ID##:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_##RACK_ID##:sbmu_min_cell_voltage","vlink":"/status/##RACK_ID##:MinCellVoltage"},"soc":{"value":"/components/catl_##RACK_ID##:sbmu_soc","vlink":"/status/##RACK_ID##:SOC"},"soh":{"value":"/components/catl_##RACK_ID##:sbmu_soh","vlink":"/status/##RACK_ID##:SOH"}},"/assets/bms/##RACK_ID##":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##RACK_ID##:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##RACK_ID##:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"##RACK_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/##RACK_ID##:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/##RACK_ID##":{"ui_avg_cell_temp":{"value":"/assets/bms/##RACK_ID##:avg_cell_temp","vlink":"/status/##RACK_ID##:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/##RACK_ID##:avg_cell_voltage","vlink":"/status/##RACK_ID##:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/##RACK_ID##:cell_temp_delta","vlink":"/status/##RACK_ID##:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/##RACK_ID##:cell_voltage_delta","vlink":"/status/##RACK_ID##:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/##RACK_ID##:dc_contactors_closed","vlink":"/status/##RACK_ID##:DCClosed"},"ui_dc_current":{"value":"/assets/bms/##RACK_ID##:dc_current","vlink":"/status/##RACK_ID##:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/##RACK_ID##:dc_power","vlink":"/status/##RACK_ID##:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/##RACK_ID##:dc_voltage","vlink":"/status/##RACK_ID##:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/##RACK_ID##:max_cell_temp","vlink":"/status/##RACK_ID##:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/##RACK_ID##:max_cell_voltage","vlink":"/status/##RACK_ID##:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/##RACK_ID##:max_charge_current","vlink":"/limits/##RACK_ID##:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/##RACK_ID##:max_charge_power","vlink":"/limits/##RACK_ID##:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/##RACK_ID##:max_discharge_current","vlink":"/limits/##RACK_ID##:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/##RACK_ID##:max_discharge_power","vlink":"/limits/##RACK_ID##:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/##RACK_ID##:min_cell_temp","vlink":"/status/##RACK_ID##:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/##RACK_ID##:min_cell_voltage","vlink":"/status/##RACK_ID##:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/##RACK_ID##:soc","vlink":"/status/##RACK_ID##:SOC"},"ui_soh":{"value":"/assets/bms/##RACK_ID##:soh","vlink":"/status/##RACK_ID##:SOH"},"ui_status":{"value":"/assets/bms/##RACK_ID##:status","vlink":"/status/##RACK_ID##:Status"}}}
[3.30261s  ] [info    ] [configure_vmapS] process file seeking header stuff am [bms] ai [no ai]
[3.30318s  ] [info    ] [configure_vmapS] body: {"/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","NumRacks":9,"enable":false,"enum_opt":false},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellTemp","variable2":"/status/bms:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms:MinCellVoltage","variable2":"/status/bms:MaxCellVoltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCCharging":{"expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"NumRacksTotal":9,"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/catl_ems_bms_rw:fault_clear_cmd","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":1},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/faults/bms":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms:HeartbeatRead"},{"inValue":"DCCurrent_limit_max","note":"Bit 0 - BMS DC Current Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[0]"},{"inValue":"DCCurrent_limit_min","note":"Bit 1 - BMS DC Current Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[1]"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 2 - BMS Max Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[2]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 3 - BMS Max Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[3]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 4 - BMS Min Cell Temperature Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[4]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 5 - BMS Min Cell Voltage Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[5]"},{"inValue":"SOH_limit_min","note":"Bit 6 - BMS State of Health Below Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[6]"},{"inValue":"DCVoltage_limit_max","note":"Bit 7 - BMS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[7]"},{"inValue":"DCVoltage_limit_min","note":"Bit 8 - BMS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[8]"},{"inValue":"SOC_limit_max","note":"Bit 9 - BMS SOC Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[9]"},{"inValue":"SOC_limit_min","note":"Bit 10 - BMS SOC Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[10]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[11]"},{"inValue":"CellTempDelta_limit_max","note":"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[12]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 13 - BMS Number of Racks Online Below Min Threshold","outValue":true,"uri":"/site/ess:bms_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"MaxCellVoltage","variable10":"CellVoltageDelta","variable11":"CellTempDelta","variable12":"NumRacksOnline","variable2":"MinCellVoltage","variable3":"MaxCellTemp","variable4":"MinCellTemp","variable5":"SOH","variable6":"HeartbeatRead","variable7":"DCVoltage","variable8":"DCCurrent","variable9":"SOC"}},"/schedule/wake_monitor/bms":{"/status/bms:AnyFireFaultActive":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CellVoltageDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CurrentBeforeStopIsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:DCVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:HeartbeatRead":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:IsAlarming":{"amap":"bms","func":"CalculateVar"},"/status/bms:IsFaulted":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MaxCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:NumRacksOnline":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:OverCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:OverCurrentFault":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:SOH":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:TotalAlarmCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:TotalFaultCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentFault":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AlarmCnt":0,"AnyFireFaultActive":{"numVars":2,"operation":"or","value":false,"variable1":"bms:AnyFireFaultActive","variable2":"/status/bms:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms:enable","expression":"{1} \u003c= {2} and {1} \u003e= (-1 * {2})","note":"Set to true if the BMS DC current is within an acceptable level before stopping the PCS","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent","variable2":"/config/bms:CurrentBeforeStopThreshold"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmTimeout":1,"MaxFaultTimeout":2.5,"MinAlarmTimeout":1,"MinFaultTimeout":2.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:SystemFault","variable2":"/status/bms:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":52,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":53,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":52,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":-0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the max alarm threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalAlarmCnt","variable2":"/status/bms:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"bms:TotalFaultCnt","variable2":"/status/bms:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinAlarmThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the min alarm threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"}},"/components/catl_bms_ems_r":{"bms_poweron":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":1,"outValue":"Normal","uri":"/status/bms:Status"},{"inValue":2,"outValue":"On Fault","uri":"/status/bms:Status"},{"inValue":3,"outValue":"Off Fault","uri":"/status/bms:Status"},{"inValue":0,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/bms:DCClosed"},{"inValue":2,"outValue":false,"uri":"/status/bms:DCClosed"},{"inValue":3,"outValue":true,"uri":"/status/bms:DCClosed"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:status@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms":{"checkInputs_bms":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms:status@ifChanged"}]}]},"enable":"/config/bms:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms":{"avg_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_temperature","vlink":"/status/bms:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"dc_charge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"dc_charge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_charge_energy","vlink":"/status/bms:ChargeableEnergy"},"dc_charge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_charge_allowed","vlink":"/limits/bms:ChargePowerLimit"},"dc_current":{"value":"/components/catl_mbmu_summary_r:mbmu_current","vlink":"/status/bms:DCCurrent"},"dc_discharge_current_limit":{"value":"/components/catl_mbmu_summary_r:mbmu_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"dc_discharge_energy_limit":{"value":"/components/catl_bms_ems_r:bms_remain_discharge_energy","vlink":"/status/bms:DischargeableEnergy"},"dc_discharge_power_limit":{"value":"/components/catl_bms_ems_r:bms_max_discharge_allowed","vlink":"/limits/bms:DischargePowerLimit"},"dc_power":{"value":"/components/catl_mbmu_summary_r:mbmu_power","vlink":"/status/bms:DCPower"},"dc_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_voltage","vlink":"/status/bms:DCVoltage"},"heartbeat_read":{"value":"/components/catl_bms_ems_r:bms_heartbeat","vlink":"/status/bms:HeartbeatRead"},"max_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_temperature","vlink":"/status/bms:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"min_cell_temperature":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_temperature","vlink":"/status/bms:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_mbmu_summary_r:mbmu_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"num_online_racks":{"value":"/components/catl_bms_ems_r:num_hv_subsystem","vlink":"/status/bms:NumRacksOnline"},"soc":{"value":"/components/catl_mbmu_summary_r:mbmu_soc","vlink":"/status/bms:SOC"},"soh":{"value":"/components/catl_mbmu_summary_r:mbmu_soh","vlink":"/status/bms:SOH"}},"/site/ess":{"bms_alarm_active":{"name":"BMS Alarm Active","type":"status","value":false},"bms_avg_cell_temp":{"name":"BMS Avg Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_avg_cell_voltage":{"name":"BMS Avg Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_cell_temp_delta":{"name":"BMS Cell Temperature Delta","scale":100,"type":"status","units":"°C","value":0},"bms_cell_voltage_delta":{"name":"BMS Cell Voltage Delta","scale":10000,"type":"status","units":"V","value":0},"bms_chargeable_energy":{"name":"BMS Chargeable Energy","scale":10,"type":"status","units":"kWh","value":0},"bms_close_contactors_enabled":{"excludeFromFile":true,"name":"BMS Close Contactors Enabled","type":"status","value":false},"bms_comms_ok":{"name":"BMS Comms OK","type":"status","value":false},"bms_control_alarms":{"bit0":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit2":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","bit4":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","name":"BMS Control Alarms","type":"bitfield","value":0},"bms_current_before_stop_is_ok":{"excludeFromFile":true,"name":"BMS Current Before Stop is OK","type":"status","value":false},"bms_dc_charging":{"name":"BMS DC Charging","type":"status","value":false},"bms_dc_contactor_control":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/pcs:enable","every":1,"ifChanged":false,"name":"BMS Contactor Control Command","note1":"Initiates BMS close and open contactors","note2":"2-\u003eclose contactors | 3-\u003eopen contactors","offset":0,"size":1,"type":"control","uri":"/sched/ess:SiteBMSContactorControl","value":0},"bms_dc_contactors_closed":{"name":"BMS DC Contactors Closed","type":"status","value":false},"bms_dc_current":{"name":"BMS DC Current","scale":10,"signed":true,"type":"status","units":"A","value":0},"bms_dc_discharging":{"name":"BMS DC Discharging","type":"status","value":false},"bms_dc_power":{"name":"BMS DC Power","scale":10,"signed":true,"type":"status","units":"kW","value":0},"bms_dc_voltage":{"name":"BMS DC Voltage","scale":10,"signed":true,"type":"status","units":"V","value":0},"bms_dischargeable_energy":{"name":"BMS Dischargeable Energy","scale":10,"type":"status","units":"kWh","value":0},"bms_fault_active":{"name":"BMS Fault Active","type":"status","value":false},"bms_fire_fault_active":{"name":"BMS Fire Fault Active","type":"status","value":false},"bms_max_cell_temp":{"name":"BMS Max Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_max_cell_voltage":{"name":"BMS Max Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_max_charge_current":{"name":"BMS Max Charge Current","signed":true,"type":"status","units":"A","value":0},"bms_max_charge_power":{"name":"BMS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"bms_max_discharge_current":{"name":"BMS Max Discharge Current","type":"status","units":"A","value":0},"bms_max_discharge_power":{"name":"BMS Max Discharge Power","type":"status","units":"kW","value":0},"bms_min_cell_temp":{"name":"BMS Min Cell Temperature","scale":100,"type":"status","units":"°C","value":0},"bms_min_cell_voltage":{"name":"BMS Min Cell Voltage","scale":10000,"type":"status","units":"V","value":0},"bms_monitor_alarms":{"bit0":"BMS DC Current Max Threshold Exceeded","bit1":"BMS DC Current Min Threshold Exceeded","bit10":"BMS SOC Min Threshold Exceeded","bit11":"BMS Cell Voltage Delta Max Threshold Exceeded","bit12":"BMS Cell Temperature Delta Max Threshold Exceeded","bit13":"BMS Number of Racks Online Below Min Threshold","bit2":"BMS Max Cell Temperature Threshold Exceeded","bit3":"BMS Max Cell Voltage Threshold Exceeded","bit4":"BMS Min Cell Temperature Threshold Exceeded","bit5":"BMS Min Cell Voltage Threshold Exceeded","bit6":"BMS State of Health Below Threshold","bit7":"BMS DC Voltage Max Threshold Exceeded","bit8":"BMS DC Voltage Min Threshold Exceeded","bit9":"BMS SOC Max Threshold Exceeded","name":"BMS Monitor Alarms","type":"bitfield","value":0},"bms_monitor_faults":{"bit0":"BMS DC Current Max Threshold Exceeded","bit1":"BMS DC Current Min Threshold Exceeded","bit10":"BMS SOC Min Threshold Exceeded","bit11":"BMS Cell Voltage Delta Max Threshold Exceeded","bit12":"BMS Cell Temperature Delta Max Threshold Exceeded","bit13":"BMS Number of Racks Online Below Min Threshold","bit2":"BMS Max Cell Temperature Threshold Exceeded","bit3":"BMS Max Cell Voltage Threshold Exceeded","bit4":"BMS Min Cell Temperature Threshold Exceeded","bit5":"BMS Min Cell Voltage Threshold Exceeded","bit6":"BMS State of Health Below Threshold","bit7":"BMS DC Voltage Max Threshold Exceeded","bit8":"BMS DC Voltage Min Threshold Exceeded","bit9":"BMS SOC Max Threshold Exceeded","name":"BMS Monitor Faults","type":"bitfield","value":0},"bms_num_racks_online":{"name":"BMS Number of Racks Online","type":"status","value":0},"bms_num_racks_total":{"name":"BMS Number of Racks Total","type":"status","value":0},"bms_open_contactors_enabled":{"excludeFromFile":true,"name":"BMS Open Contactors Enabled","type":"status","value":false},"bms_soc":{"name":"BMS State of Charge (SOC)","scale":10,"type":"status","units":"%","value":0},"bms_soh":{"name":"BMS State of Health (SOH)","scale":10,"type":"status","units":"%","value":0},"bms_status":{"excludeFromFile":true,"name":"BMS Status","type":"status","value":"INIT"}},"/vlinks/bms":{"site_bms_alarm_active":{"value":"/site/ess:bms_alarm_active","vlink":"/status/bms:IsAlarming"},"site_bms_avg_cell_temp":{"value":"/site/ess:bms_avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"site_bms_avg_cell_voltage":{"value":"/site/ess:bms_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"site_bms_cell_temp_delta":{"value":"/site/ess:bms_cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"site_bms_cell_voltage_delta":{"value":"/site/ess:bms_cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"site_bms_chargeable_energy":{"value":"/site/ess:bms_chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"site_bms_close_contactors_enabled":{"value":"/site/ess:bms_close_contactors_enabled","vlink":"/status/bms:CloseContactorsEnabled"},"site_bms_comms_ok":{"value":"/site/ess:bms_comms_ok","vlink":"/status/bms:CommsOK"},"site_bms_current_before_stop_is_ok":{"value":"/site/ess:bms_current_before_stop_is_ok","vlink":"/status/bms:CurrentBeforeStopIsOK"},"site_bms_dc_charging":{"value":"/site/ess:bms_dc_charging","vlink":"/status/bms:DCCharging"},"site_bms_dc_contactors_closed":{"value":"/site/ess:bms_dc_contactors_closed","vlink":"/status/bms:DCClosed"},"site_bms_dc_current":{"value":"/site/ess:bms_dc_current","vlink":"/status/bms:DCCurrent"},"site_bms_dc_discharging":{"value":"/site/ess:bms_dc_discharging","vlink":"/status/bms:DCDischarging"},"site_bms_dc_power":{"value":"/site/ess:bms_dc_power","vlink":"/status/bms:DCPower"},"site_bms_dc_voltage":{"value":"/site/ess:bms_dc_voltage","vlink":"/status/bms:DCVoltage"},"site_bms_dischargeable_energy":{"value":"/site/ess:bms_dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"site_bms_fault_active":{"value":"/site/ess:bms_fault_active","vlink":"/status/bms:IsFaulted"},"site_bms_fire_fault_active":{"value":"/site/ess:bms_fire_fault_active","vlink":"/status/bms:AnyFireFaultActive"},"site_bms_max_cell_temp":{"value":"/site/ess:bms_max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"site_bms_max_cell_voltage":{"value":"/site/ess:bms_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"site_bms_max_charge_current":{"value":"/site/ess:bms_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"site_bms_max_charge_power":{"value":"/site/ess:bms_max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"site_bms_max_discharge_current":{"value":"/site/ess:bms_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"site_bms_max_discharge_power":{"value":"/site/ess:bms_max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"site_bms_min_cell_temp":{"value":"/site/ess:bms_min_cell_temp","vlink":"/status/bms:MinCellTemp"},"site_bms_min_cell_voltage":{"value":"/site/ess:bms_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"site_bms_num_racks_online":{"value":"/site/ess:bms_num_racks_online","vlink":"/status/bms:NumRacksOnline"},"site_bms_num_racks_total":{"value":"/site/ess:bms_num_racks_total","vlink":"/status/bms:NumRacksTotal"},"site_bms_open_contactors_enabled":{"value":"/site/ess:bms_open_contactors_enabled","vlink":"/status/bms:OpenContactorsEnabled"},"site_bms_soc":{"value":"/site/ess:bms_soc","vlink":"/status/bms:SOC"},"site_bms_soh":{"value":"/site/ess:bms_soh","vlink":"/status/bms:SOH"},"site_bms_status":{"value":"/site/ess:bms_status","vlink":"/status/bms:Status"}},"/assets/bms/summary":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"chargeable_energy":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:ClearFaults@triggerCmd"},{"inValue":true,"outValue":1,"uri":"/controls/bms:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"close_contactors":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":false,"every":0.5,"name":"Close DC Contactor","note":"Enabled conditions: ![/status/bms/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode] \u0026\u0026 ![/status/bms/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/bms:LocalStartBMS","value":false},"comms_ok":{"value":false},"dc_charging":{"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_discharging":{"value":false},"dc_power":{"value":0},"dc_voltage":{"value":0},"dischargeable_energy":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/summary:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"num_racks_online":{"value":0},"num_racks_total":{"value":0},"open_contactors":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":false,"every":0.5,"name":"Open DC Contactor","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 ![/status/pcs/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/bms:LocalStopBMS","value":false},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/bms":{"ui_avg_cell_temp":{"value":"/assets/bms/summary:avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/summary:avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/summary:cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/summary:cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"ui_chargeable_energy":{"value":"/assets/bms/summary:chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"ui_comms_ok":{"value":"/assets/bms/summary:comms_ok","vlink":"/status/bms:CommsOK"},"ui_dc_charging":{"value":"/assets/bms/summary:dc_charging","vlink":"/status/bms:DCCharging"},"ui_dc_contactors_closed":{"value":"/assets/bms/summary:dc_contactors_closed","vlink":"/status/bms:DCClosed"},"ui_dc_current":{"value":"/assets/bms/summary:dc_current","vlink":"/status/bms:DCCurrent"},"ui_dc_discharging":{"value":"/assets/bms/summary:dc_discharging","vlink":"/status/bms:DCDischarging"},"ui_dc_power":{"value":"/assets/bms/summary:dc_power","vlink":"/status/bms:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/summary:dc_voltage","vlink":"/status/bms:DCVoltage"},"ui_dischargeable_energy":{"value":"/assets/bms/summary:dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"ui_max_cell_temp":{"value":"/assets/bms/summary:max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/summary:max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/summary:max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/summary:max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/summary:max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/summary:max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/summary:min_cell_temp","vlink":"/status/bms:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/summary:min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"ui_num_racks_online":{"value":"/assets/bms/summary:num_racks_online","vlink":"/status/bms:NumRacksOnline"},"ui_num_racks_total":{"value":"/assets/bms/summary:num_racks_total","vlink":"/status/bms:NumRacksTotal"},"ui_soc":{"value":"/assets/bms/summary:soc","vlink":"/status/bms:SOC"},"ui_soh":{"value":"/assets/bms/summary:soh","vlink":"/status/bms:SOH"},"ui_status":{"value":"/assets/bms/summary:status","vlink":"/status/bms:Status"}}}
[3.30525s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.30637s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/summary:alarms",
	"CurrentBeforeStopThreshold":	35,
	"FaultDestination":	"/assets/bms/summary:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"NumRacks":	9,
	"enable":	false,
	"enum_opt":	false
}].
[3.30688s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:alarms]
[3.30725s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:alarms]
[3.30783s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:faults]
[3.30848s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:faults]
[3.30893s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.30938s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.30981s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.31031s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.31066s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/bms:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/bms:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/bms:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/bms:DischargePowerLimit"
	}
}].
[3.31194s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms:ChargeCurrentLimit]
[3.31229s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms:ChargeCurrentLimit]
[3.31272s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms:ChargePowerLimit]
[3.31369s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms:ChargePowerLimit]
[3.31418s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms:DischargeCurrentLimit]
[3.31521s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms:DischargeCurrentLimit]
[3.3166s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms:DischargePowerLimit]
[3.31714s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms:DischargePowerLimit]
[3.32014s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CloseContactorsEnable":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CloseContactorsEnable"
						}]
				}]
		},
		"value":	"CloseContactorsEnable"
	},
	"LocalStartBMS":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"LocalStartBMS"
						}]
				}]
		},
		"every":	0.5,
		"value":	"LocalStartBMS"
	},
	"LocalStopBMS":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"LocalStopBMS"
						}]
				}]
		},
		"every":	0.5,
		"value":	"LocalStopBMS"
	},
	"OpenContactorsEnable":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"OpenContactorsEnable"
						}]
				}]
		},
		"value":	"OpenContactorsEnable"
	},
	"pubAssetsSummary_bms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"mode":	"ui",
		"note":	"Publishes UI summary data (/assets/bms/summary)",
		"table":	"/assets/bms/summary",
		"value":	1
	},
	"runMonitor_bms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"bms",
		"enable":	"/config/bms:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/bms",
		"value":	1
	},
	"updateHeartbeatWrite_bms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CalculateVar",
							"inAv":	"/status/bms:HeartbeatWrite"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite",
		"value":	1
	}
}].
[3.32203s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [CloseContactorsEnable]
[3.32256s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [CloseContactorsEnable]
[3.3232s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/bms:perf_CloseContactorsEnable]
[3.3238s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/bms:perf_CloseContactorsEnable]
[3.32434s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CloseContactorsEnable_bms]
[3.32473s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CloseContactorsEnable_bms]
[3.32525s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [LocalStartBMS]
[3.3256s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [LocalStartBMS]
[3.32607s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [LocalStopBMS]
[3.32661s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [LocalStopBMS]
[3.32715s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [OpenContactorsEnable]
[3.32759s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [OpenContactorsEnable]
[3.32807s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/bms:perf_OpenContactorsEnable]
[3.32887s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/bms:perf_OpenContactorsEnable]
[3.32932s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:OpenContactorsEnable_bms]
[3.32966s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:OpenContactorsEnable_bms]
[3.3303s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/bms:CellTempDelta_Calculated":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:CellVoltageDelta_Calculated":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:DCCharging":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:DCDischarging":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	}
}].
[3.33104s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms:MinCellTemp",
		"variable2":	"/status/bms:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms:MinCellVoltage",
		"variable2":	"/status/bms:MaxCellVoltage"
	},
	"CommsOK":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	true,
							"uri":	"/site/ess:comms_faults[1]"
						}]
				}]
		},
		"note":	"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable",
		"value":	true
	},
	"DCCharging":	{
		"expression":	"{1} < 0",
		"note":	"Determines if the BMS is charging",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:DCCurrent"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/bms:DCCurrent@EnableMinValCheck"
						}, {
							"uri":	"/status/bms:NumRacksOnline@EnableMinValCheck"
						}, {
							"uri":	"/status/bms:SOH@EnableMinValCheck"
						}, {
							"uri":	"/status/bms:MaxCellVoltage@EnableMaxValCheck"
						}, {
							"uri":	"/status/bms:MinCellVoltage@EnableMinValCheck"
						}, {
							"uri":	"/status/bms:MaxCellTemp@EnableMaxValCheck"
						}, {
							"uri":	"/status/bms:MinCellTemp@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"DCDischarging":	{
		"expression":	"{1} > 0",
		"note":	"Determines if the BMS is discharging",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:DCCurrent"
	},
	"HeartbeatWrite":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"fims":	"set",
							"uri":	"/components/bms:heartbeat_write"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"excludeFromDefaultSched":	true,
		"expression":	"if (({1} >= 59), 0, ({1} + 1))",
		"note":	"Updates and then sends the heartbeat write value",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms:HeartbeatWrite"
	},
	"NumRacksTotal":	9,
	"Status":	"INIT"
}].
[3.33284s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.33333s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.33396s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_bms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/bms) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"bms",
				"every":	1,
				"uri":	"/sched/bms:pubAssetsSummary_bms",
				"value":	1
			}, {
				"aname":	"bms",
				"every":	0.1,
				"uri":	"/sched/bms:runMonitor_bms",
				"value":	1
			}, {
				"aname":	"bms",
				"every":	1,
				"uri":	"/sched/bms:checkInputs_bms",
				"value":	1
			}, {
				"aname":	"bms",
				"every":	1,
				"uri":	"/sched/bms:updateHeartbeatWrite_bms",
				"value":	1
			}, {
				"aname":	"bms",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/bms:LocalStartBMS",
				"value":	0
			}, {
				"aname":	"bms",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/bms:LocalStopBMS",
				"value":	0
			}, {
				"aname":	"bms",
				"debug":	0,
				"every":	0.1,
				"offset":	0,
				"uri":	"/sched/bms:CloseContactorsEnable",
				"value":	0
			}, {
				"aname":	"bms",
				"debug":	0,
				"every":	0.1,
				"offset":	0,
				"uri":	"/sched/bms:OpenContactorsEnable",
				"value":	0
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[3.33465s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"/components/catl_ems_bms_rw:fault_clear_cmd",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	1
	},
	"CloseContactors":	{
		"checkCmdHoldTimeout":	2,
		"checkCmdTimeout":	2,
		"cmdVar":	"/components/catl_ems_bms_rw:ems_cmd",
		"maxCmdTries":	2,
		"value":	2
	},
	"OpenContactors":	{
		"checkCmdHoldTimeout":	2,
		"checkCmdTimeout":	2,
		"cmdVar":	"/components/catl_ems_bms_rw:ems_cmd",
		"maxCmdTries":	2,
		"value":	3
	},
	"VerifyCloseContactors":	{
		"enableAlert":	false,
		"expression":	"{1}",
		"numVars":	1,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms:DCClosed"
	},
	"VerifyOpenContactors":	{
		"enableAlert":	false,
		"expression":	"not {1}",
		"numVars":	1,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms:DCClosed"
	}
}].
[3.33516s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:HandleCmd_ClearFaults]
[3.33544s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:HandleCmd_ClearFaults]
[3.33598s  ] [info    ] [HandleCmd      ] reload first run [bms] [/controls/bms:ClearFaults]  reload 0
[3.33664s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/bms:ClearFaults]
[3.33729s  ] [info    ] [HandleCmd      ] Adding [/controls/bms:ClearFaults] to amap in asset [bms]
[3.3377s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/bms:ClearFaults]
[3.33797s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/bms:ClearFaults]
[3.33863s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/bms:ClearFaults":	{
		"amap":	"bms",
		"func":	"HandleCmd"
	}
}].
[3.33927s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/bms:ClearFaults"
						}, {
							"outValue":	"Clear",
							"uri":	"/faults/bms:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/bms:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear",
		"value":	false
	},
	"CloseContactorsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/bms:VerifyCloseContactors@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/bms:VerifyCloseContactors"
						}, {
							"inValue":	false,
							"outValue":	"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/bms:CloseContactors"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note":	"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm",
		"value":	false
	},
	"OpenContactorsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/bms:VerifyOpenContactors@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/bms:VerifyOpenContactors"
						}, {
							"inValue":	false,
							"outValue":	"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/bms:OpenContactors"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note":	"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm",
		"value":	false
	},
	"VerifyCloseContactorsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/bms:VerifyCloseContactors"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note":	"If the BMS failed to close contactors after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyOpenContactorsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/bms:VerifyOpenContactors"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note":	"If the BMS failed to open contactors after an elasped time, send an alarm",
		"value":	false
	}
}].
[3.34042s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:bms_control_alarms[0]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending clear faults command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"CloseContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:bms_control_alarms[1]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending close contactors command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"HeartbeatRead":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"type":	"alarm",
		"value":	"Normal"
	},
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"HeartbeatRead_state",
							"outValue":	"BMS Communication Failure",
							"uri":	"/alarms/bms:HeartbeatRead"
						}, {
							"inValue":	"DCCurrent_limit_max",
							"note":	"Bit 0 - BMS DC Current Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[0]"
						}, {
							"inValue":	"DCCurrent_limit_min",
							"note":	"Bit 1 - BMS DC Current Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[1]"
						}, {
							"inValue":	"MaxCellTemp_limit_max",
							"note":	"Bit 2 - BMS Max Cell Temperature Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[2]"
						}, {
							"inValue":	"MaxCellVoltage_limit_max",
							"note":	"Bit 3 - BMS Max Cell Voltage Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[3]"
						}, {
							"inValue":	"MinCellTemp_limit_min",
							"note":	"Bit 4 - BMS Min Cell Temperature Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[4]"
						}, {
							"inValue":	"MinCellVoltage_limit_min",
							"note":	"Bit 5 - BMS Min Cell Voltage Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[5]"
						}, {
							"inValue":	"SOH_limit_min",
							"note":	"Bit 6 - BMS State of Health Below Threshold",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[6]"
						}, {
							"inValue":	"DCVoltage_limit_max",
							"note":	"Bit 7 - BMS DC Voltage Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[7]"
						}, {
							"inValue":	"DCVoltage_limit_min",
							"note":	"Bit 8 - BMS DC Voltage Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[8]"
						}, {
							"inValue":	"SOC_limit_max",
							"note":	"Bit 9 - BMS SOC Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[9]"
						}, {
							"inValue":	"SOC_limit_min",
							"note":	"Bit 10 - BMS SOC Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[10]"
						}, {
							"inValue":	"CellVoltageDelta_limit_max",
							"note":	"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[11]"
						}, {
							"inValue":	"CellTempDelta_limit_max",
							"note":	"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[12]"
						}, {
							"inValue":	"NumRacksOnline_limit_min",
							"note":	"Bit 13 - BMS Number of Racks Online Below Min Threshold",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[13]"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"OpenContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:bms_control_alarms[2]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending open contactors command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyCloseContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:bms_control_alarms[3]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the BMS failed to close contactors",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyOpenContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:bms_control_alarms[4]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the BMS failed to open contactors",
		"type":	"alarm",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"numVars":	12,
		"type":	"alarm",
		"value":	"Normal",
		"variable1":	"MaxCellVoltage",
		"variable10":	"CellVoltageDelta",
		"variable11":	"CellTempDelta",
		"variable12":	"NumRacksOnline",
		"variable2":	"MinCellVoltage",
		"variable3":	"MaxCellTemp",
		"variable4":	"MinCellTemp",
		"variable5":	"SOH",
		"variable6":	"HeartbeatRead",
		"variable7":	"DCVoltage",
		"variable8":	"DCCurrent",
		"variable9":	"SOC"
	}
}].
[3.34159s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.34211s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.3426s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms:FaultDestination]
[3.3431s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms:FaultDestination]
[3.34337s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms:NoFaultMsg]
[3.34358s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms:NoFaultMsg]
[3.34395s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:FaultCnt]
[3.3444s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:FaultCnt]
[3.3448s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms:AlarmDestination]
[3.34576s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms:AlarmDestination]
[3.34619s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms:NoAlarmMsg]
[3.34654s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms:NoAlarmMsg]
[3.34738s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:AlarmCnt]
[3.34792s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:AlarmCnt]
[3.34886s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.35026s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.35232s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.35311s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.35406s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.35452s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.35606s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.35688s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.3575s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.35854s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.35949s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.35999s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.36075s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.36119s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.36226s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"HeartbeatRead":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"type":	"fault",
		"value":	"Normal"
	},
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"HeartbeatRead_state",
							"outValue":	"BMS Communication Failure",
							"uri":	"/faults/bms:HeartbeatRead"
						}, {
							"inValue":	"DCCurrent_limit_max",
							"note":	"Bit 0 - BMS DC Current Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[0]"
						}, {
							"inValue":	"DCCurrent_limit_min",
							"note":	"Bit 1 - BMS DC Current Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[1]"
						}, {
							"inValue":	"MaxCellTemp_limit_max",
							"note":	"Bit 2 - BMS Max Cell Temperature Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[2]"
						}, {
							"inValue":	"MaxCellVoltage_limit_max",
							"note":	"Bit 3 - BMS Max Cell Voltage Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[3]"
						}, {
							"inValue":	"MinCellTemp_limit_min",
							"note":	"Bit 4 - BMS Min Cell Temperature Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[4]"
						}, {
							"inValue":	"MinCellVoltage_limit_min",
							"note":	"Bit 5 - BMS Min Cell Voltage Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[5]"
						}, {
							"inValue":	"SOH_limit_min",
							"note":	"Bit 6 - BMS State of Health Below Threshold",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[6]"
						}, {
							"inValue":	"DCVoltage_limit_max",
							"note":	"Bit 7 - BMS DC Voltage Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[7]"
						}, {
							"inValue":	"DCVoltage_limit_min",
							"note":	"Bit 8 - BMS DC Voltage Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[8]"
						}, {
							"inValue":	"SOC_limit_max",
							"note":	"Bit 9 - BMS SOC Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[9]"
						}, {
							"inValue":	"SOC_limit_min",
							"note":	"Bit 10 - BMS SOC Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[10]"
						}, {
							"inValue":	"CellVoltageDelta_limit_max",
							"note":	"Bit 11 - BMS Cell Voltage Delta Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[11]"
						}, {
							"inValue":	"CellTempDelta_limit_max",
							"note":	"Bit 12 - BMS Cell Temperature Delta Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[12]"
						}, {
							"inValue":	"NumRacksOnline_limit_min",
							"note":	"Bit 13 - BMS Number of Racks Online Below Min Threshold",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[13]"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"numVars":	12,
		"type":	"fault",
		"value":	"Normal",
		"variable1":	"MaxCellVoltage",
		"variable10":	"CellVoltageDelta",
		"variable11":	"CellTempDelta",
		"variable12":	"NumRacksOnline",
		"variable2":	"MinCellVoltage",
		"variable3":	"MaxCellTemp",
		"variable4":	"MinCellTemp",
		"variable5":	"SOH",
		"variable6":	"HeartbeatRead",
		"variable7":	"DCVoltage",
		"variable8":	"DCCurrent",
		"variable9":	"SOC"
	}
}].
[3.36392s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.36428s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.36485s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.36516s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.36797s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.36874s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.36978s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/bms:AnyFireFaultActive":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:CellTempDelta":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:CellVoltageDelta":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:CurrentBeforeStopIsOK":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:DCCurrent":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:DCVoltage":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:HeartbeatRead":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:IsAlarming":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:IsFaulted":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:MaxCellTemp":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:MaxCellVoltage":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:MinCellTemp":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:MinCellVoltage":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:NumRacksOnline":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:OverCurrentAlarm":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:OverCurrentFault":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:SOC":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:SOH":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:TotalAlarmCnt":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:TotalFaultCnt":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:UnderCurrentAlarm":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:UnderCurrentFault":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	}
}].
[3.37151s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"numVars":	2,
		"operation":	"or",
		"value":	false,
		"variable1":	"bms:AnyFireFaultActive",
		"variable2":	"/status/bms:FireFaultActive"
	},
	"CellTempDelta":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"MaxAlarmThreshold":	7,
		"MaxAlarmTimeout":	5.5,
		"MaxFaultThreshold":	10,
		"MaxFaultTimeout":	2.5,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	7,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions",
		"value":	0
	},
	"CellVoltageDelta":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"MaxAlarmThreshold":	1,
		"MaxAlarmTimeout":	5.5,
		"MaxFaultThreshold":	2,
		"MaxFaultTimeout":	2.5,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	1,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions",
		"value":	0
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	0,
							"uri":	"/site/ess:bms_monitor_faults"
						}, {
							"outValue":	0,
							"uri":	"/site/ess:bms_monitor_alarms"
						}, {
							"outValue":	0,
							"uri":	"/site/ess:bms_control_alarms"
						}]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"CurrentBeforeStopIsOK":	{
		"enable":	"/config/bms:enable",
		"expression":	"{1} <= {2} and {1} >= (-1 * {2})",
		"note":	"Set to true if the BMS DC current is within an acceptable level before stopping the PCS",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:DCCurrent",
		"variable2":	"/config/bms:CurrentBeforeStopThreshold"
	},
	"DCCurrent":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"EnableMinValCheck":	false,
		"MaxAlarmTimeout":	1,
		"MaxFaultTimeout":	2.5,
		"MinAlarmTimeout":	1,
		"MinFaultTimeout":	2.5,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over/under current conditions",
		"value":	0
	},
	"DCVoltage":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"EnableMinValCheck":	false,
		"MaxAlarmThreshold":	1450,
		"MaxAlarmTimeout":	0.5,
		"MaxFaultThreshold":	1500,
		"MaxFaultTimeout":	0.5,
		"MaxRecoverTimeout":	1.5,
		"MaxResetValue":	1400,
		"MinAlarmThreshold":	1000,
		"MinAlarmTimeout":	0.5,
		"MinFaultThreshold":	800,
		"MinFaultTimeout":	0.2,
		"MinRecoverTimeout":	1.5,
		"MinResetValue":	1300,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions",
		"value":	0
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ActivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ReactivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:Stop@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:Stop"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS",
		"value":	false
	},
	"FireFaultActive":	false,
	"HeartbeatRead":	{
		"AlarmTimeout":	10,
		"EnableAlert":	false,
		"EnableCommsCheck":	false,
		"EnableStateCheck":	false,
		"FaultTimeout":	15,
		"RecoverTimeout":	0.1,
		"Type":	"int",
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS",
		"value":	0
	},
	"IsAlarming":	{
		"expression":	"{1} > 0",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:TotalAlarmCnt"
	},
	"IsFaulted":	{
		"expression":	"{1} or {2} > 0",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:SystemFault",
		"variable2":	"/status/bms:TotalFaultCnt"
	},
	"MaxCellTemp":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"MaxAlarmThreshold":	52,
		"MaxAlarmTimeout":	2.5,
		"MaxFaultThreshold":	53,
		"MaxFaultTimeout":	1,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	52,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions",
		"value":	0
	},
	"MaxCellVoltage":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"MaxAlarmThreshold":	3.58,
		"MaxAlarmTimeout":	2.5,
		"MaxFaultThreshold":	3.6,
		"MaxFaultTimeout":	0.2,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	3.5,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions",
		"value":	0
	},
	"MinCellTemp":	{
		"EnableFaultCheck":	true,
		"EnableMinValCheck":	false,
		"MinAlarmThreshold":	10,
		"MinAlarmTimeout":	2.5,
		"MinFaultThreshold":	-0.1,
		"MinFaultTimeout":	0.5,
		"MinRecoverTimeout":	1.4,
		"MinResetValue":	10,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions",
		"value":	0
	},
	"MinCellVoltage":	{
		"EnableFaultCheck":	true,
		"EnableMinValCheck":	false,
		"MinAlarmThreshold":	2.85,
		"MinAlarmTimeout":	2.5,
		"MinFaultThreshold":	2.8,
		"MinFaultTimeout":	0,
		"MinRecoverTimeout":	1.4,
		"MinResetValue":	2.85,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions",
		"value":	0
	},
	"NumRacksOnline":	{
		"EnableFaultCheck":	true,
		"EnableMinValCheck":	false,
		"MinAlarmThreshold":	5,
		"MinAlarmTimeout":	5,
		"MinFaultThreshold":	2,
		"MinFaultTimeout":	10,
		"MinRecoverTimeout":	1,
		"MinResetValue":	5,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for under num instances condition",
		"note2":	"TODO: Update min alarm/fault/reset thresholds and timeouts",
		"note3":	"TODO: Decode or calculate num instances online and remap/link value to this variable",
		"value":	0
	},
	"OverCurrentAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:DCCurrent@MaxAlarmThreshold"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"expression":	"{1}",
		"note":	"Adjusts the max alarm threshold for BMS DC current monitoring variable depending on the discharge current limit",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/limits/bms:DischargeCurrentLimit"
	},
	"OverCurrentFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:DCCurrent@MaxFaultThreshold"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"expression":	"{1} * 1.05",
		"note":	"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/limits/bms:DischargeCurrentLimit"
	},
	"SOC":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"EnableMinValCheck":	false,
		"MaxAlarmThreshold":	99.9,
		"MaxAlarmTimeout":	5.5,
		"MaxFaultThreshold":	100,
		"MaxFaultTimeout":	2.5,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	99,
		"MinAlarmThreshold":	6,
		"MinAlarmTimeout":	5.5,
		"MinFaultThreshold":	1,
		"MinFaultTimeout":	2.5,
		"MinRecoverTimeout":	1.4,
		"MinResetValue":	8,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over/under soc conditions",
		"value":	0
	},
	"SOH":	{
		"EnableFaultCheck":	true,
		"EnableMinValCheck":	false,
		"MinAlarmThreshold":	30,
		"MinAlarmTimeout":	5.5,
		"MinFaultThreshold":	25,
		"MinFaultTimeout":	2.5,
		"MinRecoverTimeout":	1.4,
		"MinResetValue":	30,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for under soh conditions",
		"value":	0
	},
	"SystemFault":	false,
	"TotalAlarmCnt":	{
		"numVars":	2,
		"operation":	"+",
		"value":	0,
		"variable1":	"bms:TotalAlarmCnt",
		"variable2":	"/status/bms:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"numVars":	2,
		"operation":	"+",
		"value":	0,
		"variable1":	"bms:TotalFaultCnt",
		"variable2":	"/status/bms:FaultCnt"
	},
	"UnderCurrentAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:DCCurrent@MinAlarmThreshold"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"expression":	"{1}",
		"note":	"Adjusts the min alarm threshold for BMS DC current monitoring variable depending on the charge current limit",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/limits/bms:ChargeCurrentLimit"
	},
	"UnderCurrentFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:DCCurrent@MinFaultThreshold"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"expression":	"{1} * 1.05",
		"note":	"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/limits/bms:ChargeCurrentLimit"
	}
}].
[3.37355s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CellTempDelta_reload]
[3.37447s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CellTempDelta_reload]
[3.37501s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/alarms/bms:MonitorVarAlarm]
[3.37544s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/alarms/bms:MonitorVarAlarm]
[3.37595s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/faults/bms:MonitorVarFault]
[3.37741s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/faults/bms:MonitorVarFault]
[3.37807s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:CellTempDelta is /assets/bms/summary:faults
[3.37862s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:CellTempDelta is /assets/bms/summary:alarms
[3.37919s  ] [info    ] [CheckMonitorVar] Not set up for [CellTempDelta] reloadStr [CellTempDelta_reload]
[3.38026s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CellVoltageDelta_reload]
[3.38071s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CellVoltageDelta_reload]
[3.38139s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:CellVoltageDelta is /assets/bms/summary:faults
[3.3821s   ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:CellVoltageDelta is /assets/bms/summary:alarms
[3.38282s  ] [info    ] [CheckMonitorVar] Not set up for [CellVoltageDelta] reloadStr [CellVoltageDelta_reload]
[3.38371s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:DCCurrent_reload]
[3.38419s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:DCCurrent_reload]
[3.38566s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:DCCurrent is /assets/bms/summary:faults
[3.38621s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:DCCurrent is /assets/bms/summary:alarms
[3.38653s  ] [info    ] [CheckMonitorVar] Not set up for [DCCurrent] reloadStr [DCCurrent_reload]
[3.3875s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:DCVoltage_reload]
[3.38788s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:DCVoltage_reload]
[3.38858s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:DCVoltage is /assets/bms/summary:faults
[3.38911s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:DCVoltage is /assets/bms/summary:alarms
[3.38968s  ] [info    ] [CheckMonitorVar] Not set up for [DCVoltage] reloadStr [DCVoltage_reload]
[3.39098s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:HeartbeatRead_reload]
[3.39154s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:HeartbeatRead_reload]
[3.39223s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:HeartbeatRead is /assets/bms/summary:faults
[3.3927s   ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:HeartbeatRead is /assets/bms/summary:alarms
[3.39399s  ] [info    ] [CheckMonitorVar] Not set up for [HeartbeatRead] reloadStr [HeartbeatRead_reload]
[3.39497s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:MaxCellTemp_reload]
[3.39543s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:MaxCellTemp_reload]
[3.39641s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:MaxCellTemp is /assets/bms/summary:faults
[3.39692s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:MaxCellTemp is /assets/bms/summary:alarms
[3.39749s  ] [info    ] [CheckMonitorVar] Not set up for [MaxCellTemp] reloadStr [MaxCellTemp_reload]
[3.39829s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:MaxCellVoltage_reload]
[3.39878s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:MaxCellVoltage_reload]
[3.39926s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:MaxCellVoltage is /assets/bms/summary:faults
[3.39966s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:MaxCellVoltage is /assets/bms/summary:alarms
[3.39995s  ] [info    ] [CheckMonitorVar] Not set up for [MaxCellVoltage] reloadStr [MaxCellVoltage_reload]
[3.40082s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:MinCellTemp_reload]
[3.40122s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:MinCellTemp_reload]
[3.40167s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:MinCellTemp is /assets/bms/summary:faults
[3.40208s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:MinCellTemp is /assets/bms/summary:alarms
[3.40264s  ] [info    ] [CheckMonitorVar] Not set up for [MinCellTemp] reloadStr [MinCellTemp_reload]
[3.40343s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:MinCellVoltage_reload]
[3.40402s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:MinCellVoltage_reload]
[3.40477s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:MinCellVoltage is /assets/bms/summary:faults
[3.40554s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:MinCellVoltage is /assets/bms/summary:alarms
[3.40611s  ] [info    ] [CheckMonitorVar] Not set up for [MinCellVoltage] reloadStr [MinCellVoltage_reload]
[3.40721s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:NumRacksOnline_reload]
[3.40823s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:NumRacksOnline_reload]
[3.40922s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:NumRacksOnline is /assets/bms/summary:faults
[3.40962s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:NumRacksOnline is /assets/bms/summary:alarms
[3.41015s  ] [info    ] [CheckMonitorVar] Not set up for [NumRacksOnline] reloadStr [NumRacksOnline_reload]
[3.41118s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:SOC_reload]
[3.41166s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:SOC_reload]
[3.41209s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:SOC is /assets/bms/summary:faults
[3.41247s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:SOC is /assets/bms/summary:alarms
[3.4128s   ] [info    ] [CheckMonitorVar] Not set up for [SOC] reloadStr [SOC_reload]
[3.41337s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:SOH_reload]
[3.41377s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:SOH_reload]
[3.4144s   ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:SOH is /assets/bms/summary:faults
[3.41501s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:SOH is /assets/bms/summary:alarms
[3.41549s  ] [info    ] [CheckMonitorVar] Not set up for [SOH] reloadStr [SOH_reload]
[3.41668s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"bms_poweron":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	"Normal",
							"uri":	"/status/bms:Status"
						}, {
							"inValue":	1,
							"outValue":	"Normal",
							"uri":	"/status/bms:Status"
						}, {
							"inValue":	2,
							"outValue":	"On Fault",
							"uri":	"/status/bms:Status"
						}, {
							"inValue":	3,
							"outValue":	"Off Fault",
							"uri":	"/status/bms:Status"
						}, {
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/bms:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/bms:DCClosed"
						}, {
							"inValue":	2,
							"outValue":	false,
							"uri":	"/status/bms:DCClosed"
						}, {
							"inValue":	3,
							"outValue":	true,
							"uri":	"/status/bms:DCClosed"
						}, {
							"enable":	"/config/bms:enum_opt",
							"outValue":	true,
							"uri":	"/components/bms:status@ifChanged",
							"useAv":	true
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[3.41732s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"checkInputs_bms":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	false,
							"uri":	"/components/bms:status@ifChanged"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change",
		"value":	0
	}
}].
[3.41821s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temperature":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_avg_cell_temperature",
		"vlink":	"/status/bms:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_avg_cell_voltage",
		"vlink":	"/status/bms:AvgCellVoltage"
	},
	"dc_charge_current_limit":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_max_charge_current",
		"vlink":	"/limits/bms:ChargeCurrentLimit"
	},
	"dc_charge_energy_limit":	{
		"value":	"/components/catl_bms_ems_r:bms_remain_charge_energy",
		"vlink":	"/status/bms:ChargeableEnergy"
	},
	"dc_charge_power_limit":	{
		"value":	"/components/catl_bms_ems_r:bms_max_charge_allowed",
		"vlink":	"/limits/bms:ChargePowerLimit"
	},
	"dc_current":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_current",
		"vlink":	"/status/bms:DCCurrent"
	},
	"dc_discharge_current_limit":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_max_discharge_current",
		"vlink":	"/limits/bms:DischargeCurrentLimit"
	},
	"dc_discharge_energy_limit":	{
		"value":	"/components/catl_bms_ems_r:bms_remain_discharge_energy",
		"vlink":	"/status/bms:DischargeableEnergy"
	},
	"dc_discharge_power_limit":	{
		"value":	"/components/catl_bms_ems_r:bms_max_discharge_allowed",
		"vlink":	"/limits/bms:DischargePowerLimit"
	},
	"dc_power":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_power",
		"vlink":	"/status/bms:DCPower"
	},
	"dc_voltage":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_voltage",
		"vlink":	"/status/bms:DCVoltage"
	},
	"heartbeat_read":	{
		"value":	"/components/catl_bms_ems_r:bms_heartbeat",
		"vlink":	"/status/bms:HeartbeatRead"
	},
	"max_cell_temperature":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_max_cell_temperature",
		"vlink":	"/status/bms:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_max_cell_voltage",
		"vlink":	"/status/bms:MaxCellVoltage"
	},
	"min_cell_temperature":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_min_cell_temperature",
		"vlink":	"/status/bms:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_min_cell_voltage",
		"vlink":	"/status/bms:MinCellVoltage"
	},
	"num_online_racks":	{
		"value":	"/components/catl_bms_ems_r:num_hv_subsystem",
		"vlink":	"/status/bms:NumRacksOnline"
	},
	"soc":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_soc",
		"vlink":	"/status/bms:SOC"
	},
	"soh":	{
		"value":	"/components/catl_mbmu_summary_r:mbmu_soh",
		"vlink":	"/status/bms:SOH"
	}
}].
[3.4187s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_avg_cell_temperature]
[3.42103s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_avg_cell_temperature]
[3.42166s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_avg_cell_voltage]
[3.42215s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_avg_cell_voltage]
[3.42279s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_max_charge_current]
[3.42426s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_max_charge_current]
[3.42531s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_bms_ems_r:bms_remain_charge_energy]
[3.42589s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_bms_ems_r:bms_remain_charge_energy]
[3.42627s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_bms_ems_r:bms_max_charge_allowed]
[3.42671s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_bms_ems_r:bms_max_charge_allowed]
[3.42729s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_current]
[3.42786s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_current]
[3.42867s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_max_discharge_current]
[3.42927s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_max_discharge_current]
[3.42966s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_bms_ems_r:bms_remain_discharge_energy]
[3.43008s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_bms_ems_r:bms_remain_discharge_energy]
[3.43062s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_bms_ems_r:bms_max_discharge_allowed]
[3.43115s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_bms_ems_r:bms_max_discharge_allowed]
[3.43172s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_power]
[3.43205s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_power]
[3.4326s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_voltage]
[3.43303s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_voltage]
[3.43374s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_bms_ems_r:bms_heartbeat]
[3.43525s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_bms_ems_r:bms_heartbeat]
[3.43931s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_max_cell_temperature]
[3.442s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_max_cell_temperature]
[3.44284s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_max_cell_voltage]
[3.4436s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_max_cell_voltage]
[3.44455s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_min_cell_temperature]
[3.44498s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_min_cell_temperature]
[3.44565s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_min_cell_voltage]
[3.44627s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_min_cell_voltage]
[3.44701s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_bms_ems_r:num_hv_subsystem]
[3.44747s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_bms_ems_r:num_hv_subsystem]
[3.44797s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_soc]
[3.44858s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_soc]
[3.44914s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_soh]
[3.45092s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_mbmu_summary_r:mbmu_soh]
[3.456s    ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"bms_alarm_active":	{
		"name":	"BMS Alarm Active",
		"type":	"status",
		"value":	false
	},
	"bms_avg_cell_temp":	{
		"name":	"BMS Avg Cell Temperature",
		"scale":	100,
		"type":	"status",
		"units":	"°C",
		"value":	0
	},
	"bms_avg_cell_voltage":	{
		"name":	"BMS Avg Cell Voltage",
		"scale":	10000,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"bms_cell_temp_delta":	{
		"name":	"BMS Cell Temperature Delta",
		"scale":	100,
		"type":	"status",
		"units":	"°C",
		"value":	0
	},
	"bms_cell_voltage_delta":	{
		"name":	"BMS Cell Voltage Delta",
		"scale":	10000,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"bms_chargeable_energy":	{
		"name":	"BMS Chargeable Energy",
		"scale":	10,
		"type":	"status",
		"units":	"kWh",
		"value":	0
	},
	"bms_close_contactors_enabled":	{
		"excludeFromFile":	true,
		"name":	"BMS Close Contactors Enabled",
		"type":	"status",
		"value":	false
	},
	"bms_comms_ok":	{
		"name":	"BMS Comms OK",
		"type":	"status",
		"value":	false
	},
	"bms_control_alarms":	{
		"bit0":	"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit1":	"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit2":	"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit3":	"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout",
		"bit4":	"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout",
		"name":	"BMS Control Alarms",
		"type":	"bitfield",
		"value":	0
	},
	"bms_current_before_stop_is_ok":	{
		"excludeFromFile":	true,
		"name":	"BMS Current Before Stop is OK",
		"type":	"status",
		"value":	false
	},
	"bms_dc_charging":	{
		"name":	"BMS DC Charging",
		"type":	"status",
		"value":	false
	},
	"bms_dc_contactor_control":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched"
						}]
				}]
		},
		"aname":	"ess",
		"debug":	0,
		"enable":	"/config/pcs:enable",
		"every":	1,
		"ifChanged":	false,
		"name":	"BMS Contactor Control Command",
		"note1":	"Initiates BMS close and open contactors",
		"note2":	"2->close contactors | 3->open contactors",
		"offset":	0,
		"size":	1,
		"type":	"control",
		"uri":	"/sched/ess:SiteBMSContactorControl",
		"value":	0
	},
	"bms_dc_contactors_closed":	{
		"name":	"BMS DC Contactors Closed",
		"type":	"status",
		"value":	false
	},
	"bms_dc_current":	{
		"name":	"BMS DC Current",
		"scale":	10,
		"signed":	true,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"bms_dc_discharging":	{
		"name":	"BMS DC Discharging",
		"type":	"status",
		"value":	false
	},
	"bms_dc_power":	{
		"name":	"BMS DC Power",
		"scale":	10,
		"signed":	true,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"bms_dc_voltage":	{
		"name":	"BMS DC Voltage",
		"scale":	10,
		"signed":	true,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"bms_dischargeable_energy":	{
		"name":	"BMS Dischargeable Energy",
		"scale":	10,
		"type":	"status",
		"units":	"kWh",
		"value":	0
	},
	"bms_fault_active":	{
		"name":	"BMS Fault Active",
		"type":	"status",
		"value":	false
	},
	"bms_fire_fault_active":	{
		"name":	"BMS Fire Fault Active",
		"type":	"status",
		"value":	false
	},
	"bms_max_cell_temp":	{
		"name":	"BMS Max Cell Temperature",
		"scale":	100,
		"type":	"status",
		"units":	"°C",
		"value":	0
	},
	"bms_max_cell_voltage":	{
		"name":	"BMS Max Cell Voltage",
		"scale":	10000,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"bms_max_charge_current":	{
		"name":	"BMS Max Charge Current",
		"signed":	true,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"bms_max_charge_power":	{
		"name":	"BMS Max Charge Power",
		"signed":	true,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"bms_max_discharge_current":	{
		"name":	"BMS Max Discharge Current",
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"bms_max_discharge_power":	{
		"name":	"BMS Max Discharge Power",
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"bms_min_cell_temp":	{
		"name":	"BMS Min Cell Temperature",
		"scale":	100,
		"type":	"status",
		"units":	"°C",
		"value":	0
	},
	"bms_min_cell_voltage":	{
		"name":	"BMS Min Cell Voltage",
		"scale":	10000,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"bms_monitor_alarms":	{
		"bit0":	"BMS DC Current Max Threshold Exceeded",
		"bit1":	"BMS DC Current Min Threshold Exceeded",
		"bit10":	"BMS SOC Min Threshold Exceeded",
		"bit11":	"BMS Cell Voltage Delta Max Threshold Exceeded",
		"bit12":	"BMS Cell Temperature Delta Max Threshold Exceeded",
		"bit13":	"BMS Number of Racks Online Below Min Threshold",
		"bit2":	"BMS Max Cell Temperature Threshold Exceeded",
		"bit3":	"BMS Max Cell Voltage Threshold Exceeded",
		"bit4":	"BMS Min Cell Temperature Threshold Exceeded",
		"bit5":	"BMS Min Cell Voltage Threshold Exceeded",
		"bit6":	"BMS State of Health Below Threshold",
		"bit7":	"BMS DC Voltage Max Threshold Exceeded",
		"bit8":	"BMS DC Voltage Min Threshold Exceeded",
		"bit9":	"BMS SOC Max Threshold Exceeded",
		"name":	"BMS Monitor Alarms",
		"type":	"bitfield",
		"value":	0
	},
	"bms_monitor_faults":	{
		"bit0":	"BMS DC Current Max Threshold Exceeded",
		"bit1":	"BMS DC Current Min Threshold Exceeded",
		"bit10":	"BMS SOC Min Threshold Exceeded",
		"bit11":	"BMS Cell Voltage Delta Max Threshold Exceeded",
		"bit12":	"BMS Cell Temperature Delta Max Threshold Exceeded",
		"bit13":	"BMS Number of Racks Online Below Min Threshold",
		"bit2":	"BMS Max Cell Temperature Threshold Exceeded",
		"bit3":	"BMS Max Cell Voltage Threshold Exceeded",
		"bit4":	"BMS Min Cell Temperature Threshold Exceeded",
		"bit5":	"BMS Min Cell Voltage Threshold Exceeded",
		"bit6":	"BMS State of Health Below Threshold",
		"bit7":	"BMS DC Voltage Max Threshold Exceeded",
		"bit8":	"BMS DC Voltage Min Threshold Exceeded",
		"bit9":	"BMS SOC Max Threshold Exceeded",
		"name":	"BMS Monitor Faults",
		"type":	"bitfield",
		"value":	0
	},
	"bms_num_racks_online":	{
		"name":	"BMS Number of Racks Online",
		"type":	"status",
		"value":	0
	},
	"bms_num_racks_total":	{
		"name":	"BMS Number of Racks Total",
		"type":	"status",
		"value":	0
	},
	"bms_open_contactors_enabled":	{
		"excludeFromFile":	true,
		"name":	"BMS Open Contactors Enabled",
		"type":	"status",
		"value":	false
	},
	"bms_soc":	{
		"name":	"BMS State of Charge (SOC)",
		"scale":	10,
		"type":	"status",
		"units":	"%",
		"value":	0
	},
	"bms_soh":	{
		"name":	"BMS State of Health (SOH)",
		"scale":	10,
		"type":	"status",
		"units":	"%",
		"value":	0
	},
	"bms_status":	{
		"excludeFromFile":	true,
		"name":	"BMS Status",
		"type":	"status",
		"value":	"INIT"
	}
}].
[3.46088s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.46186s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.46389s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"site_bms_alarm_active":	{
		"value":	"/site/ess:bms_alarm_active",
		"vlink":	"/status/bms:IsAlarming"
	},
	"site_bms_avg_cell_temp":	{
		"value":	"/site/ess:bms_avg_cell_temp",
		"vlink":	"/status/bms:AvgCellTemp"
	},
	"site_bms_avg_cell_voltage":	{
		"value":	"/site/ess:bms_avg_cell_voltage",
		"vlink":	"/status/bms:AvgCellVoltage"
	},
	"site_bms_cell_temp_delta":	{
		"value":	"/site/ess:bms_cell_temp_delta",
		"vlink":	"/status/bms:CellTempDelta"
	},
	"site_bms_cell_voltage_delta":	{
		"value":	"/site/ess:bms_cell_voltage_delta",
		"vlink":	"/status/bms:CellVoltageDelta"
	},
	"site_bms_chargeable_energy":	{
		"value":	"/site/ess:bms_chargeable_energy",
		"vlink":	"/status/bms:ChargeableEnergy"
	},
	"site_bms_close_contactors_enabled":	{
		"value":	"/site/ess:bms_close_contactors_enabled",
		"vlink":	"/status/bms:CloseContactorsEnabled"
	},
	"site_bms_comms_ok":	{
		"value":	"/site/ess:bms_comms_ok",
		"vlink":	"/status/bms:CommsOK"
	},
	"site_bms_current_before_stop_is_ok":	{
		"value":	"/site/ess:bms_current_before_stop_is_ok",
		"vlink":	"/status/bms:CurrentBeforeStopIsOK"
	},
	"site_bms_dc_charging":	{
		"value":	"/site/ess:bms_dc_charging",
		"vlink":	"/status/bms:DCCharging"
	},
	"site_bms_dc_contactors_closed":	{
		"value":	"/site/ess:bms_dc_contactors_closed",
		"vlink":	"/status/bms:DCClosed"
	},
	"site_bms_dc_current":	{
		"value":	"/site/ess:bms_dc_current",
		"vlink":	"/status/bms:DCCurrent"
	},
	"site_bms_dc_discharging":	{
		"value":	"/site/ess:bms_dc_discharging",
		"vlink":	"/status/bms:DCDischarging"
	},
	"site_bms_dc_power":	{
		"value":	"/site/ess:bms_dc_power",
		"vlink":	"/status/bms:DCPower"
	},
	"site_bms_dc_voltage":	{
		"value":	"/site/ess:bms_dc_voltage",
		"vlink":	"/status/bms:DCVoltage"
	},
	"site_bms_dischargeable_energy":	{
		"value":	"/site/ess:bms_dischargeable_energy",
		"vlink":	"/status/bms:DischargeableEnergy"
	},
	"site_bms_fault_active":	{
		"value":	"/site/ess:bms_fault_active",
		"vlink":	"/status/bms:IsFaulted"
	},
	"site_bms_fire_fault_active":	{
		"value":	"/site/ess:bms_fire_fault_active",
		"vlink":	"/status/bms:AnyFireFaultActive"
	},
	"site_bms_max_cell_temp":	{
		"value":	"/site/ess:bms_max_cell_temp",
		"vlink":	"/status/bms:MaxCellTemp"
	},
	"site_bms_max_cell_voltage":	{
		"value":	"/site/ess:bms_max_cell_voltage",
		"vlink":	"/status/bms:MaxCellVoltage"
	},
	"site_bms_max_charge_current":	{
		"value":	"/site/ess:bms_max_charge_current",
		"vlink":	"/limits/bms:ChargeCurrentLimit"
	},
	"site_bms_max_charge_power":	{
		"value":	"/site/ess:bms_max_charge_power",
		"vlink":	"/limits/bms:ChargePowerLimit"
	},
	"site_bms_max_discharge_current":	{
		"value":	"/site/ess:bms_max_discharge_current",
		"vlink":	"/limits/bms:DischargeCurrentLimit"
	},
	"site_bms_max_discharge_power":	{
		"value":	"/site/ess:bms_max_discharge_power",
		"vlink":	"/limits/bms:DischargePowerLimit"
	},
	"site_bms_min_cell_temp":	{
		"value":	"/site/ess:bms_min_cell_temp",
		"vlink":	"/status/bms:MinCellTemp"
	},
	"site_bms_min_cell_voltage":	{
		"value":	"/site/ess:bms_min_cell_voltage",
		"vlink":	"/status/bms:MinCellVoltage"
	},
	"site_bms_num_racks_online":	{
		"value":	"/site/ess:bms_num_racks_online",
		"vlink":	"/status/bms:NumRacksOnline"
	},
	"site_bms_num_racks_total":	{
		"value":	"/site/ess:bms_num_racks_total",
		"vlink":	"/status/bms:NumRacksTotal"
	},
	"site_bms_open_contactors_enabled":	{
		"value":	"/site/ess:bms_open_contactors_enabled",
		"vlink":	"/status/bms:OpenContactorsEnabled"
	},
	"site_bms_soc":	{
		"value":	"/site/ess:bms_soc",
		"vlink":	"/status/bms:SOC"
	},
	"site_bms_soh":	{
		"value":	"/site/ess:bms_soh",
		"vlink":	"/status/bms:SOH"
	},
	"site_bms_status":	{
		"value":	"/site/ess:bms_status",
		"vlink":	"/status/bms:Status"
	}
}].
[3.46473s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_alarm_active]
[3.46527s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_alarm_active]
[3.4659s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_avg_cell_temp]
[3.46711s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_avg_cell_temp]
[3.46764s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_avg_cell_voltage]
[3.46814s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_avg_cell_voltage]
[3.46892s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_cell_temp_delta]
[3.46938s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_cell_temp_delta]
[3.47005s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_cell_voltage_delta]
[3.47069s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_cell_voltage_delta]
[3.47134s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_chargeable_energy]
[3.47238s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_chargeable_energy]
[3.47312s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_close_contactors_enabled]
[3.47364s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_close_contactors_enabled]
[3.4742s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_comms_ok]
[3.4745s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_comms_ok]
[3.47522s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_current_before_stop_is_ok]
[3.47572s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_current_before_stop_is_ok]
[3.47639s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dc_charging]
[3.47682s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dc_charging]
[3.47734s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dc_contactors_closed]
[3.47782s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dc_contactors_closed]
[3.47873s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dc_current]
[3.47945s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dc_current]
[3.48045s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dc_discharging]
[3.48092s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dc_discharging]
[3.4814s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dc_power]
[3.48219s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dc_power]
[3.48287s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dc_voltage]
[3.48326s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dc_voltage]
[3.48366s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dischargeable_energy]
[3.48412s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dischargeable_energy]
[3.48478s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_fault_active]
[3.48554s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_fault_active]
[3.48717s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_fire_fault_active]
[3.48781s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_fire_fault_active]
[3.48837s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_max_cell_temp]
[3.48874s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_max_cell_temp]
[3.48906s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_max_cell_voltage]
[3.4894s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_max_cell_voltage]
[3.48978s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_max_charge_current]
[3.49029s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_max_charge_current]
[3.49083s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_max_charge_power]
[3.49128s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_max_charge_power]
[3.49215s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_max_discharge_current]
[3.49248s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_max_discharge_current]
[3.49283s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_max_discharge_power]
[3.49337s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_max_discharge_power]
[3.4941s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_min_cell_temp]
[3.49447s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_min_cell_temp]
[3.495s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_min_cell_voltage]
[3.49545s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_min_cell_voltage]
[3.49634s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_num_racks_online]
[3.49699s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_num_racks_online]
[3.49759s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_num_racks_total]
[3.49796s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_num_racks_total]
[3.49844s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_open_contactors_enabled]
[3.49899s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_open_contactors_enabled]
[3.49939s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_soc]
[3.49982s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_soc]
[3.50047s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_soh]
[3.50089s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_soh]
[3.50196s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_status]
[3.50321s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_status]
[3.50446s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"chargeable_energy":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/bms:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	1,
							"uri":	"/controls/bms:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"close_contactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched",
							"inValue":	true
						}]
				}]
		},
		"aname":	"bms",
		"debug":	0,
		"enabled":	false,
		"every":	0.5,
		"name":	"Close DC Contactor",
		"note":	"Enabled conditions: ![/status/bms/DCClosed] && [/assets/bms/summary/maint_mode] && ![/status/bms/IsFaulted]",
		"offset":	0,
		"scaler":	0,
		"type":	"enum_button",
		"ui_type":	"control",
		"unit":	"",
		"uri":	"/sched/bms:LocalStartBMS",
		"value":	false
	},
	"comms_ok":	{
		"value":	false
	},
	"dc_charging":	{
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_discharging":	{
		"value":	false
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"dischargeable_energy":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/summary:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"num_racks_online":	{
		"value":	0
	},
	"num_racks_total":	{
		"value":	0
	},
	"open_contactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched",
							"inValue":	true
						}]
				}]
		},
		"aname":	"bms",
		"debug":	0,
		"enabled":	false,
		"every":	0.5,
		"name":	"Open DC Contactor",
		"note":	"Enabled conditions: [/status/bms/DCClosed] && ![/status/pcs/DCClosed] && [/assets/bms/summary/maint_mode]",
		"offset":	0,
		"scaler":	0,
		"type":	"enum_button",
		"ui_type":	"control",
		"unit":	"",
		"uri":	"/sched/bms:LocalStopBMS",
		"value":	false
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[3.50657s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"Failed Attempt to update [/assets/bms/summary:close_contactors] because [close_contactors@enabled:false] == true","severity":1}]
[3.50854s  ] [info    ] [LogInfo        ] [/assets/bms/summary:maint_mode] received a value of [false]
[3.5104s   ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"Failed Attempt to update [/assets/bms/summary:open_contactors] because [open_contactors@enabled:false] == true","severity":1}]
[3.51113s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.51161s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.51245s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/summary:avg_cell_temp",
		"vlink":	"/status/bms:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/summary:avg_cell_voltage",
		"vlink":	"/status/bms:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/summary:cell_temp_delta",
		"vlink":	"/status/bms:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/summary:cell_voltage_delta",
		"vlink":	"/status/bms:CellVoltageDelta"
	},
	"ui_chargeable_energy":	{
		"value":	"/assets/bms/summary:chargeable_energy",
		"vlink":	"/status/bms:ChargeableEnergy"
	},
	"ui_comms_ok":	{
		"value":	"/assets/bms/summary:comms_ok",
		"vlink":	"/status/bms:CommsOK"
	},
	"ui_dc_charging":	{
		"value":	"/assets/bms/summary:dc_charging",
		"vlink":	"/status/bms:DCCharging"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/summary:dc_contactors_closed",
		"vlink":	"/status/bms:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/summary:dc_current",
		"vlink":	"/status/bms:DCCurrent"
	},
	"ui_dc_discharging":	{
		"value":	"/assets/bms/summary:dc_discharging",
		"vlink":	"/status/bms:DCDischarging"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/summary:dc_power",
		"vlink":	"/status/bms:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/summary:dc_voltage",
		"vlink":	"/status/bms:DCVoltage"
	},
	"ui_dischargeable_energy":	{
		"value":	"/assets/bms/summary:dischargeable_energy",
		"vlink":	"/status/bms:DischargeableEnergy"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/summary:max_cell_temp",
		"vlink":	"/status/bms:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/summary:max_cell_voltage",
		"vlink":	"/status/bms:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/summary:max_charge_current",
		"vlink":	"/limits/bms:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/summary:max_charge_power",
		"vlink":	"/limits/bms:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/summary:max_discharge_current",
		"vlink":	"/limits/bms:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/summary:max_discharge_power",
		"vlink":	"/limits/bms:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/summary:min_cell_temp",
		"vlink":	"/status/bms:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/summary:min_cell_voltage",
		"vlink":	"/status/bms:MinCellVoltage"
	},
	"ui_num_racks_online":	{
		"value":	"/assets/bms/summary:num_racks_online",
		"vlink":	"/status/bms:NumRacksOnline"
	},
	"ui_num_racks_total":	{
		"value":	"/assets/bms/summary:num_racks_total",
		"vlink":	"/status/bms:NumRacksTotal"
	},
	"ui_soc":	{
		"value":	"/assets/bms/summary:soc",
		"vlink":	"/status/bms:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/summary:soh",
		"vlink":	"/status/bms:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/summary:status",
		"vlink":	"/status/bms:Status"
	}
}].
[3.51306s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:avg_cell_temp]
[3.51361s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:avg_cell_temp]
[3.51432s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:avg_cell_voltage]
[3.51502s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:avg_cell_voltage]
[3.51583s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:cell_temp_delta]
[3.5166s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:cell_temp_delta]
[3.51747s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:cell_voltage_delta]
[3.51805s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:cell_voltage_delta]
[3.51845s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:chargeable_energy]
[3.51923s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:chargeable_energy]
[3.51981s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:comms_ok]
[3.52038s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:comms_ok]
[3.52098s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dc_charging]
[3.52168s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dc_charging]
[3.52234s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dc_contactors_closed]
[3.52289s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dc_contactors_closed]
[3.52365s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dc_current]
[3.52418s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dc_current]
[3.52493s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dc_discharging]
[3.52559s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dc_discharging]
[3.52616s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dc_power]
[3.52688s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dc_power]
[3.52751s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dc_voltage]
[3.52813s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dc_voltage]
[3.52901s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dischargeable_energy]
[3.52958s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dischargeable_energy]
[3.53007s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:max_cell_temp]
[3.53069s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:max_cell_temp]
[3.53115s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:max_cell_voltage]
[3.53199s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:max_cell_voltage]
[3.53284s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:max_charge_current]
[3.53326s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:max_charge_current]
[3.53373s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:max_charge_power]
[3.53422s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:max_charge_power]
[3.53481s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:max_discharge_current]
[3.53531s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:max_discharge_current]
[3.53586s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:max_discharge_power]
[3.53616s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:max_discharge_power]
[3.53701s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:min_cell_temp]
[3.53764s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:min_cell_temp]
[3.53814s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:min_cell_voltage]
[3.53866s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:min_cell_voltage]
[3.53935s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:num_racks_online]
[3.53973s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:num_racks_online]
[3.54016s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:num_racks_total]
[3.54061s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:num_racks_total]
[3.54103s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:soc]
[3.54156s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:soc]
[3.54202s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:soh]
[3.54242s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:soh]
[3.54302s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:status]
[3.54359s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:status]
[3.54585s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [rack_1]
[3.54668s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [rack_1] parent am [bms] 
[3.54759s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [rack_1]
[3.54818s  ] [info    ] [configure_vmapS] body: {"/config/rack_1":{"AlarmDestination":"/assets/bms/rack_1:alarms","FaultDestination":"/assets/bms/rack_1:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/rack_1":{"ChargeCurrentLimit":{"value":"/limits/rack_1:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/rack_1:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/rack_1:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/rack_1:DischargePowerLimit"}},"/sched/rack_1":{"pubAssets_rack_1":{"actions":{"onSet":[{"func":[{"amap":"rack_1","func":"RunPub"}]}]},"enable":"/config/rack_1:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/rack_1)","table":"/assets/bms/rack_1","value":1},"runMonitor_rack_1":{"actions":{"onSet":[{"func":[{"amap":"rack_1","func":"RunMonitor"}]}]},"aname":"rack_1","enable":"/config/rack_1:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_1","value":1}},"/schedule/wake_monitor/rack_1":{"/status/rack_1:CellTempDelta_Calculated":{"amap":"rack_1","func":"CalculateVar"},"/status/rack_1:CellVoltageDelta_Calculated":{"amap":"rack_1","func":"CalculateVar"}},"/status/rack_1":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_1:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_1:MinCellTemp","variable2":"/status/rack_1:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_1:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_1:MinCellVoltage","variable2":"/status/rack_1:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_1:DCCurrent@EnableMaxValCheck"},{"uri":"/status/rack_1:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/rack_1:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"rack_1","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/rack_1) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"rack_1","every":1,"uri":"/sched/rack_1:pubAssets_rack_1","value":1},{"aname":"rack_1","every":0.1,"uri":"/sched/rack_1:runMonitor_rack_1","value":1},{"aname":"rack_1","every":1,"uri":"/sched/rack_1:checkInputs_rack_1","value":1}],"targav":"/system/commands:run","value":false}},"/controls/rack_1":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"rack_1","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/rack_1":{"/controls/rack_1:ClearFaults":{"amap":"rack_1","func":"HandleCmd"}},"/status/rack_1":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/rack_1:clear_faults"},{"outValue":"Clear","uri":"/alarms/rack_1:clear_alarms"}]}]},"enable":"/config/rack_1:enable","ifChanged":false,"note":"When this variable is set, /faults/rack_1:clear_faults and /alarms/rack_1:clear_alarms will be set to Clear","value":false}},"/alarms/rack_1":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"rack_1","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_1) will be reset to the normal state (defined in /config/rack_1:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/rack_1":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_1","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/rack_1) will be reset to the normal state (defined in /config/rack_1:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/rack_1":{"/status/rack_1:AnyFireFaultActive":{"amap":"rack_1","func":"CalculateVar"},"/status/rack_1:TotalAlarmCnt":{"amap":"rack_1","func":"CalculateVar"},"/status/rack_1:TotalFaultCnt":{"amap":"rack_1","func":"CalculateVar"}},"/status/rack_1":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/rack_1:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"rack_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_1:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_1:FaultCnt"}},"/components/catl_rack_1":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/rack_1:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/rack_1:DCClosed"}]}]},"enable":"/config/rack_1:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/rack_1":{"avg_cell_temp":{"value":"/components/catl_rack_1:sbmu_avg_cell_temp","vlink":"/status/rack_1:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_rack_1:sbmu_avg_cell_voltage","vlink":"/status/rack_1:AvgCellVoltage"},"dc_current":{"value":"/components/catl_rack_1:sbmu_current","vlink":"/status/rack_1:DCCurrent"},"dc_voltage":{"value":"/components/catl_rack_1:sbmu_voltage","vlink":"/status/rack_1:DCVoltage"},"max_cell_temp":{"value":"/components/catl_rack_1:sbmu_max_cell_temp","vlink":"/status/rack_1:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_rack_1:sbmu_max_cell_voltage","vlink":"/status/rack_1:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_rack_1:sbmu_min_cell_temp","vlink":"/status/rack_1:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_rack_1:sbmu_min_cell_voltage","vlink":"/status/rack_1:MinCellVoltage"},"soc":{"value":"/components/catl_rack_1:sbmu_soc","vlink":"/status/rack_1:SOC"},"soh":{"value":"/components/catl_rack_1:sbmu_soh","vlink":"/status/rack_1:SOH"}},"/assets/bms/rack_1":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/rack_1:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/rack_1:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"rack_1","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/rack_1:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/rack_1":{"ui_avg_cell_temp":{"value":"/assets/bms/rack_1:avg_cell_temp","vlink":"/status/rack_1:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/rack_1:avg_cell_voltage","vlink":"/status/rack_1:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/rack_1:cell_temp_delta","vlink":"/status/rack_1:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/rack_1:cell_voltage_delta","vlink":"/status/rack_1:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/rack_1:dc_contactors_closed","vlink":"/status/rack_1:DCClosed"},"ui_dc_current":{"value":"/assets/bms/rack_1:dc_current","vlink":"/status/rack_1:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/rack_1:dc_power","vlink":"/status/rack_1:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/rack_1:dc_voltage","vlink":"/status/rack_1:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/rack_1:max_cell_temp","vlink":"/status/rack_1:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/rack_1:max_cell_voltage","vlink":"/status/rack_1:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/rack_1:max_charge_current","vlink":"/limits/rack_1:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/rack_1:max_charge_power","vlink":"/limits/rack_1:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/rack_1:max_discharge_current","vlink":"/limits/rack_1:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/rack_1:max_discharge_power","vlink":"/limits/rack_1:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/rack_1:min_cell_temp","vlink":"/status/rack_1:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/rack_1:min_cell_voltage","vlink":"/status/rack_1:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/rack_1:soc","vlink":"/status/rack_1:SOC"},"ui_soh":{"value":"/assets/bms/rack_1:soh","vlink":"/status/rack_1:SOH"},"ui_status":{"value":"/assets/bms/rack_1:status","vlink":"/status/rack_1:Status"}}}
[3.55048s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.55108s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/rack_1:alarms",
	"FaultDestination":	"/assets/bms/rack_1:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[3.55277s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:alarms]
[3.55326s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:alarms]
[3.55363s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:faults]
[3.55495s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:faults]
[3.55543s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.55636s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.55696s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.5576s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.55825s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/rack_1:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/rack_1:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/rack_1:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/rack_1:DischargePowerLimit"
	}
}].
[3.55866s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_1:ChargeCurrentLimit]
[3.55924s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_1:ChargeCurrentLimit]
[3.56034s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_1:ChargePowerLimit]
[3.56068s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_1:ChargePowerLimit]
[3.56111s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_1:DischargeCurrentLimit]
[3.56138s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_1:DischargeCurrentLimit]
[3.56189s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_1:DischargePowerLimit]
[3.56228s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_1:DischargePowerLimit]
[3.5629s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_rack_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_1",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/rack_1:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/rack_1)",
		"table":	"/assets/bms/rack_1",
		"value":	1
	},
	"runMonitor_rack_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_1",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"rack_1",
		"enable":	"/config/rack_1:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_1",
		"value":	1
	}
}].
[3.56427s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_1:CellTempDelta_Calculated":	{
		"amap":	"rack_1",
		"func":	"CalculateVar"
	},
	"/status/rack_1:CellVoltageDelta_Calculated":	{
		"amap":	"rack_1",
		"func":	"CalculateVar"
	}
}].
[3.56507s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_1:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_1:MinCellTemp",
		"variable2":	"/status/rack_1:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_1:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_1:MinCellVoltage",
		"variable2":	"/status/rack_1:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_1:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/rack_1:DCCurrent@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/rack_1:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[3.56588s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.5666s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.56757s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_1",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/rack_1) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"rack_1",
				"every":	1,
				"uri":	"/sched/rack_1:pubAssets_rack_1",
				"value":	1
			}, {
				"aname":	"rack_1",
				"every":	0.1,
				"uri":	"/sched/rack_1:runMonitor_rack_1",
				"value":	1
			}, {
				"aname":	"rack_1",
				"every":	1,
				"uri":	"/sched/rack_1:checkInputs_rack_1",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[3.5684s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[3.56913s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_1:HandleCmd_ClearFaults]
[3.56965s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_1:HandleCmd_ClearFaults]
[3.5702s   ] [info    ] [HandleCmd      ] reload first run [rack_1] [/controls/rack_1:ClearFaults]  reload 0
[3.57066s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/rack_1:ClearFaults]
[3.57176s  ] [info    ] [HandleCmd      ] Adding [/controls/rack_1:ClearFaults] to amap in asset [rack_1]
[3.5724s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/rack_1:ClearFaults]
[3.57347s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/rack_1:ClearFaults]
[3.57401s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/rack_1:ClearFaults":	{
		"amap":	"rack_1",
		"func":	"HandleCmd"
	}
}].
[3.5746s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/rack_1:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/rack_1:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/rack_1:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/rack_1:clear_faults and /alarms/rack_1:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[3.57549s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_1",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_1) will be reset to the normal state (defined in /config/rack_1:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[3.57611s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.5768s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.57757s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.57845s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.57955s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_1:FaultDestination]
[3.57997s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_1:FaultDestination]
[3.58081s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_1:NoFaultMsg]
[3.58146s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_1:NoFaultMsg]
[3.58217s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_1:FaultCnt]
[3.58293s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_1:FaultCnt]
[3.58377s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_1:AlarmDestination]
[3.58447s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_1:AlarmDestination]
[3.5849s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_1:NoAlarmMsg]
[3.58536s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_1:NoAlarmMsg]
[3.58581s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_1:AlarmCnt]
[3.58622s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_1:AlarmCnt]
[3.58711s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_1",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/rack_1) will be reset to the normal state (defined in /config/rack_1:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[3.5882s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.58879s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.58984s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.59043s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.59129s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_1:AnyFireFaultActive":	{
		"amap":	"rack_1",
		"func":	"CalculateVar"
	},
	"/status/rack_1:TotalAlarmCnt":	{
		"amap":	"rack_1",
		"func":	"CalculateVar"
	},
	"/status/rack_1:TotalFaultCnt":	{
		"amap":	"rack_1",
		"func":	"CalculateVar"
	}
}].
[3.59223s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/rack_1:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_1:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_1:FaultCnt"
	}
}].
[3.59315s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sbmu_master_negative":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/rack_1:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/rack_1:DCClosed"
						}]
				}]
		},
		"enable":	"/config/rack_1:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[3.59403s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"value":	"/components/catl_rack_1:sbmu_avg_cell_temp",
		"vlink":	"/status/rack_1:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_rack_1:sbmu_avg_cell_voltage",
		"vlink":	"/status/rack_1:AvgCellVoltage"
	},
	"dc_current":	{
		"value":	"/components/catl_rack_1:sbmu_current",
		"vlink":	"/status/rack_1:DCCurrent"
	},
	"dc_voltage":	{
		"value":	"/components/catl_rack_1:sbmu_voltage",
		"vlink":	"/status/rack_1:DCVoltage"
	},
	"max_cell_temp":	{
		"value":	"/components/catl_rack_1:sbmu_max_cell_temp",
		"vlink":	"/status/rack_1:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_rack_1:sbmu_max_cell_voltage",
		"vlink":	"/status/rack_1:MaxCellVoltage"
	},
	"min_cell_temp":	{
		"value":	"/components/catl_rack_1:sbmu_min_cell_temp",
		"vlink":	"/status/rack_1:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_rack_1:sbmu_min_cell_voltage",
		"vlink":	"/status/rack_1:MinCellVoltage"
	},
	"soc":	{
		"value":	"/components/catl_rack_1:sbmu_soc",
		"vlink":	"/status/rack_1:SOC"
	},
	"soh":	{
		"value":	"/components/catl_rack_1:sbmu_soh",
		"vlink":	"/status/rack_1:SOH"
	}
}].
[3.59467s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_avg_cell_temp]
[3.59531s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_avg_cell_temp]
[3.59681s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_avg_cell_voltage]
[3.5973s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_avg_cell_voltage]
[3.59783s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_current]
[3.59819s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_current]
[3.59859s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_voltage]
[3.59888s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_voltage]
[3.59931s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_max_cell_temp]
[3.59963s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_max_cell_temp]
[3.60004s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_max_cell_voltage]
[3.60065s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_max_cell_voltage]
[3.60115s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_min_cell_temp]
[3.60186s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_min_cell_temp]
[3.60232s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_min_cell_voltage]
[3.60305s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_min_cell_voltage]
[3.60354s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_soc]
[3.60435s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_soc]
[3.605s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_1:sbmu_soh]
[3.60583s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_1:sbmu_soh]
[3.60684s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/rack_1:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/rack_1:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/rack_1:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[3.60824s  ] [info    ] [LogInfo        ] [/assets/bms/rack_1:maint_mode] received a value of [false]
[3.6104s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.6111s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.61508s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/rack_1:avg_cell_temp",
		"vlink":	"/status/rack_1:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/rack_1:avg_cell_voltage",
		"vlink":	"/status/rack_1:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/rack_1:cell_temp_delta",
		"vlink":	"/status/rack_1:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/rack_1:cell_voltage_delta",
		"vlink":	"/status/rack_1:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/rack_1:dc_contactors_closed",
		"vlink":	"/status/rack_1:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/rack_1:dc_current",
		"vlink":	"/status/rack_1:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/rack_1:dc_power",
		"vlink":	"/status/rack_1:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/rack_1:dc_voltage",
		"vlink":	"/status/rack_1:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/rack_1:max_cell_temp",
		"vlink":	"/status/rack_1:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/rack_1:max_cell_voltage",
		"vlink":	"/status/rack_1:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/rack_1:max_charge_current",
		"vlink":	"/limits/rack_1:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/rack_1:max_charge_power",
		"vlink":	"/limits/rack_1:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/rack_1:max_discharge_current",
		"vlink":	"/limits/rack_1:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/rack_1:max_discharge_power",
		"vlink":	"/limits/rack_1:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/rack_1:min_cell_temp",
		"vlink":	"/status/rack_1:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/rack_1:min_cell_voltage",
		"vlink":	"/status/rack_1:MinCellVoltage"
	},
	"ui_soc":	{
		"value":	"/assets/bms/rack_1:soc",
		"vlink":	"/status/rack_1:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/rack_1:soh",
		"vlink":	"/status/rack_1:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/rack_1:status",
		"vlink":	"/status/rack_1:Status"
	}
}].
[3.61628s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:avg_cell_temp]
[3.6171s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:avg_cell_temp]
[3.61786s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:avg_cell_voltage]
[3.61827s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:avg_cell_voltage]
[3.61874s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:cell_temp_delta]
[3.61922s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:cell_temp_delta]
[3.61993s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:cell_voltage_delta]
[3.62066s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:cell_voltage_delta]
[3.62129s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:dc_contactors_closed]
[3.62192s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:dc_contactors_closed]
[3.62304s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:dc_current]
[3.62373s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:dc_current]
[3.62447s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:dc_power]
[3.62559s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:dc_power]
[3.62605s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:dc_voltage]
[3.62671s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:dc_voltage]
[3.62774s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:max_cell_temp]
[3.62844s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:max_cell_temp]
[3.62924s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:max_cell_voltage]
[3.63006s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:max_cell_voltage]
[3.63074s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:max_charge_current]
[3.63111s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:max_charge_current]
[3.63159s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:max_charge_power]
[3.63201s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:max_charge_power]
[3.63256s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:max_discharge_current]
[3.63329s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:max_discharge_current]
[3.63402s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:max_discharge_power]
[3.63568s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:max_discharge_power]
[3.63635s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:min_cell_temp]
[3.63739s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:min_cell_temp]
[3.63844s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:min_cell_voltage]
[3.63894s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:min_cell_voltage]
[3.6399s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:soc]
[3.64038s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:soc]
[3.64106s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:soh]
[3.64165s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:soh]
[3.64225s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_1:status]
[3.64254s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_1:status]
[3.64403s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [rack_2]
[3.6449s   ] [info    ] [setVecAmAi     ]  ainame Setting ai  [rack_2] parent am [bms] 
[3.64652s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [rack_2]
[3.64766s  ] [info    ] [configure_vmapS] body: {"/config/rack_2":{"AlarmDestination":"/assets/bms/rack_2:alarms","FaultDestination":"/assets/bms/rack_2:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/rack_2":{"ChargeCurrentLimit":{"value":"/limits/rack_2:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/rack_2:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/rack_2:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/rack_2:DischargePowerLimit"}},"/sched/rack_2":{"pubAssets_rack_2":{"actions":{"onSet":[{"func":[{"amap":"rack_2","func":"RunPub"}]}]},"enable":"/config/rack_2:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/rack_2)","table":"/assets/bms/rack_2","value":1},"runMonitor_rack_2":{"actions":{"onSet":[{"func":[{"amap":"rack_2","func":"RunMonitor"}]}]},"aname":"rack_2","enable":"/config/rack_2:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_2","value":1}},"/schedule/wake_monitor/rack_2":{"/status/rack_2:CellTempDelta_Calculated":{"amap":"rack_2","func":"CalculateVar"},"/status/rack_2:CellVoltageDelta_Calculated":{"amap":"rack_2","func":"CalculateVar"}},"/status/rack_2":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_2:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_2:MinCellTemp","variable2":"/status/rack_2:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_2:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_2:MinCellVoltage","variable2":"/status/rack_2:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_2:DCCurrent@EnableMaxValCheck"},{"uri":"/status/rack_2:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/rack_2:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"rack_2","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/rack_2) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"rack_2","every":1,"uri":"/sched/rack_2:pubAssets_rack_2","value":1},{"aname":"rack_2","every":0.1,"uri":"/sched/rack_2:runMonitor_rack_2","value":1},{"aname":"rack_2","every":1,"uri":"/sched/rack_2:checkInputs_rack_2","value":1}],"targav":"/system/commands:run","value":false}},"/controls/rack_2":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"rack_2","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/rack_2":{"/controls/rack_2:ClearFaults":{"amap":"rack_2","func":"HandleCmd"}},"/status/rack_2":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/rack_2:clear_faults"},{"outValue":"Clear","uri":"/alarms/rack_2:clear_alarms"}]}]},"enable":"/config/rack_2:enable","ifChanged":false,"note":"When this variable is set, /faults/rack_2:clear_faults and /alarms/rack_2:clear_alarms will be set to Clear","value":false}},"/alarms/rack_2":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"rack_2","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_2) will be reset to the normal state (defined in /config/rack_2:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/rack_2":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_2","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/rack_2) will be reset to the normal state (defined in /config/rack_2:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/rack_2":{"/status/rack_2:AnyFireFaultActive":{"amap":"rack_2","func":"CalculateVar"},"/status/rack_2:TotalAlarmCnt":{"amap":"rack_2","func":"CalculateVar"},"/status/rack_2:TotalFaultCnt":{"amap":"rack_2","func":"CalculateVar"}},"/status/rack_2":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/rack_2:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"rack_2","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_2:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_2:FaultCnt"}},"/components/catl_rack_2":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/rack_2:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/rack_2:DCClosed"}]}]},"enable":"/config/rack_2:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/rack_2":{"avg_cell_temp":{"value":"/components/catl_rack_2:sbmu_avg_cell_temp","vlink":"/status/rack_2:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_rack_2:sbmu_avg_cell_voltage","vlink":"/status/rack_2:AvgCellVoltage"},"dc_current":{"value":"/components/catl_rack_2:sbmu_current","vlink":"/status/rack_2:DCCurrent"},"dc_voltage":{"value":"/components/catl_rack_2:sbmu_voltage","vlink":"/status/rack_2:DCVoltage"},"max_cell_temp":{"value":"/components/catl_rack_2:sbmu_max_cell_temp","vlink":"/status/rack_2:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_rack_2:sbmu_max_cell_voltage","vlink":"/status/rack_2:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_rack_2:sbmu_min_cell_temp","vlink":"/status/rack_2:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_rack_2:sbmu_min_cell_voltage","vlink":"/status/rack_2:MinCellVoltage"},"soc":{"value":"/components/catl_rack_2:sbmu_soc","vlink":"/status/rack_2:SOC"},"soh":{"value":"/components/catl_rack_2:sbmu_soh","vlink":"/status/rack_2:SOH"}},"/assets/bms/rack_2":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_2","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/rack_2:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/rack_2:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"rack_2","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/rack_2:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/rack_2":{"ui_avg_cell_temp":{"value":"/assets/bms/rack_2:avg_cell_temp","vlink":"/status/rack_2:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/rack_2:avg_cell_voltage","vlink":"/status/rack_2:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/rack_2:cell_temp_delta","vlink":"/status/rack_2:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/rack_2:cell_voltage_delta","vlink":"/status/rack_2:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/rack_2:dc_contactors_closed","vlink":"/status/rack_2:DCClosed"},"ui_dc_current":{"value":"/assets/bms/rack_2:dc_current","vlink":"/status/rack_2:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/rack_2:dc_power","vlink":"/status/rack_2:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/rack_2:dc_voltage","vlink":"/status/rack_2:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/rack_2:max_cell_temp","vlink":"/status/rack_2:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/rack_2:max_cell_voltage","vlink":"/status/rack_2:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/rack_2:max_charge_current","vlink":"/limits/rack_2:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/rack_2:max_charge_power","vlink":"/limits/rack_2:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/rack_2:max_discharge_current","vlink":"/limits/rack_2:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/rack_2:max_discharge_power","vlink":"/limits/rack_2:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/rack_2:min_cell_temp","vlink":"/status/rack_2:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/rack_2:min_cell_voltage","vlink":"/status/rack_2:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/rack_2:soc","vlink":"/status/rack_2:SOC"},"ui_soh":{"value":"/assets/bms/rack_2:soh","vlink":"/status/rack_2:SOH"},"ui_status":{"value":"/assets/bms/rack_2:status","vlink":"/status/rack_2:Status"}}}
[3.64906s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.64952s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/rack_2:alarms",
	"FaultDestination":	"/assets/bms/rack_2:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[3.65002s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:alarms]
[3.65049s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:alarms]
[3.65137s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:faults]
[3.65199s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:faults]
[3.65249s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.65301s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.65368s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.65411s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.65489s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/rack_2:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/rack_2:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/rack_2:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/rack_2:DischargePowerLimit"
	}
}].
[3.65597s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_2:ChargeCurrentLimit]
[3.65676s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_2:ChargeCurrentLimit]
[3.65736s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_2:ChargePowerLimit]
[3.65777s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_2:ChargePowerLimit]
[3.65846s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_2:DischargeCurrentLimit]
[3.65886s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_2:DischargeCurrentLimit]
[3.65931s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_2:DischargePowerLimit]
[3.65975s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_2:DischargePowerLimit]
[3.66016s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_rack_2":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_2",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/rack_2:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/rack_2)",
		"table":	"/assets/bms/rack_2",
		"value":	1
	},
	"runMonitor_rack_2":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_2",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"rack_2",
		"enable":	"/config/rack_2:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_2",
		"value":	1
	}
}].
[3.66098s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_2:CellTempDelta_Calculated":	{
		"amap":	"rack_2",
		"func":	"CalculateVar"
	},
	"/status/rack_2:CellVoltageDelta_Calculated":	{
		"amap":	"rack_2",
		"func":	"CalculateVar"
	}
}].
[3.66162s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_2:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_2:MinCellTemp",
		"variable2":	"/status/rack_2:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_2:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_2:MinCellVoltage",
		"variable2":	"/status/rack_2:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_2:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/rack_2:DCCurrent@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/rack_2:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[3.66238s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.66283s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.66396s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_2",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/rack_2) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"rack_2",
				"every":	1,
				"uri":	"/sched/rack_2:pubAssets_rack_2",
				"value":	1
			}, {
				"aname":	"rack_2",
				"every":	0.1,
				"uri":	"/sched/rack_2:runMonitor_rack_2",
				"value":	1
			}, {
				"aname":	"rack_2",
				"every":	1,
				"uri":	"/sched/rack_2:checkInputs_rack_2",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[3.66486s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_2",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[3.66563s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_2:HandleCmd_ClearFaults]
[3.66621s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_2:HandleCmd_ClearFaults]
[3.66668s  ] [info    ] [HandleCmd      ] reload first run [rack_2] [/controls/rack_2:ClearFaults]  reload 0
[3.66701s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/rack_2:ClearFaults]
[3.66764s  ] [info    ] [HandleCmd      ] Adding [/controls/rack_2:ClearFaults] to amap in asset [rack_2]
[3.6682s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/rack_2:ClearFaults]
[3.6686s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/rack_2:ClearFaults]
[3.66924s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/rack_2:ClearFaults":	{
		"amap":	"rack_2",
		"func":	"HandleCmd"
	}
}].
[3.6702s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/rack_2:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/rack_2:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/rack_2:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/rack_2:clear_faults and /alarms/rack_2:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[3.67097s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_2",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_2) will be reset to the normal state (defined in /config/rack_2:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[3.67153s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.67185s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.67235s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.67317s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.67398s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_2:FaultDestination]
[3.67455s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_2:FaultDestination]
[3.67564s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_2:NoFaultMsg]
[3.67602s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_2:NoFaultMsg]
[3.67652s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_2:FaultCnt]
[3.67711s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_2:FaultCnt]
[3.6776s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_2:AlarmDestination]
[3.67792s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_2:AlarmDestination]
[3.67828s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_2:NoAlarmMsg]
[3.6787s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_2:NoAlarmMsg]
[3.67919s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_2:AlarmCnt]
[3.67967s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_2:AlarmCnt]
[3.68046s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_2",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/rack_2) will be reset to the normal state (defined in /config/rack_2:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[3.68108s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.68164s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.68228s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.68287s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.68361s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_2:AnyFireFaultActive":	{
		"amap":	"rack_2",
		"func":	"CalculateVar"
	},
	"/status/rack_2:TotalAlarmCnt":	{
		"amap":	"rack_2",
		"func":	"CalculateVar"
	},
	"/status/rack_2:TotalFaultCnt":	{
		"amap":	"rack_2",
		"func":	"CalculateVar"
	}
}].
[3.68481s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/rack_2:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_2",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_2:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_2:FaultCnt"
	}
}].
[3.6862s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sbmu_master_negative":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/rack_2:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/rack_2:DCClosed"
						}]
				}]
		},
		"enable":	"/config/rack_2:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[3.68708s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"value":	"/components/catl_rack_2:sbmu_avg_cell_temp",
		"vlink":	"/status/rack_2:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_rack_2:sbmu_avg_cell_voltage",
		"vlink":	"/status/rack_2:AvgCellVoltage"
	},
	"dc_current":	{
		"value":	"/components/catl_rack_2:sbmu_current",
		"vlink":	"/status/rack_2:DCCurrent"
	},
	"dc_voltage":	{
		"value":	"/components/catl_rack_2:sbmu_voltage",
		"vlink":	"/status/rack_2:DCVoltage"
	},
	"max_cell_temp":	{
		"value":	"/components/catl_rack_2:sbmu_max_cell_temp",
		"vlink":	"/status/rack_2:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_rack_2:sbmu_max_cell_voltage",
		"vlink":	"/status/rack_2:MaxCellVoltage"
	},
	"min_cell_temp":	{
		"value":	"/components/catl_rack_2:sbmu_min_cell_temp",
		"vlink":	"/status/rack_2:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_rack_2:sbmu_min_cell_voltage",
		"vlink":	"/status/rack_2:MinCellVoltage"
	},
	"soc":	{
		"value":	"/components/catl_rack_2:sbmu_soc",
		"vlink":	"/status/rack_2:SOC"
	},
	"soh":	{
		"value":	"/components/catl_rack_2:sbmu_soh",
		"vlink":	"/status/rack_2:SOH"
	}
}].
[3.68795s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_avg_cell_temp]
[3.68855s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_avg_cell_temp]
[3.68987s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_avg_cell_voltage]
[3.69059s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_avg_cell_voltage]
[3.69155s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_current]
[3.69227s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_current]
[3.69297s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_voltage]
[3.69389s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_voltage]
[3.6944s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_max_cell_temp]
[3.69478s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_max_cell_temp]
[3.69533s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_max_cell_voltage]
[3.69567s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_max_cell_voltage]
[3.69608s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_min_cell_temp]
[3.69639s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_min_cell_temp]
[3.69698s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_min_cell_voltage]
[3.69745s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_min_cell_voltage]
[3.6979s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_soc]
[3.6983s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_soc]
[3.69899s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_2:sbmu_soh]
[3.69939s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_2:sbmu_soh]
[3.70015s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_2",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/rack_2:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/rack_2:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_2",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/rack_2:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[3.70133s  ] [info    ] [LogInfo        ] [/assets/bms/rack_2:maint_mode] received a value of [false]
[3.70238s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.70299s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.70382s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/rack_2:avg_cell_temp",
		"vlink":	"/status/rack_2:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/rack_2:avg_cell_voltage",
		"vlink":	"/status/rack_2:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/rack_2:cell_temp_delta",
		"vlink":	"/status/rack_2:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/rack_2:cell_voltage_delta",
		"vlink":	"/status/rack_2:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/rack_2:dc_contactors_closed",
		"vlink":	"/status/rack_2:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/rack_2:dc_current",
		"vlink":	"/status/rack_2:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/rack_2:dc_power",
		"vlink":	"/status/rack_2:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/rack_2:dc_voltage",
		"vlink":	"/status/rack_2:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/rack_2:max_cell_temp",
		"vlink":	"/status/rack_2:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/rack_2:max_cell_voltage",
		"vlink":	"/status/rack_2:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/rack_2:max_charge_current",
		"vlink":	"/limits/rack_2:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/rack_2:max_charge_power",
		"vlink":	"/limits/rack_2:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/rack_2:max_discharge_current",
		"vlink":	"/limits/rack_2:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/rack_2:max_discharge_power",
		"vlink":	"/limits/rack_2:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/rack_2:min_cell_temp",
		"vlink":	"/status/rack_2:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/rack_2:min_cell_voltage",
		"vlink":	"/status/rack_2:MinCellVoltage"
	},
	"ui_soc":	{
		"value":	"/assets/bms/rack_2:soc",
		"vlink":	"/status/rack_2:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/rack_2:soh",
		"vlink":	"/status/rack_2:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/rack_2:status",
		"vlink":	"/status/rack_2:Status"
	}
}].
[3.70455s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:avg_cell_temp]
[3.70506s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:avg_cell_temp]
[3.70565s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:avg_cell_voltage]
[3.70652s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:avg_cell_voltage]
[3.70694s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:cell_temp_delta]
[3.70727s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:cell_temp_delta]
[3.70792s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:cell_voltage_delta]
[3.70858s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:cell_voltage_delta]
[3.70909s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:dc_contactors_closed]
[3.70969s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:dc_contactors_closed]
[3.71041s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:dc_current]
[3.71103s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:dc_current]
[3.71227s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:dc_power]
[3.71293s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:dc_power]
[3.71336s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:dc_voltage]
[3.71368s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:dc_voltage]
[3.71419s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:max_cell_temp]
[3.7147s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:max_cell_temp]
[3.71509s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:max_cell_voltage]
[3.71652s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:max_cell_voltage]
[3.71704s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:max_charge_current]
[3.71743s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:max_charge_current]
[3.71799s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:max_charge_power]
[3.71839s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:max_charge_power]
[3.71902s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:max_discharge_current]
[3.71964s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:max_discharge_current]
[3.72012s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:max_discharge_power]
[3.72054s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:max_discharge_power]
[3.72118s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:min_cell_temp]
[3.72167s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:min_cell_temp]
[3.7222s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:min_cell_voltage]
[3.72293s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:min_cell_voltage]
[3.72359s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:soc]
[3.72399s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:soc]
[3.72442s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:soh]
[3.72479s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:soh]
[3.7252s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_2:status]
[3.72562s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_2:status]
[3.72653s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [rack_3]
[3.72705s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [rack_3] parent am [bms] 
[3.72847s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [rack_3]
[3.72885s  ] [info    ] [configure_vmapS] body: {"/config/rack_3":{"AlarmDestination":"/assets/bms/rack_3:alarms","FaultDestination":"/assets/bms/rack_3:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/rack_3":{"ChargeCurrentLimit":{"value":"/limits/rack_3:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/rack_3:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/rack_3:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/rack_3:DischargePowerLimit"}},"/sched/rack_3":{"pubAssets_rack_3":{"actions":{"onSet":[{"func":[{"amap":"rack_3","func":"RunPub"}]}]},"enable":"/config/rack_3:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/rack_3)","table":"/assets/bms/rack_3","value":1},"runMonitor_rack_3":{"actions":{"onSet":[{"func":[{"amap":"rack_3","func":"RunMonitor"}]}]},"aname":"rack_3","enable":"/config/rack_3:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_3","value":1}},"/schedule/wake_monitor/rack_3":{"/status/rack_3:CellTempDelta_Calculated":{"amap":"rack_3","func":"CalculateVar"},"/status/rack_3:CellVoltageDelta_Calculated":{"amap":"rack_3","func":"CalculateVar"}},"/status/rack_3":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_3:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_3:MinCellTemp","variable2":"/status/rack_3:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_3:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_3:MinCellVoltage","variable2":"/status/rack_3:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_3:DCCurrent@EnableMaxValCheck"},{"uri":"/status/rack_3:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/rack_3:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"rack_3","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/rack_3) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"rack_3","every":1,"uri":"/sched/rack_3:pubAssets_rack_3","value":1},{"aname":"rack_3","every":0.1,"uri":"/sched/rack_3:runMonitor_rack_3","value":1},{"aname":"rack_3","every":1,"uri":"/sched/rack_3:checkInputs_rack_3","value":1}],"targav":"/system/commands:run","value":false}},"/controls/rack_3":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"rack_3","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/rack_3":{"/controls/rack_3:ClearFaults":{"amap":"rack_3","func":"HandleCmd"}},"/status/rack_3":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/rack_3:clear_faults"},{"outValue":"Clear","uri":"/alarms/rack_3:clear_alarms"}]}]},"enable":"/config/rack_3:enable","ifChanged":false,"note":"When this variable is set, /faults/rack_3:clear_faults and /alarms/rack_3:clear_alarms will be set to Clear","value":false}},"/alarms/rack_3":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"rack_3","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_3) will be reset to the normal state (defined in /config/rack_3:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/rack_3":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_3","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/rack_3) will be reset to the normal state (defined in /config/rack_3:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/rack_3":{"/status/rack_3:AnyFireFaultActive":{"amap":"rack_3","func":"CalculateVar"},"/status/rack_3:TotalAlarmCnt":{"amap":"rack_3","func":"CalculateVar"},"/status/rack_3:TotalFaultCnt":{"amap":"rack_3","func":"CalculateVar"}},"/status/rack_3":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/rack_3:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"rack_3","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_3:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_3:FaultCnt"}},"/components/catl_rack_3":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/rack_3:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/rack_3:DCClosed"}]}]},"enable":"/config/rack_3:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/rack_3":{"avg_cell_temp":{"value":"/components/catl_rack_3:sbmu_avg_cell_temp","vlink":"/status/rack_3:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_rack_3:sbmu_avg_cell_voltage","vlink":"/status/rack_3:AvgCellVoltage"},"dc_current":{"value":"/components/catl_rack_3:sbmu_current","vlink":"/status/rack_3:DCCurrent"},"dc_voltage":{"value":"/components/catl_rack_3:sbmu_voltage","vlink":"/status/rack_3:DCVoltage"},"max_cell_temp":{"value":"/components/catl_rack_3:sbmu_max_cell_temp","vlink":"/status/rack_3:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_rack_3:sbmu_max_cell_voltage","vlink":"/status/rack_3:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_rack_3:sbmu_min_cell_temp","vlink":"/status/rack_3:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_rack_3:sbmu_min_cell_voltage","vlink":"/status/rack_3:MinCellVoltage"},"soc":{"value":"/components/catl_rack_3:sbmu_soc","vlink":"/status/rack_3:SOC"},"soh":{"value":"/components/catl_rack_3:sbmu_soh","vlink":"/status/rack_3:SOH"}},"/assets/bms/rack_3":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_3","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/rack_3:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/rack_3:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"rack_3","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/rack_3:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/rack_3":{"ui_avg_cell_temp":{"value":"/assets/bms/rack_3:avg_cell_temp","vlink":"/status/rack_3:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/rack_3:avg_cell_voltage","vlink":"/status/rack_3:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/rack_3:cell_temp_delta","vlink":"/status/rack_3:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/rack_3:cell_voltage_delta","vlink":"/status/rack_3:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/rack_3:dc_contactors_closed","vlink":"/status/rack_3:DCClosed"},"ui_dc_current":{"value":"/assets/bms/rack_3:dc_current","vlink":"/status/rack_3:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/rack_3:dc_power","vlink":"/status/rack_3:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/rack_3:dc_voltage","vlink":"/status/rack_3:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/rack_3:max_cell_temp","vlink":"/status/rack_3:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/rack_3:max_cell_voltage","vlink":"/status/rack_3:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/rack_3:max_charge_current","vlink":"/limits/rack_3:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/rack_3:max_charge_power","vlink":"/limits/rack_3:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/rack_3:max_discharge_current","vlink":"/limits/rack_3:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/rack_3:max_discharge_power","vlink":"/limits/rack_3:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/rack_3:min_cell_temp","vlink":"/status/rack_3:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/rack_3:min_cell_voltage","vlink":"/status/rack_3:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/rack_3:soc","vlink":"/status/rack_3:SOC"},"ui_soh":{"value":"/assets/bms/rack_3:soh","vlink":"/status/rack_3:SOH"},"ui_status":{"value":"/assets/bms/rack_3:status","vlink":"/status/rack_3:Status"}}}
[3.73015s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.73084s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/rack_3:alarms",
	"FaultDestination":	"/assets/bms/rack_3:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[3.73186s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:alarms]
[3.73297s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:alarms]
[3.7336s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:faults]
[3.73405s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:faults]
[3.73443s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.73495s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.7353s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.73627s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.73837s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/rack_3:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/rack_3:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/rack_3:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/rack_3:DischargePowerLimit"
	}
}].
[3.73921s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_3:ChargeCurrentLimit]
[3.74048s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_3:ChargeCurrentLimit]
[3.74101s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_3:ChargePowerLimit]
[3.74132s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_3:ChargePowerLimit]
[3.74172s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_3:DischargeCurrentLimit]
[3.74212s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_3:DischargeCurrentLimit]
[3.74249s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_3:DischargePowerLimit]
[3.7428s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_3:DischargePowerLimit]
[3.74341s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_rack_3":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_3",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/rack_3:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/rack_3)",
		"table":	"/assets/bms/rack_3",
		"value":	1
	},
	"runMonitor_rack_3":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_3",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"rack_3",
		"enable":	"/config/rack_3:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_3",
		"value":	1
	}
}].
[3.74404s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_3:CellTempDelta_Calculated":	{
		"amap":	"rack_3",
		"func":	"CalculateVar"
	},
	"/status/rack_3:CellVoltageDelta_Calculated":	{
		"amap":	"rack_3",
		"func":	"CalculateVar"
	}
}].
[3.74455s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_3:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_3:MinCellTemp",
		"variable2":	"/status/rack_3:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_3:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_3:MinCellVoltage",
		"variable2":	"/status/rack_3:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_3:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/rack_3:DCCurrent@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/rack_3:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[3.7454s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.74598s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.74783s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_3",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/rack_3) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"rack_3",
				"every":	1,
				"uri":	"/sched/rack_3:pubAssets_rack_3",
				"value":	1
			}, {
				"aname":	"rack_3",
				"every":	0.1,
				"uri":	"/sched/rack_3:runMonitor_rack_3",
				"value":	1
			}, {
				"aname":	"rack_3",
				"every":	1,
				"uri":	"/sched/rack_3:checkInputs_rack_3",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[3.7519s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_3",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[3.75246s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_3:HandleCmd_ClearFaults]
[3.75287s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_3:HandleCmd_ClearFaults]
[3.75379s  ] [info    ] [HandleCmd      ] reload first run [rack_3] [/controls/rack_3:ClearFaults]  reload 0
[3.75424s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/rack_3:ClearFaults]
[3.75478s  ] [info    ] [HandleCmd      ] Adding [/controls/rack_3:ClearFaults] to amap in asset [rack_3]
[3.75539s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/rack_3:ClearFaults]
[3.75789s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/rack_3:ClearFaults]
[3.75889s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/rack_3:ClearFaults":	{
		"amap":	"rack_3",
		"func":	"HandleCmd"
	}
}].
[3.7598s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/rack_3:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/rack_3:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/rack_3:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/rack_3:clear_faults and /alarms/rack_3:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[3.76094s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_3",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_3) will be reset to the normal state (defined in /config/rack_3:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[3.76179s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.76233s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.76302s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.76337s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.76425s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_3:FaultDestination]
[3.7648s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_3:FaultDestination]
[3.76538s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_3:NoFaultMsg]
[3.76575s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_3:NoFaultMsg]
[3.76628s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_3:FaultCnt]
[3.76695s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_3:FaultCnt]
[3.76768s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_3:AlarmDestination]
[3.76814s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_3:AlarmDestination]
[3.7685s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_3:NoAlarmMsg]
[3.76879s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_3:NoAlarmMsg]
[3.76933s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_3:AlarmCnt]
[3.76978s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_3:AlarmCnt]
[3.77052s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_3",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/rack_3) will be reset to the normal state (defined in /config/rack_3:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[3.77114s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.77158s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.7723s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.77281s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.77449s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_3:AnyFireFaultActive":	{
		"amap":	"rack_3",
		"func":	"CalculateVar"
	},
	"/status/rack_3:TotalAlarmCnt":	{
		"amap":	"rack_3",
		"func":	"CalculateVar"
	},
	"/status/rack_3:TotalFaultCnt":	{
		"amap":	"rack_3",
		"func":	"CalculateVar"
	}
}].
[3.77526s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/rack_3:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_3",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_3:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_3:FaultCnt"
	}
}].
[3.7762s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sbmu_master_negative":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/rack_3:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/rack_3:DCClosed"
						}]
				}]
		},
		"enable":	"/config/rack_3:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[3.77732s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"value":	"/components/catl_rack_3:sbmu_avg_cell_temp",
		"vlink":	"/status/rack_3:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_rack_3:sbmu_avg_cell_voltage",
		"vlink":	"/status/rack_3:AvgCellVoltage"
	},
	"dc_current":	{
		"value":	"/components/catl_rack_3:sbmu_current",
		"vlink":	"/status/rack_3:DCCurrent"
	},
	"dc_voltage":	{
		"value":	"/components/catl_rack_3:sbmu_voltage",
		"vlink":	"/status/rack_3:DCVoltage"
	},
	"max_cell_temp":	{
		"value":	"/components/catl_rack_3:sbmu_max_cell_temp",
		"vlink":	"/status/rack_3:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_rack_3:sbmu_max_cell_voltage",
		"vlink":	"/status/rack_3:MaxCellVoltage"
	},
	"min_cell_temp":	{
		"value":	"/components/catl_rack_3:sbmu_min_cell_temp",
		"vlink":	"/status/rack_3:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_rack_3:sbmu_min_cell_voltage",
		"vlink":	"/status/rack_3:MinCellVoltage"
	},
	"soc":	{
		"value":	"/components/catl_rack_3:sbmu_soc",
		"vlink":	"/status/rack_3:SOC"
	},
	"soh":	{
		"value":	"/components/catl_rack_3:sbmu_soh",
		"vlink":	"/status/rack_3:SOH"
	}
}].
[3.77828s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_avg_cell_temp]
[3.77883s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_avg_cell_temp]
[3.77954s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_avg_cell_voltage]
[3.78055s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_avg_cell_voltage]
[3.7812s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_current]
[3.78179s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_current]
[3.78218s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_voltage]
[3.78252s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_voltage]
[3.78294s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_max_cell_temp]
[3.78326s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_max_cell_temp]
[3.78376s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_max_cell_voltage]
[3.78414s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_max_cell_voltage]
[3.78466s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_min_cell_temp]
[3.78501s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_min_cell_temp]
[3.7856s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_min_cell_voltage]
[3.78694s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_min_cell_voltage]
[3.78766s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_soc]
[3.78811s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_soc]
[3.78883s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_3:sbmu_soh]
[3.78941s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_3:sbmu_soh]
[3.79027s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_3",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/rack_3:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/rack_3:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_3",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/rack_3:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[3.79139s  ] [info    ] [LogInfo        ] [/assets/bms/rack_3:maint_mode] received a value of [false]
[3.79247s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.79311s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.79419s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/rack_3:avg_cell_temp",
		"vlink":	"/status/rack_3:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/rack_3:avg_cell_voltage",
		"vlink":	"/status/rack_3:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/rack_3:cell_temp_delta",
		"vlink":	"/status/rack_3:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/rack_3:cell_voltage_delta",
		"vlink":	"/status/rack_3:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/rack_3:dc_contactors_closed",
		"vlink":	"/status/rack_3:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/rack_3:dc_current",
		"vlink":	"/status/rack_3:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/rack_3:dc_power",
		"vlink":	"/status/rack_3:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/rack_3:dc_voltage",
		"vlink":	"/status/rack_3:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/rack_3:max_cell_temp",
		"vlink":	"/status/rack_3:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/rack_3:max_cell_voltage",
		"vlink":	"/status/rack_3:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/rack_3:max_charge_current",
		"vlink":	"/limits/rack_3:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/rack_3:max_charge_power",
		"vlink":	"/limits/rack_3:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/rack_3:max_discharge_current",
		"vlink":	"/limits/rack_3:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/rack_3:max_discharge_power",
		"vlink":	"/limits/rack_3:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/rack_3:min_cell_temp",
		"vlink":	"/status/rack_3:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/rack_3:min_cell_voltage",
		"vlink":	"/status/rack_3:MinCellVoltage"
	},
	"ui_soc":	{
		"value":	"/assets/bms/rack_3:soc",
		"vlink":	"/status/rack_3:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/rack_3:soh",
		"vlink":	"/status/rack_3:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/rack_3:status",
		"vlink":	"/status/rack_3:Status"
	}
}].
[3.79567s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:avg_cell_temp]
[3.79633s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:avg_cell_temp]
[3.79703s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:avg_cell_voltage]
[3.79758s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:avg_cell_voltage]
[3.79812s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:cell_temp_delta]
[3.7986s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:cell_temp_delta]
[3.79899s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:cell_voltage_delta]
[3.79976s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:cell_voltage_delta]
[3.80028s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:dc_contactors_closed]
[3.80071s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:dc_contactors_closed]
[3.80108s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:dc_current]
[3.80138s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:dc_current]
[3.80182s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:dc_power]
[3.80233s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:dc_power]
[3.80279s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:dc_voltage]
[3.80335s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:dc_voltage]
[3.80374s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:max_cell_temp]
[3.80416s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:max_cell_temp]
[3.8046s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:max_cell_voltage]
[3.80493s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:max_cell_voltage]
[3.80533s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:max_charge_current]
[3.80563s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:max_charge_current]
[3.80617s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:max_charge_power]
[3.80663s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:max_charge_power]
[3.80697s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:max_discharge_current]
[3.80726s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:max_discharge_current]
[3.80771s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:max_discharge_power]
[3.80812s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:max_discharge_power]
[3.80857s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:min_cell_temp]
[3.809s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:min_cell_temp]
[3.80951s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:min_cell_voltage]
[3.8099s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:min_cell_voltage]
[3.81036s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:soc]
[3.81072s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:soc]
[3.8113s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:soh]
[3.81163s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:soh]
[3.81218s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_3:status]
[3.81248s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_3:status]
[3.81431s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [rack_4]
[3.81568s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [rack_4] parent am [bms] 
[3.81741s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [rack_4]
[3.8181s   ] [info    ] [configure_vmapS] body: {"/config/rack_4":{"AlarmDestination":"/assets/bms/rack_4:alarms","FaultDestination":"/assets/bms/rack_4:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/rack_4":{"ChargeCurrentLimit":{"value":"/limits/rack_4:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/rack_4:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/rack_4:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/rack_4:DischargePowerLimit"}},"/sched/rack_4":{"pubAssets_rack_4":{"actions":{"onSet":[{"func":[{"amap":"rack_4","func":"RunPub"}]}]},"enable":"/config/rack_4:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/rack_4)","table":"/assets/bms/rack_4","value":1},"runMonitor_rack_4":{"actions":{"onSet":[{"func":[{"amap":"rack_4","func":"RunMonitor"}]}]},"aname":"rack_4","enable":"/config/rack_4:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_4","value":1}},"/schedule/wake_monitor/rack_4":{"/status/rack_4:CellTempDelta_Calculated":{"amap":"rack_4","func":"CalculateVar"},"/status/rack_4:CellVoltageDelta_Calculated":{"amap":"rack_4","func":"CalculateVar"}},"/status/rack_4":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_4:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_4:MinCellTemp","variable2":"/status/rack_4:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_4:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_4:MinCellVoltage","variable2":"/status/rack_4:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_4:DCCurrent@EnableMaxValCheck"},{"uri":"/status/rack_4:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/rack_4:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"rack_4","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/rack_4) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"rack_4","every":1,"uri":"/sched/rack_4:pubAssets_rack_4","value":1},{"aname":"rack_4","every":0.1,"uri":"/sched/rack_4:runMonitor_rack_4","value":1},{"aname":"rack_4","every":1,"uri":"/sched/rack_4:checkInputs_rack_4","value":1}],"targav":"/system/commands:run","value":false}},"/controls/rack_4":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"rack_4","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/rack_4":{"/controls/rack_4:ClearFaults":{"amap":"rack_4","func":"HandleCmd"}},"/status/rack_4":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/rack_4:clear_faults"},{"outValue":"Clear","uri":"/alarms/rack_4:clear_alarms"}]}]},"enable":"/config/rack_4:enable","ifChanged":false,"note":"When this variable is set, /faults/rack_4:clear_faults and /alarms/rack_4:clear_alarms will be set to Clear","value":false}},"/alarms/rack_4":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"rack_4","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_4) will be reset to the normal state (defined in /config/rack_4:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/rack_4":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_4","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/rack_4) will be reset to the normal state (defined in /config/rack_4:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/rack_4":{"/status/rack_4:AnyFireFaultActive":{"amap":"rack_4","func":"CalculateVar"},"/status/rack_4:TotalAlarmCnt":{"amap":"rack_4","func":"CalculateVar"},"/status/rack_4:TotalFaultCnt":{"amap":"rack_4","func":"CalculateVar"}},"/status/rack_4":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/rack_4:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"rack_4","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_4:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_4:FaultCnt"}},"/components/catl_rack_4":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/rack_4:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/rack_4:DCClosed"}]}]},"enable":"/config/rack_4:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/rack_4":{"avg_cell_temp":{"value":"/components/catl_rack_4:sbmu_avg_cell_temp","vlink":"/status/rack_4:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_rack_4:sbmu_avg_cell_voltage","vlink":"/status/rack_4:AvgCellVoltage"},"dc_current":{"value":"/components/catl_rack_4:sbmu_current","vlink":"/status/rack_4:DCCurrent"},"dc_voltage":{"value":"/components/catl_rack_4:sbmu_voltage","vlink":"/status/rack_4:DCVoltage"},"max_cell_temp":{"value":"/components/catl_rack_4:sbmu_max_cell_temp","vlink":"/status/rack_4:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_rack_4:sbmu_max_cell_voltage","vlink":"/status/rack_4:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_rack_4:sbmu_min_cell_temp","vlink":"/status/rack_4:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_rack_4:sbmu_min_cell_voltage","vlink":"/status/rack_4:MinCellVoltage"},"soc":{"value":"/components/catl_rack_4:sbmu_soc","vlink":"/status/rack_4:SOC"},"soh":{"value":"/components/catl_rack_4:sbmu_soh","vlink":"/status/rack_4:SOH"}},"/assets/bms/rack_4":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_4","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/rack_4:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/rack_4:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"rack_4","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/rack_4:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/rack_4":{"ui_avg_cell_temp":{"value":"/assets/bms/rack_4:avg_cell_temp","vlink":"/status/rack_4:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/rack_4:avg_cell_voltage","vlink":"/status/rack_4:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/rack_4:cell_temp_delta","vlink":"/status/rack_4:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/rack_4:cell_voltage_delta","vlink":"/status/rack_4:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/rack_4:dc_contactors_closed","vlink":"/status/rack_4:DCClosed"},"ui_dc_current":{"value":"/assets/bms/rack_4:dc_current","vlink":"/status/rack_4:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/rack_4:dc_power","vlink":"/status/rack_4:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/rack_4:dc_voltage","vlink":"/status/rack_4:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/rack_4:max_cell_temp","vlink":"/status/rack_4:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/rack_4:max_cell_voltage","vlink":"/status/rack_4:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/rack_4:max_charge_current","vlink":"/limits/rack_4:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/rack_4:max_charge_power","vlink":"/limits/rack_4:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/rack_4:max_discharge_current","vlink":"/limits/rack_4:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/rack_4:max_discharge_power","vlink":"/limits/rack_4:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/rack_4:min_cell_temp","vlink":"/status/rack_4:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/rack_4:min_cell_voltage","vlink":"/status/rack_4:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/rack_4:soc","vlink":"/status/rack_4:SOC"},"ui_soh":{"value":"/assets/bms/rack_4:soh","vlink":"/status/rack_4:SOH"},"ui_status":{"value":"/assets/bms/rack_4:status","vlink":"/status/rack_4:Status"}}}
[3.82029s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.82111s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/rack_4:alarms",
	"FaultDestination":	"/assets/bms/rack_4:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[3.82187s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:alarms]
[3.82225s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:alarms]
[3.82279s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:faults]
[3.82327s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:faults]
[3.82407s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.82506s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.8255s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.83732s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.84707s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/rack_4:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/rack_4:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/rack_4:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/rack_4:DischargePowerLimit"
	}
}].
[3.84776s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_4:ChargeCurrentLimit]
[3.84829s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_4:ChargeCurrentLimit]
[3.84887s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_4:ChargePowerLimit]
[3.84934s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_4:ChargePowerLimit]
[3.84965s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_4:DischargeCurrentLimit]
[3.84997s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_4:DischargeCurrentLimit]
[3.8503s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_4:DischargePowerLimit]
[3.85057s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_4:DischargePowerLimit]
[3.85111s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_rack_4":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_4",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/rack_4:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/rack_4)",
		"table":	"/assets/bms/rack_4",
		"value":	1
	},
	"runMonitor_rack_4":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_4",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"rack_4",
		"enable":	"/config/rack_4:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_4",
		"value":	1
	}
}].
[3.85171s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_4:CellTempDelta_Calculated":	{
		"amap":	"rack_4",
		"func":	"CalculateVar"
	},
	"/status/rack_4:CellVoltageDelta_Calculated":	{
		"amap":	"rack_4",
		"func":	"CalculateVar"
	}
}].
[3.85235s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_4:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_4:MinCellTemp",
		"variable2":	"/status/rack_4:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_4:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_4:MinCellVoltage",
		"variable2":	"/status/rack_4:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_4:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/rack_4:DCCurrent@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/rack_4:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[3.85319s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.85355s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.85458s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_4",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/rack_4) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"rack_4",
				"every":	1,
				"uri":	"/sched/rack_4:pubAssets_rack_4",
				"value":	1
			}, {
				"aname":	"rack_4",
				"every":	0.1,
				"uri":	"/sched/rack_4:runMonitor_rack_4",
				"value":	1
			}, {
				"aname":	"rack_4",
				"every":	1,
				"uri":	"/sched/rack_4:checkInputs_rack_4",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[3.85532s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_4",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[3.85661s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_4:HandleCmd_ClearFaults]
[3.85747s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_4:HandleCmd_ClearFaults]
[3.85808s  ] [info    ] [HandleCmd      ] reload first run [rack_4] [/controls/rack_4:ClearFaults]  reload 0
[3.85878s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/rack_4:ClearFaults]
[3.85967s  ] [info    ] [HandleCmd      ] Adding [/controls/rack_4:ClearFaults] to amap in asset [rack_4]
[3.86043s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/rack_4:ClearFaults]
[3.86111s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/rack_4:ClearFaults]
[3.86185s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/rack_4:ClearFaults":	{
		"amap":	"rack_4",
		"func":	"HandleCmd"
	}
}].
[3.86263s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/rack_4:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/rack_4:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/rack_4:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/rack_4:clear_faults and /alarms/rack_4:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[3.86346s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_4",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_4) will be reset to the normal state (defined in /config/rack_4:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[3.86423s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.86486s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.86548s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.86631s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.86688s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_4:FaultDestination]
[3.86754s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_4:FaultDestination]
[3.86816s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_4:NoFaultMsg]
[3.8688s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_4:NoFaultMsg]
[3.86937s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_4:FaultCnt]
[3.87028s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_4:FaultCnt]
[3.87094s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_4:AlarmDestination]
[3.87129s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_4:AlarmDestination]
[3.87163s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_4:NoAlarmMsg]
[3.87202s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_4:NoAlarmMsg]
[3.87252s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_4:AlarmCnt]
[3.87289s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_4:AlarmCnt]
[3.87345s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_4",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/rack_4) will be reset to the normal state (defined in /config/rack_4:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[3.87391s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.87424s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.87474s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.87525s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.87567s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_4:AnyFireFaultActive":	{
		"amap":	"rack_4",
		"func":	"CalculateVar"
	},
	"/status/rack_4:TotalAlarmCnt":	{
		"amap":	"rack_4",
		"func":	"CalculateVar"
	},
	"/status/rack_4:TotalFaultCnt":	{
		"amap":	"rack_4",
		"func":	"CalculateVar"
	}
}].
[3.87644s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/rack_4:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_4",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_4:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_4:FaultCnt"
	}
}].
[3.87754s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sbmu_master_negative":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/rack_4:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/rack_4:DCClosed"
						}]
				}]
		},
		"enable":	"/config/rack_4:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[3.87807s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"value":	"/components/catl_rack_4:sbmu_avg_cell_temp",
		"vlink":	"/status/rack_4:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_rack_4:sbmu_avg_cell_voltage",
		"vlink":	"/status/rack_4:AvgCellVoltage"
	},
	"dc_current":	{
		"value":	"/components/catl_rack_4:sbmu_current",
		"vlink":	"/status/rack_4:DCCurrent"
	},
	"dc_voltage":	{
		"value":	"/components/catl_rack_4:sbmu_voltage",
		"vlink":	"/status/rack_4:DCVoltage"
	},
	"max_cell_temp":	{
		"value":	"/components/catl_rack_4:sbmu_max_cell_temp",
		"vlink":	"/status/rack_4:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_rack_4:sbmu_max_cell_voltage",
		"vlink":	"/status/rack_4:MaxCellVoltage"
	},
	"min_cell_temp":	{
		"value":	"/components/catl_rack_4:sbmu_min_cell_temp",
		"vlink":	"/status/rack_4:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_rack_4:sbmu_min_cell_voltage",
		"vlink":	"/status/rack_4:MinCellVoltage"
	},
	"soc":	{
		"value":	"/components/catl_rack_4:sbmu_soc",
		"vlink":	"/status/rack_4:SOC"
	},
	"soh":	{
		"value":	"/components/catl_rack_4:sbmu_soh",
		"vlink":	"/status/rack_4:SOH"
	}
}].
[3.8785s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_avg_cell_temp]
[3.87908s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_avg_cell_temp]
[3.87944s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_avg_cell_voltage]
[3.87967s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_avg_cell_voltage]
[3.87996s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_current]
[3.8804s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_current]
[3.88082s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_voltage]
[3.88147s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_voltage]
[3.88197s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_max_cell_temp]
[3.88261s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_max_cell_temp]
[3.88297s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_max_cell_voltage]
[3.88325s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_max_cell_voltage]
[3.88368s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_min_cell_temp]
[3.88415s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_min_cell_temp]
[3.88469s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_min_cell_voltage]
[3.88532s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_min_cell_voltage]
[3.88591s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_soc]
[3.8864s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_soc]
[3.88689s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_4:sbmu_soh]
[3.88733s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_4:sbmu_soh]
[3.88796s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_4",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/rack_4:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/rack_4:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_4",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/rack_4:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[3.88899s  ] [info    ] [LogInfo        ] [/assets/bms/rack_4:maint_mode] received a value of [false]
[3.88983s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.89024s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.89096s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/rack_4:avg_cell_temp",
		"vlink":	"/status/rack_4:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/rack_4:avg_cell_voltage",
		"vlink":	"/status/rack_4:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/rack_4:cell_temp_delta",
		"vlink":	"/status/rack_4:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/rack_4:cell_voltage_delta",
		"vlink":	"/status/rack_4:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/rack_4:dc_contactors_closed",
		"vlink":	"/status/rack_4:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/rack_4:dc_current",
		"vlink":	"/status/rack_4:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/rack_4:dc_power",
		"vlink":	"/status/rack_4:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/rack_4:dc_voltage",
		"vlink":	"/status/rack_4:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/rack_4:max_cell_temp",
		"vlink":	"/status/rack_4:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/rack_4:max_cell_voltage",
		"vlink":	"/status/rack_4:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/rack_4:max_charge_current",
		"vlink":	"/limits/rack_4:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/rack_4:max_charge_power",
		"vlink":	"/limits/rack_4:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/rack_4:max_discharge_current",
		"vlink":	"/limits/rack_4:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/rack_4:max_discharge_power",
		"vlink":	"/limits/rack_4:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/rack_4:min_cell_temp",
		"vlink":	"/status/rack_4:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/rack_4:min_cell_voltage",
		"vlink":	"/status/rack_4:MinCellVoltage"
	},
	"ui_soc":	{
		"value":	"/assets/bms/rack_4:soc",
		"vlink":	"/status/rack_4:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/rack_4:soh",
		"vlink":	"/status/rack_4:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/rack_4:status",
		"vlink":	"/status/rack_4:Status"
	}
}].
[3.8924s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:avg_cell_temp]
[3.89291s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:avg_cell_temp]
[3.89359s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:avg_cell_voltage]
[3.89392s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:avg_cell_voltage]
[3.8943s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:cell_temp_delta]
[3.89475s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:cell_temp_delta]
[3.89519s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:cell_voltage_delta]
[3.89551s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:cell_voltage_delta]
[3.89594s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:dc_contactors_closed]
[3.89646s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:dc_contactors_closed]
[3.89702s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:dc_current]
[3.89746s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:dc_current]
[3.89778s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:dc_power]
[3.89815s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:dc_power]
[3.89854s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:dc_voltage]
[3.89892s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:dc_voltage]
[3.89925s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:max_cell_temp]
[3.8998s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:max_cell_temp]
[3.90298s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:max_cell_voltage]
[3.90334s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:max_cell_voltage]
[3.90362s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:max_charge_current]
[3.90403s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:max_charge_current]
[3.90455s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:max_charge_power]
[3.90505s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:max_charge_power]
[3.90581s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:max_discharge_current]
[3.90621s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:max_discharge_current]
[3.90692s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:max_discharge_power]
[3.90735s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:max_discharge_power]
[3.90795s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:min_cell_temp]
[3.90857s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:min_cell_temp]
[3.90907s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:min_cell_voltage]
[3.9094s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:min_cell_voltage]
[3.90998s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:soc]
[3.91077s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:soc]
[3.91123s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:soh]
[3.91178s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:soh]
[3.91246s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_4:status]
[3.91306s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_4:status]
[3.91434s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [rack_5]
[3.915s    ] [info    ] [setVecAmAi     ]  ainame Setting ai  [rack_5] parent am [bms] 
[3.91611s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [rack_5]
[3.91692s  ] [info    ] [configure_vmapS] body: {"/config/rack_5":{"AlarmDestination":"/assets/bms/rack_5:alarms","FaultDestination":"/assets/bms/rack_5:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/rack_5":{"ChargeCurrentLimit":{"value":"/limits/rack_5:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/rack_5:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/rack_5:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/rack_5:DischargePowerLimit"}},"/sched/rack_5":{"pubAssets_rack_5":{"actions":{"onSet":[{"func":[{"amap":"rack_5","func":"RunPub"}]}]},"enable":"/config/rack_5:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/rack_5)","table":"/assets/bms/rack_5","value":1},"runMonitor_rack_5":{"actions":{"onSet":[{"func":[{"amap":"rack_5","func":"RunMonitor"}]}]},"aname":"rack_5","enable":"/config/rack_5:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_5","value":1}},"/schedule/wake_monitor/rack_5":{"/status/rack_5:CellTempDelta_Calculated":{"amap":"rack_5","func":"CalculateVar"},"/status/rack_5:CellVoltageDelta_Calculated":{"amap":"rack_5","func":"CalculateVar"}},"/status/rack_5":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_5:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_5:MinCellTemp","variable2":"/status/rack_5:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_5:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_5:MinCellVoltage","variable2":"/status/rack_5:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_5:DCCurrent@EnableMaxValCheck"},{"uri":"/status/rack_5:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/rack_5:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"rack_5","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/rack_5) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"rack_5","every":1,"uri":"/sched/rack_5:pubAssets_rack_5","value":1},{"aname":"rack_5","every":0.1,"uri":"/sched/rack_5:runMonitor_rack_5","value":1},{"aname":"rack_5","every":1,"uri":"/sched/rack_5:checkInputs_rack_5","value":1}],"targav":"/system/commands:run","value":false}},"/controls/rack_5":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"rack_5","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/rack_5":{"/controls/rack_5:ClearFaults":{"amap":"rack_5","func":"HandleCmd"}},"/status/rack_5":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/rack_5:clear_faults"},{"outValue":"Clear","uri":"/alarms/rack_5:clear_alarms"}]}]},"enable":"/config/rack_5:enable","ifChanged":false,"note":"When this variable is set, /faults/rack_5:clear_faults and /alarms/rack_5:clear_alarms will be set to Clear","value":false}},"/alarms/rack_5":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"rack_5","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_5) will be reset to the normal state (defined in /config/rack_5:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/rack_5":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_5","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/rack_5) will be reset to the normal state (defined in /config/rack_5:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/rack_5":{"/status/rack_5:AnyFireFaultActive":{"amap":"rack_5","func":"CalculateVar"},"/status/rack_5:TotalAlarmCnt":{"amap":"rack_5","func":"CalculateVar"},"/status/rack_5:TotalFaultCnt":{"amap":"rack_5","func":"CalculateVar"}},"/status/rack_5":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/rack_5:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"rack_5","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_5:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_5:FaultCnt"}},"/components/catl_rack_5":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/rack_5:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/rack_5:DCClosed"}]}]},"enable":"/config/rack_5:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/rack_5":{"avg_cell_temp":{"value":"/components/catl_rack_5:sbmu_avg_cell_temp","vlink":"/status/rack_5:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_rack_5:sbmu_avg_cell_voltage","vlink":"/status/rack_5:AvgCellVoltage"},"dc_current":{"value":"/components/catl_rack_5:sbmu_current","vlink":"/status/rack_5:DCCurrent"},"dc_voltage":{"value":"/components/catl_rack_5:sbmu_voltage","vlink":"/status/rack_5:DCVoltage"},"max_cell_temp":{"value":"/components/catl_rack_5:sbmu_max_cell_temp","vlink":"/status/rack_5:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_rack_5:sbmu_max_cell_voltage","vlink":"/status/rack_5:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_rack_5:sbmu_min_cell_temp","vlink":"/status/rack_5:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_rack_5:sbmu_min_cell_voltage","vlink":"/status/rack_5:MinCellVoltage"},"soc":{"value":"/components/catl_rack_5:sbmu_soc","vlink":"/status/rack_5:SOC"},"soh":{"value":"/components/catl_rack_5:sbmu_soh","vlink":"/status/rack_5:SOH"}},"/assets/bms/rack_5":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_5","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/rack_5:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/rack_5:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"rack_5","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/rack_5:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/rack_5":{"ui_avg_cell_temp":{"value":"/assets/bms/rack_5:avg_cell_temp","vlink":"/status/rack_5:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/rack_5:avg_cell_voltage","vlink":"/status/rack_5:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/rack_5:cell_temp_delta","vlink":"/status/rack_5:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/rack_5:cell_voltage_delta","vlink":"/status/rack_5:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/rack_5:dc_contactors_closed","vlink":"/status/rack_5:DCClosed"},"ui_dc_current":{"value":"/assets/bms/rack_5:dc_current","vlink":"/status/rack_5:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/rack_5:dc_power","vlink":"/status/rack_5:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/rack_5:dc_voltage","vlink":"/status/rack_5:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/rack_5:max_cell_temp","vlink":"/status/rack_5:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/rack_5:max_cell_voltage","vlink":"/status/rack_5:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/rack_5:max_charge_current","vlink":"/limits/rack_5:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/rack_5:max_charge_power","vlink":"/limits/rack_5:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/rack_5:max_discharge_current","vlink":"/limits/rack_5:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/rack_5:max_discharge_power","vlink":"/limits/rack_5:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/rack_5:min_cell_temp","vlink":"/status/rack_5:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/rack_5:min_cell_voltage","vlink":"/status/rack_5:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/rack_5:soc","vlink":"/status/rack_5:SOC"},"ui_soh":{"value":"/assets/bms/rack_5:soh","vlink":"/status/rack_5:SOH"},"ui_status":{"value":"/assets/bms/rack_5:status","vlink":"/status/rack_5:Status"}}}
[3.9182s   ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.91853s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/rack_5:alarms",
	"FaultDestination":	"/assets/bms/rack_5:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[3.91897s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:alarms]
[3.91936s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:alarms]
[3.9197s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:faults]
[3.91998s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:faults]
[3.9205s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.92072s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.92129s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.9216s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.92232s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/rack_5:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/rack_5:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/rack_5:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/rack_5:DischargePowerLimit"
	}
}].
[3.92269s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_5:ChargeCurrentLimit]
[3.92331s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_5:ChargeCurrentLimit]
[3.92377s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_5:ChargePowerLimit]
[3.92421s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_5:ChargePowerLimit]
[3.92461s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_5:DischargeCurrentLimit]
[3.92483s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_5:DischargeCurrentLimit]
[3.9252s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_5:DischargePowerLimit]
[3.92542s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_5:DischargePowerLimit]
[3.92575s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_rack_5":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_5",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/rack_5:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/rack_5)",
		"table":	"/assets/bms/rack_5",
		"value":	1
	},
	"runMonitor_rack_5":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_5",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"rack_5",
		"enable":	"/config/rack_5:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_5",
		"value":	1
	}
}].
[3.92631s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_5:CellTempDelta_Calculated":	{
		"amap":	"rack_5",
		"func":	"CalculateVar"
	},
	"/status/rack_5:CellVoltageDelta_Calculated":	{
		"amap":	"rack_5",
		"func":	"CalculateVar"
	}
}].
[3.92702s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_5:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_5:MinCellTemp",
		"variable2":	"/status/rack_5:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_5:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_5:MinCellVoltage",
		"variable2":	"/status/rack_5:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_5:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/rack_5:DCCurrent@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/rack_5:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[3.92774s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.92836s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.92918s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_5",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/rack_5) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"rack_5",
				"every":	1,
				"uri":	"/sched/rack_5:pubAssets_rack_5",
				"value":	1
			}, {
				"aname":	"rack_5",
				"every":	0.1,
				"uri":	"/sched/rack_5:runMonitor_rack_5",
				"value":	1
			}, {
				"aname":	"rack_5",
				"every":	1,
				"uri":	"/sched/rack_5:checkInputs_rack_5",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[3.92968s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_5",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[3.93273s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_5:HandleCmd_ClearFaults]
[3.93306s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_5:HandleCmd_ClearFaults]
[3.93337s  ] [info    ] [HandleCmd      ] reload first run [rack_5] [/controls/rack_5:ClearFaults]  reload 0
[3.93367s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/rack_5:ClearFaults]
[3.93417s  ] [info    ] [HandleCmd      ] Adding [/controls/rack_5:ClearFaults] to amap in asset [rack_5]
[3.93457s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/rack_5:ClearFaults]
[3.9351s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/rack_5:ClearFaults]
[3.93585s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/rack_5:ClearFaults":	{
		"amap":	"rack_5",
		"func":	"HandleCmd"
	}
}].
[3.93652s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/rack_5:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/rack_5:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/rack_5:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/rack_5:clear_faults and /alarms/rack_5:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[3.93765s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_5",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_5) will be reset to the normal state (defined in /config/rack_5:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[3.93814s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.93848s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.93885s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.93938s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.93974s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_5:FaultDestination]
[3.94034s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_5:FaultDestination]
[3.94076s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_5:NoFaultMsg]
[3.94144s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_5:NoFaultMsg]
[3.94178s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_5:FaultCnt]
[3.94255s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_5:FaultCnt]
[3.94322s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_5:AlarmDestination]
[3.94362s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_5:AlarmDestination]
[3.94393s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_5:NoAlarmMsg]
[3.94438s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_5:NoAlarmMsg]
[3.94469s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_5:AlarmCnt]
[3.94494s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_5:AlarmCnt]
[3.94539s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_5",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/rack_5) will be reset to the normal state (defined in /config/rack_5:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[3.94598s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.9465s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.94704s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.94783s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.94829s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_5:AnyFireFaultActive":	{
		"amap":	"rack_5",
		"func":	"CalculateVar"
	},
	"/status/rack_5:TotalAlarmCnt":	{
		"amap":	"rack_5",
		"func":	"CalculateVar"
	},
	"/status/rack_5:TotalFaultCnt":	{
		"amap":	"rack_5",
		"func":	"CalculateVar"
	}
}].
[3.94901s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/rack_5:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_5",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_5:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_5:FaultCnt"
	}
}].
[3.95402s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sbmu_master_negative":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/rack_5:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/rack_5:DCClosed"
						}]
				}]
		},
		"enable":	"/config/rack_5:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[3.95564s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"value":	"/components/catl_rack_5:sbmu_avg_cell_temp",
		"vlink":	"/status/rack_5:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_rack_5:sbmu_avg_cell_voltage",
		"vlink":	"/status/rack_5:AvgCellVoltage"
	},
	"dc_current":	{
		"value":	"/components/catl_rack_5:sbmu_current",
		"vlink":	"/status/rack_5:DCCurrent"
	},
	"dc_voltage":	{
		"value":	"/components/catl_rack_5:sbmu_voltage",
		"vlink":	"/status/rack_5:DCVoltage"
	},
	"max_cell_temp":	{
		"value":	"/components/catl_rack_5:sbmu_max_cell_temp",
		"vlink":	"/status/rack_5:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_rack_5:sbmu_max_cell_voltage",
		"vlink":	"/status/rack_5:MaxCellVoltage"
	},
	"min_cell_temp":	{
		"value":	"/components/catl_rack_5:sbmu_min_cell_temp",
		"vlink":	"/status/rack_5:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_rack_5:sbmu_min_cell_voltage",
		"vlink":	"/status/rack_5:MinCellVoltage"
	},
	"soc":	{
		"value":	"/components/catl_rack_5:sbmu_soc",
		"vlink":	"/status/rack_5:SOC"
	},
	"soh":	{
		"value":	"/components/catl_rack_5:sbmu_soh",
		"vlink":	"/status/rack_5:SOH"
	}
}].
[3.95627s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_avg_cell_temp]
[3.95683s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_avg_cell_temp]
[3.95734s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_avg_cell_voltage]
[3.95758s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_avg_cell_voltage]
[3.96034s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_current]
[3.96103s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_current]
[3.96193s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_voltage]
[3.96349s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_voltage]
[3.96413s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_max_cell_temp]
[3.96442s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_max_cell_temp]
[3.96532s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_max_cell_voltage]
[3.96755s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_max_cell_voltage]
[3.96791s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_min_cell_temp]
[3.96821s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_min_cell_temp]
[3.96866s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_min_cell_voltage]
[3.96906s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_min_cell_voltage]
[3.96936s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_soc]
[3.96963s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_soc]
[3.96992s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_5:sbmu_soh]
[3.97014s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_5:sbmu_soh]
[3.97063s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_5",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/rack_5:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/rack_5:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_5",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/rack_5:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[3.97136s  ] [info    ] [LogInfo        ] [/assets/bms/rack_5:maint_mode] received a value of [false]
[3.97182s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.97206s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.97274s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/rack_5:avg_cell_temp",
		"vlink":	"/status/rack_5:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/rack_5:avg_cell_voltage",
		"vlink":	"/status/rack_5:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/rack_5:cell_temp_delta",
		"vlink":	"/status/rack_5:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/rack_5:cell_voltage_delta",
		"vlink":	"/status/rack_5:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/rack_5:dc_contactors_closed",
		"vlink":	"/status/rack_5:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/rack_5:dc_current",
		"vlink":	"/status/rack_5:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/rack_5:dc_power",
		"vlink":	"/status/rack_5:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/rack_5:dc_voltage",
		"vlink":	"/status/rack_5:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/rack_5:max_cell_temp",
		"vlink":	"/status/rack_5:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/rack_5:max_cell_voltage",
		"vlink":	"/status/rack_5:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/rack_5:max_charge_current",
		"vlink":	"/limits/rack_5:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/rack_5:max_charge_power",
		"vlink":	"/limits/rack_5:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/rack_5:max_discharge_current",
		"vlink":	"/limits/rack_5:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/rack_5:max_discharge_power",
		"vlink":	"/limits/rack_5:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/rack_5:min_cell_temp",
		"vlink":	"/status/rack_5:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/rack_5:min_cell_voltage",
		"vlink":	"/status/rack_5:MinCellVoltage"
	},
	"ui_soc":	{
		"value":	"/assets/bms/rack_5:soc",
		"vlink":	"/status/rack_5:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/rack_5:soh",
		"vlink":	"/status/rack_5:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/rack_5:status",
		"vlink":	"/status/rack_5:Status"
	}
}].
[3.97337s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:avg_cell_temp]
[3.97382s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:avg_cell_temp]
[3.97414s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:avg_cell_voltage]
[3.97446s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:avg_cell_voltage]
[3.97498s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:cell_temp_delta]
[3.97529s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:cell_temp_delta]
[3.97566s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:cell_voltage_delta]
[3.97591s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:cell_voltage_delta]
[3.97657s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:dc_contactors_closed]
[3.97686s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:dc_contactors_closed]
[3.9772s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:dc_current]
[3.97746s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:dc_current]
[3.97778s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:dc_power]
[3.97806s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:dc_power]
[3.97837s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:dc_voltage]
[3.979s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:dc_voltage]
[3.97933s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:max_cell_temp]
[3.9799s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:max_cell_temp]
[3.98045s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:max_cell_voltage]
[3.98094s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:max_cell_voltage]
[3.98142s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:max_charge_current]
[3.98187s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:max_charge_current]
[3.98232s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:max_charge_power]
[3.98272s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:max_charge_power]
[3.98312s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:max_discharge_current]
[3.98345s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:max_discharge_current]
[3.98382s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:max_discharge_power]
[3.98441s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:max_discharge_power]
[3.98476s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:min_cell_temp]
[3.98533s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:min_cell_temp]
[3.98563s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:min_cell_voltage]
[3.98606s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:min_cell_voltage]
[3.98662s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:soc]
[3.98697s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:soc]
[3.98764s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:soh]
[3.98791s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:soh]
[3.98856s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_5:status]
[3.98882s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_5:status]
[3.98986s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [rack_6]
[3.99047s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [rack_6] parent am [bms] 
[3.99127s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [rack_6]
[3.99195s  ] [info    ] [configure_vmapS] body: {"/config/rack_6":{"AlarmDestination":"/assets/bms/rack_6:alarms","FaultDestination":"/assets/bms/rack_6:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/rack_6":{"ChargeCurrentLimit":{"value":"/limits/rack_6:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/rack_6:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/rack_6:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/rack_6:DischargePowerLimit"}},"/sched/rack_6":{"pubAssets_rack_6":{"actions":{"onSet":[{"func":[{"amap":"rack_6","func":"RunPub"}]}]},"enable":"/config/rack_6:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/rack_6)","table":"/assets/bms/rack_6","value":1},"runMonitor_rack_6":{"actions":{"onSet":[{"func":[{"amap":"rack_6","func":"RunMonitor"}]}]},"aname":"rack_6","enable":"/config/rack_6:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_6","value":1}},"/schedule/wake_monitor/rack_6":{"/status/rack_6:CellTempDelta_Calculated":{"amap":"rack_6","func":"CalculateVar"},"/status/rack_6:CellVoltageDelta_Calculated":{"amap":"rack_6","func":"CalculateVar"}},"/status/rack_6":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_6:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_6:MinCellTemp","variable2":"/status/rack_6:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_6:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_6:MinCellVoltage","variable2":"/status/rack_6:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_6:DCCurrent@EnableMaxValCheck"},{"uri":"/status/rack_6:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/rack_6:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"rack_6","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/rack_6) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"rack_6","every":1,"uri":"/sched/rack_6:pubAssets_rack_6","value":1},{"aname":"rack_6","every":0.1,"uri":"/sched/rack_6:runMonitor_rack_6","value":1},{"aname":"rack_6","every":1,"uri":"/sched/rack_6:checkInputs_rack_6","value":1}],"targav":"/system/commands:run","value":false}},"/controls/rack_6":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"rack_6","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/rack_6":{"/controls/rack_6:ClearFaults":{"amap":"rack_6","func":"HandleCmd"}},"/status/rack_6":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/rack_6:clear_faults"},{"outValue":"Clear","uri":"/alarms/rack_6:clear_alarms"}]}]},"enable":"/config/rack_6:enable","ifChanged":false,"note":"When this variable is set, /faults/rack_6:clear_faults and /alarms/rack_6:clear_alarms will be set to Clear","value":false}},"/alarms/rack_6":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"rack_6","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_6) will be reset to the normal state (defined in /config/rack_6:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/rack_6":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_6","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/rack_6) will be reset to the normal state (defined in /config/rack_6:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/rack_6":{"/status/rack_6:AnyFireFaultActive":{"amap":"rack_6","func":"CalculateVar"},"/status/rack_6:TotalAlarmCnt":{"amap":"rack_6","func":"CalculateVar"},"/status/rack_6:TotalFaultCnt":{"amap":"rack_6","func":"CalculateVar"}},"/status/rack_6":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/rack_6:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"rack_6","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_6:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_6:FaultCnt"}},"/components/catl_rack_6":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/rack_6:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/rack_6:DCClosed"}]}]},"enable":"/config/rack_6:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/rack_6":{"avg_cell_temp":{"value":"/components/catl_rack_6:sbmu_avg_cell_temp","vlink":"/status/rack_6:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_rack_6:sbmu_avg_cell_voltage","vlink":"/status/rack_6:AvgCellVoltage"},"dc_current":{"value":"/components/catl_rack_6:sbmu_current","vlink":"/status/rack_6:DCCurrent"},"dc_voltage":{"value":"/components/catl_rack_6:sbmu_voltage","vlink":"/status/rack_6:DCVoltage"},"max_cell_temp":{"value":"/components/catl_rack_6:sbmu_max_cell_temp","vlink":"/status/rack_6:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_rack_6:sbmu_max_cell_voltage","vlink":"/status/rack_6:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_rack_6:sbmu_min_cell_temp","vlink":"/status/rack_6:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_rack_6:sbmu_min_cell_voltage","vlink":"/status/rack_6:MinCellVoltage"},"soc":{"value":"/components/catl_rack_6:sbmu_soc","vlink":"/status/rack_6:SOC"},"soh":{"value":"/components/catl_rack_6:sbmu_soh","vlink":"/status/rack_6:SOH"}},"/assets/bms/rack_6":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_6","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/rack_6:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/rack_6:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"rack_6","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/rack_6:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/rack_6":{"ui_avg_cell_temp":{"value":"/assets/bms/rack_6:avg_cell_temp","vlink":"/status/rack_6:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/rack_6:avg_cell_voltage","vlink":"/status/rack_6:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/rack_6:cell_temp_delta","vlink":"/status/rack_6:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/rack_6:cell_voltage_delta","vlink":"/status/rack_6:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/rack_6:dc_contactors_closed","vlink":"/status/rack_6:DCClosed"},"ui_dc_current":{"value":"/assets/bms/rack_6:dc_current","vlink":"/status/rack_6:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/rack_6:dc_power","vlink":"/status/rack_6:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/rack_6:dc_voltage","vlink":"/status/rack_6:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/rack_6:max_cell_temp","vlink":"/status/rack_6:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/rack_6:max_cell_voltage","vlink":"/status/rack_6:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/rack_6:max_charge_current","vlink":"/limits/rack_6:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/rack_6:max_charge_power","vlink":"/limits/rack_6:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/rack_6:max_discharge_current","vlink":"/limits/rack_6:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/rack_6:max_discharge_power","vlink":"/limits/rack_6:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/rack_6:min_cell_temp","vlink":"/status/rack_6:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/rack_6:min_cell_voltage","vlink":"/status/rack_6:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/rack_6:soc","vlink":"/status/rack_6:SOC"},"ui_soh":{"value":"/assets/bms/rack_6:soh","vlink":"/status/rack_6:SOH"},"ui_status":{"value":"/assets/bms/rack_6:status","vlink":"/status/rack_6:Status"}}}
[3.99305s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.99356s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/rack_6:alarms",
	"FaultDestination":	"/assets/bms/rack_6:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[3.99431s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:alarms]
[3.99482s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:alarms]
[3.99515s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:faults]
[3.99544s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:faults]
[3.99578s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.99615s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.99653s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.99681s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.99713s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/rack_6:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/rack_6:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/rack_6:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/rack_6:DischargePowerLimit"
	}
}].
[3.99753s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_6:ChargeCurrentLimit]
[3.99778s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_6:ChargeCurrentLimit]
[3.99802s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_6:ChargePowerLimit]
[3.99828s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_6:ChargePowerLimit]
[3.99861s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_6:DischargeCurrentLimit]
[3.99888s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_6:DischargeCurrentLimit]
[3.99932s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_6:DischargePowerLimit]
[3.99973s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_6:DischargePowerLimit]
[4.00013s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_rack_6":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_6",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/rack_6:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/rack_6)",
		"table":	"/assets/bms/rack_6",
		"value":	1
	},
	"runMonitor_rack_6":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_6",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"rack_6",
		"enable":	"/config/rack_6:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_6",
		"value":	1
	}
}].
[4.00074s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_6:CellTempDelta_Calculated":	{
		"amap":	"rack_6",
		"func":	"CalculateVar"
	},
	"/status/rack_6:CellVoltageDelta_Calculated":	{
		"amap":	"rack_6",
		"func":	"CalculateVar"
	}
}].
[4.0013s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_6:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_6:MinCellTemp",
		"variable2":	"/status/rack_6:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_6:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_6:MinCellVoltage",
		"variable2":	"/status/rack_6:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_6:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/rack_6:DCCurrent@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/rack_6:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[4.00195s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.00228s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.00266s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_6",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/rack_6) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"rack_6",
				"every":	1,
				"uri":	"/sched/rack_6:pubAssets_rack_6",
				"value":	1
			}, {
				"aname":	"rack_6",
				"every":	0.1,
				"uri":	"/sched/rack_6:runMonitor_rack_6",
				"value":	1
			}, {
				"aname":	"rack_6",
				"every":	1,
				"uri":	"/sched/rack_6:checkInputs_rack_6",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[4.00321s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_6",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[4.00467s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_6:HandleCmd_ClearFaults]
[4.00508s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_6:HandleCmd_ClearFaults]
[4.00541s  ] [info    ] [HandleCmd      ] reload first run [rack_6] [/controls/rack_6:ClearFaults]  reload 0
[4.00659s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/rack_6:ClearFaults]
[4.00765s  ] [info    ] [HandleCmd      ] Adding [/controls/rack_6:ClearFaults] to amap in asset [rack_6]
[4.00812s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/rack_6:ClearFaults]
[4.00862s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/rack_6:ClearFaults]
[4.00978s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/rack_6:ClearFaults":	{
		"amap":	"rack_6",
		"func":	"HandleCmd"
	}
}].
[4.01042s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/rack_6:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/rack_6:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/rack_6:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/rack_6:clear_faults and /alarms/rack_6:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[4.01257s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_6",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_6) will be reset to the normal state (defined in /config/rack_6:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[4.01308s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.01349s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.01395s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.01437s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.01475s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_6:FaultDestination]
[4.01515s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_6:FaultDestination]
[4.01571s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_6:NoFaultMsg]
[4.01612s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_6:NoFaultMsg]
[4.01664s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_6:FaultCnt]
[4.01702s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_6:FaultCnt]
[4.01829s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_6:AlarmDestination]
[4.01858s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_6:AlarmDestination]
[4.01892s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_6:NoAlarmMsg]
[4.01951s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_6:NoAlarmMsg]
[4.02027s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_6:AlarmCnt]
[4.02077s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_6:AlarmCnt]
[4.02126s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_6",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/rack_6) will be reset to the normal state (defined in /config/rack_6:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[4.02177s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.0221s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.02289s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.02347s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.02401s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_6:AnyFireFaultActive":	{
		"amap":	"rack_6",
		"func":	"CalculateVar"
	},
	"/status/rack_6:TotalAlarmCnt":	{
		"amap":	"rack_6",
		"func":	"CalculateVar"
	},
	"/status/rack_6:TotalFaultCnt":	{
		"amap":	"rack_6",
		"func":	"CalculateVar"
	}
}].
[4.02485s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/rack_6:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_6",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_6:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_6:FaultCnt"
	}
}].
[4.02601s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sbmu_master_negative":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/rack_6:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/rack_6:DCClosed"
						}]
				}]
		},
		"enable":	"/config/rack_6:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[4.02682s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"value":	"/components/catl_rack_6:sbmu_avg_cell_temp",
		"vlink":	"/status/rack_6:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_rack_6:sbmu_avg_cell_voltage",
		"vlink":	"/status/rack_6:AvgCellVoltage"
	},
	"dc_current":	{
		"value":	"/components/catl_rack_6:sbmu_current",
		"vlink":	"/status/rack_6:DCCurrent"
	},
	"dc_voltage":	{
		"value":	"/components/catl_rack_6:sbmu_voltage",
		"vlink":	"/status/rack_6:DCVoltage"
	},
	"max_cell_temp":	{
		"value":	"/components/catl_rack_6:sbmu_max_cell_temp",
		"vlink":	"/status/rack_6:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_rack_6:sbmu_max_cell_voltage",
		"vlink":	"/status/rack_6:MaxCellVoltage"
	},
	"min_cell_temp":	{
		"value":	"/components/catl_rack_6:sbmu_min_cell_temp",
		"vlink":	"/status/rack_6:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_rack_6:sbmu_min_cell_voltage",
		"vlink":	"/status/rack_6:MinCellVoltage"
	},
	"soc":	{
		"value":	"/components/catl_rack_6:sbmu_soc",
		"vlink":	"/status/rack_6:SOC"
	},
	"soh":	{
		"value":	"/components/catl_rack_6:sbmu_soh",
		"vlink":	"/status/rack_6:SOH"
	}
}].
[4.02737s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_avg_cell_temp]
[4.02787s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_avg_cell_temp]
[4.02873s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_avg_cell_voltage]
[4.02944s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_avg_cell_voltage]
[4.02989s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_current]
[4.0303s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_current]
[4.03082s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_voltage]
[4.03136s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_voltage]
[4.03173s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_max_cell_temp]
[4.03212s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_max_cell_temp]
[4.03274s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_max_cell_voltage]
[4.03315s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_max_cell_voltage]
[4.03385s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_min_cell_temp]
[4.03437s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_min_cell_temp]
[4.03522s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_min_cell_voltage]
[4.0357s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_min_cell_voltage]
[4.03656s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_soc]
[4.03711s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_soc]
[4.0375s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_6:sbmu_soh]
[4.03786s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_6:sbmu_soh]
[4.03862s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_6",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/rack_6:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/rack_6:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_6",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/rack_6:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[4.03949s  ] [info    ] [LogInfo        ] [/assets/bms/rack_6:maint_mode] received a value of [false]
[4.04084s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.04144s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.04244s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/rack_6:avg_cell_temp",
		"vlink":	"/status/rack_6:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/rack_6:avg_cell_voltage",
		"vlink":	"/status/rack_6:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/rack_6:cell_temp_delta",
		"vlink":	"/status/rack_6:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/rack_6:cell_voltage_delta",
		"vlink":	"/status/rack_6:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/rack_6:dc_contactors_closed",
		"vlink":	"/status/rack_6:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/rack_6:dc_current",
		"vlink":	"/status/rack_6:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/rack_6:dc_power",
		"vlink":	"/status/rack_6:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/rack_6:dc_voltage",
		"vlink":	"/status/rack_6:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/rack_6:max_cell_temp",
		"vlink":	"/status/rack_6:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/rack_6:max_cell_voltage",
		"vlink":	"/status/rack_6:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/rack_6:max_charge_current",
		"vlink":	"/limits/rack_6:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/rack_6:max_charge_power",
		"vlink":	"/limits/rack_6:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/rack_6:max_discharge_current",
		"vlink":	"/limits/rack_6:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/rack_6:max_discharge_power",
		"vlink":	"/limits/rack_6:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/rack_6:min_cell_temp",
		"vlink":	"/status/rack_6:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/rack_6:min_cell_voltage",
		"vlink":	"/status/rack_6:MinCellVoltage"
	},
	"ui_soc":	{
		"value":	"/assets/bms/rack_6:soc",
		"vlink":	"/status/rack_6:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/rack_6:soh",
		"vlink":	"/status/rack_6:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/rack_6:status",
		"vlink":	"/status/rack_6:Status"
	}
}].
[4.04337s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:avg_cell_temp]
[4.04384s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:avg_cell_temp]
[4.04454s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:avg_cell_voltage]
[4.0452s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:avg_cell_voltage]
[4.04567s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:cell_temp_delta]
[4.04603s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:cell_temp_delta]
[4.04655s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:cell_voltage_delta]
[4.05262s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:cell_voltage_delta]
[4.05318s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:dc_contactors_closed]
[4.05351s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:dc_contactors_closed]
[4.05426s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:dc_current]
[4.05462s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:dc_current]
[4.05497s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:dc_power]
[4.05545s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:dc_power]
[4.05581s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:dc_voltage]
[4.05608s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:dc_voltage]
[4.05641s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:max_cell_temp]
[4.05675s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:max_cell_temp]
[4.05726s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:max_cell_voltage]
[4.05759s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:max_cell_voltage]
[4.05796s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:max_charge_current]
[4.05825s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:max_charge_current]
[4.05856s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:max_charge_power]
[4.05892s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:max_charge_power]
[4.05939s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:max_discharge_current]
[4.05977s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:max_discharge_current]
[4.06007s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:max_discharge_power]
[4.06037s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:max_discharge_power]
[4.06064s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:min_cell_temp]
[4.06086s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:min_cell_temp]
[4.06119s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:min_cell_voltage]
[4.06157s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:min_cell_voltage]
[4.06195s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:soc]
[4.06238s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:soc]
[4.06284s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:soh]
[4.06325s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:soh]
[4.06361s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_6:status]
[4.0639s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_6:status]
[4.06499s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [rack_7]
[4.0653s   ] [info    ] [setVecAmAi     ]  ainame Setting ai  [rack_7] parent am [bms] 
[4.0663s   ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [rack_7]
[4.06667s  ] [info    ] [configure_vmapS] body: {"/config/rack_7":{"AlarmDestination":"/assets/bms/rack_7:alarms","FaultDestination":"/assets/bms/rack_7:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/rack_7":{"ChargeCurrentLimit":{"value":"/limits/rack_7:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/rack_7:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/rack_7:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/rack_7:DischargePowerLimit"}},"/sched/rack_7":{"pubAssets_rack_7":{"actions":{"onSet":[{"func":[{"amap":"rack_7","func":"RunPub"}]}]},"enable":"/config/rack_7:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/rack_7)","table":"/assets/bms/rack_7","value":1},"runMonitor_rack_7":{"actions":{"onSet":[{"func":[{"amap":"rack_7","func":"RunMonitor"}]}]},"aname":"rack_7","enable":"/config/rack_7:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_7","value":1}},"/schedule/wake_monitor/rack_7":{"/status/rack_7:CellTempDelta_Calculated":{"amap":"rack_7","func":"CalculateVar"},"/status/rack_7:CellVoltageDelta_Calculated":{"amap":"rack_7","func":"CalculateVar"}},"/status/rack_7":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_7:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_7:MinCellTemp","variable2":"/status/rack_7:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_7:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_7:MinCellVoltage","variable2":"/status/rack_7:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_7:DCCurrent@EnableMaxValCheck"},{"uri":"/status/rack_7:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/rack_7:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"rack_7","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/rack_7) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"rack_7","every":1,"uri":"/sched/rack_7:pubAssets_rack_7","value":1},{"aname":"rack_7","every":0.1,"uri":"/sched/rack_7:runMonitor_rack_7","value":1},{"aname":"rack_7","every":1,"uri":"/sched/rack_7:checkInputs_rack_7","value":1}],"targav":"/system/commands:run","value":false}},"/controls/rack_7":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"rack_7","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/rack_7":{"/controls/rack_7:ClearFaults":{"amap":"rack_7","func":"HandleCmd"}},"/status/rack_7":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/rack_7:clear_faults"},{"outValue":"Clear","uri":"/alarms/rack_7:clear_alarms"}]}]},"enable":"/config/rack_7:enable","ifChanged":false,"note":"When this variable is set, /faults/rack_7:clear_faults and /alarms/rack_7:clear_alarms will be set to Clear","value":false}},"/alarms/rack_7":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"rack_7","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_7) will be reset to the normal state (defined in /config/rack_7:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/rack_7":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_7","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/rack_7) will be reset to the normal state (defined in /config/rack_7:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/rack_7":{"/status/rack_7:AnyFireFaultActive":{"amap":"rack_7","func":"CalculateVar"},"/status/rack_7:TotalAlarmCnt":{"amap":"rack_7","func":"CalculateVar"},"/status/rack_7:TotalFaultCnt":{"amap":"rack_7","func":"CalculateVar"}},"/status/rack_7":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/rack_7:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"rack_7","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_7:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_7:FaultCnt"}},"/components/catl_rack_7":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/rack_7:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/rack_7:DCClosed"}]}]},"enable":"/config/rack_7:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/rack_7":{"avg_cell_temp":{"value":"/components/catl_rack_7:sbmu_avg_cell_temp","vlink":"/status/rack_7:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_rack_7:sbmu_avg_cell_voltage","vlink":"/status/rack_7:AvgCellVoltage"},"dc_current":{"value":"/components/catl_rack_7:sbmu_current","vlink":"/status/rack_7:DCCurrent"},"dc_voltage":{"value":"/components/catl_rack_7:sbmu_voltage","vlink":"/status/rack_7:DCVoltage"},"max_cell_temp":{"value":"/components/catl_rack_7:sbmu_max_cell_temp","vlink":"/status/rack_7:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_rack_7:sbmu_max_cell_voltage","vlink":"/status/rack_7:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_rack_7:sbmu_min_cell_temp","vlink":"/status/rack_7:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_rack_7:sbmu_min_cell_voltage","vlink":"/status/rack_7:MinCellVoltage"},"soc":{"value":"/components/catl_rack_7:sbmu_soc","vlink":"/status/rack_7:SOC"},"soh":{"value":"/components/catl_rack_7:sbmu_soh","vlink":"/status/rack_7:SOH"}},"/assets/bms/rack_7":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_7","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/rack_7:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/rack_7:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"rack_7","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/rack_7:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/rack_7":{"ui_avg_cell_temp":{"value":"/assets/bms/rack_7:avg_cell_temp","vlink":"/status/rack_7:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/rack_7:avg_cell_voltage","vlink":"/status/rack_7:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/rack_7:cell_temp_delta","vlink":"/status/rack_7:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/rack_7:cell_voltage_delta","vlink":"/status/rack_7:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/rack_7:dc_contactors_closed","vlink":"/status/rack_7:DCClosed"},"ui_dc_current":{"value":"/assets/bms/rack_7:dc_current","vlink":"/status/rack_7:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/rack_7:dc_power","vlink":"/status/rack_7:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/rack_7:dc_voltage","vlink":"/status/rack_7:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/rack_7:max_cell_temp","vlink":"/status/rack_7:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/rack_7:max_cell_voltage","vlink":"/status/rack_7:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/rack_7:max_charge_current","vlink":"/limits/rack_7:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/rack_7:max_charge_power","vlink":"/limits/rack_7:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/rack_7:max_discharge_current","vlink":"/limits/rack_7:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/rack_7:max_discharge_power","vlink":"/limits/rack_7:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/rack_7:min_cell_temp","vlink":"/status/rack_7:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/rack_7:min_cell_voltage","vlink":"/status/rack_7:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/rack_7:soc","vlink":"/status/rack_7:SOC"},"ui_soh":{"value":"/assets/bms/rack_7:soh","vlink":"/status/rack_7:SOH"},"ui_status":{"value":"/assets/bms/rack_7:status","vlink":"/status/rack_7:Status"}}}
[4.06812s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[4.06846s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/rack_7:alarms",
	"FaultDestination":	"/assets/bms/rack_7:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[4.0689s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:alarms]
[4.06937s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:alarms]
[4.06978s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:faults]
[4.07008s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:faults]
[4.07064s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.07099s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.07128s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.07165s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.07213s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/rack_7:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/rack_7:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/rack_7:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/rack_7:DischargePowerLimit"
	}
}].
[4.07249s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_7:ChargeCurrentLimit]
[4.07291s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_7:ChargeCurrentLimit]
[4.07321s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_7:ChargePowerLimit]
[4.07356s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_7:ChargePowerLimit]
[4.07404s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_7:DischargeCurrentLimit]
[4.0745s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_7:DischargeCurrentLimit]
[4.07506s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_7:DischargePowerLimit]
[4.07545s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_7:DischargePowerLimit]
[4.0765s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_rack_7":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_7",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/rack_7:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/rack_7)",
		"table":	"/assets/bms/rack_7",
		"value":	1
	},
	"runMonitor_rack_7":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_7",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"rack_7",
		"enable":	"/config/rack_7:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_7",
		"value":	1
	}
}].
[4.07715s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_7:CellTempDelta_Calculated":	{
		"amap":	"rack_7",
		"func":	"CalculateVar"
	},
	"/status/rack_7:CellVoltageDelta_Calculated":	{
		"amap":	"rack_7",
		"func":	"CalculateVar"
	}
}].
[4.07796s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_7:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_7:MinCellTemp",
		"variable2":	"/status/rack_7:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_7:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_7:MinCellVoltage",
		"variable2":	"/status/rack_7:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_7:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/rack_7:DCCurrent@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/rack_7:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[4.07867s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.07914s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.07999s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_7",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/rack_7) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"rack_7",
				"every":	1,
				"uri":	"/sched/rack_7:pubAssets_rack_7",
				"value":	1
			}, {
				"aname":	"rack_7",
				"every":	0.1,
				"uri":	"/sched/rack_7:runMonitor_rack_7",
				"value":	1
			}, {
				"aname":	"rack_7",
				"every":	1,
				"uri":	"/sched/rack_7:checkInputs_rack_7",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[4.08071s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_7",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[4.08138s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_7:HandleCmd_ClearFaults]
[4.08208s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_7:HandleCmd_ClearFaults]
[4.08274s  ] [info    ] [HandleCmd      ] reload first run [rack_7] [/controls/rack_7:ClearFaults]  reload 0
[4.08334s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/rack_7:ClearFaults]
[4.08404s  ] [info    ] [HandleCmd      ] Adding [/controls/rack_7:ClearFaults] to amap in asset [rack_7]
[4.08475s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/rack_7:ClearFaults]
[4.08505s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/rack_7:ClearFaults]
[4.08543s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/rack_7:ClearFaults":	{
		"amap":	"rack_7",
		"func":	"HandleCmd"
	}
}].
[4.08626s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/rack_7:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/rack_7:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/rack_7:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/rack_7:clear_faults and /alarms/rack_7:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[4.08691s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_7",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_7) will be reset to the normal state (defined in /config/rack_7:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[4.08731s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.08775s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.08813s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.08848s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.08899s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_7:FaultDestination]
[4.08928s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_7:FaultDestination]
[4.0898s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_7:NoFaultMsg]
[4.09044s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_7:NoFaultMsg]
[4.09087s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_7:FaultCnt]
[4.09127s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_7:FaultCnt]
[4.09162s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_7:AlarmDestination]
[4.09261s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_7:AlarmDestination]
[4.093s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_7:NoAlarmMsg]
[4.09331s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_7:NoAlarmMsg]
[4.09362s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_7:AlarmCnt]
[4.09399s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_7:AlarmCnt]
[4.09468s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_7",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/rack_7) will be reset to the normal state (defined in /config/rack_7:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[4.09522s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.09554s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.09621s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.0966s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.09703s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_7:AnyFireFaultActive":	{
		"amap":	"rack_7",
		"func":	"CalculateVar"
	},
	"/status/rack_7:TotalAlarmCnt":	{
		"amap":	"rack_7",
		"func":	"CalculateVar"
	},
	"/status/rack_7:TotalFaultCnt":	{
		"amap":	"rack_7",
		"func":	"CalculateVar"
	}
}].
[4.09769s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/rack_7:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_7",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_7:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_7:FaultCnt"
	}
}].
[4.09916s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sbmu_master_negative":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/rack_7:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/rack_7:DCClosed"
						}]
				}]
		},
		"enable":	"/config/rack_7:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[4.09997s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"value":	"/components/catl_rack_7:sbmu_avg_cell_temp",
		"vlink":	"/status/rack_7:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_rack_7:sbmu_avg_cell_voltage",
		"vlink":	"/status/rack_7:AvgCellVoltage"
	},
	"dc_current":	{
		"value":	"/components/catl_rack_7:sbmu_current",
		"vlink":	"/status/rack_7:DCCurrent"
	},
	"dc_voltage":	{
		"value":	"/components/catl_rack_7:sbmu_voltage",
		"vlink":	"/status/rack_7:DCVoltage"
	},
	"max_cell_temp":	{
		"value":	"/components/catl_rack_7:sbmu_max_cell_temp",
		"vlink":	"/status/rack_7:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_rack_7:sbmu_max_cell_voltage",
		"vlink":	"/status/rack_7:MaxCellVoltage"
	},
	"min_cell_temp":	{
		"value":	"/components/catl_rack_7:sbmu_min_cell_temp",
		"vlink":	"/status/rack_7:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_rack_7:sbmu_min_cell_voltage",
		"vlink":	"/status/rack_7:MinCellVoltage"
	},
	"soc":	{
		"value":	"/components/catl_rack_7:sbmu_soc",
		"vlink":	"/status/rack_7:SOC"
	},
	"soh":	{
		"value":	"/components/catl_rack_7:sbmu_soh",
		"vlink":	"/status/rack_7:SOH"
	}
}].
[4.10105s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_avg_cell_temp]
[4.10155s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_avg_cell_temp]
[4.10197s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_avg_cell_voltage]
[4.10248s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_avg_cell_voltage]
[4.10301s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_current]
[4.10333s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_current]
[4.10366s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_voltage]
[4.10405s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_voltage]
[4.10446s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_max_cell_temp]
[4.10547s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_max_cell_temp]
[4.10588s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_max_cell_voltage]
[4.1065s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_max_cell_voltage]
[4.10692s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_min_cell_temp]
[4.10724s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_min_cell_temp]
[4.10761s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_min_cell_voltage]
[4.10793s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_min_cell_voltage]
[4.10837s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_soc]
[4.10862s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_soc]
[4.10905s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_7:sbmu_soh]
[4.10931s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_7:sbmu_soh]
[4.10983s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_7",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/rack_7:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/rack_7:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_7",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/rack_7:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[4.11086s  ] [info    ] [LogInfo        ] [/assets/bms/rack_7:maint_mode] received a value of [false]
[4.1115s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.11199s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.11259s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/rack_7:avg_cell_temp",
		"vlink":	"/status/rack_7:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/rack_7:avg_cell_voltage",
		"vlink":	"/status/rack_7:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/rack_7:cell_temp_delta",
		"vlink":	"/status/rack_7:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/rack_7:cell_voltage_delta",
		"vlink":	"/status/rack_7:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/rack_7:dc_contactors_closed",
		"vlink":	"/status/rack_7:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/rack_7:dc_current",
		"vlink":	"/status/rack_7:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/rack_7:dc_power",
		"vlink":	"/status/rack_7:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/rack_7:dc_voltage",
		"vlink":	"/status/rack_7:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/rack_7:max_cell_temp",
		"vlink":	"/status/rack_7:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/rack_7:max_cell_voltage",
		"vlink":	"/status/rack_7:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/rack_7:max_charge_current",
		"vlink":	"/limits/rack_7:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/rack_7:max_charge_power",
		"vlink":	"/limits/rack_7:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/rack_7:max_discharge_current",
		"vlink":	"/limits/rack_7:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/rack_7:max_discharge_power",
		"vlink":	"/limits/rack_7:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/rack_7:min_cell_temp",
		"vlink":	"/status/rack_7:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/rack_7:min_cell_voltage",
		"vlink":	"/status/rack_7:MinCellVoltage"
	},
	"ui_soc":	{
		"value":	"/assets/bms/rack_7:soc",
		"vlink":	"/status/rack_7:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/rack_7:soh",
		"vlink":	"/status/rack_7:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/rack_7:status",
		"vlink":	"/status/rack_7:Status"
	}
}].
[4.1131s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:avg_cell_temp]
[4.11338s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:avg_cell_temp]
[4.11388s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:avg_cell_voltage]
[4.11424s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:avg_cell_voltage]
[4.11459s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:cell_temp_delta]
[4.11493s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:cell_temp_delta]
[4.11546s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:cell_voltage_delta]
[4.11603s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:cell_voltage_delta]
[4.11713s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:dc_contactors_closed]
[4.1177s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:dc_contactors_closed]
[4.11852s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:dc_current]
[4.11918s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:dc_current]
[4.11987s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:dc_power]
[4.12062s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:dc_power]
[4.12136s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:dc_voltage]
[4.1218s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:dc_voltage]
[4.12229s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:max_cell_temp]
[4.12274s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:max_cell_temp]
[4.12326s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:max_cell_voltage]
[4.1236s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:max_cell_voltage]
[4.12396s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:max_charge_current]
[4.12442s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:max_charge_current]
[4.12486s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:max_charge_power]
[4.12526s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:max_charge_power]
[4.12581s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:max_discharge_current]
[4.12617s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:max_discharge_current]
[4.12705s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:max_discharge_power]
[4.12757s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:max_discharge_power]
[4.128s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:min_cell_temp]
[4.12844s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:min_cell_temp]
[4.12885s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:min_cell_voltage]
[4.12925s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:min_cell_voltage]
[4.12982s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:soc]
[4.13034s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:soc]
[4.13093s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:soh]
[4.13137s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:soh]
[4.1322s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_7:status]
[4.13272s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_7:status]
[4.13377s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [rack_8]
[4.13429s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [rack_8] parent am [bms] 
[4.13582s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [rack_8]
[4.13653s  ] [info    ] [configure_vmapS] body: {"/config/rack_8":{"AlarmDestination":"/assets/bms/rack_8:alarms","FaultDestination":"/assets/bms/rack_8:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/rack_8":{"ChargeCurrentLimit":{"value":"/limits/rack_8:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/rack_8:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/rack_8:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/rack_8:DischargePowerLimit"}},"/sched/rack_8":{"pubAssets_rack_8":{"actions":{"onSet":[{"func":[{"amap":"rack_8","func":"RunPub"}]}]},"enable":"/config/rack_8:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/rack_8)","table":"/assets/bms/rack_8","value":1},"runMonitor_rack_8":{"actions":{"onSet":[{"func":[{"amap":"rack_8","func":"RunMonitor"}]}]},"aname":"rack_8","enable":"/config/rack_8:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_8","value":1}},"/schedule/wake_monitor/rack_8":{"/status/rack_8:CellTempDelta_Calculated":{"amap":"rack_8","func":"CalculateVar"},"/status/rack_8:CellVoltageDelta_Calculated":{"amap":"rack_8","func":"CalculateVar"}},"/status/rack_8":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_8:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_8:MinCellTemp","variable2":"/status/rack_8:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_8:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_8:MinCellVoltage","variable2":"/status/rack_8:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_8:DCCurrent@EnableMaxValCheck"},{"uri":"/status/rack_8:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/rack_8:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"rack_8","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/rack_8) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"rack_8","every":1,"uri":"/sched/rack_8:pubAssets_rack_8","value":1},{"aname":"rack_8","every":0.1,"uri":"/sched/rack_8:runMonitor_rack_8","value":1},{"aname":"rack_8","every":1,"uri":"/sched/rack_8:checkInputs_rack_8","value":1}],"targav":"/system/commands:run","value":false}},"/controls/rack_8":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"rack_8","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/rack_8":{"/controls/rack_8:ClearFaults":{"amap":"rack_8","func":"HandleCmd"}},"/status/rack_8":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/rack_8:clear_faults"},{"outValue":"Clear","uri":"/alarms/rack_8:clear_alarms"}]}]},"enable":"/config/rack_8:enable","ifChanged":false,"note":"When this variable is set, /faults/rack_8:clear_faults and /alarms/rack_8:clear_alarms will be set to Clear","value":false}},"/alarms/rack_8":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"rack_8","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_8) will be reset to the normal state (defined in /config/rack_8:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/rack_8":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_8","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/rack_8) will be reset to the normal state (defined in /config/rack_8:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/rack_8":{"/status/rack_8:AnyFireFaultActive":{"amap":"rack_8","func":"CalculateVar"},"/status/rack_8:TotalAlarmCnt":{"amap":"rack_8","func":"CalculateVar"},"/status/rack_8:TotalFaultCnt":{"amap":"rack_8","func":"CalculateVar"}},"/status/rack_8":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/rack_8:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"rack_8","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_8:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_8:FaultCnt"}},"/components/catl_rack_8":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/rack_8:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/rack_8:DCClosed"}]}]},"enable":"/config/rack_8:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/rack_8":{"avg_cell_temp":{"value":"/components/catl_rack_8:sbmu_avg_cell_temp","vlink":"/status/rack_8:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_rack_8:sbmu_avg_cell_voltage","vlink":"/status/rack_8:AvgCellVoltage"},"dc_current":{"value":"/components/catl_rack_8:sbmu_current","vlink":"/status/rack_8:DCCurrent"},"dc_voltage":{"value":"/components/catl_rack_8:sbmu_voltage","vlink":"/status/rack_8:DCVoltage"},"max_cell_temp":{"value":"/components/catl_rack_8:sbmu_max_cell_temp","vlink":"/status/rack_8:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_rack_8:sbmu_max_cell_voltage","vlink":"/status/rack_8:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_rack_8:sbmu_min_cell_temp","vlink":"/status/rack_8:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_rack_8:sbmu_min_cell_voltage","vlink":"/status/rack_8:MinCellVoltage"},"soc":{"value":"/components/catl_rack_8:sbmu_soc","vlink":"/status/rack_8:SOC"},"soh":{"value":"/components/catl_rack_8:sbmu_soh","vlink":"/status/rack_8:SOH"}},"/assets/bms/rack_8":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_8","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/rack_8:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/rack_8:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"rack_8","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/rack_8:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/rack_8":{"ui_avg_cell_temp":{"value":"/assets/bms/rack_8:avg_cell_temp","vlink":"/status/rack_8:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/rack_8:avg_cell_voltage","vlink":"/status/rack_8:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/rack_8:cell_temp_delta","vlink":"/status/rack_8:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/rack_8:cell_voltage_delta","vlink":"/status/rack_8:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/rack_8:dc_contactors_closed","vlink":"/status/rack_8:DCClosed"},"ui_dc_current":{"value":"/assets/bms/rack_8:dc_current","vlink":"/status/rack_8:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/rack_8:dc_power","vlink":"/status/rack_8:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/rack_8:dc_voltage","vlink":"/status/rack_8:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/rack_8:max_cell_temp","vlink":"/status/rack_8:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/rack_8:max_cell_voltage","vlink":"/status/rack_8:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/rack_8:max_charge_current","vlink":"/limits/rack_8:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/rack_8:max_charge_power","vlink":"/limits/rack_8:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/rack_8:max_discharge_current","vlink":"/limits/rack_8:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/rack_8:max_discharge_power","vlink":"/limits/rack_8:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/rack_8:min_cell_temp","vlink":"/status/rack_8:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/rack_8:min_cell_voltage","vlink":"/status/rack_8:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/rack_8:soc","vlink":"/status/rack_8:SOC"},"ui_soh":{"value":"/assets/bms/rack_8:soh","vlink":"/status/rack_8:SOH"},"ui_status":{"value":"/assets/bms/rack_8:status","vlink":"/status/rack_8:Status"}}}
[4.13797s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[4.13841s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/rack_8:alarms",
	"FaultDestination":	"/assets/bms/rack_8:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[4.13886s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:alarms]
[4.1393s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:alarms]
[4.13976s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:faults]
[4.14016s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:faults]
[4.14055s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.14098s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.14142s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.14183s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.14252s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/rack_8:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/rack_8:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/rack_8:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/rack_8:DischargePowerLimit"
	}
}].
[4.14308s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_8:ChargeCurrentLimit]
[4.14372s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_8:ChargeCurrentLimit]
[4.14413s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_8:ChargePowerLimit]
[4.14453s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_8:ChargePowerLimit]
[4.14496s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_8:DischargeCurrentLimit]
[4.14541s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_8:DischargeCurrentLimit]
[4.14584s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_8:DischargePowerLimit]
[4.14618s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_8:DischargePowerLimit]
[4.14693s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_rack_8":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_8",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/rack_8:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/rack_8)",
		"table":	"/assets/bms/rack_8",
		"value":	1
	},
	"runMonitor_rack_8":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_8",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"rack_8",
		"enable":	"/config/rack_8:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_8",
		"value":	1
	}
}].
[4.14755s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_8:CellTempDelta_Calculated":	{
		"amap":	"rack_8",
		"func":	"CalculateVar"
	},
	"/status/rack_8:CellVoltageDelta_Calculated":	{
		"amap":	"rack_8",
		"func":	"CalculateVar"
	}
}].
[4.14814s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_8:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_8:MinCellTemp",
		"variable2":	"/status/rack_8:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_8:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_8:MinCellVoltage",
		"variable2":	"/status/rack_8:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_8:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/rack_8:DCCurrent@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/rack_8:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[4.1491s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.15009s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.15083s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_8",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/rack_8) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"rack_8",
				"every":	1,
				"uri":	"/sched/rack_8:pubAssets_rack_8",
				"value":	1
			}, {
				"aname":	"rack_8",
				"every":	0.1,
				"uri":	"/sched/rack_8:runMonitor_rack_8",
				"value":	1
			}, {
				"aname":	"rack_8",
				"every":	1,
				"uri":	"/sched/rack_8:checkInputs_rack_8",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[4.16294s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_8",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[4.16361s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_8:HandleCmd_ClearFaults]
[4.16421s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_8:HandleCmd_ClearFaults]
[4.16455s  ] [info    ] [HandleCmd      ] reload first run [rack_8] [/controls/rack_8:ClearFaults]  reload 0
[4.16498s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/rack_8:ClearFaults]
[4.16546s  ] [info    ] [HandleCmd      ] Adding [/controls/rack_8:ClearFaults] to amap in asset [rack_8]
[4.16593s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/rack_8:ClearFaults]
[4.16643s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/rack_8:ClearFaults]
[4.16712s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/rack_8:ClearFaults":	{
		"amap":	"rack_8",
		"func":	"HandleCmd"
	}
}].
[4.16861s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/rack_8:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/rack_8:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/rack_8:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/rack_8:clear_faults and /alarms/rack_8:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[4.16944s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_8",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_8) will be reset to the normal state (defined in /config/rack_8:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[4.17079s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.17147s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.1728s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.17335s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.17454s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_8:FaultDestination]
[4.17667s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_8:FaultDestination]
[4.17731s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_8:NoFaultMsg]
[4.17858s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_8:NoFaultMsg]
[4.1792s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_8:FaultCnt]
[4.1802s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_8:FaultCnt]
[4.18086s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_8:AlarmDestination]
[4.18138s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_8:AlarmDestination]
[4.1819s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_8:NoAlarmMsg]
[4.18248s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_8:NoAlarmMsg]
[4.18307s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_8:AlarmCnt]
[4.1836s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_8:AlarmCnt]
[4.18454s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_8",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/rack_8) will be reset to the normal state (defined in /config/rack_8:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[4.18516s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.18566s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.18651s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.18719s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.18787s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_8:AnyFireFaultActive":	{
		"amap":	"rack_8",
		"func":	"CalculateVar"
	},
	"/status/rack_8:TotalAlarmCnt":	{
		"amap":	"rack_8",
		"func":	"CalculateVar"
	},
	"/status/rack_8:TotalFaultCnt":	{
		"amap":	"rack_8",
		"func":	"CalculateVar"
	}
}].
[4.18853s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/rack_8:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_8",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_8:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_8:FaultCnt"
	}
}].
[4.18948s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sbmu_master_negative":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/rack_8:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/rack_8:DCClosed"
						}]
				}]
		},
		"enable":	"/config/rack_8:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[4.19092s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"value":	"/components/catl_rack_8:sbmu_avg_cell_temp",
		"vlink":	"/status/rack_8:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_rack_8:sbmu_avg_cell_voltage",
		"vlink":	"/status/rack_8:AvgCellVoltage"
	},
	"dc_current":	{
		"value":	"/components/catl_rack_8:sbmu_current",
		"vlink":	"/status/rack_8:DCCurrent"
	},
	"dc_voltage":	{
		"value":	"/components/catl_rack_8:sbmu_voltage",
		"vlink":	"/status/rack_8:DCVoltage"
	},
	"max_cell_temp":	{
		"value":	"/components/catl_rack_8:sbmu_max_cell_temp",
		"vlink":	"/status/rack_8:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_rack_8:sbmu_max_cell_voltage",
		"vlink":	"/status/rack_8:MaxCellVoltage"
	},
	"min_cell_temp":	{
		"value":	"/components/catl_rack_8:sbmu_min_cell_temp",
		"vlink":	"/status/rack_8:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_rack_8:sbmu_min_cell_voltage",
		"vlink":	"/status/rack_8:MinCellVoltage"
	},
	"soc":	{
		"value":	"/components/catl_rack_8:sbmu_soc",
		"vlink":	"/status/rack_8:SOC"
	},
	"soh":	{
		"value":	"/components/catl_rack_8:sbmu_soh",
		"vlink":	"/status/rack_8:SOH"
	}
}].
[4.19172s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_avg_cell_temp]
[4.19215s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_avg_cell_temp]
[4.19269s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_avg_cell_voltage]
[4.19324s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_avg_cell_voltage]
[4.19386s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_current]
[4.19436s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_current]
[4.19476s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_voltage]
[4.19517s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_voltage]
[4.19548s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_max_cell_temp]
[4.19576s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_max_cell_temp]
[4.19608s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_max_cell_voltage]
[4.19645s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_max_cell_voltage]
[4.19687s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_min_cell_temp]
[4.19726s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_min_cell_temp]
[4.19775s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_min_cell_voltage]
[4.19823s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_min_cell_voltage]
[4.1987s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_soc]
[4.19897s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_soc]
[4.19931s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_8:sbmu_soh]
[4.2s      ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_8:sbmu_soh]
[4.20071s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_8",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/rack_8:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/rack_8:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_8",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/rack_8:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[4.20193s  ] [info    ] [LogInfo        ] [/assets/bms/rack_8:maint_mode] received a value of [false]
[4.2029s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.2035s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.20413s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/rack_8:avg_cell_temp",
		"vlink":	"/status/rack_8:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/rack_8:avg_cell_voltage",
		"vlink":	"/status/rack_8:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/rack_8:cell_temp_delta",
		"vlink":	"/status/rack_8:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/rack_8:cell_voltage_delta",
		"vlink":	"/status/rack_8:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/rack_8:dc_contactors_closed",
		"vlink":	"/status/rack_8:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/rack_8:dc_current",
		"vlink":	"/status/rack_8:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/rack_8:dc_power",
		"vlink":	"/status/rack_8:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/rack_8:dc_voltage",
		"vlink":	"/status/rack_8:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/rack_8:max_cell_temp",
		"vlink":	"/status/rack_8:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/rack_8:max_cell_voltage",
		"vlink":	"/status/rack_8:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/rack_8:max_charge_current",
		"vlink":	"/limits/rack_8:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/rack_8:max_charge_power",
		"vlink":	"/limits/rack_8:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/rack_8:max_discharge_current",
		"vlink":	"/limits/rack_8:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/rack_8:max_discharge_power",
		"vlink":	"/limits/rack_8:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/rack_8:min_cell_temp",
		"vlink":	"/status/rack_8:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/rack_8:min_cell_voltage",
		"vlink":	"/status/rack_8:MinCellVoltage"
	},
	"ui_soc":	{
		"value":	"/assets/bms/rack_8:soc",
		"vlink":	"/status/rack_8:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/rack_8:soh",
		"vlink":	"/status/rack_8:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/rack_8:status",
		"vlink":	"/status/rack_8:Status"
	}
}].
[4.20459s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:avg_cell_temp]
[4.205s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:avg_cell_temp]
[4.20552s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:avg_cell_voltage]
[4.20614s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:avg_cell_voltage]
[4.20682s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:cell_temp_delta]
[4.20741s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:cell_temp_delta]
[4.20871s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:cell_voltage_delta]
[4.20923s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:cell_voltage_delta]
[4.20974s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:dc_contactors_closed]
[4.21027s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:dc_contactors_closed]
[4.21076s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:dc_current]
[4.21102s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:dc_current]
[4.21131s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:dc_power]
[4.21163s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:dc_power]
[4.21202s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:dc_voltage]
[4.21238s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:dc_voltage]
[4.21279s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:max_cell_temp]
[4.21308s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:max_cell_temp]
[4.21365s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:max_cell_voltage]
[4.21409s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:max_cell_voltage]
[4.21453s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:max_charge_current]
[4.21484s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:max_charge_current]
[4.21522s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:max_charge_power]
[4.21569s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:max_charge_power]
[4.21609s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:max_discharge_current]
[4.21642s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:max_discharge_current]
[4.21682s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:max_discharge_power]
[4.21707s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:max_discharge_power]
[4.21755s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:min_cell_temp]
[4.21782s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:min_cell_temp]
[4.21812s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:min_cell_voltage]
[4.2185s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:min_cell_voltage]
[4.21889s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:soc]
[4.21926s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:soc]
[4.21967s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:soh]
[4.22004s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:soh]
[4.22048s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_8:status]
[4.22072s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_8:status]
[4.22169s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [rack_9]
[4.22208s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [rack_9] parent am [bms] 
[4.22282s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [rack_9]
[4.22325s  ] [info    ] [configure_vmapS] body: {"/config/rack_9":{"AlarmDestination":"/assets/bms/rack_9:alarms","FaultDestination":"/assets/bms/rack_9:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/rack_9":{"ChargeCurrentLimit":{"value":"/limits/rack_9:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/rack_9:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/rack_9:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/rack_9:DischargePowerLimit"}},"/sched/rack_9":{"pubAssets_rack_9":{"actions":{"onSet":[{"func":[{"amap":"rack_9","func":"RunPub"}]}]},"enable":"/config/rack_9:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/rack_9)","table":"/assets/bms/rack_9","value":1},"runMonitor_rack_9":{"actions":{"onSet":[{"func":[{"amap":"rack_9","func":"RunMonitor"}]}]},"aname":"rack_9","enable":"/config/rack_9:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_9","value":1}},"/schedule/wake_monitor/rack_9":{"/status/rack_9:CellTempDelta_Calculated":{"amap":"rack_9","func":"CalculateVar"},"/status/rack_9:CellVoltageDelta_Calculated":{"amap":"rack_9","func":"CalculateVar"}},"/status/rack_9":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_9:CellTempDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_9:MinCellTemp","variable2":"/status/rack_9:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_9:CellVoltageDelta"}]}]},"expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/rack_9:MinCellVoltage","variable2":"/status/rack_9:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/rack_9:DCCurrent@EnableMaxValCheck"},{"uri":"/status/rack_9:DCCurrent@EnableMinValCheck"}]}]},"enable":"/config/rack_9:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"rack_9","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/rack_9) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"rack_9","every":1,"uri":"/sched/rack_9:pubAssets_rack_9","value":1},{"aname":"rack_9","every":0.1,"uri":"/sched/rack_9:runMonitor_rack_9","value":1},{"aname":"rack_9","every":1,"uri":"/sched/rack_9:checkInputs_rack_9","value":1}],"targav":"/system/commands:run","value":false}},"/controls/rack_9":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"rack_9","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/rack_9":{"/controls/rack_9:ClearFaults":{"amap":"rack_9","func":"HandleCmd"}},"/status/rack_9":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/rack_9:clear_faults"},{"outValue":"Clear","uri":"/alarms/rack_9:clear_alarms"}]}]},"enable":"/config/rack_9:enable","ifChanged":false,"note":"When this variable is set, /faults/rack_9:clear_faults and /alarms/rack_9:clear_alarms will be set to Clear","value":false}},"/alarms/rack_9":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"rack_9","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_9) will be reset to the normal state (defined in /config/rack_9:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/rack_9":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_9","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/rack_9) will be reset to the normal state (defined in /config/rack_9:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/rack_9":{"/status/rack_9:AnyFireFaultActive":{"amap":"rack_9","func":"CalculateVar"},"/status/rack_9:TotalAlarmCnt":{"amap":"rack_9","func":"CalculateVar"},"/status/rack_9:TotalFaultCnt":{"amap":"rack_9","func":"CalculateVar"}},"/status/rack_9":{"AlarmCnt":0,"AnyFireFaultActive":{"expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/rack_9:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"rack_9","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_9:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/rack_9:FaultCnt"}},"/components/catl_rack_9":{"sbmu_master_negative":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":false,"uri":"/status/rack_9:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/rack_9:DCClosed"}]}]},"enable":"/config/rack_9:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/vlinks/rack_9":{"avg_cell_temp":{"value":"/components/catl_rack_9:sbmu_avg_cell_temp","vlink":"/status/rack_9:AvgCellTemp"},"avg_cell_voltage":{"value":"/components/catl_rack_9:sbmu_avg_cell_voltage","vlink":"/status/rack_9:AvgCellVoltage"},"dc_current":{"value":"/components/catl_rack_9:sbmu_current","vlink":"/status/rack_9:DCCurrent"},"dc_voltage":{"value":"/components/catl_rack_9:sbmu_voltage","vlink":"/status/rack_9:DCVoltage"},"max_cell_temp":{"value":"/components/catl_rack_9:sbmu_max_cell_temp","vlink":"/status/rack_9:MaxCellTemp"},"max_cell_voltage":{"value":"/components/catl_rack_9:sbmu_max_cell_voltage","vlink":"/status/rack_9:MaxCellVoltage"},"min_cell_temp":{"value":"/components/catl_rack_9:sbmu_min_cell_temp","vlink":"/status/rack_9:MinCellTemp"},"min_cell_voltage":{"value":"/components/catl_rack_9:sbmu_min_cell_voltage","vlink":"/status/rack_9:MinCellVoltage"},"soc":{"value":"/components/catl_rack_9:sbmu_soc","vlink":"/status/rack_9:SOC"},"soh":{"value":"/components/catl_rack_9:sbmu_soh","vlink":"/status/rack_9:SOH"}},"/assets/bms/rack_9":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"rack_9","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/rack_9:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/rack_9:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"rack_9","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/rack_9:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/rack_9":{"ui_avg_cell_temp":{"value":"/assets/bms/rack_9:avg_cell_temp","vlink":"/status/rack_9:AvgCellTemp"},"ui_avg_cell_voltage":{"value":"/assets/bms/rack_9:avg_cell_voltage","vlink":"/status/rack_9:AvgCellVoltage"},"ui_cell_temp_delta":{"value":"/assets/bms/rack_9:cell_temp_delta","vlink":"/status/rack_9:CellTempDelta"},"ui_cell_voltage_delta":{"value":"/assets/bms/rack_9:cell_voltage_delta","vlink":"/status/rack_9:CellVoltageDelta"},"ui_dc_contactors_closed":{"value":"/assets/bms/rack_9:dc_contactors_closed","vlink":"/status/rack_9:DCClosed"},"ui_dc_current":{"value":"/assets/bms/rack_9:dc_current","vlink":"/status/rack_9:DCCurrent"},"ui_dc_power":{"value":"/assets/bms/rack_9:dc_power","vlink":"/status/rack_9:DCPower"},"ui_dc_voltage":{"value":"/assets/bms/rack_9:dc_voltage","vlink":"/status/rack_9:DCVoltage"},"ui_max_cell_temp":{"value":"/assets/bms/rack_9:max_cell_temp","vlink":"/status/rack_9:MaxCellTemp"},"ui_max_cell_voltage":{"value":"/assets/bms/rack_9:max_cell_voltage","vlink":"/status/rack_9:MaxCellVoltage"},"ui_max_charge_current":{"value":"/assets/bms/rack_9:max_charge_current","vlink":"/limits/rack_9:ChargeCurrentLimit"},"ui_max_charge_power":{"value":"/assets/bms/rack_9:max_charge_power","vlink":"/limits/rack_9:ChargePowerLimit"},"ui_max_discharge_current":{"value":"/assets/bms/rack_9:max_discharge_current","vlink":"/limits/rack_9:DischargeCurrentLimit"},"ui_max_discharge_power":{"value":"/assets/bms/rack_9:max_discharge_power","vlink":"/limits/rack_9:DischargePowerLimit"},"ui_min_cell_temp":{"value":"/assets/bms/rack_9:min_cell_temp","vlink":"/status/rack_9:MinCellTemp"},"ui_min_cell_voltage":{"value":"/assets/bms/rack_9:min_cell_voltage","vlink":"/status/rack_9:MinCellVoltage"},"ui_soc":{"value":"/assets/bms/rack_9:soc","vlink":"/status/rack_9:SOC"},"ui_soh":{"value":"/assets/bms/rack_9:soh","vlink":"/status/rack_9:SOH"},"ui_status":{"value":"/assets/bms/rack_9:status","vlink":"/status/rack_9:Status"}}}
[4.22509s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[4.22564s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/rack_9:alarms",
	"FaultDestination":	"/assets/bms/rack_9:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[4.22667s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:alarms]
[4.22717s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:alarms]
[4.22775s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:faults]
[4.22831s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:faults]
[4.22885s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.22934s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.22993s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.23038s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.23099s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/rack_9:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/rack_9:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/rack_9:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/rack_9:DischargePowerLimit"
	}
}].
[4.23159s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_9:ChargeCurrentLimit]
[4.23227s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_9:ChargeCurrentLimit]
[4.26499s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_9:ChargePowerLimit]
[4.2654s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_9:ChargePowerLimit]
[4.26581s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_9:DischargeCurrentLimit]
[4.26628s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_9:DischargeCurrentLimit]
[4.26689s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/rack_9:DischargePowerLimit]
[4.26727s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/rack_9:DischargePowerLimit]
[4.2676s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_rack_9":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_9",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/rack_9:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/rack_9)",
		"table":	"/assets/bms/rack_9",
		"value":	1
	},
	"runMonitor_rack_9":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_9",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"rack_9",
		"enable":	"/config/rack_9:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/rack_9",
		"value":	1
	}
}].
[4.26809s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_9:CellTempDelta_Calculated":	{
		"amap":	"rack_9",
		"func":	"CalculateVar"
	},
	"/status/rack_9:CellVoltageDelta_Calculated":	{
		"amap":	"rack_9",
		"func":	"CalculateVar"
	}
}].
[4.26853s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_9:CellTempDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_9:MinCellTemp",
		"variable2":	"/status/rack_9:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_9:CellVoltageDelta"
						}]
				}]
		},
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_9:MinCellVoltage",
		"variable2":	"/status/rack_9:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/rack_9:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/rack_9:DCCurrent@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/rack_9:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[4.26928s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.26963s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.27012s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_9",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/rack_9) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"rack_9",
				"every":	1,
				"uri":	"/sched/rack_9:pubAssets_rack_9",
				"value":	1
			}, {
				"aname":	"rack_9",
				"every":	0.1,
				"uri":	"/sched/rack_9:runMonitor_rack_9",
				"value":	1
			}, {
				"aname":	"rack_9",
				"every":	1,
				"uri":	"/sched/rack_9:checkInputs_rack_9",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[4.27095s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_9",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[4.27146s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_9:HandleCmd_ClearFaults]
[4.27177s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_9:HandleCmd_ClearFaults]
[4.27223s  ] [info    ] [HandleCmd      ] reload first run [rack_9] [/controls/rack_9:ClearFaults]  reload 0
[4.27265s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/rack_9:ClearFaults]
[4.27305s  ] [info    ] [HandleCmd      ] Adding [/controls/rack_9:ClearFaults] to amap in asset [rack_9]
[4.27345s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/rack_9:ClearFaults]
[4.2737s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/rack_9:ClearFaults]
[4.27401s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/rack_9:ClearFaults":	{
		"amap":	"rack_9",
		"func":	"HandleCmd"
	}
}].
[4.27445s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/rack_9:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/rack_9:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/rack_9:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/rack_9:clear_faults and /alarms/rack_9:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[4.27525s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_9",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/rack_9) will be reset to the normal state (defined in /config/rack_9:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[4.27573s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.27603s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.27661s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.28444s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.28547s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_9:FaultDestination]
[4.28696s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_9:FaultDestination]
[4.28727s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_9:NoFaultMsg]
[4.28749s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_9:NoFaultMsg]
[4.28792s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_9:FaultCnt]
[4.28818s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_9:FaultCnt]
[4.28844s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_9:AlarmDestination]
[4.28875s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_9:AlarmDestination]
[4.28904s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/rack_9:NoAlarmMsg]
[4.28943s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/rack_9:NoAlarmMsg]
[4.28966s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_9:AlarmCnt]
[4.28984s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_9:AlarmCnt]
[4.29031s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_9",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/rack_9) will be reset to the normal state (defined in /config/rack_9:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[4.29072s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.29109s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.29146s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.29192s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.29262s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/rack_9:AnyFireFaultActive":	{
		"amap":	"rack_9",
		"func":	"CalculateVar"
	},
	"/status/rack_9:TotalAlarmCnt":	{
		"amap":	"rack_9",
		"func":	"CalculateVar"
	},
	"/status/rack_9:TotalFaultCnt":	{
		"amap":	"rack_9",
		"func":	"CalculateVar"
	}
}].
[4.29347s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/rack_9:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_9",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_9:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/rack_9:FaultCnt"
	}
}].
[4.29449s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sbmu_master_negative":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/rack_9:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/rack_9:DCClosed"
						}]
				}]
		},
		"enable":	"/config/rack_9:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[4.29525s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"value":	"/components/catl_rack_9:sbmu_avg_cell_temp",
		"vlink":	"/status/rack_9:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"value":	"/components/catl_rack_9:sbmu_avg_cell_voltage",
		"vlink":	"/status/rack_9:AvgCellVoltage"
	},
	"dc_current":	{
		"value":	"/components/catl_rack_9:sbmu_current",
		"vlink":	"/status/rack_9:DCCurrent"
	},
	"dc_voltage":	{
		"value":	"/components/catl_rack_9:sbmu_voltage",
		"vlink":	"/status/rack_9:DCVoltage"
	},
	"max_cell_temp":	{
		"value":	"/components/catl_rack_9:sbmu_max_cell_temp",
		"vlink":	"/status/rack_9:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"value":	"/components/catl_rack_9:sbmu_max_cell_voltage",
		"vlink":	"/status/rack_9:MaxCellVoltage"
	},
	"min_cell_temp":	{
		"value":	"/components/catl_rack_9:sbmu_min_cell_temp",
		"vlink":	"/status/rack_9:MinCellTemp"
	},
	"min_cell_voltage":	{
		"value":	"/components/catl_rack_9:sbmu_min_cell_voltage",
		"vlink":	"/status/rack_9:MinCellVoltage"
	},
	"soc":	{
		"value":	"/components/catl_rack_9:sbmu_soc",
		"vlink":	"/status/rack_9:SOC"
	},
	"soh":	{
		"value":	"/components/catl_rack_9:sbmu_soh",
		"vlink":	"/status/rack_9:SOH"
	}
}].
[4.29593s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_avg_cell_temp]
[4.29664s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_avg_cell_temp]
[4.29709s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_avg_cell_voltage]
[4.29755s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_avg_cell_voltage]
[4.29789s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_current]
[4.29815s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_current]
[4.29848s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_voltage]
[4.29881s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_voltage]
[4.29996s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_max_cell_temp]
[4.30021s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_max_cell_temp]
[4.3006s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_max_cell_voltage]
[4.30104s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_max_cell_voltage]
[4.3017s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_min_cell_temp]
[4.3021s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_min_cell_temp]
[4.30275s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_min_cell_voltage]
[4.30319s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_min_cell_voltage]
[4.30373s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_soc]
[4.30411s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_soc]
[4.30468s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/catl_rack_9:sbmu_soh]
[4.30494s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/catl_rack_9:sbmu_soh]
[4.30553s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_9",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/rack_9:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/rack_9:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"rack_9",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/rack_9:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[4.30648s  ] [info    ] [LogInfo        ] [/assets/bms/rack_9:maint_mode] received a value of [false]
[4.30737s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.30786s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.30854s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"value":	"/assets/bms/rack_9:avg_cell_temp",
		"vlink":	"/status/rack_9:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"value":	"/assets/bms/rack_9:avg_cell_voltage",
		"vlink":	"/status/rack_9:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"value":	"/assets/bms/rack_9:cell_temp_delta",
		"vlink":	"/status/rack_9:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"value":	"/assets/bms/rack_9:cell_voltage_delta",
		"vlink":	"/status/rack_9:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"value":	"/assets/bms/rack_9:dc_contactors_closed",
		"vlink":	"/status/rack_9:DCClosed"
	},
	"ui_dc_current":	{
		"value":	"/assets/bms/rack_9:dc_current",
		"vlink":	"/status/rack_9:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/bms/rack_9:dc_power",
		"vlink":	"/status/rack_9:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/bms/rack_9:dc_voltage",
		"vlink":	"/status/rack_9:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"value":	"/assets/bms/rack_9:max_cell_temp",
		"vlink":	"/status/rack_9:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"value":	"/assets/bms/rack_9:max_cell_voltage",
		"vlink":	"/status/rack_9:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"value":	"/assets/bms/rack_9:max_charge_current",
		"vlink":	"/limits/rack_9:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/bms/rack_9:max_charge_power",
		"vlink":	"/limits/rack_9:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"value":	"/assets/bms/rack_9:max_discharge_current",
		"vlink":	"/limits/rack_9:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/bms/rack_9:max_discharge_power",
		"vlink":	"/limits/rack_9:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"value":	"/assets/bms/rack_9:min_cell_temp",
		"vlink":	"/status/rack_9:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"value":	"/assets/bms/rack_9:min_cell_voltage",
		"vlink":	"/status/rack_9:MinCellVoltage"
	},
	"ui_soc":	{
		"value":	"/assets/bms/rack_9:soc",
		"vlink":	"/status/rack_9:SOC"
	},
	"ui_soh":	{
		"value":	"/assets/bms/rack_9:soh",
		"vlink":	"/status/rack_9:SOH"
	},
	"ui_status":	{
		"value":	"/assets/bms/rack_9:status",
		"vlink":	"/status/rack_9:Status"
	}
}].
[4.30907s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:avg_cell_temp]
[4.30945s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:avg_cell_temp]
[4.30991s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:avg_cell_voltage]
[4.31033s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:avg_cell_voltage]
[4.31059s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:cell_temp_delta]
[4.31083s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:cell_temp_delta]
[4.31108s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:cell_voltage_delta]
[4.31126s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:cell_voltage_delta]
[4.31182s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:dc_contactors_closed]
[4.31219s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:dc_contactors_closed]
[4.3126s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:dc_current]
[4.31298s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:dc_current]
[4.31338s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:dc_power]
[4.31433s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:dc_power]
[4.31493s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:dc_voltage]
[4.31543s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:dc_voltage]
[4.31598s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:max_cell_temp]
[4.31655s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:max_cell_temp]
[4.31699s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:max_cell_voltage]
[4.31736s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:max_cell_voltage]
[4.31775s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:max_charge_current]
[4.31808s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:max_charge_current]
[4.31862s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:max_charge_power]
[4.31904s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:max_charge_power]
[4.31955s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:max_discharge_current]
[4.32703s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:max_discharge_current]
[4.32764s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:max_discharge_power]
[4.32824s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:max_discharge_power]
[4.32878s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:min_cell_temp]
[4.3292s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:min_cell_temp]
[4.32967s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:min_cell_voltage]
[4.33022s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:min_cell_voltage]
[4.33081s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:soc]
[4.33167s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:soc]
[4.3321s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:soh]
[4.33242s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:soh]
[4.33287s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/rack_9:status]
[4.33322s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/rack_9:status]
[4.33472s  ] [info    ] [runConfig      ]  requesting cfile [pe_pcs_init] 
[4.33522s  ] [info    ] [requestCfile   ] Getting from DBI pe_pcs_init
[4.42211s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:pe_pcs_init]  am at start [no Am]
[4.42332s  ] [info    ] [configure_vmapS] process file seeking header stuff am [pcs] ai [no ai]
[4.42393s  ] [info    ] [configure_vmapS] body: {"/config/load":{"pe_pcs_init":{"aname":"pcs","file":"pe_pcs_init","new_options":[{"amname":"pcs","from":1,"pname":"ess","reps":[{"replace":"##PCS_ID##","with":"pcs_{:01d}"},{"replace":"##PCS_NUM##","with":"{:01d}"},{"replace":"##BMS_ID##","with":"bms_{:01d}"},{"replace":"##ESS_ID##","with":"ess_{:01d}"}],"tmpls":["pe_pcs_manager","pe_pcs_manager_controls","pe_pcs_manager_faults","pe_pcs_manager_client_interface","pe_pcs_manager_server_interface","pe_pcs_manager_ui"],"to":1},{"ainame":"##MODULE_ID##","from":1,"pname":"pcs","reps":[{"replace":"##MODULE_ID##","with":"module_{:01d}"},{"replace":"##MODULE_NUM##","with":"{:01d}"}],"tmpls":["pe_pcs_module","pe_pcs_module_controls","pe_pcs_module_faults","pe_pcs_module_client_interface","pe_pcs_module_server_interface","pe_pcs_module_ui"],"to":6}],"note":"Loads pe_pcs_init first. Then, configs defined in new_options, if any, are loaded next","pname":"ess","value":false}}}
[4.42443s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[4.42577s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pe_pcs_init":	{
		"aname":	"pcs",
		"file":	"pe_pcs_init",
		"new_options":	[{
				"amname":	"pcs",
				"from":	1,
				"pname":	"ess",
				"reps":	[{
						"replace":	"##PCS_ID##",
						"with":	"pcs_{:01d}"
					}, {
						"replace":	"##PCS_NUM##",
						"with":	"{:01d}"
					}, {
						"replace":	"##BMS_ID##",
						"with":	"bms_{:01d}"
					}, {
						"replace":	"##ESS_ID##",
						"with":	"ess_{:01d}"
					}],
				"tmpls":	["pe_pcs_manager", "pe_pcs_manager_controls", "pe_pcs_manager_faults", "pe_pcs_manager_client_interface", "pe_pcs_manager_server_interface", "pe_pcs_manager_ui"],
				"to":	1
			}, {
				"ainame":	"##MODULE_ID##",
				"from":	1,
				"pname":	"pcs",
				"reps":	[{
						"replace":	"##MODULE_ID##",
						"with":	"module_{:01d}"
					}, {
						"replace":	"##MODULE_NUM##",
						"with":	"{:01d}"
					}],
				"tmpls":	["pe_pcs_module", "pe_pcs_module_controls", "pe_pcs_module_faults", "pe_pcs_module_client_interface", "pe_pcs_module_server_interface", "pe_pcs_module_ui"],
				"to":	6
			}],
		"note":	"Loads pe_pcs_init first. Then, configs defined in new_options, if any, are loaded next",
		"pname":	"ess",
		"value":	false
	}
}].
[4.57979s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_manager] try number [1] 
[4.58168s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_manager_client_interface] try number [1] 
[4.5831s   ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_manager_controls] try number [1] 
[4.58537s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_manager_faults] try number [1] 
[4.58697s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_manager_server_interface] try number [1] 
[4.5886s   ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_manager_ui] try number [1] 
[4.77936s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_module] try number [1] 
[4.7802s   ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_module_client_interface] try number [1] 
[4.7808s   ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_module_controls] try number [1] 
[4.78118s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_module_faults] try number [1] 
[4.78155s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_module_server_interface] try number [1] 
[4.78204s  ] [info    ] [runConfig      ]  requesting ctmpl [pe_pcs_module_ui] try number [1] 
[4.87948s  ] [info    ] [runConfig      ]  All files loaded for loader [pe_pcs_init] ready to run av [/config/load:pe_pcs_init] load
[4.8805s   ] [info    ] [configLoad     ] tmpls field is found in av [/config/load:pe_pcs_init]. We'll perform template expansions with tmpls instead of tmpl
[4.88117s  ] [info    ] [configLoad     ] tbody before: {"/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":4200,"RatedApparentPower":4200,"RatedPowerFactor":0.8,"RatedReactivePower":2100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"handlePowerCmd_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandlePowerCmd"}]}]},"bms":"bms","ess":"ess","note":"Processes active and reactive power commands before they are sent","pcs":"pcs","value":1},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"AvgLineVoltage":{"expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"},{"uri":"/status/pcs:NumModulesOnline@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"NumModulesTotal":6,"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:handlePowerCmd_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}}}
[4.88199s  ] [info    ] [configLoad     ] tbody now: "/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":4200,"RatedApparentPower":4200,"RatedPowerFactor":0.8,"RatedReactivePower":2100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"handlePowerCmd_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandlePowerCmd"}]}]},"bms":"bms","ess":"ess","note":"Processes active and reactive power commands before they are sent","pcs":"pcs","value":1},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"AvgLineVoltage":{"expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"},{"uri":"/status/pcs:NumModulesOnline@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"NumModulesTotal":6,"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:handlePowerCmd_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}}
[4.8828s   ] [info    ] [configLoad     ] pi's av tbody now: "/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":4200,"RatedApparentPower":4200,"RatedPowerFactor":0.8,"RatedReactivePower":2100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"handlePowerCmd_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandlePowerCmd"}]}]},"bms":"bms","ess":"ess","note":"Processes active and reactive power commands before they are sent","pcs":"pcs","value":1},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"AvgLineVoltage":{"expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"},{"uri":"/status/pcs:NumModulesOnline@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"NumModulesTotal":6,"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:handlePowerCmd_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:p_p_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_fast:reset","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:q_q_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}}
[4.8845s   ] [info    ] [configLoad     ] pi's av tbody now: "/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":4200,"RatedApparentPower":4200,"RatedPowerFactor":0.8,"RatedReactivePower":2100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"handlePowerCmd_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandlePowerCmd"}]}]},"bms":"bms","ess":"ess","note":"Processes active and reactive power commands before they are sent","pcs":"pcs","value":1},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"AvgLineVoltage":{"expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"},{"uri":"/status/pcs:NumModulesOnline@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"NumModulesTotal":6,"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:handlePowerCmd_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:p_p_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_fast:reset","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:q_q_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}},"/alarms/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"alarm","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/faults/pcs":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_faults[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"fault","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/schedule/wake_monitor/pcs":{"/status/pcs:ActivePower":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:DCVoltage":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:HeartbeatRead":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:IsAlarming":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:IsFaulted":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:NumModulesOnline":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:TotalAlarmCnt":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalFaultCnt":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":4200,"MaxAlarmTimeout":1,"MaxFaultThreshold":4250,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":false,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs:SystemFault","variable2":"/status/pcs:TotalFaultCnt"},"NumModulesOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalAlarmCnt","variable2":"/status/pcs:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalFaultCnt","variable2":"/status/pcs:FaultCnt"}}
[4.88576s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":4200,"RatedApparentPower":4200,"RatedPowerFactor":0.8,"RatedReactivePower":2100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"handlePowerCmd_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandlePowerCmd"}]}]},"bms":"bms","ess":"ess","note":"Processes active and reactive power commands before they are sent","pcs":"pcs","value":1},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"AvgLineVoltage":{"expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"},{"uri":"/status/pcs:NumModulesOnline@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"NumModulesTotal":6,"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:handlePowerCmd_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:p_p_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_fast:reset","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:q_q_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}},"/alarms/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"alarm","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/faults/pcs":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_faults[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"fault","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/schedule/wake_monitor/pcs":{"/status/pcs:ActivePower":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:DCVoltage":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:HeartbeatRead":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:IsAlarming":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:IsFaulted":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:NumModulesOnline":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:TotalAlarmCnt":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalFaultCnt":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":4200,"MaxAlarmTimeout":1,"MaxFaultThreshold":4250,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":false,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs:SystemFault","variable2":"/status/pcs:TotalFaultCnt"},"NumModulesOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalAlarmCnt","variable2":"/status/pcs:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalFaultCnt","variable2":"/status/pcs:FaultCnt"}},"/components/pcs_registers_fast":{"current_status":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":1,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":2,"outValue":"Run","uri":"/status/pcs:SystemState"},{"inValue":3,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":4,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":5,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":6,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":8,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":9,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":10,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":11,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":12,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":13,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":14,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":15,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":17,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":18,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":19,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":20,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":21,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":22,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":24,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":0,"outValue":"Power up","uri":"/status/pcs:Status"},{"inValue":1,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":2,"outValue":"On","uri":"/status/pcs:Status"},{"inValue":3,"outValue":"Precharge","uri":"/status/pcs:Status"},{"inValue":4,"outValue":"Ready","uri":"/status/pcs:Status"},{"inValue":5,"outValue":"Wait","uri":"/status/pcs:Status"},{"inValue":6,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:Status"},{"inValue":8,"outValue":"Discharge","uri":"/status/pcs:Status"},{"inValue":9,"outValue":"Fault","uri":"/status/pcs:Status"},{"inValue":10,"outValue":"LVRT","uri":"/status/pcs:Status"},{"inValue":11,"outValue":"OVRT","uri":"/status/pcs:Status"},{"inValue":12,"outValue":"Night","uri":"/status/pcs:Status"},{"inValue":13,"outValue":"Night DC off","uri":"/status/pcs:Status"},{"inValue":14,"outValue":"Standby","uri":"/status/pcs:Status"},{"inValue":15,"outValue":"HVPL","uri":"/status/pcs:Status"},{"inValue":17,"outValue":"Pre-on","uri":"/status/pcs:Status"},{"inValue":18,"outValue":"Self-diagnosis","uri":"/status/pcs:Status"},{"inValue":19,"outValue":"Filter contactors","uri":"/status/pcs:Status"},{"inValue":20,"outValue":"Premagnetization","uri":"/status/pcs:Status"},{"inValue":21,"outValue":"Bank balancing","uri":"/status/pcs:Status"},{"inValue":22,"outValue":"CV stand by","uri":"/status/pcs:Status"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs_registers_fast:current_status@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/pcs":{"checkInputs_pcs":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/pcs_registers_fast:current_status@ifChanged"}]}]},"enable":"/config/pcs:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/pcs":{"active_power":{"value":"/components/pcs_registers_fast:active_power","vlink":"/status/pcs:ActivePower"},"active_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:p_p_reference","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"apparent_power":{"value":"/components/pcs_registers_fast:apparent_power","vlink":"/status/pcs:ApparentPower"},"frequency":{"value":"/components/pcs_registers_fast:grid_frequency","vlink":"/status/pcs:Frequency"},"heartbeat_read":{"value":"/components/pcs_registers_fast:seconds","vlink":"/status/pcs:HeartbeatRead"},"l1_current":{"value":"/components/pcs_registers_fast:grid_current_1","vlink":"/status/pcs:L1Current"},"l1_l2_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_rs","vlink":"/status/pcs:L1L2Voltage"},"l2_current":{"value":"/components/pcs_registers_fast:grid_current_2","vlink":"/status/pcs:L2Current"},"l2_l3_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_st","vlink":"/status/pcs:L2L3Voltage"},"l3_current":{"value":"/components/pcs_registers_fast:grid_current_3","vlink":"/status/pcs:L3Current"},"l3_l1_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_tr","vlink":"/status/pcs:L3L1Voltage"},"modules_online":{"value":"/components/pcs_registers_fast:num_running_modules","vlink":"/status/pcs:NumModulesOnline"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:dc_total_i_input","vlink":"/status/pcs:DCCurrent"},"pcs_dc_power":{"value":"/components/pcs_registers_fast:dc_p_input","vlink":"/status/pcs:DCPower"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:vdc_bus_1","vlink":"/status/pcs:DCVoltage"},"power_factor":{"value":"/components/pcs_registers_fast:cosphi","vlink":"/status/pcs:PowerFactor"},"reactive_power":{"value":"/components/pcs_registers_fast:reactive_power","vlink":"/status/pcs:ReactivePower"},"reactive_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:q_q_reference","vlink":"/status/pcs:ReactivePowerSetpointFeedback"}}
[4.88778s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":4200,"RatedApparentPower":4200,"RatedPowerFactor":0.8,"RatedReactivePower":2100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"handlePowerCmd_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandlePowerCmd"}]}]},"bms":"bms","ess":"ess","note":"Processes active and reactive power commands before they are sent","pcs":"pcs","value":1},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"AvgLineVoltage":{"expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"},{"uri":"/status/pcs:NumModulesOnline@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"NumModulesTotal":6,"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:handlePowerCmd_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:p_p_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_fast:reset","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:q_q_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}},"/alarms/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"alarm","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/faults/pcs":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_faults[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"fault","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/schedule/wake_monitor/pcs":{"/status/pcs:ActivePower":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:DCVoltage":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:HeartbeatRead":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:IsAlarming":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:IsFaulted":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:NumModulesOnline":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:TotalAlarmCnt":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalFaultCnt":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":4200,"MaxAlarmTimeout":1,"MaxFaultThreshold":4250,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":false,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs:SystemFault","variable2":"/status/pcs:TotalFaultCnt"},"NumModulesOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalAlarmCnt","variable2":"/status/pcs:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalFaultCnt","variable2":"/status/pcs:FaultCnt"}},"/components/pcs_registers_fast":{"current_status":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":1,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":2,"outValue":"Run","uri":"/status/pcs:SystemState"},{"inValue":3,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":4,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":5,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":6,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":8,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":9,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":10,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":11,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":12,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":13,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":14,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":15,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":17,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":18,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":19,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":20,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":21,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":22,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":24,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":0,"outValue":"Power up","uri":"/status/pcs:Status"},{"inValue":1,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":2,"outValue":"On","uri":"/status/pcs:Status"},{"inValue":3,"outValue":"Precharge","uri":"/status/pcs:Status"},{"inValue":4,"outValue":"Ready","uri":"/status/pcs:Status"},{"inValue":5,"outValue":"Wait","uri":"/status/pcs:Status"},{"inValue":6,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:Status"},{"inValue":8,"outValue":"Discharge","uri":"/status/pcs:Status"},{"inValue":9,"outValue":"Fault","uri":"/status/pcs:Status"},{"inValue":10,"outValue":"LVRT","uri":"/status/pcs:Status"},{"inValue":11,"outValue":"OVRT","uri":"/status/pcs:Status"},{"inValue":12,"outValue":"Night","uri":"/status/pcs:Status"},{"inValue":13,"outValue":"Night DC off","uri":"/status/pcs:Status"},{"inValue":14,"outValue":"Standby","uri":"/status/pcs:Status"},{"inValue":15,"outValue":"HVPL","uri":"/status/pcs:Status"},{"inValue":17,"outValue":"Pre-on","uri":"/status/pcs:Status"},{"inValue":18,"outValue":"Self-diagnosis","uri":"/status/pcs:Status"},{"inValue":19,"outValue":"Filter contactors","uri":"/status/pcs:Status"},{"inValue":20,"outValue":"Premagnetization","uri":"/status/pcs:Status"},{"inValue":21,"outValue":"Bank balancing","uri":"/status/pcs:Status"},{"inValue":22,"outValue":"CV stand by","uri":"/status/pcs:Status"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs_registers_fast:current_status@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/pcs":{"checkInputs_pcs":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/pcs_registers_fast:current_status@ifChanged"}]}]},"enable":"/config/pcs:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/pcs":{"active_power":{"value":"/components/pcs_registers_fast:active_power","vlink":"/status/pcs:ActivePower"},"active_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:p_p_reference","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"apparent_power":{"value":"/components/pcs_registers_fast:apparent_power","vlink":"/status/pcs:ApparentPower"},"frequency":{"value":"/components/pcs_registers_fast:grid_frequency","vlink":"/status/pcs:Frequency"},"heartbeat_read":{"value":"/components/pcs_registers_fast:seconds","vlink":"/status/pcs:HeartbeatRead"},"l1_current":{"value":"/components/pcs_registers_fast:grid_current_1","vlink":"/status/pcs:L1Current"},"l1_l2_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_rs","vlink":"/status/pcs:L1L2Voltage"},"l2_current":{"value":"/components/pcs_registers_fast:grid_current_2","vlink":"/status/pcs:L2Current"},"l2_l3_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_st","vlink":"/status/pcs:L2L3Voltage"},"l3_current":{"value":"/components/pcs_registers_fast:grid_current_3","vlink":"/status/pcs:L3Current"},"l3_l1_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_tr","vlink":"/status/pcs:L3L1Voltage"},"modules_online":{"value":"/components/pcs_registers_fast:num_running_modules","vlink":"/status/pcs:NumModulesOnline"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:dc_total_i_input","vlink":"/status/pcs:DCCurrent"},"pcs_dc_power":{"value":"/components/pcs_registers_fast:dc_p_input","vlink":"/status/pcs:DCPower"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:vdc_bus_1","vlink":"/status/pcs:DCVoltage"},"power_factor":{"value":"/components/pcs_registers_fast:cosphi","vlink":"/status/pcs:PowerFactor"},"reactive_power":{"value":"/components/pcs_registers_fast:reactive_power","vlink":"/status/pcs:ReactivePower"},"reactive_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:q_q_reference","vlink":"/status/pcs:ReactivePowerSetpointFeedback"}},"/site/ess":{"active_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enable":"/config/pcs:enable","name":"Active Power Ramp Rate","note":"Sets the active power ramp rate","type":"control","units":"kW/s","value":0},"active_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Active Power Setpoint","note":"Sets the active power setpoint","signed":true,"type":"control","units":"kW","value":0},"frequency_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","name":"Frequency Setpoint","note":"Sets the frequency setpoint","type":"control","units":"Hz","value":0},"on_off_grid_mode_setting":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":1,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":1,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"},{"inValue":2,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":2,"outValue":2,"uri":"/controls/pcs:GridFormVF"},{"inValue":3,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":3,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"name":"Grid-following/forming Mode Command","note":"Initiates PCS grid-following/forming command routines","type":"control","value":0},"pcs_active_power":{"name":"PCS Active Power","signed":true,"type":"status","units":"kW","value":0},"pcs_active_power_ramp_rate_feedback":{"name":"PCS Active Power Ramp Rate Feedback","type":"status","units":"kW/s","value":0},"pcs_active_power_setpoint_feedback":{"name":"PCS Active Power Setpoint Feedback","signed":true,"type":"status","units":"kW","value":0},"pcs_alarm_active":{"name":"PCS Alarm Active","type":"status","value":false},"pcs_apparent_power":{"name":"PCS Apparent Power","signed":true,"type":"status","units":"kVA","value":0},"pcs_avg_line_voltage":{"name":"PCS Average Line Voltage","type":"status","units":"V","value":0},"pcs_comms_ok":{"name":"PCS Comms OK","type":"status","value":false},"pcs_control_alarms":{"bit0":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit10":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit11":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit12":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit13":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit14":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","bit15":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","bit16":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","bit17":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","bit18":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit19":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit2":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit20":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","bit21":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","bit22":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","bit23":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","bit24":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit4":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit5":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit6":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit7":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit8":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit9":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","name":"PCS Control Alarms","type":"bitfield","value":0},"pcs_dc_current":{"name":"PCS DC Current","scale":10,"signed":true,"type":"status","units":"A","value":0},"pcs_dc_power":{"name":"PCS DC Power","scale":10,"signed":true,"type":"status","units":"kW","value":0},"pcs_dc_voltage":{"name":"PCS DC Voltage","scale":10,"signed":true,"type":"status","units":"V","value":0},"pcs_fault_active":{"name":"PCS Fault Active","type":"status","value":false},"pcs_frequency":{"name":"PCS Grid Frequency","scale":100,"type":"status","units":"Hz","value":0},"pcs_frequency_setpoint_feedback":{"name":"PCS Frequency Setpoint Feedback","type":"status","units":"Hz","value":0},"pcs_grid_mode":{"bit0":"FollowPQ","bit1":"FormVF","bit2":"FormVSG","name":"PCS Grid Mode","type":"bitfield","value":0},"pcs_is_running":{"name":"PCS is Running","type":"status","value":false},"pcs_l1_current":{"name":"PCS Grid Current 1","scale":10,"type":"status","units":"A","value":0},"pcs_l1_l2_voltage":{"name":"PCS Grid Voltage L1-L2","type":"status","units":"V","value":0},"pcs_l2_current":{"name":"PCS Grid Current 2","scale":10,"type":"status","units":"A","value":0},"pcs_l2_l3_voltage":{"name":"PCS Grid Voltage L2-L3","type":"status","units":"V","value":0},"pcs_l3_current":{"name":"PCS Grid Current 3","scale":10,"type":"status","units":"A","value":0},"pcs_l3_l1_voltage":{"name":"PCS Grid Voltage L3-L1","type":"status","units":"V","value":0},"pcs_max_charge_power":{"name":"PCS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"pcs_max_discharge_power":{"name":"PCS Max Discharge Power","type":"status","units":"kW","value":0},"pcs_max_igbt_temperature":{"name":"PCS Max IGBT Temperature","scale":100,"type":"status","units":"°C","value":0},"pcs_monitor_alarms":{"bit0":"PCS Active Power Max Threshold Exceeded","bit1":"PCS DC Voltage Max Threshold Exceeded","bit2":"PCS DC Voltage Min Threshold Exceeded","bit3":"PCS Number of Modules Online Below Min Threshold","name":"PCS Monitor Alarms","type":"bitfield","value":0},"pcs_monitor_faults":{"bit0":"PCS Active Power Max Threshold Exceeded","bit1":"PCS DC Voltage Max Threshold Exceeded","bit2":"PCS DC Voltage Min Threshold Exceeded","bit3":"PCS Number of Modules Online Below Min Threshold","name":"PCS Monitor Faults","type":"bitfield","value":0},"pcs_num_modules_online":{"name":"PCS Number of Modules Online","type":"status","value":0},"pcs_num_modules_total":{"name":"PCS Number of Modules Total","type":"status","value":0},"pcs_power_factor":{"name":"PCS Power Factor","scale":1000,"signed":true,"type":"status","value":0},"pcs_rated_active_power":{"name":"PCS Rated Active Power","signed":true,"type":"status","units":"kW","value":0},"pcs_rated_apparent_power":{"name":"PCS Rated Apparent Power","signed":true,"type":"status","units":"kVA","value":0},"pcs_rated_reactive_power":{"name":"PCS Rated Reactive Power","signed":true,"type":"status","units":"kVAR","value":0},"pcs_reactive_power":{"name":"PCS Reactive Power","signed":true,"type":"status","units":"kVAR","value":0},"pcs_reactive_power_ramp_rate_feedback":{"name":"PCS Reactive Power Ramp Rate Feedback","type":"status","units":"kVAR/s","value":0},"pcs_reactive_power_setpoint_feedback":{"name":"PCS Reactive Power Setpoint Feedback","signed":true,"type":"status","units":"kVAR","value":0},"pcs_standby_enabled":{"excludeFromFile":true,"name":"PCS Standby Enabled","type":"status","value":false},"pcs_start_enabled":{"excludeFromFile":true,"name":"PCS Start Enabled","type":"status","value":false},"pcs_status":{"excludeFromFile":true,"name":"PCS Status","type":"status","value":"INIT"},"pcs_stop_enabled":{"excludeFromFile":true,"name":"PCS Stop Enabled","type":"status","value":false},"pcs_system_state":{"bit0":"Stop","bit1":"Run","bit2":"Fault","bit3":"Standby","name":"PCS System State","type":"bitfield","value":0},"pcs_voltage_setpoint_feedback":{"name":"PCS Voltage Setpoint Feedback","type":"status","units":"V","value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enable":"/config/pcs:enable","name":"Reactive Power Ramp Rate","note":"Sets the reactive power ramp rate","type":"control","units":"kVAR/s","value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Reactive Power Setpoint","note":"Sets the reactive power setpoint","signed":true,"type":"control","units":"kVAR","value":0},"start_stop_standby_command":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/pcs:enable","every":0.5,"ifChanged":false,"name":"Start/Stop/Standby Command","note1":"Initiates PCS start, standby, or stop command routines","note2":"0-\u003estop | 1-\u003estart | 2-\u003estandby","offset":0,"size":1,"type":"control","uri":"/sched/ess:SitePCSStatusControl","value":-1},"voltage_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Voltage Setpoint","note":"Sets the voltage setpoint","type":"control","units":"V","value":0}},"/vlinks/pcs":{"site_pcs_active_power":{"value":"/site/ess:pcs_active_power","vlink":"/status/pcs:ActivePower"},"site_pcs_active_power_ramp_rate_feedback":{"value":"/site/ess:pcs_active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"site_pcs_active_power_setpoint_feedback":{"value":"/site/ess:pcs_active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"site_pcs_alarm_active":{"value":"/site/ess:pcs_alarm_active","vlink":"/status/pcs:IsAlarming"},"site_pcs_apparent_power":{"value":"/site/ess:pcs_apparent_power","vlink":"/status/pcs:ApparentPower"},"site_pcs_avg_line_voltage":{"value":"/site/ess:pcs_avg_line_voltage","vlink":"/status/pcs:AvgLineVoltage"},"site_pcs_comms_ok":{"value":"/site/ess:pcs_comms_ok","vlink":"/status/pcs:CommsOK"},"site_pcs_dc_current":{"value":"/site/ess:pcs_dc_current","vlink":"/status/pcs:DCCurrent"},"site_pcs_dc_power":{"value":"/site/ess:pcs_dc_power","vlink":"/status/pcs:DCPower"},"site_pcs_dc_voltage":{"value":"/site/ess:pcs_dc_voltage","vlink":"/status/pcs:DCVoltage"},"site_pcs_fault_active":{"value":"/site/ess:pcs_fault_active","vlink":"/status/pcs:IsFaulted"},"site_pcs_frequency":{"value":"/site/ess:pcs_frequency","vlink":"/status/pcs:Frequency"},"site_pcs_frequency_setpoint_feedback":{"value":"/site/ess:pcs_frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"site_pcs_is_running":{"value":"/site/ess:pcs_is_running","vlink":"/status/pcs:IsRunning"},"site_pcs_l1_current":{"value":"/site/ess:pcs_l1_current","vlink":"/status/pcs:L1Current"},"site_pcs_l1_l2_voltage":{"value":"/site/ess:pcs_l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"site_pcs_l2_current":{"value":"/site/ess:pcs_l2_current","vlink":"/status/pcs:L2Current"},"site_pcs_l2_l3_voltage":{"value":"/site/ess:pcs_l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"site_pcs_l3_current":{"value":"/site/ess:pcs_l3_current","vlink":"/status/pcs:L3Current"},"site_pcs_l3_l1_voltage":{"value":"/site/ess:pcs_l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"site_pcs_max_charge_power":{"value":"/site/ess:pcs_max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"site_pcs_max_discharge_power":{"value":"/site/ess:pcs_max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"site_pcs_max_igbt_temperature":{"value":"/site/ess:pcs_max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"site_pcs_num_modules_online":{"value":"/site/ess:pcs_num_modules_online","vlink":"/status/pcs:NumModulesOnline"},"site_pcs_num_modules_total":{"value":"/site/ess:pcs_num_modules_total","vlink":"/status/pcs:NumModulesTotal"},"site_pcs_power_factor":{"value":"/site/ess:pcs_power_factor","vlink":"/status/pcs:PowerFactor"},"site_pcs_rated_active_power":{"value":"/site/ess:pcs_rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"site_pcs_rated_apparent_power":{"value":"/site/ess:pcs_rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"site_pcs_rated_reactive_power":{"value":"/site/ess:pcs_rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"site_pcs_reactive_power":{"value":"/site/ess:pcs_reactive_power","vlink":"/status/pcs:ReactivePower"},"site_pcs_reactive_power_ramp_rate_feedback":{"value":"/site/ess:pcs_reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"site_pcs_reactive_power_setpoint_feedback":{"value":"/site/ess:pcs_reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"site_pcs_standby_enabled":{"value":"/site/ess:pcs_standby_enabled","vlink":"/status/pcs:StandbyEnabled"},"site_pcs_start_enabled":{"value":"/site/ess:pcs_start_enabled","vlink":"/status/pcs:StartEnabled"},"site_pcs_status":{"value":"/site/ess:pcs_status","vlink":"/status/pcs:Status"},"site_pcs_stop_enabled":{"value":"/site/ess:pcs_stop_enabled","vlink":"/status/pcs:StopEnabled"},"site_pcs_voltage_setpoint_feedback":{"value":"/site/ess:pcs_voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}}
[4.88999s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":4200,"RatedApparentPower":4200,"RatedPowerFactor":0.8,"RatedReactivePower":2100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"handlePowerCmd_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandlePowerCmd"}]}]},"bms":"bms","ess":"ess","note":"Processes active and reactive power commands before they are sent","pcs":"pcs","value":1},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"AvgLineVoltage":{"expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"},{"uri":"/status/pcs:NumModulesOnline@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"NumModulesTotal":6,"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:handlePowerCmd_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:p_p_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_fast:reset","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:q_q_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}},"/alarms/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"alarm","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/faults/pcs":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_faults[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"fault","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/schedule/wake_monitor/pcs":{"/status/pcs:ActivePower":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:DCVoltage":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:HeartbeatRead":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:IsAlarming":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:IsFaulted":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:NumModulesOnline":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:TotalAlarmCnt":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalFaultCnt":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":4200,"MaxAlarmTimeout":1,"MaxFaultThreshold":4250,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":false,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs:SystemFault","variable2":"/status/pcs:TotalFaultCnt"},"NumModulesOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalAlarmCnt","variable2":"/status/pcs:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalFaultCnt","variable2":"/status/pcs:FaultCnt"}},"/components/pcs_registers_fast":{"current_status":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":1,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":2,"outValue":"Run","uri":"/status/pcs:SystemState"},{"inValue":3,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":4,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":5,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":6,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":8,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":9,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":10,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":11,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":12,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":13,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":14,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":15,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":17,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":18,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":19,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":20,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":21,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":22,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":24,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":0,"outValue":"Power up","uri":"/status/pcs:Status"},{"inValue":1,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":2,"outValue":"On","uri":"/status/pcs:Status"},{"inValue":3,"outValue":"Precharge","uri":"/status/pcs:Status"},{"inValue":4,"outValue":"Ready","uri":"/status/pcs:Status"},{"inValue":5,"outValue":"Wait","uri":"/status/pcs:Status"},{"inValue":6,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:Status"},{"inValue":8,"outValue":"Discharge","uri":"/status/pcs:Status"},{"inValue":9,"outValue":"Fault","uri":"/status/pcs:Status"},{"inValue":10,"outValue":"LVRT","uri":"/status/pcs:Status"},{"inValue":11,"outValue":"OVRT","uri":"/status/pcs:Status"},{"inValue":12,"outValue":"Night","uri":"/status/pcs:Status"},{"inValue":13,"outValue":"Night DC off","uri":"/status/pcs:Status"},{"inValue":14,"outValue":"Standby","uri":"/status/pcs:Status"},{"inValue":15,"outValue":"HVPL","uri":"/status/pcs:Status"},{"inValue":17,"outValue":"Pre-on","uri":"/status/pcs:Status"},{"inValue":18,"outValue":"Self-diagnosis","uri":"/status/pcs:Status"},{"inValue":19,"outValue":"Filter contactors","uri":"/status/pcs:Status"},{"inValue":20,"outValue":"Premagnetization","uri":"/status/pcs:Status"},{"inValue":21,"outValue":"Bank balancing","uri":"/status/pcs:Status"},{"inValue":22,"outValue":"CV stand by","uri":"/status/pcs:Status"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs_registers_fast:current_status@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/pcs":{"checkInputs_pcs":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/pcs_registers_fast:current_status@ifChanged"}]}]},"enable":"/config/pcs:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/pcs":{"active_power":{"value":"/components/pcs_registers_fast:active_power","vlink":"/status/pcs:ActivePower"},"active_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:p_p_reference","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"apparent_power":{"value":"/components/pcs_registers_fast:apparent_power","vlink":"/status/pcs:ApparentPower"},"frequency":{"value":"/components/pcs_registers_fast:grid_frequency","vlink":"/status/pcs:Frequency"},"heartbeat_read":{"value":"/components/pcs_registers_fast:seconds","vlink":"/status/pcs:HeartbeatRead"},"l1_current":{"value":"/components/pcs_registers_fast:grid_current_1","vlink":"/status/pcs:L1Current"},"l1_l2_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_rs","vlink":"/status/pcs:L1L2Voltage"},"l2_current":{"value":"/components/pcs_registers_fast:grid_current_2","vlink":"/status/pcs:L2Current"},"l2_l3_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_st","vlink":"/status/pcs:L2L3Voltage"},"l3_current":{"value":"/components/pcs_registers_fast:grid_current_3","vlink":"/status/pcs:L3Current"},"l3_l1_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_tr","vlink":"/status/pcs:L3L1Voltage"},"modules_online":{"value":"/components/pcs_registers_fast:num_running_modules","vlink":"/status/pcs:NumModulesOnline"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:dc_total_i_input","vlink":"/status/pcs:DCCurrent"},"pcs_dc_power":{"value":"/components/pcs_registers_fast:dc_p_input","vlink":"/status/pcs:DCPower"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:vdc_bus_1","vlink":"/status/pcs:DCVoltage"},"power_factor":{"value":"/components/pcs_registers_fast:cosphi","vlink":"/status/pcs:PowerFactor"},"reactive_power":{"value":"/components/pcs_registers_fast:reactive_power","vlink":"/status/pcs:ReactivePower"},"reactive_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:q_q_reference","vlink":"/status/pcs:ReactivePowerSetpointFeedback"}},"/site/ess":{"active_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enable":"/config/pcs:enable","name":"Active Power Ramp Rate","note":"Sets the active power ramp rate","type":"control","units":"kW/s","value":0},"active_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Active Power Setpoint","note":"Sets the active power setpoint","signed":true,"type":"control","units":"kW","value":0},"frequency_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","name":"Frequency Setpoint","note":"Sets the frequency setpoint","type":"control","units":"Hz","value":0},"on_off_grid_mode_setting":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":1,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":1,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"},{"inValue":2,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":2,"outValue":2,"uri":"/controls/pcs:GridFormVF"},{"inValue":3,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":3,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"name":"Grid-following/forming Mode Command","note":"Initiates PCS grid-following/forming command routines","type":"control","value":0},"pcs_active_power":{"name":"PCS Active Power","signed":true,"type":"status","units":"kW","value":0},"pcs_active_power_ramp_rate_feedback":{"name":"PCS Active Power Ramp Rate Feedback","type":"status","units":"kW/s","value":0},"pcs_active_power_setpoint_feedback":{"name":"PCS Active Power Setpoint Feedback","signed":true,"type":"status","units":"kW","value":0},"pcs_alarm_active":{"name":"PCS Alarm Active","type":"status","value":false},"pcs_apparent_power":{"name":"PCS Apparent Power","signed":true,"type":"status","units":"kVA","value":0},"pcs_avg_line_voltage":{"name":"PCS Average Line Voltage","type":"status","units":"V","value":0},"pcs_comms_ok":{"name":"PCS Comms OK","type":"status","value":false},"pcs_control_alarms":{"bit0":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit10":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit11":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit12":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit13":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit14":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","bit15":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","bit16":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","bit17":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","bit18":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit19":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit2":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit20":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","bit21":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","bit22":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","bit23":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","bit24":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit4":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit5":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit6":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit7":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit8":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit9":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","name":"PCS Control Alarms","type":"bitfield","value":0},"pcs_dc_current":{"name":"PCS DC Current","scale":10,"signed":true,"type":"status","units":"A","value":0},"pcs_dc_power":{"name":"PCS DC Power","scale":10,"signed":true,"type":"status","units":"kW","value":0},"pcs_dc_voltage":{"name":"PCS DC Voltage","scale":10,"signed":true,"type":"status","units":"V","value":0},"pcs_fault_active":{"name":"PCS Fault Active","type":"status","value":false},"pcs_frequency":{"name":"PCS Grid Frequency","scale":100,"type":"status","units":"Hz","value":0},"pcs_frequency_setpoint_feedback":{"name":"PCS Frequency Setpoint Feedback","type":"status","units":"Hz","value":0},"pcs_grid_mode":{"bit0":"FollowPQ","bit1":"FormVF","bit2":"FormVSG","name":"PCS Grid Mode","type":"bitfield","value":0},"pcs_is_running":{"name":"PCS is Running","type":"status","value":false},"pcs_l1_current":{"name":"PCS Grid Current 1","scale":10,"type":"status","units":"A","value":0},"pcs_l1_l2_voltage":{"name":"PCS Grid Voltage L1-L2","type":"status","units":"V","value":0},"pcs_l2_current":{"name":"PCS Grid Current 2","scale":10,"type":"status","units":"A","value":0},"pcs_l2_l3_voltage":{"name":"PCS Grid Voltage L2-L3","type":"status","units":"V","value":0},"pcs_l3_current":{"name":"PCS Grid Current 3","scale":10,"type":"status","units":"A","value":0},"pcs_l3_l1_voltage":{"name":"PCS Grid Voltage L3-L1","type":"status","units":"V","value":0},"pcs_max_charge_power":{"name":"PCS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"pcs_max_discharge_power":{"name":"PCS Max Discharge Power","type":"status","units":"kW","value":0},"pcs_max_igbt_temperature":{"name":"PCS Max IGBT Temperature","scale":100,"type":"status","units":"°C","value":0},"pcs_monitor_alarms":{"bit0":"PCS Active Power Max Threshold Exceeded","bit1":"PCS DC Voltage Max Threshold Exceeded","bit2":"PCS DC Voltage Min Threshold Exceeded","bit3":"PCS Number of Modules Online Below Min Threshold","name":"PCS Monitor Alarms","type":"bitfield","value":0},"pcs_monitor_faults":{"bit0":"PCS Active Power Max Threshold Exceeded","bit1":"PCS DC Voltage Max Threshold Exceeded","bit2":"PCS DC Voltage Min Threshold Exceeded","bit3":"PCS Number of Modules Online Below Min Threshold","name":"PCS Monitor Faults","type":"bitfield","value":0},"pcs_num_modules_online":{"name":"PCS Number of Modules Online","type":"status","value":0},"pcs_num_modules_total":{"name":"PCS Number of Modules Total","type":"status","value":0},"pcs_power_factor":{"name":"PCS Power Factor","scale":1000,"signed":true,"type":"status","value":0},"pcs_rated_active_power":{"name":"PCS Rated Active Power","signed":true,"type":"status","units":"kW","value":0},"pcs_rated_apparent_power":{"name":"PCS Rated Apparent Power","signed":true,"type":"status","units":"kVA","value":0},"pcs_rated_reactive_power":{"name":"PCS Rated Reactive Power","signed":true,"type":"status","units":"kVAR","value":0},"pcs_reactive_power":{"name":"PCS Reactive Power","signed":true,"type":"status","units":"kVAR","value":0},"pcs_reactive_power_ramp_rate_feedback":{"name":"PCS Reactive Power Ramp Rate Feedback","type":"status","units":"kVAR/s","value":0},"pcs_reactive_power_setpoint_feedback":{"name":"PCS Reactive Power Setpoint Feedback","signed":true,"type":"status","units":"kVAR","value":0},"pcs_standby_enabled":{"excludeFromFile":true,"name":"PCS Standby Enabled","type":"status","value":false},"pcs_start_enabled":{"excludeFromFile":true,"name":"PCS Start Enabled","type":"status","value":false},"pcs_status":{"excludeFromFile":true,"name":"PCS Status","type":"status","value":"INIT"},"pcs_stop_enabled":{"excludeFromFile":true,"name":"PCS Stop Enabled","type":"status","value":false},"pcs_system_state":{"bit0":"Stop","bit1":"Run","bit2":"Fault","bit3":"Standby","name":"PCS System State","type":"bitfield","value":0},"pcs_voltage_setpoint_feedback":{"name":"PCS Voltage Setpoint Feedback","type":"status","units":"V","value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enable":"/config/pcs:enable","name":"Reactive Power Ramp Rate","note":"Sets the reactive power ramp rate","type":"control","units":"kVAR/s","value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Reactive Power Setpoint","note":"Sets the reactive power setpoint","signed":true,"type":"control","units":"kVAR","value":0},"start_stop_standby_command":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/pcs:enable","every":0.5,"ifChanged":false,"name":"Start/Stop/Standby Command","note1":"Initiates PCS start, standby, or stop command routines","note2":"0-\u003estop | 1-\u003estart | 2-\u003estandby","offset":0,"size":1,"type":"control","uri":"/sched/ess:SitePCSStatusControl","value":-1},"voltage_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Voltage Setpoint","note":"Sets the voltage setpoint","type":"control","units":"V","value":0}},"/vlinks/pcs":{"site_pcs_active_power":{"value":"/site/ess:pcs_active_power","vlink":"/status/pcs:ActivePower"},"site_pcs_active_power_ramp_rate_feedback":{"value":"/site/ess:pcs_active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"site_pcs_active_power_setpoint_feedback":{"value":"/site/ess:pcs_active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"site_pcs_alarm_active":{"value":"/site/ess:pcs_alarm_active","vlink":"/status/pcs:IsAlarming"},"site_pcs_apparent_power":{"value":"/site/ess:pcs_apparent_power","vlink":"/status/pcs:ApparentPower"},"site_pcs_avg_line_voltage":{"value":"/site/ess:pcs_avg_line_voltage","vlink":"/status/pcs:AvgLineVoltage"},"site_pcs_comms_ok":{"value":"/site/ess:pcs_comms_ok","vlink":"/status/pcs:CommsOK"},"site_pcs_dc_current":{"value":"/site/ess:pcs_dc_current","vlink":"/status/pcs:DCCurrent"},"site_pcs_dc_power":{"value":"/site/ess:pcs_dc_power","vlink":"/status/pcs:DCPower"},"site_pcs_dc_voltage":{"value":"/site/ess:pcs_dc_voltage","vlink":"/status/pcs:DCVoltage"},"site_pcs_fault_active":{"value":"/site/ess:pcs_fault_active","vlink":"/status/pcs:IsFaulted"},"site_pcs_frequency":{"value":"/site/ess:pcs_frequency","vlink":"/status/pcs:Frequency"},"site_pcs_frequency_setpoint_feedback":{"value":"/site/ess:pcs_frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"site_pcs_is_running":{"value":"/site/ess:pcs_is_running","vlink":"/status/pcs:IsRunning"},"site_pcs_l1_current":{"value":"/site/ess:pcs_l1_current","vlink":"/status/pcs:L1Current"},"site_pcs_l1_l2_voltage":{"value":"/site/ess:pcs_l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"site_pcs_l2_current":{"value":"/site/ess:pcs_l2_current","vlink":"/status/pcs:L2Current"},"site_pcs_l2_l3_voltage":{"value":"/site/ess:pcs_l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"site_pcs_l3_current":{"value":"/site/ess:pcs_l3_current","vlink":"/status/pcs:L3Current"},"site_pcs_l3_l1_voltage":{"value":"/site/ess:pcs_l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"site_pcs_max_charge_power":{"value":"/site/ess:pcs_max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"site_pcs_max_discharge_power":{"value":"/site/ess:pcs_max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"site_pcs_max_igbt_temperature":{"value":"/site/ess:pcs_max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"site_pcs_num_modules_online":{"value":"/site/ess:pcs_num_modules_online","vlink":"/status/pcs:NumModulesOnline"},"site_pcs_num_modules_total":{"value":"/site/ess:pcs_num_modules_total","vlink":"/status/pcs:NumModulesTotal"},"site_pcs_power_factor":{"value":"/site/ess:pcs_power_factor","vlink":"/status/pcs:PowerFactor"},"site_pcs_rated_active_power":{"value":"/site/ess:pcs_rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"site_pcs_rated_apparent_power":{"value":"/site/ess:pcs_rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"site_pcs_rated_reactive_power":{"value":"/site/ess:pcs_rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"site_pcs_reactive_power":{"value":"/site/ess:pcs_reactive_power","vlink":"/status/pcs:ReactivePower"},"site_pcs_reactive_power_ramp_rate_feedback":{"value":"/site/ess:pcs_reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"site_pcs_reactive_power_setpoint_feedback":{"value":"/site/ess:pcs_reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"site_pcs_standby_enabled":{"value":"/site/ess:pcs_standby_enabled","vlink":"/status/pcs:StandbyEnabled"},"site_pcs_start_enabled":{"value":"/site/ess:pcs_start_enabled","vlink":"/status/pcs:StartEnabled"},"site_pcs_status":{"value":"/site/ess:pcs_status","vlink":"/status/pcs:Status"},"site_pcs_stop_enabled":{"value":"/site/ess:pcs_stop_enabled","vlink":"/status/pcs:StopEnabled"},"site_pcs_voltage_setpoint_feedback":{"value":"/site/ess:pcs_voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}},"/assets/pcs/summary":{"active_power":{"value":0},"active_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power ramp rate","value":0},"active_power_ramp_rate_feedback":{"value":0},"active_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power setpoint","value":0},"active_power_setpoint_feedback":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"comms_ok":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"frequency":{"value":0},"frequency_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the frequency setpoint while the PCS is in grid-forming (VF)","value":0},"frequency_setpoint_feedback":{"value":0},"grid_follow_pq":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":true,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-following","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vf":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":true,"outValue":2,"uri":"/controls/pcs:GridFormVF"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (voltage and frequency)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vsg":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":true,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (virtual synchronous generator)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_mode":{"value":"INIT"},"l1_current":{"value":0},"l1_l2_voltage":{"value":0},"l2_current":{"value":0},"l2_l3_voltage":{"value":0},"l3_current":{"value":0},"l3_l1_voltage":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/summary:clear_faults@enabled"},{"uri":"/assets/pcs/summary:active_power_ramp_rate@enabled"},{"uri":"/assets/pcs/summary:reactive_power_ramp_rate@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_charge_power":{"value":0},"max_discharge_power":{"value":0},"max_igbt_temperature":{"value":0},"num_modules_online":{"value":0},"num_modules_total":{"value":0},"power_factor":{"value":0},"rated_active_power":{"value":0},"rated_apparent_power":{"value":0},"rated_power_factor":{"value":0},"rated_reactive_power":{"value":0},"reactive_power":{"value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power ramp rate","value":0},"reactive_power_ramp_rate_feedback":{"value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power setpoint","value":0},"reactive_power_setpoint_feedback":{"value":0},"standby":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Standby PCS","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 [/assets/pcs/summary/maint_mode] \u0026\u0026 [/status/pcs/SystemState == (Stop || Run)]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStandbyPCS","value":false},"start":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Start PCS","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 [/assets/pcs/summary/maint_mode] \u0026\u0026 ![/status/pcs/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStartPCS","value":false},"status":{"value":"INIT"},"stop":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Stop PCS","note":"Enabled conditions: [/assets/pcs/summary/maint_mode] \u0026\u0026 [/status/pcs/SystemState != Stop]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStopPCS","value":false},"system_state":{"value":"INIT"},"voltage_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the voltage setpoint while the PCS is in grid-forming (VF)","value":0},"voltage_setpoint_feedback":{"value":0}},"/vlinks/pcs":{"ui_active_power":{"value":"/assets/pcs/summary:active_power","vlink":"/status/pcs:ActivePower"},"ui_active_power_ramp_rate_feedback":{"value":"/assets/pcs/summary:active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"ui_active_power_setpoint_feedback":{"value":"/assets/pcs/summary:active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"ui_apparent_power":{"value":"/assets/pcs/summary:apparent_power","vlink":"/status/pcs:ApparentPower"},"ui_comms_ok":{"value":"/assets/pcs/summary:comms_ok","vlink":"/status/pcs:CommsOK"},"ui_dc_current":{"value":"/assets/pcs/summary:dc_current","vlink":"/status/pcs:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/summary:dc_power","vlink":"/status/pcs:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/summary:dc_voltage","vlink":"/status/pcs:DCVoltage"},"ui_frequency":{"value":"/assets/pcs/summary:frequency","vlink":"/status/pcs:Frequency"},"ui_frequency_setpoint_feedback":{"value":"/assets/pcs/summary:frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"ui_grid_mode":{"value":"/assets/pcs/summary:grid_mode","vlink":"/status/pcs:GridMode"},"ui_l1_current":{"value":"/assets/pcs/summary:l1_current","vlink":"/status/pcs:L1Current"},"ui_l1_l2_voltage":{"value":"/assets/pcs/summary:l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"ui_l2_current":{"value":"/assets/pcs/summary:l2_current","vlink":"/status/pcs:L2Current"},"ui_l2_l3_voltage":{"value":"/assets/pcs/summary:l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"ui_l3_current":{"value":"/assets/pcs/summary:l3_current","vlink":"/status/pcs:L3Current"},"ui_l3_l1_voltage":{"value":"/assets/pcs/summary:l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"ui_max_charge_power":{"value":"/assets/pcs/summary:max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"ui_max_discharge_power":{"value":"/assets/pcs/summary:max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"ui_max_igbt_temperature":{"value":"/assets/pcs/summary:max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"ui_num_modules_online":{"value":"/assets/pcs/summary:num_modules_online","vlink":"/status/pcs:NumModulesOnline"},"ui_num_modules_total":{"value":"/assets/pcs/summary:num_modules_total","vlink":"/status/pcs:NumModulesTotal"},"ui_power_factor":{"value":"/assets/pcs/summary:power_factor","vlink":"/status/pcs:PowerFactor"},"ui_rated_active_power":{"value":"/assets/pcs/summary:rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"ui_rated_apparent_power":{"value":"/assets/pcs/summary:rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"ui_rated_power_factor":{"value":"/assets/pcs/summary:rated_power_factor","vlink":"/config/pcs:RatedPowerFactor"},"ui_rated_reactive_power":{"value":"/assets/pcs/summary:rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"ui_reactive_power":{"value":"/assets/pcs/summary:reactive_power","vlink":"/status/pcs:ReactivePower"},"ui_reactive_power_ramp_rate_feedback":{"value":"/assets/pcs/summary:reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"ui_reactive_power_setpoint_feedback":{"value":"/assets/pcs/summary:reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"ui_status":{"value":"/assets/pcs/summary:status","vlink":"/status/pcs:Status"},"ui_system_state":{"value":"/assets/pcs/summary:system_state","vlink":"/status/pcs:SystemState"},"ui_voltage_setpoint_feedback":{"value":"/assets/pcs/summary:voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}}
[4.89262s  ] [info    ] [configLoad     ] Final tbody: {"/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":4200,"RatedApparentPower":4200,"RatedPowerFactor":0.8,"RatedReactivePower":2100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"handlePowerCmd_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandlePowerCmd"}]}]},"bms":"bms","ess":"ess","note":"Processes active and reactive power commands before they are sent","pcs":"pcs","value":1},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"AvgLineVoltage":{"expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"},{"uri":"/status/pcs:NumModulesOnline@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"NumModulesTotal":6,"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:handlePowerCmd_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:p_p_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_fast:reset","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:q_q_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}},"/alarms/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"alarm","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/faults/pcs":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_faults[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"fault","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/schedule/wake_monitor/pcs":{"/status/pcs:ActivePower":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:DCVoltage":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:HeartbeatRead":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:IsAlarming":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:IsFaulted":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:NumModulesOnline":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:TotalAlarmCnt":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalFaultCnt":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":4200,"MaxAlarmTimeout":1,"MaxFaultThreshold":4250,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":false,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs:SystemFault","variable2":"/status/pcs:TotalFaultCnt"},"NumModulesOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalAlarmCnt","variable2":"/status/pcs:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalFaultCnt","variable2":"/status/pcs:FaultCnt"}},"/components/pcs_registers_fast":{"current_status":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":1,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":2,"outValue":"Run","uri":"/status/pcs:SystemState"},{"inValue":3,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":4,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":5,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":6,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":8,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":9,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":10,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":11,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":12,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":13,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":14,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":15,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":17,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":18,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":19,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":20,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":21,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":22,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":24,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":0,"outValue":"Power up","uri":"/status/pcs:Status"},{"inValue":1,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":2,"outValue":"On","uri":"/status/pcs:Status"},{"inValue":3,"outValue":"Precharge","uri":"/status/pcs:Status"},{"inValue":4,"outValue":"Ready","uri":"/status/pcs:Status"},{"inValue":5,"outValue":"Wait","uri":"/status/pcs:Status"},{"inValue":6,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:Status"},{"inValue":8,"outValue":"Discharge","uri":"/status/pcs:Status"},{"inValue":9,"outValue":"Fault","uri":"/status/pcs:Status"},{"inValue":10,"outValue":"LVRT","uri":"/status/pcs:Status"},{"inValue":11,"outValue":"OVRT","uri":"/status/pcs:Status"},{"inValue":12,"outValue":"Night","uri":"/status/pcs:Status"},{"inValue":13,"outValue":"Night DC off","uri":"/status/pcs:Status"},{"inValue":14,"outValue":"Standby","uri":"/status/pcs:Status"},{"inValue":15,"outValue":"HVPL","uri":"/status/pcs:Status"},{"inValue":17,"outValue":"Pre-on","uri":"/status/pcs:Status"},{"inValue":18,"outValue":"Self-diagnosis","uri":"/status/pcs:Status"},{"inValue":19,"outValue":"Filter contactors","uri":"/status/pcs:Status"},{"inValue":20,"outValue":"Premagnetization","uri":"/status/pcs:Status"},{"inValue":21,"outValue":"Bank balancing","uri":"/status/pcs:Status"},{"inValue":22,"outValue":"CV stand by","uri":"/status/pcs:Status"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs_registers_fast:current_status@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/pcs":{"checkInputs_pcs":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/pcs_registers_fast:current_status@ifChanged"}]}]},"enable":"/config/pcs:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/pcs":{"active_power":{"value":"/components/pcs_registers_fast:active_power","vlink":"/status/pcs:ActivePower"},"active_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:p_p_reference","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"apparent_power":{"value":"/components/pcs_registers_fast:apparent_power","vlink":"/status/pcs:ApparentPower"},"frequency":{"value":"/components/pcs_registers_fast:grid_frequency","vlink":"/status/pcs:Frequency"},"heartbeat_read":{"value":"/components/pcs_registers_fast:seconds","vlink":"/status/pcs:HeartbeatRead"},"l1_current":{"value":"/components/pcs_registers_fast:grid_current_1","vlink":"/status/pcs:L1Current"},"l1_l2_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_rs","vlink":"/status/pcs:L1L2Voltage"},"l2_current":{"value":"/components/pcs_registers_fast:grid_current_2","vlink":"/status/pcs:L2Current"},"l2_l3_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_st","vlink":"/status/pcs:L2L3Voltage"},"l3_current":{"value":"/components/pcs_registers_fast:grid_current_3","vlink":"/status/pcs:L3Current"},"l3_l1_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_tr","vlink":"/status/pcs:L3L1Voltage"},"modules_online":{"value":"/components/pcs_registers_fast:num_running_modules","vlink":"/status/pcs:NumModulesOnline"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:dc_total_i_input","vlink":"/status/pcs:DCCurrent"},"pcs_dc_power":{"value":"/components/pcs_registers_fast:dc_p_input","vlink":"/status/pcs:DCPower"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:vdc_bus_1","vlink":"/status/pcs:DCVoltage"},"power_factor":{"value":"/components/pcs_registers_fast:cosphi","vlink":"/status/pcs:PowerFactor"},"reactive_power":{"value":"/components/pcs_registers_fast:reactive_power","vlink":"/status/pcs:ReactivePower"},"reactive_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:q_q_reference","vlink":"/status/pcs:ReactivePowerSetpointFeedback"}},"/site/ess":{"active_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enable":"/config/pcs:enable","name":"Active Power Ramp Rate","note":"Sets the active power ramp rate","type":"control","units":"kW/s","value":0},"active_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Active Power Setpoint","note":"Sets the active power setpoint","signed":true,"type":"control","units":"kW","value":0},"frequency_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","name":"Frequency Setpoint","note":"Sets the frequency setpoint","type":"control","units":"Hz","value":0},"on_off_grid_mode_setting":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":1,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":1,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"},{"inValue":2,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":2,"outValue":2,"uri":"/controls/pcs:GridFormVF"},{"inValue":3,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":3,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"name":"Grid-following/forming Mode Command","note":"Initiates PCS grid-following/forming command routines","type":"control","value":0},"pcs_active_power":{"name":"PCS Active Power","signed":true,"type":"status","units":"kW","value":0},"pcs_active_power_ramp_rate_feedback":{"name":"PCS Active Power Ramp Rate Feedback","type":"status","units":"kW/s","value":0},"pcs_active_power_setpoint_feedback":{"name":"PCS Active Power Setpoint Feedback","signed":true,"type":"status","units":"kW","value":0},"pcs_alarm_active":{"name":"PCS Alarm Active","type":"status","value":false},"pcs_apparent_power":{"name":"PCS Apparent Power","signed":true,"type":"status","units":"kVA","value":0},"pcs_avg_line_voltage":{"name":"PCS Average Line Voltage","type":"status","units":"V","value":0},"pcs_comms_ok":{"name":"PCS Comms OK","type":"status","value":false},"pcs_control_alarms":{"bit0":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit10":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit11":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit12":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit13":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit14":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","bit15":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","bit16":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","bit17":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","bit18":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit19":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit2":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit20":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","bit21":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","bit22":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","bit23":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","bit24":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit4":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit5":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit6":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit7":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit8":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit9":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","name":"PCS Control Alarms","type":"bitfield","value":0},"pcs_dc_current":{"name":"PCS DC Current","scale":10,"signed":true,"type":"status","units":"A","value":0},"pcs_dc_power":{"name":"PCS DC Power","scale":10,"signed":true,"type":"status","units":"kW","value":0},"pcs_dc_voltage":{"name":"PCS DC Voltage","scale":10,"signed":true,"type":"status","units":"V","value":0},"pcs_fault_active":{"name":"PCS Fault Active","type":"status","value":false},"pcs_frequency":{"name":"PCS Grid Frequency","scale":100,"type":"status","units":"Hz","value":0},"pcs_frequency_setpoint_feedback":{"name":"PCS Frequency Setpoint Feedback","type":"status","units":"Hz","value":0},"pcs_grid_mode":{"bit0":"FollowPQ","bit1":"FormVF","bit2":"FormVSG","name":"PCS Grid Mode","type":"bitfield","value":0},"pcs_is_running":{"name":"PCS is Running","type":"status","value":false},"pcs_l1_current":{"name":"PCS Grid Current 1","scale":10,"type":"status","units":"A","value":0},"pcs_l1_l2_voltage":{"name":"PCS Grid Voltage L1-L2","type":"status","units":"V","value":0},"pcs_l2_current":{"name":"PCS Grid Current 2","scale":10,"type":"status","units":"A","value":0},"pcs_l2_l3_voltage":{"name":"PCS Grid Voltage L2-L3","type":"status","units":"V","value":0},"pcs_l3_current":{"name":"PCS Grid Current 3","scale":10,"type":"status","units":"A","value":0},"pcs_l3_l1_voltage":{"name":"PCS Grid Voltage L3-L1","type":"status","units":"V","value":0},"pcs_max_charge_power":{"name":"PCS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"pcs_max_discharge_power":{"name":"PCS Max Discharge Power","type":"status","units":"kW","value":0},"pcs_max_igbt_temperature":{"name":"PCS Max IGBT Temperature","scale":100,"type":"status","units":"°C","value":0},"pcs_monitor_alarms":{"bit0":"PCS Active Power Max Threshold Exceeded","bit1":"PCS DC Voltage Max Threshold Exceeded","bit2":"PCS DC Voltage Min Threshold Exceeded","bit3":"PCS Number of Modules Online Below Min Threshold","name":"PCS Monitor Alarms","type":"bitfield","value":0},"pcs_monitor_faults":{"bit0":"PCS Active Power Max Threshold Exceeded","bit1":"PCS DC Voltage Max Threshold Exceeded","bit2":"PCS DC Voltage Min Threshold Exceeded","bit3":"PCS Number of Modules Online Below Min Threshold","name":"PCS Monitor Faults","type":"bitfield","value":0},"pcs_num_modules_online":{"name":"PCS Number of Modules Online","type":"status","value":0},"pcs_num_modules_total":{"name":"PCS Number of Modules Total","type":"status","value":0},"pcs_power_factor":{"name":"PCS Power Factor","scale":1000,"signed":true,"type":"status","value":0},"pcs_rated_active_power":{"name":"PCS Rated Active Power","signed":true,"type":"status","units":"kW","value":0},"pcs_rated_apparent_power":{"name":"PCS Rated Apparent Power","signed":true,"type":"status","units":"kVA","value":0},"pcs_rated_reactive_power":{"name":"PCS Rated Reactive Power","signed":true,"type":"status","units":"kVAR","value":0},"pcs_reactive_power":{"name":"PCS Reactive Power","signed":true,"type":"status","units":"kVAR","value":0},"pcs_reactive_power_ramp_rate_feedback":{"name":"PCS Reactive Power Ramp Rate Feedback","type":"status","units":"kVAR/s","value":0},"pcs_reactive_power_setpoint_feedback":{"name":"PCS Reactive Power Setpoint Feedback","signed":true,"type":"status","units":"kVAR","value":0},"pcs_standby_enabled":{"excludeFromFile":true,"name":"PCS Standby Enabled","type":"status","value":false},"pcs_start_enabled":{"excludeFromFile":true,"name":"PCS Start Enabled","type":"status","value":false},"pcs_status":{"excludeFromFile":true,"name":"PCS Status","type":"status","value":"INIT"},"pcs_stop_enabled":{"excludeFromFile":true,"name":"PCS Stop Enabled","type":"status","value":false},"pcs_system_state":{"bit0":"Stop","bit1":"Run","bit2":"Fault","bit3":"Standby","name":"PCS System State","type":"bitfield","value":0},"pcs_voltage_setpoint_feedback":{"name":"PCS Voltage Setpoint Feedback","type":"status","units":"V","value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enable":"/config/pcs:enable","name":"Reactive Power Ramp Rate","note":"Sets the reactive power ramp rate","type":"control","units":"kVAR/s","value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Reactive Power Setpoint","note":"Sets the reactive power setpoint","signed":true,"type":"control","units":"kVAR","value":0},"start_stop_standby_command":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/pcs:enable","every":0.5,"ifChanged":false,"name":"Start/Stop/Standby Command","note1":"Initiates PCS start, standby, or stop command routines","note2":"0-\u003estop | 1-\u003estart | 2-\u003estandby","offset":0,"size":1,"type":"control","uri":"/sched/ess:SitePCSStatusControl","value":-1},"voltage_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Voltage Setpoint","note":"Sets the voltage setpoint","type":"control","units":"V","value":0}},"/vlinks/pcs":{"site_pcs_active_power":{"value":"/site/ess:pcs_active_power","vlink":"/status/pcs:ActivePower"},"site_pcs_active_power_ramp_rate_feedback":{"value":"/site/ess:pcs_active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"site_pcs_active_power_setpoint_feedback":{"value":"/site/ess:pcs_active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"site_pcs_alarm_active":{"value":"/site/ess:pcs_alarm_active","vlink":"/status/pcs:IsAlarming"},"site_pcs_apparent_power":{"value":"/site/ess:pcs_apparent_power","vlink":"/status/pcs:ApparentPower"},"site_pcs_avg_line_voltage":{"value":"/site/ess:pcs_avg_line_voltage","vlink":"/status/pcs:AvgLineVoltage"},"site_pcs_comms_ok":{"value":"/site/ess:pcs_comms_ok","vlink":"/status/pcs:CommsOK"},"site_pcs_dc_current":{"value":"/site/ess:pcs_dc_current","vlink":"/status/pcs:DCCurrent"},"site_pcs_dc_power":{"value":"/site/ess:pcs_dc_power","vlink":"/status/pcs:DCPower"},"site_pcs_dc_voltage":{"value":"/site/ess:pcs_dc_voltage","vlink":"/status/pcs:DCVoltage"},"site_pcs_fault_active":{"value":"/site/ess:pcs_fault_active","vlink":"/status/pcs:IsFaulted"},"site_pcs_frequency":{"value":"/site/ess:pcs_frequency","vlink":"/status/pcs:Frequency"},"site_pcs_frequency_setpoint_feedback":{"value":"/site/ess:pcs_frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"site_pcs_is_running":{"value":"/site/ess:pcs_is_running","vlink":"/status/pcs:IsRunning"},"site_pcs_l1_current":{"value":"/site/ess:pcs_l1_current","vlink":"/status/pcs:L1Current"},"site_pcs_l1_l2_voltage":{"value":"/site/ess:pcs_l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"site_pcs_l2_current":{"value":"/site/ess:pcs_l2_current","vlink":"/status/pcs:L2Current"},"site_pcs_l2_l3_voltage":{"value":"/site/ess:pcs_l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"site_pcs_l3_current":{"value":"/site/ess:pcs_l3_current","vlink":"/status/pcs:L3Current"},"site_pcs_l3_l1_voltage":{"value":"/site/ess:pcs_l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"site_pcs_max_charge_power":{"value":"/site/ess:pcs_max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"site_pcs_max_discharge_power":{"value":"/site/ess:pcs_max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"site_pcs_max_igbt_temperature":{"value":"/site/ess:pcs_max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"site_pcs_num_modules_online":{"value":"/site/ess:pcs_num_modules_online","vlink":"/status/pcs:NumModulesOnline"},"site_pcs_num_modules_total":{"value":"/site/ess:pcs_num_modules_total","vlink":"/status/pcs:NumModulesTotal"},"site_pcs_power_factor":{"value":"/site/ess:pcs_power_factor","vlink":"/status/pcs:PowerFactor"},"site_pcs_rated_active_power":{"value":"/site/ess:pcs_rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"site_pcs_rated_apparent_power":{"value":"/site/ess:pcs_rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"site_pcs_rated_reactive_power":{"value":"/site/ess:pcs_rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"site_pcs_reactive_power":{"value":"/site/ess:pcs_reactive_power","vlink":"/status/pcs:ReactivePower"},"site_pcs_reactive_power_ramp_rate_feedback":{"value":"/site/ess:pcs_reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"site_pcs_reactive_power_setpoint_feedback":{"value":"/site/ess:pcs_reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"site_pcs_standby_enabled":{"value":"/site/ess:pcs_standby_enabled","vlink":"/status/pcs:StandbyEnabled"},"site_pcs_start_enabled":{"value":"/site/ess:pcs_start_enabled","vlink":"/status/pcs:StartEnabled"},"site_pcs_status":{"value":"/site/ess:pcs_status","vlink":"/status/pcs:Status"},"site_pcs_stop_enabled":{"value":"/site/ess:pcs_stop_enabled","vlink":"/status/pcs:StopEnabled"},"site_pcs_voltage_setpoint_feedback":{"value":"/site/ess:pcs_voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}},"/assets/pcs/summary":{"active_power":{"value":0},"active_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power ramp rate","value":0},"active_power_ramp_rate_feedback":{"value":0},"active_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power setpoint","value":0},"active_power_setpoint_feedback":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"comms_ok":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"frequency":{"value":0},"frequency_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the frequency setpoint while the PCS is in grid-forming (VF)","value":0},"frequency_setpoint_feedback":{"value":0},"grid_follow_pq":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":true,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-following","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vf":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":true,"outValue":2,"uri":"/controls/pcs:GridFormVF"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (voltage and frequency)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vsg":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":true,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (virtual synchronous generator)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_mode":{"value":"INIT"},"l1_current":{"value":0},"l1_l2_voltage":{"value":0},"l2_current":{"value":0},"l2_l3_voltage":{"value":0},"l3_current":{"value":0},"l3_l1_voltage":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/summary:clear_faults@enabled"},{"uri":"/assets/pcs/summary:active_power_ramp_rate@enabled"},{"uri":"/assets/pcs/summary:reactive_power_ramp_rate@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_charge_power":{"value":0},"max_discharge_power":{"value":0},"max_igbt_temperature":{"value":0},"num_modules_online":{"value":0},"num_modules_total":{"value":0},"power_factor":{"value":0},"rated_active_power":{"value":0},"rated_apparent_power":{"value":0},"rated_power_factor":{"value":0},"rated_reactive_power":{"value":0},"reactive_power":{"value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power ramp rate","value":0},"reactive_power_ramp_rate_feedback":{"value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power setpoint","value":0},"reactive_power_setpoint_feedback":{"value":0},"standby":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Standby PCS","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 [/assets/pcs/summary/maint_mode] \u0026\u0026 [/status/pcs/SystemState == (Stop || Run)]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStandbyPCS","value":false},"start":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Start PCS","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 [/assets/pcs/summary/maint_mode] \u0026\u0026 ![/status/pcs/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStartPCS","value":false},"status":{"value":"INIT"},"stop":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Stop PCS","note":"Enabled conditions: [/assets/pcs/summary/maint_mode] \u0026\u0026 [/status/pcs/SystemState != Stop]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStopPCS","value":false},"system_state":{"value":"INIT"},"voltage_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the voltage setpoint while the PCS is in grid-forming (VF)","value":0},"voltage_setpoint_feedback":{"value":0}},"/vlinks/pcs":{"ui_active_power":{"value":"/assets/pcs/summary:active_power","vlink":"/status/pcs:ActivePower"},"ui_active_power_ramp_rate_feedback":{"value":"/assets/pcs/summary:active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"ui_active_power_setpoint_feedback":{"value":"/assets/pcs/summary:active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"ui_apparent_power":{"value":"/assets/pcs/summary:apparent_power","vlink":"/status/pcs:ApparentPower"},"ui_comms_ok":{"value":"/assets/pcs/summary:comms_ok","vlink":"/status/pcs:CommsOK"},"ui_dc_current":{"value":"/assets/pcs/summary:dc_current","vlink":"/status/pcs:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/summary:dc_power","vlink":"/status/pcs:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/summary:dc_voltage","vlink":"/status/pcs:DCVoltage"},"ui_frequency":{"value":"/assets/pcs/summary:frequency","vlink":"/status/pcs:Frequency"},"ui_frequency_setpoint_feedback":{"value":"/assets/pcs/summary:frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"ui_grid_mode":{"value":"/assets/pcs/summary:grid_mode","vlink":"/status/pcs:GridMode"},"ui_l1_current":{"value":"/assets/pcs/summary:l1_current","vlink":"/status/pcs:L1Current"},"ui_l1_l2_voltage":{"value":"/assets/pcs/summary:l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"ui_l2_current":{"value":"/assets/pcs/summary:l2_current","vlink":"/status/pcs:L2Current"},"ui_l2_l3_voltage":{"value":"/assets/pcs/summary:l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"ui_l3_current":{"value":"/assets/pcs/summary:l3_current","vlink":"/status/pcs:L3Current"},"ui_l3_l1_voltage":{"value":"/assets/pcs/summary:l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"ui_max_charge_power":{"value":"/assets/pcs/summary:max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"ui_max_discharge_power":{"value":"/assets/pcs/summary:max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"ui_max_igbt_temperature":{"value":"/assets/pcs/summary:max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"ui_num_modules_online":{"value":"/assets/pcs/summary:num_modules_online","vlink":"/status/pcs:NumModulesOnline"},"ui_num_modules_total":{"value":"/assets/pcs/summary:num_modules_total","vlink":"/status/pcs:NumModulesTotal"},"ui_power_factor":{"value":"/assets/pcs/summary:power_factor","vlink":"/status/pcs:PowerFactor"},"ui_rated_active_power":{"value":"/assets/pcs/summary:rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"ui_rated_apparent_power":{"value":"/assets/pcs/summary:rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"ui_rated_power_factor":{"value":"/assets/pcs/summary:rated_power_factor","vlink":"/config/pcs:RatedPowerFactor"},"ui_rated_reactive_power":{"value":"/assets/pcs/summary:rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"ui_reactive_power":{"value":"/assets/pcs/summary:reactive_power","vlink":"/status/pcs:ReactivePower"},"ui_reactive_power_ramp_rate_feedback":{"value":"/assets/pcs/summary:reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"ui_reactive_power_setpoint_feedback":{"value":"/assets/pcs/summary:reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"ui_status":{"value":"/assets/pcs/summary:status","vlink":"/status/pcs:Status"},"ui_system_state":{"value":"/assets/pcs/summary:system_state","vlink":"/status/pcs:SystemState"},"ui_voltage_setpoint_feedback":{"value":"/assets/pcs/summary:voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}}}
[4.89448s  ] [info    ] [configLoad     ] tmpls field is found in av [/config/load:pe_pcs_init]. We'll perform template expansions with tmpls instead of tmpl
[4.895s    ] [info    ] [configLoad     ] tbody before: {"/config/##MODULE_ID##":{"AlarmDestination":"/assets/pcs/##MODULE_ID##:alarms","FaultDestination":"/assets/pcs/##MODULE_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/##MODULE_ID##":{"pubAssets_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunPub"}]}]},"enable":"/config/##MODULE_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##MODULE_ID##)","table":"/assets/pcs/##MODULE_ID##","value":1},"runMonitor_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunMonitor"}]}]},"aname":"##MODULE_ID##","enable":"/config/##MODULE_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##MODULE_ID##","value":1}},"/status/##MODULE_ID##":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##MODULE_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:pubAssets_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":0.1,"uri":"/sched/##MODULE_ID##:runMonitor_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:checkInputs_##MODULE_ID##","value":1}],"targav":"/system/commands:run","value":false}}}
[4.89543s  ] [info    ] [configLoad     ] tbody now: "/config/##MODULE_ID##":{"AlarmDestination":"/assets/pcs/##MODULE_ID##:alarms","FaultDestination":"/assets/pcs/##MODULE_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/##MODULE_ID##":{"pubAssets_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunPub"}]}]},"enable":"/config/##MODULE_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##MODULE_ID##)","table":"/assets/pcs/##MODULE_ID##","value":1},"runMonitor_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunMonitor"}]}]},"aname":"##MODULE_ID##","enable":"/config/##MODULE_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##MODULE_ID##","value":1}},"/status/##MODULE_ID##":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##MODULE_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:pubAssets_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":0.1,"uri":"/sched/##MODULE_ID##:runMonitor_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:checkInputs_##MODULE_ID##","value":1}],"targav":"/system/commands:run","value":false}}
[4.89579s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##MODULE_ID##":{"AlarmDestination":"/assets/pcs/##MODULE_ID##:alarms","FaultDestination":"/assets/pcs/##MODULE_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/##MODULE_ID##":{"pubAssets_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunPub"}]}]},"enable":"/config/##MODULE_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##MODULE_ID##)","table":"/assets/pcs/##MODULE_ID##","value":1},"runMonitor_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunMonitor"}]}]},"aname":"##MODULE_ID##","enable":"/config/##MODULE_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##MODULE_ID##","value":1}},"/status/##MODULE_ID##":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##MODULE_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:pubAssets_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":0.1,"uri":"/sched/##MODULE_ID##:runMonitor_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:checkInputs_##MODULE_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##MODULE_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##MODULE_ID##":{"/controls/##MODULE_ID##:ClearFaults":{"amap":"##MODULE_ID##","func":"HandleCmd"}},"/status/##MODULE_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##MODULE_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##MODULE_ID##:clear_alarms"}]}]},"enable":"/config/##MODULE_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##MODULE_ID##:clear_faults and /alarms/##MODULE_ID##:clear_alarms will be set to Clear","value":false}}
[4.8963s   ] [info    ] [configLoad     ] pi's av tbody now: "/config/##MODULE_ID##":{"AlarmDestination":"/assets/pcs/##MODULE_ID##:alarms","FaultDestination":"/assets/pcs/##MODULE_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/##MODULE_ID##":{"pubAssets_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunPub"}]}]},"enable":"/config/##MODULE_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##MODULE_ID##)","table":"/assets/pcs/##MODULE_ID##","value":1},"runMonitor_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunMonitor"}]}]},"aname":"##MODULE_ID##","enable":"/config/##MODULE_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##MODULE_ID##","value":1}},"/status/##MODULE_ID##":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##MODULE_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:pubAssets_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":0.1,"uri":"/sched/##MODULE_ID##:runMonitor_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:checkInputs_##MODULE_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##MODULE_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##MODULE_ID##":{"/controls/##MODULE_ID##:ClearFaults":{"amap":"##MODULE_ID##","func":"HandleCmd"}},"/status/##MODULE_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##MODULE_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##MODULE_ID##:clear_alarms"}]}]},"enable":"/config/##MODULE_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##MODULE_ID##:clear_faults and /alarms/##MODULE_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##MODULE_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##MODULE_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##MODULE_ID##":{"/status/##MODULE_ID##:TotalAlarmCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"},"/status/##MODULE_ID##:TotalFaultCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"}},"/status/##MODULE_ID##":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:FaultCnt"}}
[4.8971s   ] [info    ] [configLoad     ] pi's av tbody now: "/config/##MODULE_ID##":{"AlarmDestination":"/assets/pcs/##MODULE_ID##:alarms","FaultDestination":"/assets/pcs/##MODULE_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/##MODULE_ID##":{"pubAssets_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunPub"}]}]},"enable":"/config/##MODULE_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##MODULE_ID##)","table":"/assets/pcs/##MODULE_ID##","value":1},"runMonitor_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunMonitor"}]}]},"aname":"##MODULE_ID##","enable":"/config/##MODULE_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##MODULE_ID##","value":1}},"/status/##MODULE_ID##":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##MODULE_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:pubAssets_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":0.1,"uri":"/sched/##MODULE_ID##:runMonitor_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:checkInputs_##MODULE_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##MODULE_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##MODULE_ID##":{"/controls/##MODULE_ID##:ClearFaults":{"amap":"##MODULE_ID##","func":"HandleCmd"}},"/status/##MODULE_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##MODULE_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##MODULE_ID##:clear_alarms"}]}]},"enable":"/config/##MODULE_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##MODULE_ID##:clear_faults and /alarms/##MODULE_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##MODULE_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##MODULE_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##MODULE_ID##":{"/status/##MODULE_ID##:TotalAlarmCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"},"/status/##MODULE_ID##:TotalFaultCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"}},"/status/##MODULE_ID##":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:FaultCnt"}},"/schedule/wake_monitor/##MODULE_ID##":{"/status/##MODULE_ID##:CurrentFault":{"func":"CalculateVar"},"/status/##MODULE_ID##:CurrentWarning":{"func":"CalculateVar"},"/status/##MODULE_ID##:PCSDCPower":{"func":"CalculateVar"}},"/status/##MODULE_ID##":{"CurrentFault":{"expression":"if ((##MODULE_NUM## == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((##MODULE_NUM## == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:PCSDCVoltage","variable2":"/status/##MODULE_ID##:PCSDCCurrent"}},"/vlinks/##MODULE_ID##":{"active_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_p","vlink":"/status/##MODULE_ID##:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_voltage_p","vlink":"/status/##MODULE_ID##:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_r","vlink":"/status/##MODULE_ID##:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_s","vlink":"/status/##MODULE_ID##:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_t","vlink":"/status/##MODULE_ID##:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:##MODULE_ID##_max_temp","vlink":"/status/##MODULE_ID##:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_current","vlink":"/status/##MODULE_ID##:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_voltage","vlink":"/status/##MODULE_ID##:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_q","vlink":"/status/##MODULE_ID##:ReactivePower"}}
[4.89823s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##MODULE_ID##":{"AlarmDestination":"/assets/pcs/##MODULE_ID##:alarms","FaultDestination":"/assets/pcs/##MODULE_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/##MODULE_ID##":{"pubAssets_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunPub"}]}]},"enable":"/config/##MODULE_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##MODULE_ID##)","table":"/assets/pcs/##MODULE_ID##","value":1},"runMonitor_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunMonitor"}]}]},"aname":"##MODULE_ID##","enable":"/config/##MODULE_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##MODULE_ID##","value":1}},"/status/##MODULE_ID##":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##MODULE_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:pubAssets_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":0.1,"uri":"/sched/##MODULE_ID##:runMonitor_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:checkInputs_##MODULE_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##MODULE_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##MODULE_ID##":{"/controls/##MODULE_ID##:ClearFaults":{"amap":"##MODULE_ID##","func":"HandleCmd"}},"/status/##MODULE_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##MODULE_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##MODULE_ID##:clear_alarms"}]}]},"enable":"/config/##MODULE_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##MODULE_ID##:clear_faults and /alarms/##MODULE_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##MODULE_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##MODULE_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##MODULE_ID##":{"/status/##MODULE_ID##:TotalAlarmCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"},"/status/##MODULE_ID##:TotalFaultCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"}},"/status/##MODULE_ID##":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:FaultCnt"}},"/schedule/wake_monitor/##MODULE_ID##":{"/status/##MODULE_ID##:CurrentFault":{"func":"CalculateVar"},"/status/##MODULE_ID##:CurrentWarning":{"func":"CalculateVar"},"/status/##MODULE_ID##:PCSDCPower":{"func":"CalculateVar"}},"/status/##MODULE_ID##":{"CurrentFault":{"expression":"if ((##MODULE_NUM## == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((##MODULE_NUM## == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:PCSDCVoltage","variable2":"/status/##MODULE_ID##:PCSDCCurrent"}},"/vlinks/##MODULE_ID##":{"active_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_p","vlink":"/status/##MODULE_ID##:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_voltage_p","vlink":"/status/##MODULE_ID##:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_r","vlink":"/status/##MODULE_ID##:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_s","vlink":"/status/##MODULE_ID##:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_t","vlink":"/status/##MODULE_ID##:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:##MODULE_ID##_max_temp","vlink":"/status/##MODULE_ID##:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_current","vlink":"/status/##MODULE_ID##:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_voltage","vlink":"/status/##MODULE_ID##:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_q","vlink":"/status/##MODULE_ID##:ReactivePower"}}
[4.8993s   ] [info    ] [configLoad     ] pi's av tbody now: "/config/##MODULE_ID##":{"AlarmDestination":"/assets/pcs/##MODULE_ID##:alarms","FaultDestination":"/assets/pcs/##MODULE_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/##MODULE_ID##":{"pubAssets_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunPub"}]}]},"enable":"/config/##MODULE_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##MODULE_ID##)","table":"/assets/pcs/##MODULE_ID##","value":1},"runMonitor_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunMonitor"}]}]},"aname":"##MODULE_ID##","enable":"/config/##MODULE_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##MODULE_ID##","value":1}},"/status/##MODULE_ID##":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##MODULE_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:pubAssets_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":0.1,"uri":"/sched/##MODULE_ID##:runMonitor_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:checkInputs_##MODULE_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##MODULE_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##MODULE_ID##":{"/controls/##MODULE_ID##:ClearFaults":{"amap":"##MODULE_ID##","func":"HandleCmd"}},"/status/##MODULE_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##MODULE_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##MODULE_ID##:clear_alarms"}]}]},"enable":"/config/##MODULE_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##MODULE_ID##:clear_faults and /alarms/##MODULE_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##MODULE_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##MODULE_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##MODULE_ID##":{"/status/##MODULE_ID##:TotalAlarmCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"},"/status/##MODULE_ID##:TotalFaultCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"}},"/status/##MODULE_ID##":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:FaultCnt"}},"/schedule/wake_monitor/##MODULE_ID##":{"/status/##MODULE_ID##:CurrentFault":{"func":"CalculateVar"},"/status/##MODULE_ID##:CurrentWarning":{"func":"CalculateVar"},"/status/##MODULE_ID##:PCSDCPower":{"func":"CalculateVar"}},"/status/##MODULE_ID##":{"CurrentFault":{"expression":"if ((##MODULE_NUM## == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((##MODULE_NUM## == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:PCSDCVoltage","variable2":"/status/##MODULE_ID##:PCSDCCurrent"}},"/vlinks/##MODULE_ID##":{"active_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_p","vlink":"/status/##MODULE_ID##:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_voltage_p","vlink":"/status/##MODULE_ID##:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_r","vlink":"/status/##MODULE_ID##:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_s","vlink":"/status/##MODULE_ID##:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_t","vlink":"/status/##MODULE_ID##:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:##MODULE_ID##_max_temp","vlink":"/status/##MODULE_ID##:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_current","vlink":"/status/##MODULE_ID##:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_voltage","vlink":"/status/##MODULE_ID##:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_q","vlink":"/status/##MODULE_ID##:ReactivePower"}},"/assets/pcs/##MODULE_ID##":{"active_power":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##MODULE_ID##:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##MODULE_ID##:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"l1_current":{"value":0},"l2_current":{"value":0},"l3_current":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/##MODULE_ID##:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_igbt_temperature":{"value":0},"reactive_power":{"value":0},"status":{"value":"INIT"}},"/vlinks/##MODULE_ID##":{"ui_active_power":{"value":"/assets/pcs/##MODULE_ID##:active_power","vlink":"/status/##MODULE_ID##:ActivePower"},"ui_apparent_power":{"value":"/assets/pcs/##MODULE_ID##:apparent_power","vlink":"/status/##MODULE_ID##:ApparentPower"},"ui_dc_current":{"value":"/assets/pcs/##MODULE_ID##:dc_current","vlink":"/status/##MODULE_ID##:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/##MODULE_ID##:dc_power","vlink":"/status/##MODULE_ID##:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/##MODULE_ID##:dc_voltage","vlink":"/status/##MODULE_ID##:DCVoltage"},"ui_l1_current":{"value":"/assets/pcs/##MODULE_ID##:l1_current","vlink":"/status/##MODULE_ID##:L1Current"},"ui_l2_current":{"value":"/assets/pcs/##MODULE_ID##:l2_current","vlink":"/status/##MODULE_ID##:L2Current"},"ui_l3_current":{"value":"/assets/pcs/##MODULE_ID##:l3_current","vlink":"/status/##MODULE_ID##:L3Current"},"ui_max_igbt_temperature":{"value":"/assets/pcs/##MODULE_ID##:max_igbt_temperature","vlink":"/status/##MODULE_ID##:MaxIGBTTemperature"},"ui_reactive_power":{"value":"/assets/pcs/##MODULE_ID##:reactive_power","vlink":"/status/##MODULE_ID##:ReactivePower"},"ui_status":{"value":"/assets/pcs/##MODULE_ID##:status","vlink":"/status/##MODULE_ID##:Status"}}
[4.90259s  ] [info    ] [configLoad     ] Final tbody: {"/config/##MODULE_ID##":{"AlarmDestination":"/assets/pcs/##MODULE_ID##:alarms","FaultDestination":"/assets/pcs/##MODULE_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/##MODULE_ID##":{"pubAssets_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunPub"}]}]},"enable":"/config/##MODULE_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##MODULE_ID##)","table":"/assets/pcs/##MODULE_ID##","value":1},"runMonitor_##MODULE_ID##":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"RunMonitor"}]}]},"aname":"##MODULE_ID##","enable":"/config/##MODULE_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##MODULE_ID##","value":1}},"/status/##MODULE_ID##":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##MODULE_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:pubAssets_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":0.1,"uri":"/sched/##MODULE_ID##:runMonitor_##MODULE_ID##","value":1},{"aname":"##MODULE_ID##","every":1,"uri":"/sched/##MODULE_ID##:checkInputs_##MODULE_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##MODULE_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/##MODULE_ID##":{"/controls/##MODULE_ID##:ClearFaults":{"amap":"##MODULE_ID##","func":"HandleCmd"}},"/status/##MODULE_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##MODULE_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##MODULE_ID##:clear_alarms"}]}]},"enable":"/config/##MODULE_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##MODULE_ID##:clear_faults and /alarms/##MODULE_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##MODULE_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##MODULE_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##MODULE_ID##) will be reset to the normal state (defined in /config/##MODULE_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##MODULE_ID##":{"/status/##MODULE_ID##:TotalAlarmCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"},"/status/##MODULE_ID##:TotalFaultCnt":{"amap":"##MODULE_ID##","func":"CalculateVar"}},"/status/##MODULE_ID##":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:FaultCnt"}},"/schedule/wake_monitor/##MODULE_ID##":{"/status/##MODULE_ID##:CurrentFault":{"func":"CalculateVar"},"/status/##MODULE_ID##:CurrentWarning":{"func":"CalculateVar"},"/status/##MODULE_ID##:PCSDCPower":{"func":"CalculateVar"}},"/status/##MODULE_ID##":{"CurrentFault":{"expression":"if ((##MODULE_NUM## == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((##MODULE_NUM## == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##MODULE_ID##:PCSDCVoltage","variable2":"/status/##MODULE_ID##:PCSDCCurrent"}},"/vlinks/##MODULE_ID##":{"active_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_p","vlink":"/status/##MODULE_ID##:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_voltage_p","vlink":"/status/##MODULE_ID##:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_r","vlink":"/status/##MODULE_ID##:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_s","vlink":"/status/##MODULE_ID##:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_current_t","vlink":"/status/##MODULE_ID##:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:##MODULE_ID##_max_temp","vlink":"/status/##MODULE_ID##:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_current","vlink":"/status/##MODULE_ID##:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:##MODULE_ID##_dc_voltage","vlink":"/status/##MODULE_ID##:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:##MODULE_ID##_q","vlink":"/status/##MODULE_ID##:ReactivePower"}},"/assets/pcs/##MODULE_ID##":{"active_power":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##MODULE_ID##:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##MODULE_ID##:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"l1_current":{"value":0},"l2_current":{"value":0},"l3_current":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"##MODULE_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/##MODULE_ID##:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_igbt_temperature":{"value":0},"reactive_power":{"value":0},"status":{"value":"INIT"}},"/vlinks/##MODULE_ID##":{"ui_active_power":{"value":"/assets/pcs/##MODULE_ID##:active_power","vlink":"/status/##MODULE_ID##:ActivePower"},"ui_apparent_power":{"value":"/assets/pcs/##MODULE_ID##:apparent_power","vlink":"/status/##MODULE_ID##:ApparentPower"},"ui_dc_current":{"value":"/assets/pcs/##MODULE_ID##:dc_current","vlink":"/status/##MODULE_ID##:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/##MODULE_ID##:dc_power","vlink":"/status/##MODULE_ID##:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/##MODULE_ID##:dc_voltage","vlink":"/status/##MODULE_ID##:DCVoltage"},"ui_l1_current":{"value":"/assets/pcs/##MODULE_ID##:l1_current","vlink":"/status/##MODULE_ID##:L1Current"},"ui_l2_current":{"value":"/assets/pcs/##MODULE_ID##:l2_current","vlink":"/status/##MODULE_ID##:L2Current"},"ui_l3_current":{"value":"/assets/pcs/##MODULE_ID##:l3_current","vlink":"/status/##MODULE_ID##:L3Current"},"ui_max_igbt_temperature":{"value":"/assets/pcs/##MODULE_ID##:max_igbt_temperature","vlink":"/status/##MODULE_ID##:MaxIGBTTemperature"},"ui_reactive_power":{"value":"/assets/pcs/##MODULE_ID##:reactive_power","vlink":"/status/##MODULE_ID##:ReactivePower"},"ui_status":{"value":"/assets/pcs/##MODULE_ID##:status","vlink":"/status/##MODULE_ID##:Status"}}}
[4.90788s  ] [info    ] [configure_vmapS] process file seeking header stuff am [pcs] ai [no ai]
[4.90958s  ] [info    ] [configure_vmapS] body: {"/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":4200,"RatedApparentPower":4200,"RatedPowerFactor":0.8,"RatedReactivePower":2100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"handlePowerCmd_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandlePowerCmd"}]}]},"bms":"bms","ess":"ess","note":"Processes active and reactive power commands before they are sent","pcs":"pcs","value":1},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"AvgLineVoltage":{"expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","value":true},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"},{"uri":"/status/pcs:NumModulesOnline@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"NumModulesTotal":6,"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:handlePowerCmd_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:p_p_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_fast:reset","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"/components/pcs_registers_fast:q_q_reference","expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"cmdVar":"","expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}},"/alarms/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"alarm","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/faults/pcs":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs:HeartbeatRead"},{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS Active Power Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DC Voltage Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DC Voltage Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[2]"},{"inValue":"NumModulesOnline_limit_min","note":"Bit 3 - PCS Number of Modules Online Below Min Threshold","outValue":true,"uri":"/site/ess:pcs_monitor_faults[3]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":4,"type":"fault","value":"Normal","variable1":"DCVoltage","variable2":"HeartbeatRead","variable3":"ActivePower","variable4":"NumModulesOnline"}},"/schedule/wake_monitor/pcs":{"/status/pcs:ActivePower":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:DCVoltage":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:HeartbeatRead":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:IsAlarming":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:IsFaulted":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:NumModulesOnline":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:TotalAlarmCnt":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalFaultCnt":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":4200,"MaxAlarmTimeout":1,"MaxFaultThreshold":4250,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":false,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs:TotalAlarmCnt"},"IsFaulted":{"expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs:SystemFault","variable2":"/status/pcs:TotalFaultCnt"},"NumModulesOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"SystemFault":false,"TotalAlarmCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalAlarmCnt","variable2":"/status/pcs:AlarmCnt"},"TotalFaultCnt":{"numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalFaultCnt","variable2":"/status/pcs:FaultCnt"}},"/components/pcs_registers_fast":{"current_status":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":1,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":2,"outValue":"Run","uri":"/status/pcs:SystemState"},{"inValue":3,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":4,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":5,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":6,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":8,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":9,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":10,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":11,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":12,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":13,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":14,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":15,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":17,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":18,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":19,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":20,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":21,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":22,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":24,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":0,"outValue":"Power up","uri":"/status/pcs:Status"},{"inValue":1,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":2,"outValue":"On","uri":"/status/pcs:Status"},{"inValue":3,"outValue":"Precharge","uri":"/status/pcs:Status"},{"inValue":4,"outValue":"Ready","uri":"/status/pcs:Status"},{"inValue":5,"outValue":"Wait","uri":"/status/pcs:Status"},{"inValue":6,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:Status"},{"inValue":8,"outValue":"Discharge","uri":"/status/pcs:Status"},{"inValue":9,"outValue":"Fault","uri":"/status/pcs:Status"},{"inValue":10,"outValue":"LVRT","uri":"/status/pcs:Status"},{"inValue":11,"outValue":"OVRT","uri":"/status/pcs:Status"},{"inValue":12,"outValue":"Night","uri":"/status/pcs:Status"},{"inValue":13,"outValue":"Night DC off","uri":"/status/pcs:Status"},{"inValue":14,"outValue":"Standby","uri":"/status/pcs:Status"},{"inValue":15,"outValue":"HVPL","uri":"/status/pcs:Status"},{"inValue":17,"outValue":"Pre-on","uri":"/status/pcs:Status"},{"inValue":18,"outValue":"Self-diagnosis","uri":"/status/pcs:Status"},{"inValue":19,"outValue":"Filter contactors","uri":"/status/pcs:Status"},{"inValue":20,"outValue":"Premagnetization","uri":"/status/pcs:Status"},{"inValue":21,"outValue":"Bank balancing","uri":"/status/pcs:Status"},{"inValue":22,"outValue":"CV stand by","uri":"/status/pcs:Status"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs_registers_fast:current_status@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/pcs":{"checkInputs_pcs":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/pcs_registers_fast:current_status@ifChanged"}]}]},"enable":"/config/pcs:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/pcs":{"active_power":{"value":"/components/pcs_registers_fast:active_power","vlink":"/status/pcs:ActivePower"},"active_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:p_p_reference","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"apparent_power":{"value":"/components/pcs_registers_fast:apparent_power","vlink":"/status/pcs:ApparentPower"},"frequency":{"value":"/components/pcs_registers_fast:grid_frequency","vlink":"/status/pcs:Frequency"},"heartbeat_read":{"value":"/components/pcs_registers_fast:seconds","vlink":"/status/pcs:HeartbeatRead"},"l1_current":{"value":"/components/pcs_registers_fast:grid_current_1","vlink":"/status/pcs:L1Current"},"l1_l2_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_rs","vlink":"/status/pcs:L1L2Voltage"},"l2_current":{"value":"/components/pcs_registers_fast:grid_current_2","vlink":"/status/pcs:L2Current"},"l2_l3_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_st","vlink":"/status/pcs:L2L3Voltage"},"l3_current":{"value":"/components/pcs_registers_fast:grid_current_3","vlink":"/status/pcs:L3Current"},"l3_l1_voltage":{"value":"/components/pcs_registers_fast:grid_voltage_tr","vlink":"/status/pcs:L3L1Voltage"},"modules_online":{"value":"/components/pcs_registers_fast:num_running_modules","vlink":"/status/pcs:NumModulesOnline"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:dc_total_i_input","vlink":"/status/pcs:DCCurrent"},"pcs_dc_power":{"value":"/components/pcs_registers_fast:dc_p_input","vlink":"/status/pcs:DCPower"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:vdc_bus_1","vlink":"/status/pcs:DCVoltage"},"power_factor":{"value":"/components/pcs_registers_fast:cosphi","vlink":"/status/pcs:PowerFactor"},"reactive_power":{"value":"/components/pcs_registers_fast:reactive_power","vlink":"/status/pcs:ReactivePower"},"reactive_power_setpoint_feedback":{"value":"/components/pcs_registers_fast:q_q_reference","vlink":"/status/pcs:ReactivePowerSetpointFeedback"}},"/site/ess":{"active_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enable":"/config/pcs:enable","name":"Active Power Ramp Rate","note":"Sets the active power ramp rate","type":"control","units":"kW/s","value":0},"active_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Active Power Setpoint","note":"Sets the active power setpoint","signed":true,"type":"control","units":"kW","value":0},"frequency_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","name":"Frequency Setpoint","note":"Sets the frequency setpoint","type":"control","units":"Hz","value":0},"on_off_grid_mode_setting":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":1,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":1,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"},{"inValue":2,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":2,"outValue":2,"uri":"/controls/pcs:GridFormVF"},{"inValue":3,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":3,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"name":"Grid-following/forming Mode Command","note":"Initiates PCS grid-following/forming command routines","type":"control","value":0},"pcs_active_power":{"name":"PCS Active Power","signed":true,"type":"status","units":"kW","value":0},"pcs_active_power_ramp_rate_feedback":{"name":"PCS Active Power Ramp Rate Feedback","type":"status","units":"kW/s","value":0},"pcs_active_power_setpoint_feedback":{"name":"PCS Active Power Setpoint Feedback","signed":true,"type":"status","units":"kW","value":0},"pcs_alarm_active":{"name":"PCS Alarm Active","type":"status","value":false},"pcs_apparent_power":{"name":"PCS Apparent Power","signed":true,"type":"status","units":"kVA","value":0},"pcs_avg_line_voltage":{"name":"PCS Average Line Voltage","type":"status","units":"V","value":0},"pcs_comms_ok":{"name":"PCS Comms OK","type":"status","value":false},"pcs_control_alarms":{"bit0":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit10":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit11":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit12":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit13":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit14":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","bit15":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","bit16":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","bit17":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","bit18":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit19":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit2":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit20":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","bit21":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","bit22":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","bit23":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","bit24":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit4":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit5":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit6":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit7":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit8":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit9":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","name":"PCS Control Alarms","type":"bitfield","value":0},"pcs_dc_current":{"name":"PCS DC Current","scale":10,"signed":true,"type":"status","units":"A","value":0},"pcs_dc_power":{"name":"PCS DC Power","scale":10,"signed":true,"type":"status","units":"kW","value":0},"pcs_dc_voltage":{"name":"PCS DC Voltage","scale":10,"signed":true,"type":"status","units":"V","value":0},"pcs_fault_active":{"name":"PCS Fault Active","type":"status","value":false},"pcs_frequency":{"name":"PCS Grid Frequency","scale":100,"type":"status","units":"Hz","value":0},"pcs_frequency_setpoint_feedback":{"name":"PCS Frequency Setpoint Feedback","type":"status","units":"Hz","value":0},"pcs_grid_mode":{"bit0":"FollowPQ","bit1":"FormVF","bit2":"FormVSG","name":"PCS Grid Mode","type":"bitfield","value":0},"pcs_is_running":{"name":"PCS is Running","type":"status","value":false},"pcs_l1_current":{"name":"PCS Grid Current 1","scale":10,"type":"status","units":"A","value":0},"pcs_l1_l2_voltage":{"name":"PCS Grid Voltage L1-L2","type":"status","units":"V","value":0},"pcs_l2_current":{"name":"PCS Grid Current 2","scale":10,"type":"status","units":"A","value":0},"pcs_l2_l3_voltage":{"name":"PCS Grid Voltage L2-L3","type":"status","units":"V","value":0},"pcs_l3_current":{"name":"PCS Grid Current 3","scale":10,"type":"status","units":"A","value":0},"pcs_l3_l1_voltage":{"name":"PCS Grid Voltage L3-L1","type":"status","units":"V","value":0},"pcs_max_charge_power":{"name":"PCS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"pcs_max_discharge_power":{"name":"PCS Max Discharge Power","type":"status","units":"kW","value":0},"pcs_max_igbt_temperature":{"name":"PCS Max IGBT Temperature","scale":100,"type":"status","units":"°C","value":0},"pcs_monitor_alarms":{"bit0":"PCS Active Power Max Threshold Exceeded","bit1":"PCS DC Voltage Max Threshold Exceeded","bit2":"PCS DC Voltage Min Threshold Exceeded","bit3":"PCS Number of Modules Online Below Min Threshold","name":"PCS Monitor Alarms","type":"bitfield","value":0},"pcs_monitor_faults":{"bit0":"PCS Active Power Max Threshold Exceeded","bit1":"PCS DC Voltage Max Threshold Exceeded","bit2":"PCS DC Voltage Min Threshold Exceeded","bit3":"PCS Number of Modules Online Below Min Threshold","name":"PCS Monitor Faults","type":"bitfield","value":0},"pcs_num_modules_online":{"name":"PCS Number of Modules Online","type":"status","value":0},"pcs_num_modules_total":{"name":"PCS Number of Modules Total","type":"status","value":0},"pcs_power_factor":{"name":"PCS Power Factor","scale":1000,"signed":true,"type":"status","value":0},"pcs_rated_active_power":{"name":"PCS Rated Active Power","signed":true,"type":"status","units":"kW","value":0},"pcs_rated_apparent_power":{"name":"PCS Rated Apparent Power","signed":true,"type":"status","units":"kVA","value":0},"pcs_rated_reactive_power":{"name":"PCS Rated Reactive Power","signed":true,"type":"status","units":"kVAR","value":0},"pcs_reactive_power":{"name":"PCS Reactive Power","signed":true,"type":"status","units":"kVAR","value":0},"pcs_reactive_power_ramp_rate_feedback":{"name":"PCS Reactive Power Ramp Rate Feedback","type":"status","units":"kVAR/s","value":0},"pcs_reactive_power_setpoint_feedback":{"name":"PCS Reactive Power Setpoint Feedback","signed":true,"type":"status","units":"kVAR","value":0},"pcs_standby_enabled":{"excludeFromFile":true,"name":"PCS Standby Enabled","type":"status","value":false},"pcs_start_enabled":{"excludeFromFile":true,"name":"PCS Start Enabled","type":"status","value":false},"pcs_status":{"excludeFromFile":true,"name":"PCS Status","type":"status","value":"INIT"},"pcs_stop_enabled":{"excludeFromFile":true,"name":"PCS Stop Enabled","type":"status","value":false},"pcs_system_state":{"bit0":"Stop","bit1":"Run","bit2":"Fault","bit3":"Standby","name":"PCS System State","type":"bitfield","value":0},"pcs_voltage_setpoint_feedback":{"name":"PCS Voltage Setpoint Feedback","type":"status","units":"V","value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enable":"/config/pcs:enable","name":"Reactive Power Ramp Rate","note":"Sets the reactive power ramp rate","type":"control","units":"kVAR/s","value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Reactive Power Setpoint","note":"Sets the reactive power setpoint","signed":true,"type":"control","units":"kVAR","value":0},"start_stop_standby_command":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/pcs:enable","every":0.5,"ifChanged":false,"name":"Start/Stop/Standby Command","note1":"Initiates PCS start, standby, or stop command routines","note2":"0-\u003estop | 1-\u003estart | 2-\u003estandby","offset":0,"size":1,"type":"control","uri":"/sched/ess:SitePCSStatusControl","value":-1},"voltage_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","name":"Voltage Setpoint","note":"Sets the voltage setpoint","type":"control","units":"V","value":0}},"/vlinks/pcs":{"site_pcs_active_power":{"value":"/site/ess:pcs_active_power","vlink":"/status/pcs:ActivePower"},"site_pcs_active_power_ramp_rate_feedback":{"value":"/site/ess:pcs_active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"site_pcs_active_power_setpoint_feedback":{"value":"/site/ess:pcs_active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"site_pcs_alarm_active":{"value":"/site/ess:pcs_alarm_active","vlink":"/status/pcs:IsAlarming"},"site_pcs_apparent_power":{"value":"/site/ess:pcs_apparent_power","vlink":"/status/pcs:ApparentPower"},"site_pcs_avg_line_voltage":{"value":"/site/ess:pcs_avg_line_voltage","vlink":"/status/pcs:AvgLineVoltage"},"site_pcs_comms_ok":{"value":"/site/ess:pcs_comms_ok","vlink":"/status/pcs:CommsOK"},"site_pcs_dc_current":{"value":"/site/ess:pcs_dc_current","vlink":"/status/pcs:DCCurrent"},"site_pcs_dc_power":{"value":"/site/ess:pcs_dc_power","vlink":"/status/pcs:DCPower"},"site_pcs_dc_voltage":{"value":"/site/ess:pcs_dc_voltage","vlink":"/status/pcs:DCVoltage"},"site_pcs_fault_active":{"value":"/site/ess:pcs_fault_active","vlink":"/status/pcs:IsFaulted"},"site_pcs_frequency":{"value":"/site/ess:pcs_frequency","vlink":"/status/pcs:Frequency"},"site_pcs_frequency_setpoint_feedback":{"value":"/site/ess:pcs_frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"site_pcs_is_running":{"value":"/site/ess:pcs_is_running","vlink":"/status/pcs:IsRunning"},"site_pcs_l1_current":{"value":"/site/ess:pcs_l1_current","vlink":"/status/pcs:L1Current"},"site_pcs_l1_l2_voltage":{"value":"/site/ess:pcs_l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"site_pcs_l2_current":{"value":"/site/ess:pcs_l2_current","vlink":"/status/pcs:L2Current"},"site_pcs_l2_l3_voltage":{"value":"/site/ess:pcs_l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"site_pcs_l3_current":{"value":"/site/ess:pcs_l3_current","vlink":"/status/pcs:L3Current"},"site_pcs_l3_l1_voltage":{"value":"/site/ess:pcs_l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"site_pcs_max_charge_power":{"value":"/site/ess:pcs_max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"site_pcs_max_discharge_power":{"value":"/site/ess:pcs_max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"site_pcs_max_igbt_temperature":{"value":"/site/ess:pcs_max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"site_pcs_num_modules_online":{"value":"/site/ess:pcs_num_modules_online","vlink":"/status/pcs:NumModulesOnline"},"site_pcs_num_modules_total":{"value":"/site/ess:pcs_num_modules_total","vlink":"/status/pcs:NumModulesTotal"},"site_pcs_power_factor":{"value":"/site/ess:pcs_power_factor","vlink":"/status/pcs:PowerFactor"},"site_pcs_rated_active_power":{"value":"/site/ess:pcs_rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"site_pcs_rated_apparent_power":{"value":"/site/ess:pcs_rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"site_pcs_rated_reactive_power":{"value":"/site/ess:pcs_rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"site_pcs_reactive_power":{"value":"/site/ess:pcs_reactive_power","vlink":"/status/pcs:ReactivePower"},"site_pcs_reactive_power_ramp_rate_feedback":{"value":"/site/ess:pcs_reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"site_pcs_reactive_power_setpoint_feedback":{"value":"/site/ess:pcs_reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"site_pcs_standby_enabled":{"value":"/site/ess:pcs_standby_enabled","vlink":"/status/pcs:StandbyEnabled"},"site_pcs_start_enabled":{"value":"/site/ess:pcs_start_enabled","vlink":"/status/pcs:StartEnabled"},"site_pcs_status":{"value":"/site/ess:pcs_status","vlink":"/status/pcs:Status"},"site_pcs_stop_enabled":{"value":"/site/ess:pcs_stop_enabled","vlink":"/status/pcs:StopEnabled"},"site_pcs_voltage_setpoint_feedback":{"value":"/site/ess:pcs_voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}},"/assets/pcs/summary":{"active_power":{"value":0},"active_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power ramp rate","value":0},"active_power_ramp_rate_feedback":{"value":0},"active_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power setpoint","value":0},"active_power_setpoint_feedback":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"comms_ok":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"frequency":{"value":0},"frequency_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the frequency setpoint while the PCS is in grid-forming (VF)","value":0},"frequency_setpoint_feedback":{"value":0},"grid_follow_pq":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":true,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-following","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vf":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":true,"outValue":2,"uri":"/controls/pcs:GridFormVF"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (voltage and frequency)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vsg":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":true,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (virtual synchronous generator)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_mode":{"value":"INIT"},"l1_current":{"value":0},"l1_l2_voltage":{"value":0},"l2_current":{"value":0},"l2_l3_voltage":{"value":0},"l3_current":{"value":0},"l3_l1_voltage":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/summary:clear_faults@enabled"},{"uri":"/assets/pcs/summary:active_power_ramp_rate@enabled"},{"uri":"/assets/pcs/summary:reactive_power_ramp_rate@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_charge_power":{"value":0},"max_discharge_power":{"value":0},"max_igbt_temperature":{"value":0},"num_modules_online":{"value":0},"num_modules_total":{"value":0},"power_factor":{"value":0},"rated_active_power":{"value":0},"rated_apparent_power":{"value":0},"rated_power_factor":{"value":0},"rated_reactive_power":{"value":0},"reactive_power":{"value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power ramp rate","value":0},"reactive_power_ramp_rate_feedback":{"value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power setpoint","value":0},"reactive_power_setpoint_feedback":{"value":0},"standby":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Standby PCS","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 [/assets/pcs/summary/maint_mode] \u0026\u0026 [/status/pcs/SystemState == (Stop || Run)]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStandbyPCS","value":false},"start":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Start PCS","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 [/assets/pcs/summary/maint_mode] \u0026\u0026 ![/status/pcs/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStartPCS","value":false},"status":{"value":"INIT"},"stop":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Stop PCS","note":"Enabled conditions: [/assets/pcs/summary/maint_mode] \u0026\u0026 [/status/pcs/SystemState != Stop]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStopPCS","value":false},"system_state":{"value":"INIT"},"voltage_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the voltage setpoint while the PCS is in grid-forming (VF)","value":0},"voltage_setpoint_feedback":{"value":0}},"/vlinks/pcs":{"ui_active_power":{"value":"/assets/pcs/summary:active_power","vlink":"/status/pcs:ActivePower"},"ui_active_power_ramp_rate_feedback":{"value":"/assets/pcs/summary:active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"ui_active_power_setpoint_feedback":{"value":"/assets/pcs/summary:active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"ui_apparent_power":{"value":"/assets/pcs/summary:apparent_power","vlink":"/status/pcs:ApparentPower"},"ui_comms_ok":{"value":"/assets/pcs/summary:comms_ok","vlink":"/status/pcs:CommsOK"},"ui_dc_current":{"value":"/assets/pcs/summary:dc_current","vlink":"/status/pcs:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/summary:dc_power","vlink":"/status/pcs:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/summary:dc_voltage","vlink":"/status/pcs:DCVoltage"},"ui_frequency":{"value":"/assets/pcs/summary:frequency","vlink":"/status/pcs:Frequency"},"ui_frequency_setpoint_feedback":{"value":"/assets/pcs/summary:frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"ui_grid_mode":{"value":"/assets/pcs/summary:grid_mode","vlink":"/status/pcs:GridMode"},"ui_l1_current":{"value":"/assets/pcs/summary:l1_current","vlink":"/status/pcs:L1Current"},"ui_l1_l2_voltage":{"value":"/assets/pcs/summary:l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"ui_l2_current":{"value":"/assets/pcs/summary:l2_current","vlink":"/status/pcs:L2Current"},"ui_l2_l3_voltage":{"value":"/assets/pcs/summary:l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"ui_l3_current":{"value":"/assets/pcs/summary:l3_current","vlink":"/status/pcs:L3Current"},"ui_l3_l1_voltage":{"value":"/assets/pcs/summary:l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"ui_max_charge_power":{"value":"/assets/pcs/summary:max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"ui_max_discharge_power":{"value":"/assets/pcs/summary:max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"ui_max_igbt_temperature":{"value":"/assets/pcs/summary:max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"ui_num_modules_online":{"value":"/assets/pcs/summary:num_modules_online","vlink":"/status/pcs:NumModulesOnline"},"ui_num_modules_total":{"value":"/assets/pcs/summary:num_modules_total","vlink":"/status/pcs:NumModulesTotal"},"ui_power_factor":{"value":"/assets/pcs/summary:power_factor","vlink":"/status/pcs:PowerFactor"},"ui_rated_active_power":{"value":"/assets/pcs/summary:rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"ui_rated_apparent_power":{"value":"/assets/pcs/summary:rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"ui_rated_power_factor":{"value":"/assets/pcs/summary:rated_power_factor","vlink":"/config/pcs:RatedPowerFactor"},"ui_rated_reactive_power":{"value":"/assets/pcs/summary:rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"ui_reactive_power":{"value":"/assets/pcs/summary:reactive_power","vlink":"/status/pcs:ReactivePower"},"ui_reactive_power_ramp_rate_feedback":{"value":"/assets/pcs/summary:reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"ui_reactive_power_setpoint_feedback":{"value":"/assets/pcs/summary:reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"ui_status":{"value":"/assets/pcs/summary:status","vlink":"/status/pcs:Status"},"ui_system_state":{"value":"/assets/pcs/summary:system_state","vlink":"/status/pcs:SystemState"},"ui_voltage_setpoint_feedback":{"value":"/assets/pcs/summary:voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}}}
[4.91506s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[4.91574s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/pcs/summary:alarms",
	"FaultDestination":	"/assets/pcs/summary:faults",
	"FrequencySetpointMargin":	5,
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"PowerSetpointMargin":	5,
	"RampRateMargin":	5,
	"RatedActivePower":	4200,
	"RatedApparentPower":	4200,
	"RatedPowerFactor":	0.8,
	"RatedReactivePower":	2100,
	"VoltageSetpointMargin":	5,
	"enable":	false,
	"enum_opt":	false
}].
[4.91654s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:alarms]
[4.91751s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:alarms]
[4.91851s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:faults]
[4.9206s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:faults]
[4.92137s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.92245s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.92373s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.92425s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.92549s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerCmdReal":	{
		"value":	"/controls/pcs:ActivePowerCmdReal"
	},
	"ActivePowerSetpoint":	{
		"value":	"/controls/pcs:ActivePowerSetpoint"
	},
	"MaxPCSChargePower":	{
		"value":	"/limits/pcs:MaxPCSChargePower"
	},
	"MaxPCSDischargePower":	{
		"value":	"/limits/pcs:MaxPCSDischargePower"
	},
	"RatedActivePower":	{
		"value":	"/limits/pcs:RatedActivePower"
	},
	"RatedApparentPower":	{
		"value":	"/limits/pcs:RatedApparentPower"
	},
	"RatedReactivePower":	{
		"value":	"/limits/pcs:RatedReactivePower"
	},
	"ReactivePowerCmdReal":	{
		"value":	"/controls/pcs:ReactivePowerCmdReal"
	},
	"ReactivePowerSetpoint":	{
		"value":	"/controls/pcs:ReactivePowerSetpoint"
	}
}].
[4.92603s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ActivePowerCmdReal]
[4.92665s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ActivePowerCmdReal]
[4.92707s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ActivePowerSetpoint]
[4.92755s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ActivePowerSetpoint]
[4.92853s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:MaxPCSChargePower]
[4.92931s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:MaxPCSChargePower]
[4.9298s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:MaxPCSDischargePower]
[4.93209s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:MaxPCSDischargePower]
[4.93298s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:RatedActivePower]
[4.93355s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:RatedActivePower]
[4.93459s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:RatedApparentPower]
[4.93488s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:RatedApparentPower]
[4.93544s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:RatedReactivePower]
[4.93586s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:RatedReactivePower]
[4.93656s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ReactivePowerCmdReal]
[4.93723s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ReactivePowerCmdReal]
[4.93788s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ReactivePowerSetpoint]
[4.93837s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ReactivePowerSetpoint]
[4.93929s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"LocalStandbyPCS":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LocalStandbyPCS"
						}]
				}]
		},
		"every":	0.5,
		"value":	"LocalStandbyPCS"
	},
	"LocalStartPCS":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LocalStartPCS"
						}]
				}]
		},
		"every":	0.5,
		"value":	"LocalStartPCS"
	},
	"LocalStopPCS":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LocalStopPCS"
						}]
				}]
		},
		"every":	0.5,
		"value":	"LocalStopPCS"
	},
	"StandbyEnable":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"StandbyEnable"
						}]
				}]
		},
		"value":	"StandbyEnable"
	},
	"StartEnable":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"StartEnable"
						}]
				}]
		},
		"value":	"StartEnable"
	},
	"StopEnable":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"StopEnable"
						}]
				}]
		},
		"value":	"StopEnable"
	},
	"handlePowerCmd_pcs":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandlePowerCmd"
						}]
				}]
		},
		"bms":	"bms",
		"ess":	"ess",
		"note":	"Processes active and reactive power commands before they are sent",
		"pcs":	"pcs",
		"value":	1
	},
	"pubAssetsSummary_pcs":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"mode":	"ui",
		"note":	"Publishes UI summary data (/assets/pcs/summary)",
		"table":	"/assets/pcs/summary",
		"value":	1
	},
	"runMonitor_pcs":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"pcs",
		"enable":	"/config/pcs:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs",
		"value":	1
	},
	"updateHeartbeatWrite_pcs":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"CalculateVar",
							"inAv":	"/status/pcs:HeartbeatWrite"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"note":	"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite",
		"value":	1
	}
}].
[4.94021s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [LocalStandbyPCS]
[4.94094s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [LocalStandbyPCS]
[4.94217s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [LocalStartPCS]
[4.94277s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [LocalStartPCS]
[4.94352s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [LocalStopPCS]
[4.94421s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [LocalStopPCS]
[4.94504s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [StandbyEnable]
[4.94553s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [StandbyEnable]
[4.94652s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/pcs:perf_StandbyEnable]
[4.94708s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/pcs:perf_StandbyEnable]
[4.94782s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:StandbyEnable_pcs]
[4.96024s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:StandbyEnable_pcs]
[4.96132s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [StartEnable]
[4.96165s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [StartEnable]
[4.96233s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/pcs:perf_StartEnable]
[4.96266s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/pcs:perf_StartEnable]
[4.96312s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:StartEnable_pcs]
[4.9644s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:StartEnable_pcs]
[4.96515s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [StopEnable]
[4.96545s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [StopEnable]
[4.96576s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/pcs:perf_StopEnable]
[4.96621s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/pcs:perf_StopEnable]
[4.9667s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:StopEnable_pcs]
[4.96714s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:StopEnable_pcs]
[4.96761s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/pcs:perf_HandlePowerCmd]
[4.96789s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/pcs:perf_HandlePowerCmd]
[4.96837s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:HandlePowerCmd_ess]
[4.96878s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:HandlePowerCmd_ess]
[4.96909s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/ess:MaxChargePower]
[4.96933s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/ess:MaxChargePower]
[4.96973s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/ess:MaxDischargePower]
[4.97015s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/ess:MaxDischargePower]
[4.97062s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/ess:MaxReactivePower]
[4.97087s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/ess:MaxReactivePower]
[4.97114s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/ess:MaxApparentPower]
[4.97143s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/ess:MaxApparentPower]
[4.97175s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:PowerPriority]
[4.97199s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:PowerPriority]
[4.97243s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:PCSLimitsChanged]
[4.97282s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:PCSLimitsChanged]
[4.97329s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs:PCSConfigChanged]
[4.97356s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs:PCSConfigChanged]
[4.97393s  ] [info    ] [HandlePowerInit] RUNNING RELOAD 0 for pcs
[4.97429s  ] [info    ] [HandlePowerInit] Done checking hw and config
[4.97467s  ] [info    ] [HandlePowerInit] pcs Found Pr_c [4200]
[4.97504s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:RatedActivePower_Config]
[4.9754s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:RatedActivePower_Config]
[4.97576s  ] [info    ] [HandlePowerInit] pcs Found Qr_c [2100]
[4.97632s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:RatedReactivePower_Config]
[4.97658s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:RatedReactivePower_Config]
[4.97688s  ] [info    ] [HandlePowerInit] pcs Found Sr_c [4200]
[4.97717s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:RatedApparentPower_Config]
[4.97755s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:RatedApparentPower_Config]
[4.97784s  ] [info    ] [HandlePowerInit] pcs Found pfr_c [0.8]
[4.97811s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:RatedPowerFactor_Config]
[4.97841s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:RatedPowerFactor_Config]
[4.97867s  ] [info    ] [HandlePowerInit] Done initializing vars
[4.97892s  ] [info    ] [HandlePowerInit] pcs No priority found in /config or /controls. Setting power priority for pcs to default P P
[4.97944s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [P]
[4.97994s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [P]
[4.9803s   ] [info    ] [HandlePowerInit] Done initializing Priority
[4.98074s  ] [info    ] [HandlePowerInit] Done initializing Ps and Qs
[4.98124s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:MaxPCSReactivePower]
[4.98152s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:MaxPCSReactivePower]
[4.98189s  ] [info    ] [HandlePowerInit] Rated Active/Reactive/Apparent Powers set to 4200/2100/4200
[4.98239s  ] [info    ] [HandlePowerInit] Done initing vars
[4.98273s  ] [info    ] [HandlePowerInit] Done setting max Ps
[4.98311s  ] [info    ] [HandlePowerInit] Rated Power for pcs:
[4.98364s  ] [info    ] [HandlePowerInit]        Apparent Power  [4200]
[4.98394s  ] [info    ] [HandlePowerInit]        Reactive Power  [2100]
[4.98448s  ] [info    ] [HandlePowerInit] Max Powers for pcs:
[4.98481s  ] [info    ] [HandlePowerInit]        Charge Power    [-4200]
[4.98521s  ] [info    ] [HandlePowerInit]        Discharge Power [4200]
[4.98573s  ] [info    ] [HandlePowerInit] RUNNING RELOAD 2 for pcs
[4.98628s  ] [info    ] [HandlePowerInit] Done checking hw and config
[4.98681s  ] [info    ] [HandlePowerInit] pcs Found Pr_c [4200]
[4.98724s  ] [info    ] [HandlePowerInit] pcs Found Qr_c [2100]
[4.98759s  ] [info    ] [HandlePowerInit] pcs Found Sr_c [4200]
[4.9879s   ] [info    ] [HandlePowerInit] pcs Found pfr_c [0.8]
[4.98827s  ] [info    ] [HandlePowerInit] Done initializing vars
[4.98859s  ] [info    ] [HandlePowerInit] pcs No priority found in /config or /controls. Setting power priority for pcs to default P P
[4.989s    ] [info    ] [HandlePowerInit] Done initializing Priority
[4.98935s  ] [info    ] [HandlePowerInit] Done initializing Ps and Qs
[4.98964s  ] [info    ] [HandlePowerInit] Rated Active/Reactive/Apparent Powers set to 4200/2100/4200
[4.9899s   ] [info    ] [HandlePowerInit] Done initing vars
[4.99029s  ] [info    ] [HandlePowerInit] Done setting max Ps
[4.99084s  ] [info    ] [HandlePowerInit] Rated Power for pcs:
[4.99123s  ] [info    ] [HandlePowerInit]        Apparent Power  [4200]
[4.99178s  ] [info    ] [HandlePowerInit]        Reactive Power  [2100]
[4.99233s  ] [info    ] [HandlePowerInit] Max Powers for pcs:
[4.99274s  ] [info    ] [HandlePowerInit]        Charge Power    [-4200]
[4.99316s  ] [info    ] [HandlePowerInit]        Discharge Power [4200]
[4.99376s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/pcs:AvgLineVoltage":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	}
}].
[4.99473s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AvgLineVoltage":	{
		"expression":	"({1} + {2} + {3}) / 3",
		"note":	"Calculates the average grid line voltage",
		"numVars":	3,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:L1L2Voltage",
		"variable2":	"/status/pcs:L2L3Voltage",
		"variable3":	"/status/pcs:L3L1Voltage"
	},
	"CommsOK":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	true,
							"uri":	"/site/ess:comms_faults[0]"
						}]
				}]
		},
		"note":	"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable",
		"value":	true
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/pcs:DCVoltage@EnableMinValCheck"
						}, {
							"uri":	"/status/bms:Voltage@EnableMinValCheck"
						}, {
							"uri":	"/status/pcs:NumModulesOnline@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"note":	"Enables/disables monitoring variables if PCS DC contactors are closed/opened",
		"value":	false
	},
	"GridMode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	"FollowPQ",
							"note":	"Bit 0 - FollowPQ",
							"outValue":	1,
							"uri":	"/site/ess:pcs_grid_mode"
						}, {
							"inValue":	"FormVF",
							"note":	"Bit 1 - FormVF",
							"outValue":	2,
							"uri":	"/site/ess:pcs_grid_mode"
						}, {
							"inValue":	"FormVSG",
							"note":	"Bit 2 - FormVSG",
							"outValue":	4,
							"uri":	"/site/ess:pcs_grid_mode"
						}]
				}]
		},
		"ifChanged":	true,
		"note1":	"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG",
		"value":	"INIT"
	},
	"HeartbeatWrite":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"fims":	"set",
							"uri":	"/components/pcs:heartbeat_write"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"excludeFromDefaultSched":	true,
		"expression":	"if (({1} >= 59), 0, ({1} + 1))",
		"note":	"Updates and then sends the heartbeat write value",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:HeartbeatWrite"
	},
	"NumModulesTotal":	6,
	"Status":	"INIT",
	"SystemState":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	"Stop",
							"outValue":	false,
							"uri":	"/status/pcs:DCClosed"
						}, {
							"inValue":	"Run",
							"outValue":	true,
							"uri":	"/status/pcs:DCClosed"
						}, {
							"inValue":	"Fault",
							"outValue":	false,
							"uri":	"/status/pcs:DCClosed"
						}, {
							"inValue":	"Standby",
							"outValue":	true,
							"uri":	"/status/pcs:DCClosed"
						}, {
							"inValue":	"Stop",
							"outValue":	false,
							"uri":	"/status/pcs:IsRunning"
						}, {
							"inValue":	"Run",
							"outValue":	true,
							"uri":	"/status/pcs:IsRunning"
						}, {
							"inValue":	"Fault",
							"outValue":	false,
							"uri":	"/status/pcs:IsRunning"
						}, {
							"inValue":	"Standby",
							"outValue":	false,
							"uri":	"/status/pcs:IsRunning"
						}, {
							"inValue":	"Stop",
							"outValue":	false,
							"uri":	"/status/pcs:SystemFault"
						}, {
							"inValue":	"Run",
							"outValue":	false,
							"uri":	"/status/pcs:SystemFault"
						}, {
							"inValue":	"Fault",
							"outValue":	true,
							"uri":	"/status/pcs:SystemFault"
						}, {
							"inValue":	"Standby",
							"outValue":	false,
							"uri":	"/status/pcs:SystemFault"
						}, {
							"inValue":	"Stop",
							"note":	"Bit 0 - Stop",
							"outValue":	1,
							"uri":	"/site/ess:pcs_system_state"
						}, {
							"inValue":	"Run",
							"note":	"Bit 1 - Run",
							"outValue":	2,
							"uri":	"/site/ess:pcs_system_state"
						}, {
							"inValue":	"Fault",
							"note":	"Bit 2 - Fault",
							"outValue":	4,
							"uri":	"/site/ess:pcs_system_state"
						}, {
							"inValue":	"Standby",
							"note":	"Bit 3 - Standby",
							"outValue":	8,
							"uri":	"/site/ess:pcs_system_state"
						}]
				}]
		},
		"ifChanged":	true,
		"note1":	"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby",
		"note2":	"Updates various PCS status variables depending on this variable's value",
		"value":	"INIT"
	}
}].
[4.99636s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.99667s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.99736s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.99795s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.9984s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.99869s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.99945s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_pcs":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/pcs) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"pcs",
				"every":	1,
				"uri":	"/sched/pcs:pubAssetsSummary_pcs",
				"value":	1
			}, {
				"aname":	"pcs",
				"every":	0.1,
				"uri":	"/sched/pcs:runMonitor_pcs",
				"value":	1
			}, {
				"aname":	"pcs",
				"every":	1,
				"uri":	"/sched/pcs:checkInputs_pcs",
				"value":	1
			}, {
				"aname":	"pcs",
				"every":	1,
				"uri":	"/sched/pcs:updateHeartbeatWrite_pcs",
				"value":	1
			}, {
				"aname":	"pcs",
				"every":	0.1,
				"uri":	"/sched/pcs:handlePowerCmd_pcs",
				"value":	1
			}, {
				"aname":	"pcs",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/pcs:LocalStartPCS",
				"value":	0
			}, {
				"aname":	"pcs",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/pcs:LocalStopPCS",
				"value":	0
			}, {
				"aname":	"pcs",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/pcs:LocalStandbyPCS",
				"value":	0
			}, {
				"aname":	"pcs",
				"debug":	0,
				"every":	0.1,
				"offset":	0,
				"uri":	"/sched/pcs:StartEnable",
				"value":	0
			}, {
				"aname":	"pcs",
				"debug":	0,
				"every":	0.1,
				"offset":	0,
				"uri":	"/sched/pcs:StopEnable",
				"value":	0
			}, {
				"aname":	"pcs",
				"debug":	0,
				"every":	0.1,
				"offset":	0,
				"uri":	"/sched/pcs:StandbyEnable",
				"value":	0
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[5.00113s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"cmdVar":	"/components/pcs_registers_fast:p_p_reference",
		"expression":	"{1} != Stop and {1} != Fault",
		"note1":	"Send active power command to PCS",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:SystemState"
	},
	"ActivePowerCmdConvert":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:ActivePowerCmd@triggerCmd"
						}, {
							"uri":	"/controls/pcs:ActivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1}",
		"ifChanged":	false,
		"note":	"Pass kW command to ActivePowerCmd",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ActivePowerCmdReal"
	},
	"ActivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"cmdVar":	"",
		"expression":	"{1} > 0",
		"note1":	"Send active power ramp rate to PCS",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ActivePowerRampRateCmd"
	},
	"ActivePowerRampRateCmdConvert":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"
						}, {
							"uri":	"/controls/pcs:ActivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1}",
		"ifChanged":	false,
		"note":	"Pass kW/s command to ActivePowerRampRateCmd",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ActivePowerRampRate"
	},
	"ActivePowerSetpointEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:active_power_setpoint@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and {2} != Stop and {2} != Fault",
		"note":	"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:SystemState"
	},
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"/components/pcs_registers_fast:reset",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	},
	"FrequencySetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"cmdVar":	"",
		"expression":	"{1} >= 55 and {1} <= 65 and {2} == FormVF",
		"note1":	"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	2,
		"useExpr":	true,
		"value":	60,
		"variable1":	"/controls/pcs:FrequencySetpoint",
		"variable2":	"/status/pcs:GridMode"
	},
	"FrequencySetpointEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:frequency_setpoint@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and {2} == FormVF",
		"note":	"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:GridMode"
	},
	"GridFollowPQ":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"expression":	"{1} == Stop or {1} == Fault",
		"note1":	"Grid-following mode command to send to PCS if the PCS is in Stop or Fault",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"sendCmdTimeout":	3,
		"useExpr":	true,
		"value":	1,
		"variable1":	"/status/pcs:SystemState"
	},
	"GridFollowPQEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:grid_follow_pq@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ",
		"note":	"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:SystemState",
		"variable3":	"/status/pcs:GridMode"
	},
	"GridFormVF":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"expression":	"{1} == Stop or {1} == Fault",
		"note1":	"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"sendCmdTimeout":	3,
		"useExpr":	true,
		"value":	2,
		"variable1":	"/status/pcs:SystemState"
	},
	"GridFormVFEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:grid_form_vf@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ",
		"note":	"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:SystemState",
		"variable3":	"/status/pcs:GridMode"
	},
	"GridFormVSG":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"expression":	"{1} == Stop or {1} == Fault",
		"note1":	"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"sendCmdTimeout":	3,
		"useExpr":	true,
		"value":	3,
		"variable1":	"/status/pcs:SystemState"
	},
	"GridFormVSGEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:grid_form_vsg@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ",
		"note":	"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:SystemState",
		"variable3":	"/status/pcs:GridMode"
	},
	"ReactivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"cmdVar":	"/components/pcs_registers_fast:q_q_reference",
		"expression":	"{1} != Stop and {1} != Fault",
		"note1":	"Send reactive power command to PCS",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:SystemState"
	},
	"ReactivePowerCmdConvert":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:ReactivePowerCmd@triggerCmd"
						}, {
							"uri":	"/controls/pcs:ReactivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1}",
		"ifChanged":	false,
		"note":	"Pass kVAR command to ReactivePowerCmd",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ReactivePowerCmdReal"
	},
	"ReactivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"cmdVar":	"",
		"expression":	"{1} > 0",
		"note1":	"Send reactive power ramp rate to PCS",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ReactivePowerRampRateCmd"
	},
	"ReactivePowerRampRateCmdConvert":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"
						}, {
							"uri":	"/controls/pcs:ReactivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1}",
		"ifChanged":	false,
		"note":	"Pass kVAR/s command to ReactivePowerRampRateCmd",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ReactivePowerRampRate"
	},
	"ReactivePowerSetpointEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:reactive_power_setpoint@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and {2} != Stop and {2} != Fault",
		"note":	"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:SystemState"
	},
	"Standby":	{
		"checkCmdHoldTimeout":	2,
		"checkCmdTimeout":	3,
		"cmdVar":	"/components/pcs_registers_slow:selector_status",
		"maxCmdTries":	2,
		"sendCmdTimeout":	3,
		"value":	2
	},
	"Start":	{
		"checkCmdHoldTimeout":	2,
		"checkCmdTimeout":	3,
		"cmdVar":	"/components/pcs_registers_slow:selector_status",
		"maxCmdTries":	2,
		"sendCmdTimeout":	3,
		"value":	1
	},
	"Stop":	{
		"checkCmdHoldTimeout":	2,
		"checkCmdTimeout":	3,
		"cmdVar":	"/components/pcs_registers_slow:selector_status",
		"maxCmdTries":	2,
		"sendCmdTimeout":	3,
		"value":	0
	},
	"VerifyActivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ActivePowerCmd",
		"variable2":	"/status/pcs:ActivePowerSetpointFeedback",
		"variable3":	"/config/pcs:PowerSetpointMargin"
	},
	"VerifyActivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ActivePowerRampRateCmd",
		"variable2":	"/status/pcs:ActivePowerRampRateFeedback",
		"variable3":	"/config/pcs:RampRateMargin"
	},
	"VerifyFrequencySetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:FrequencySetpoint",
		"variable2":	"/status/pcs:FrequencySetpointFeedback",
		"variable3":	"/config/pcs:FrequencySetpointMargin"
	},
	"VerifyGridFollowPQ":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"{1} == GridFollowPQ",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:GridMode"
	},
	"VerifyGridFormVF":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"{1} == GridFormVF",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:GridMode"
	},
	"VerifyGridFormVSG":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"{1} == GridFormVSG",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:GridMode"
	},
	"VerifyReactivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ReactivePowerCmd",
		"variable2":	"/status/pcs:ReactivePowerSetpointFeedback",
		"variable3":	"/config/pcs:PowerSetpointMargin"
	},
	"VerifyReactivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ReactivePowerRampRateCmd",
		"variable2":	"/status/pcs:ReactivePowerRampRateFeedback",
		"variable3":	"/config/pcs:RampRateMargin"
	},
	"VerifyStandby":	{
		"enableAlert":	false,
		"expression":	"{1} == Standby",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:SystemState"
	},
	"VerifyStart":	{
		"enableAlert":	false,
		"expression":	"{1} == Run",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:SystemState"
	},
	"VerifyStop":	{
		"enableAlert":	false,
		"expression":	"{1} == Stop",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:SystemState"
	},
	"VerifyVoltageSetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:VoltageSetpoint",
		"variable2":	"/status/pcs:VoltageSetpointFeedback",
		"variable3":	"/config/pcs:VoltageSetpointMargin"
	},
	"VoltageSetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"cmdVar":	"",
		"expression":	"{1} >= 460 and {1} <= 500 and {2} == FormVF",
		"note1":	"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	2,
		"useExpr":	true,
		"value":	480,
		"variable1":	"/controls/pcs:VoltageSetpoint",
		"variable2":	"/status/pcs:GridMode"
	},
	"VoltageSetpointEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:voltage_setpoint@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and {2} == FormVF",
		"note":	"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:GridMode"
	}
}].
[5.00349s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_ActivePowerCmd]
[5.00397s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_ActivePowerCmd]
[5.00451s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:ActivePowerCmd]  reload 0
[5.005s    ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:ActivePowerCmd]
[5.00558s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:ActivePowerCmd] to amap in asset [pcs]
[5.00589s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ActivePowerCmd]
[5.00643s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ActivePowerCmd]
[5.00705s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_ActivePowerRampRateCmd]
[5.00734s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_ActivePowerRampRateCmd]
[5.00791s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:ActivePowerRampRateCmd]  reload 0
[5.00828s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:ActivePowerRampRateCmd]
[5.00888s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:ActivePowerRampRateCmd] to amap in asset [pcs]
[5.00927s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ActivePowerRampRateCmd]
[5.00983s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ActivePowerRampRateCmd]
[5.01062s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_ClearFaults]
[5.01122s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_ClearFaults]
[5.01173s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:ClearFaults]  reload 0
[5.01227s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:ClearFaults]
[5.01352s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:ClearFaults] to amap in asset [pcs]
[5.01392s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ClearFaults]
[5.01447s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ClearFaults]
[5.01515s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_FrequencySetpoint]
[5.01546s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_FrequencySetpoint]
[5.01585s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:FrequencySetpoint]  reload 0
[5.01632s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:FrequencySetpoint]
[5.01683s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:FrequencySetpoint] to amap in asset [pcs]
[5.0172s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:FrequencySetpoint]
[5.01764s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:FrequencySetpoint]
[5.01826s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_GridFollowPQ]
[5.01888s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_GridFollowPQ]
[5.01952s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:GridFollowPQ]  reload 0
[5.01994s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:GridFollowPQ]
[5.0205s   ] [info    ] [HandleCmd      ] Adding [/controls/pcs:GridFollowPQ] to amap in asset [pcs]
[5.02117s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:GridFollowPQ]
[5.02176s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:GridFollowPQ]
[5.02256s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_GridFormVF]
[5.02311s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_GridFormVF]
[5.02386s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:GridFormVF]  reload 0
[5.02419s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:GridFormVF]
[5.02482s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:GridFormVF] to amap in asset [pcs]
[5.0255s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:GridFormVF]
[5.02593s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:GridFormVF]
[5.027s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_GridFormVSG]
[5.0379s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_GridFormVSG]
[5.03846s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:GridFormVSG]  reload 0
[5.03897s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:GridFormVSG]
[5.03957s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:GridFormVSG] to amap in asset [pcs]
[5.03998s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:GridFormVSG]
[5.04018s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:GridFormVSG]
[5.04126s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_ReactivePowerCmd]
[5.04161s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_ReactivePowerCmd]
[5.04185s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:ReactivePowerCmd]  reload 0
[5.04221s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:ReactivePowerCmd]
[5.04257s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:ReactivePowerCmd] to amap in asset [pcs]
[5.0429s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ReactivePowerCmd]
[5.04311s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ReactivePowerCmd]
[5.04355s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_ReactivePowerRampRateCmd]
[5.04386s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_ReactivePowerRampRateCmd]
[5.0443s   ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:ReactivePowerRampRateCmd]  reload 0
[5.04457s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:ReactivePowerRampRateCmd]
[5.04493s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:ReactivePowerRampRateCmd] to amap in asset [pcs]
[5.04535s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ReactivePowerRampRateCmd]
[5.04564s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ReactivePowerRampRateCmd]
[5.04642s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyActivePowerCmd]
[5.04667s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyActivePowerCmd]
[5.04689s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyActivePowerCmd]  reload 0
[5.04713s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyActivePowerCmd]
[5.04754s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyActivePowerCmd] to amap in asset [pcs]
[5.04781s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyActivePowerCmd]
[5.04806s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyActivePowerCmd]
[5.04847s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyActivePowerRampRateCmd]
[5.04877s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyActivePowerRampRateCmd]
[5.04907s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyActivePowerRampRateCmd]  reload 0
[5.04946s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyActivePowerRampRateCmd]
[5.04977s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyActivePowerRampRateCmd] to amap in asset [pcs]
[5.05005s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyActivePowerRampRateCmd]
[5.05031s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyActivePowerRampRateCmd]
[5.05074s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyFrequencySetpoint]
[5.05096s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyFrequencySetpoint]
[5.0512s   ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyFrequencySetpoint]  reload 0
[5.05143s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyFrequencySetpoint]
[5.05179s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyFrequencySetpoint] to amap in asset [pcs]
[5.05201s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyFrequencySetpoint]
[5.05233s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyFrequencySetpoint]
[5.05298s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyGridFollowPQ]
[5.0534s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyGridFollowPQ]
[5.05375s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyGridFollowPQ]  reload 0
[5.05414s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyGridFollowPQ]
[5.05444s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyGridFollowPQ] to amap in asset [pcs]
[5.05477s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyGridFollowPQ]
[5.05501s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyGridFollowPQ]
[5.05569s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyGridFormVF]
[5.05621s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyGridFormVF]
[5.05657s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyGridFormVF]  reload 0
[5.0569s   ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyGridFormVF]
[5.05724s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyGridFormVF] to amap in asset [pcs]
[5.05762s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyGridFormVF]
[5.05805s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyGridFormVF]
[5.05852s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyGridFormVSG]
[5.05894s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyGridFormVSG]
[5.05938s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyGridFormVSG]  reload 0
[5.0597s   ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyGridFormVSG]
[5.06011s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyGridFormVSG] to amap in asset [pcs]
[5.06046s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyGridFormVSG]
[5.06095s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyGridFormVSG]
[5.06143s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyReactivePowerCmd]
[5.06186s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyReactivePowerCmd]
[5.06226s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyReactivePowerCmd]  reload 0
[5.06258s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyReactivePowerCmd]
[5.063s    ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyReactivePowerCmd] to amap in asset [pcs]
[5.06335s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyReactivePowerCmd]
[5.06377s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyReactivePowerCmd]
[5.06456s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyReactivePowerRampRateCmd]
[5.065s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyReactivePowerRampRateCmd]
[5.0653s   ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyReactivePowerRampRateCmd]  reload 0
[5.06566s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyReactivePowerRampRateCmd]
[5.06605s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyReactivePowerRampRateCmd] to amap in asset [pcs]
[5.06667s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyReactivePowerRampRateCmd]
[5.06718s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyReactivePowerRampRateCmd]
[5.06794s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyVoltageSetpoint]
[5.06844s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyVoltageSetpoint]
[5.06881s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyVoltageSetpoint]  reload 0
[5.06928s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyVoltageSetpoint]
[5.06971s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyVoltageSetpoint] to amap in asset [pcs]
[5.07004s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyVoltageSetpoint]
[5.07041s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyVoltageSetpoint]
[5.07104s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VoltageSetpoint]
[5.07138s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VoltageSetpoint]
[5.07188s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VoltageSetpoint]  reload 0
[5.07226s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VoltageSetpoint]
[5.0728s   ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VoltageSetpoint] to amap in asset [pcs]
[5.07332s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VoltageSetpoint]
[5.07369s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VoltageSetpoint]
[5.07495s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/pcs:ActivePowerCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:ActivePowerCmdConvert":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ActivePowerRampRateCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:ActivePowerRampRateCmdConvert":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ActivePowerSetpointEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ClearFaults":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:FrequencySetpoint":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:FrequencySetpointEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:GridFollowPQ":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:GridFollowPQEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:GridFormVF":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:GridFormVFEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:GridFormVSG":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:GridFormVSGEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ReactivePowerCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:ReactivePowerCmdConvert":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ReactivePowerRampRateCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:ReactivePowerRampRateCmdConvert":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ReactivePowerSetpointEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:VerifyActivePowerCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyActivePowerRampRateCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyFrequencySetpoint":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyGridFollowPQ":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyGridFormVF":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyGridFormVSG":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyReactivePowerCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyReactivePowerRampRateCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyVoltageSetpoint":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VoltageSetpoint":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VoltageSetpointEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	}
}].
[5.07726s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:ActivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs:ActivePowerCmd",
		"value":	false
	},
	"ActivePowerRampRateCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:ActivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs:ActivePowerRampRateCmd",
		"value":	false
	},
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:ClearFaults"
						}, {
							"outValue":	"Clear",
							"uri":	"/faults/pcs:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/pcs:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear",
		"value":	false
	},
	"FrequencySetpointSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:FrequencySetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs:FrequencySetpoint",
		"value":	false
	},
	"GridFollowPQSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:VerifyGridFollowPQ@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:VerifyGridFollowPQ"
						}, {
							"inValue":	false,
							"outValue":	"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:GridFollowPQ"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm",
		"value":	false
	},
	"GridFormVFSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:VerifyGridFormVF@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:VerifyGridFormVF"
						}, {
							"inValue":	false,
							"outValue":	"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:GridFormVF"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm",
		"value":	false
	},
	"GridFormVSGSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:VerifyGridFormVSG@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:VerifyGridFormVSG"
						}, {
							"inValue":	false,
							"outValue":	"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:GridFormVSG"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm",
		"value":	false
	},
	"ReactivePowerCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:ReactivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs:ReactivePowerCmd",
		"value":	false
	},
	"ReactivePowerRampRateCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:ReactivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs:ReactivePowerRampRateCmd",
		"value":	false
	},
	"StandbySuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:VerifyStandby@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:VerifyStandby"
						}, {
							"inValue":	false,
							"outValue":	"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:Standby"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm",
		"value":	false
	},
	"StartSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:VerifyStart@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:VerifyStart"
						}, {
							"inValue":	false,
							"outValue":	"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:Start"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm",
		"value":	false
	},
	"StopSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:VerifyStop@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:VerifyStop"
						}, {
							"inValue":	false,
							"outValue":	"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:Stop"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm",
		"value":	false
	},
	"VerifyActivePowerCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyActivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm",
		"value":	false
	},
	"VerifyActivePowerRampRateCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyActivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm",
		"value":	false
	},
	"VerifyFrequencySetpointSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyFrequencySetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm",
		"value":	false
	},
	"VerifyGridFollowPQSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyGridFollowPQ"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not in grid-following after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyGridFormVFSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyGridFormVF"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyGridFormVSGSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyGridFormVSG"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyReactivePowerCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyReactivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm",
		"value":	false
	},
	"VerifyReactivePowerRampRateCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyReactivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm",
		"value":	false
	},
	"VerifyStandbySuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyStandby"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not on standby after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyStartSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyStart"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not running after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyStopSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyStop"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not stopped after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyVoltageSetpointSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyVoltageSetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm",
		"value":	false
	},
	"VoltageSetpointSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:VoltageSetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs:VoltageSetpoint",
		"value":	false
	}
}].
[5.08242s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[0]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending active power command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"ActivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[1]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[2]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending clear faults command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"FrequencySetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[3]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"GridFollowPQ":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[4]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending grid-following mode command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"GridFormVF":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[5]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"GridFormVSG":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[6]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"HeartbeatRead":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"type":	"alarm",
		"value":	"Normal"
	},
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"HeartbeatRead_state",
							"outValue":	"PCS Communication Failure",
							"uri":	"/alarms/pcs:HeartbeatRead"
						}, {
							"inValue":	"ActivePower_limit_max",
							"note":	"Bit 0 - PCS Active Power Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_alarms[0]"
						}, {
							"inValue":	"DCVoltage_limit_max",
							"note":	"Bit 1 - PCS DC Voltage Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_alarms[1]"
						}, {
							"inValue":	"DCVoltage_limit_min",
							"note":	"Bit 2 - PCS DC Voltage Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_alarms[2]"
						}, {
							"inValue":	"NumModulesOnline_limit_min",
							"note":	"Bit 3 - PCS Number of Modules Online Below Min Threshold",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_alarms[3]"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"ReactivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[7]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending reactive power command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"ReactivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[8]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"Standby":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[9]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending standby command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"Start":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[10]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending start command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"Stop":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[11]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending stop command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyActivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[12]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyActivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[13]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyFrequencySetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[14]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyGridFollowPQ":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[15]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to transition to grid-following",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyGridFormVF":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[16]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyGridFormVSG":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[17]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyReactivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[18]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyReactivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[19]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyStandby":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[20]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to transition to standby",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyStart":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[21]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to start",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyStop":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[22]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to stop",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyVoltageSetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[23]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VoltageSetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[24]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"numVars":	4,
		"type":	"alarm",
		"value":	"Normal",
		"variable1":	"DCVoltage",
		"variable2":	"HeartbeatRead",
		"variable3":	"ActivePower",
		"variable4":	"NumModulesOnline"
	}
}].
[5.08544s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.08615s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.08694s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs:FaultDestination]
[5.08744s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs:FaultDestination]
[5.08807s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs:NoFaultMsg]
[5.08844s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs:NoFaultMsg]
[5.08918s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:FaultCnt]
[5.08967s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:FaultCnt]
[5.0901s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs:AlarmDestination]
[5.09042s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs:AlarmDestination]
[5.09079s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs:NoAlarmMsg]
[5.09104s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs:NoAlarmMsg]
[5.09132s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:AlarmCnt]
[5.09159s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:AlarmCnt]
[5.09202s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.09227s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.0926s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.09288s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.09335s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.09365s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.09427s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.09462s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.09503s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.09546s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.09587s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.09642s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.097s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.09728s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.09766s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.09795s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.09849s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.09887s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.09946s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.09985s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.10025s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.1006s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.10115s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.10158s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.10241s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.10294s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.10382s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.10438s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.10545s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.10584s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.10744s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.1079s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.1083s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.10861s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.10896s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.1094s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.10981s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.11014s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.11064s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.11105s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.11145s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.1118s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.11212s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.11259s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.11308s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.11344s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.11391s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.1143s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.1148s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.11503s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.11564s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.11614s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.11703s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.11748s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.11835s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"HeartbeatRead":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"type":	"fault",
		"value":	"Normal"
	},
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"HeartbeatRead_state",
							"outValue":	"PCS Communication Failure",
							"uri":	"/faults/pcs:HeartbeatRead"
						}, {
							"inValue":	"ActivePower_limit_max",
							"note":	"Bit 0 - PCS Active Power Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_faults[0]"
						}, {
							"inValue":	"DCVoltage_limit_max",
							"note":	"Bit 1 - PCS DC Voltage Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_faults[1]"
						}, {
							"inValue":	"DCVoltage_limit_min",
							"note":	"Bit 2 - PCS DC Voltage Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_faults[2]"
						}, {
							"inValue":	"NumModulesOnline_limit_min",
							"note":	"Bit 3 - PCS Number of Modules Online Below Min Threshold",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_faults[3]"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"numVars":	4,
		"type":	"fault",
		"value":	"Normal",
		"variable1":	"DCVoltage",
		"variable2":	"HeartbeatRead",
		"variable3":	"ActivePower",
		"variable4":	"NumModulesOnline"
	}
}].
[5.11887s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.11947s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.12049s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.12117s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.12185s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.12219s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.12273s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/pcs:ActivePower":	{
		"amap":	"pcs",
		"func":	"CheckMonitorVar"
	},
	"/status/pcs:DCVoltage":	{
		"amap":	"pcs",
		"func":	"CheckMonitorVar"
	},
	"/status/pcs:HeartbeatRead":	{
		"amap":	"pcs",
		"func":	"CheckMonitorVar"
	},
	"/status/pcs:IsAlarming":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:IsFaulted":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:NumModulesOnline":	{
		"amap":	"pcs",
		"func":	"CheckMonitorVar"
	},
	"/status/pcs:TotalAlarmCnt":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:TotalFaultCnt":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	}
}].
[5.12375s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePower":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	true,
		"MaxAlarmThreshold":	4200,
		"MaxAlarmTimeout":	1,
		"MaxFaultThreshold":	4250,
		"MaxFaultTimeout":	1.5,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	3510,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over active power conditions",
		"value":	0
	},
	"AlarmCnt":	0,
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	0,
							"uri":	"/site/ess:pcs_monitor_faults"
						}, {
							"outValue":	0,
							"uri":	"/site/ess:pcs_monitor_alarms"
						}, {
							"outValue":	0,
							"uri":	"/site/ess:pcs_control_alarms"
						}]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"DCVoltage":	{
		"EnableFaultCheck":	false,
		"EnableMaxValCheck":	false,
		"EnableMinValCheck":	false,
		"MaxAlarmThreshold":	3000,
		"MaxAlarmTimeout":	0,
		"MaxFaultThreshold":	4000,
		"MaxFaultTimeout":	0,
		"MaxRecoverTimeout":	0,
		"MaxResetValue":	2000,
		"MinAlarmThreshold":	1200,
		"MinAlarmTimeout":	0,
		"MinFaultThreshold":	1100,
		"MinFaultTimeout":	1,
		"MinRecoverTimeout":	1,
		"MinResetValue":	1140,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions",
		"value":	0
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ActivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ReactivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:Stop@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:Stop"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS",
		"value":	false
	},
	"HeartbeatRead":	{
		"AlarmTimeout":	10,
		"EnableAlert":	false,
		"EnableCommsCheck":	false,
		"EnableStateCheck":	false,
		"FaultTimeout":	15,
		"RecoverTimeout":	0.1,
		"Type":	"int",
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS",
		"value":	0
	},
	"IsAlarming":	{
		"expression":	"{1} > 0",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/pcs:TotalAlarmCnt"
	},
	"IsFaulted":	{
		"expression":	"{1} or {2} > 0",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/pcs:SystemFault",
		"variable2":	"/status/pcs:TotalFaultCnt"
	},
	"NumModulesOnline":	{
		"EnableFaultCheck":	true,
		"EnableMinValCheck":	false,
		"MinAlarmThreshold":	5,
		"MinAlarmTimeout":	5,
		"MinFaultThreshold":	2,
		"MinFaultTimeout":	10,
		"MinRecoverTimeout":	1,
		"MinResetValue":	5,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for under num instances condition",
		"note2":	"TODO: Update min alarm/fault/reset thresholds and timeouts",
		"note3":	"TODO: Decode or calculate num instances online and remap/link value to this variable",
		"value":	0
	},
	"SystemFault":	false,
	"TotalAlarmCnt":	{
		"numVars":	2,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:TotalAlarmCnt",
		"variable2":	"/status/pcs:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"numVars":	2,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:TotalFaultCnt",
		"variable2":	"/status/pcs:FaultCnt"
	}
}].
[5.12509s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:ActivePower_reload]
[5.12558s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:ActivePower_reload]
[5.12633s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/alarms/pcs:MonitorVarAlarm]
[5.1269s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/alarms/pcs:MonitorVarAlarm]
[5.12724s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/faults/pcs:MonitorVarFault]
[5.12766s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/faults/pcs:MonitorVarFault]
[5.12847s  ] [info    ] [CheckMonitorVar] Fault Destination for pcs with assetVar /status/pcs:ActivePower is /assets/pcs/summary:faults
[5.12897s  ] [info    ] [CheckMonitorVar] Alarm Destination for pcs with assetVar /status/pcs:ActivePower is /assets/pcs/summary:alarms
[5.12949s  ] [info    ] [CheckMonitorVar] Not set up for [ActivePower] reloadStr [ActivePower_reload]
[5.13051s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:DCVoltage_reload]
[5.13084s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:DCVoltage_reload]
[5.13139s  ] [info    ] [CheckMonitorVar] Fault Destination for pcs with assetVar /status/pcs:DCVoltage is /assets/pcs/summary:faults
[5.13171s  ] [info    ] [CheckMonitorVar] Alarm Destination for pcs with assetVar /status/pcs:DCVoltage is /assets/pcs/summary:alarms
[5.13247s  ] [info    ] [CheckMonitorVar] Not set up for [DCVoltage] reloadStr [DCVoltage_reload]
[5.13343s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:FaultShutdown]
[5.13383s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:FaultShutdown]
[5.13468s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HeartbeatRead_reload]
[5.13511s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HeartbeatRead_reload]
[5.13564s  ] [info    ] [CheckMonitorVar] Fault Destination for pcs with assetVar /status/pcs:HeartbeatRead is /assets/pcs/summary:faults
[5.13608s  ] [info    ] [CheckMonitorVar] Alarm Destination for pcs with assetVar /status/pcs:HeartbeatRead is /assets/pcs/summary:alarms
[5.13646s  ] [info    ] [CheckMonitorVar] Not set up for [HeartbeatRead] reloadStr [HeartbeatRead_reload]
[5.13708s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:NumModulesOnline_reload]
[5.13751s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:NumModulesOnline_reload]
[5.13796s  ] [info    ] [CheckMonitorVar] Fault Destination for pcs with assetVar /status/pcs:NumModulesOnline is /assets/pcs/summary:faults
[5.13839s  ] [info    ] [CheckMonitorVar] Alarm Destination for pcs with assetVar /status/pcs:NumModulesOnline is /assets/pcs/summary:alarms
[5.1388s   ] [info    ] [CheckMonitorVar] Not set up for [NumModulesOnline] reloadStr [NumModulesOnline_reload]
[5.13983s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"current_status":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	1,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	2,
							"outValue":	"Run",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	3,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	4,
							"outValue":	"Standby",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	5,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	6,
							"outValue":	"Fault",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	7,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	8,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	9,
							"outValue":	"Standby",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	10,
							"outValue":	"Fault",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	11,
							"outValue":	"Fault",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	12,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	13,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	14,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	15,
							"outValue":	"Standby",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	17,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	18,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	19,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	20,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	21,
							"outValue":	"Fault",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	22,
							"outValue":	"Fault",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	24,
							"outValue":	"Fault",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	0,
							"outValue":	"Power up",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	1,
							"outValue":	"Off",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	2,
							"outValue":	"On",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	3,
							"outValue":	"Precharge",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	4,
							"outValue":	"Ready",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	5,
							"outValue":	"Wait",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	6,
							"outValue":	"Off",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	7,
							"outValue":	"Stop",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	8,
							"outValue":	"Discharge",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	9,
							"outValue":	"Fault",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	10,
							"outValue":	"LVRT",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	11,
							"outValue":	"OVRT",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	12,
							"outValue":	"Night",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	13,
							"outValue":	"Night DC off",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	14,
							"outValue":	"Standby",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	15,
							"outValue":	"HVPL",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	17,
							"outValue":	"Pre-on",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	18,
							"outValue":	"Self-diagnosis",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	19,
							"outValue":	"Filter contactors",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	20,
							"outValue":	"Premagnetization",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	21,
							"outValue":	"Bank balancing",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	22,
							"outValue":	"CV stand by",
							"uri":	"/status/pcs:Status"
						}, {
							"enable":	"/config/pcs:enum_opt",
							"outValue":	true,
							"uri":	"/components/pcs_registers_fast:current_status@ifChanged",
							"useAv":	true
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[5.14141s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"checkInputs_pcs":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	false,
							"uri":	"/components/pcs_registers_fast:current_status@ifChanged"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"note":	"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change",
		"value":	0
	}
}].
[5.14233s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	"/components/pcs_registers_fast:active_power",
		"vlink":	"/status/pcs:ActivePower"
	},
	"active_power_setpoint_feedback":	{
		"value":	"/components/pcs_registers_fast:p_p_reference",
		"vlink":	"/status/pcs:ActivePowerSetpointFeedback"
	},
	"apparent_power":	{
		"value":	"/components/pcs_registers_fast:apparent_power",
		"vlink":	"/status/pcs:ApparentPower"
	},
	"frequency":	{
		"value":	"/components/pcs_registers_fast:grid_frequency",
		"vlink":	"/status/pcs:Frequency"
	},
	"heartbeat_read":	{
		"value":	"/components/pcs_registers_fast:seconds",
		"vlink":	"/status/pcs:HeartbeatRead"
	},
	"l1_current":	{
		"value":	"/components/pcs_registers_fast:grid_current_1",
		"vlink":	"/status/pcs:L1Current"
	},
	"l1_l2_voltage":	{
		"value":	"/components/pcs_registers_fast:grid_voltage_rs",
		"vlink":	"/status/pcs:L1L2Voltage"
	},
	"l2_current":	{
		"value":	"/components/pcs_registers_fast:grid_current_2",
		"vlink":	"/status/pcs:L2Current"
	},
	"l2_l3_voltage":	{
		"value":	"/components/pcs_registers_fast:grid_voltage_st",
		"vlink":	"/status/pcs:L2L3Voltage"
	},
	"l3_current":	{
		"value":	"/components/pcs_registers_fast:grid_current_3",
		"vlink":	"/status/pcs:L3Current"
	},
	"l3_l1_voltage":	{
		"value":	"/components/pcs_registers_fast:grid_voltage_tr",
		"vlink":	"/status/pcs:L3L1Voltage"
	},
	"modules_online":	{
		"value":	"/components/pcs_registers_fast:num_running_modules",
		"vlink":	"/status/pcs:NumModulesOnline"
	},
	"pcs_dc_current":	{
		"value":	"/components/pcs_registers_fast:dc_total_i_input",
		"vlink":	"/status/pcs:DCCurrent"
	},
	"pcs_dc_power":	{
		"value":	"/components/pcs_registers_fast:dc_p_input",
		"vlink":	"/status/pcs:DCPower"
	},
	"pcs_dc_voltage":	{
		"value":	"/components/pcs_registers_fast:vdc_bus_1",
		"vlink":	"/status/pcs:DCVoltage"
	},
	"power_factor":	{
		"value":	"/components/pcs_registers_fast:cosphi",
		"vlink":	"/status/pcs:PowerFactor"
	},
	"reactive_power":	{
		"value":	"/components/pcs_registers_fast:reactive_power",
		"vlink":	"/status/pcs:ReactivePower"
	},
	"reactive_power_setpoint_feedback":	{
		"value":	"/components/pcs_registers_fast:q_q_reference",
		"vlink":	"/status/pcs:ReactivePowerSetpointFeedback"
	}
}].
[5.14284s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:active_power]
[5.14312s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:active_power]
[5.1435s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:p_p_reference]
[5.14381s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:p_p_reference]
[5.14423s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:apparent_power]
[5.14467s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:apparent_power]
[5.14509s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:grid_frequency]
[5.14551s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:grid_frequency]
[5.14601s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:seconds]
[5.14663s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:seconds]
[5.14706s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:grid_current_1]
[5.14735s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:grid_current_1]
[5.14771s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:grid_voltage_rs]
[5.14869s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:grid_voltage_rs]
[5.14954s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:grid_current_2]
[5.15062s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:grid_current_2]
[5.15194s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:grid_voltage_st]
[5.15255s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:grid_voltage_st]
[5.15324s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:grid_current_3]
[5.15373s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:grid_current_3]
[5.15421s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:grid_voltage_tr]
[5.15459s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:grid_voltage_tr]
[5.15509s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:num_running_modules]
[5.15553s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:num_running_modules]
[5.15593s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:dc_total_i_input]
[5.15644s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:dc_total_i_input]
[5.15683s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:dc_p_input]
[5.15722s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:dc_p_input]
[5.15768s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:vdc_bus_1]
[5.15811s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:vdc_bus_1]
[5.15854s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:cosphi]
[5.15893s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:cosphi]
[5.15936s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:reactive_power]
[5.15975s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:reactive_power]
[5.16019s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:q_q_reference]
[5.16061s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:q_q_reference]
[5.1619s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power_ramp_rate":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/controls/pcs:ActivePowerRampRate"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"name":	"Active Power Ramp Rate",
		"note":	"Sets the active power ramp rate",
		"type":	"control",
		"units":	"kW/s",
		"value":	0
	},
	"active_power_setpoint":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/controls/pcs:ActivePowerSetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"name":	"Active Power Setpoint",
		"note":	"Sets the active power setpoint",
		"signed":	true,
		"type":	"control",
		"units":	"kW",
		"value":	0
	},
	"frequency_setpoint":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:FrequencySetpoint@triggerCmd"
						}, {
							"uri":	"/controls/pcs:FrequencySetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"name":	"Frequency Setpoint",
		"note":	"Sets the frequency setpoint",
		"type":	"control",
		"units":	"Hz",
		"value":	0
	},
	"on_off_grid_mode_setting":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	1,
							"outValue":	true,
							"uri":	"/controls/pcs:GridFollowPQ@triggerCmd"
						}, {
							"inValue":	1,
							"outValue":	1,
							"uri":	"/controls/pcs:GridFollowPQ"
						}, {
							"inValue":	2,
							"outValue":	true,
							"uri":	"/controls/pcs:GridFormVF@triggerCmd"
						}, {
							"inValue":	2,
							"outValue":	2,
							"uri":	"/controls/pcs:GridFormVF"
						}, {
							"inValue":	3,
							"outValue":	true,
							"uri":	"/controls/pcs:GridFormVSG@triggerCmd"
						}, {
							"inValue":	3,
							"outValue":	3,
							"uri":	"/controls/pcs:GridFormVSG"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"name":	"Grid-following/forming Mode Command",
		"note":	"Initiates PCS grid-following/forming command routines",
		"type":	"control",
		"value":	0
	},
	"pcs_active_power":	{
		"name":	"PCS Active Power",
		"signed":	true,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"pcs_active_power_ramp_rate_feedback":	{
		"name":	"PCS Active Power Ramp Rate Feedback",
		"type":	"status",
		"units":	"kW/s",
		"value":	0
	},
	"pcs_active_power_setpoint_feedback":	{
		"name":	"PCS Active Power Setpoint Feedback",
		"signed":	true,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"pcs_alarm_active":	{
		"name":	"PCS Alarm Active",
		"type":	"status",
		"value":	false
	},
	"pcs_apparent_power":	{
		"name":	"PCS Apparent Power",
		"signed":	true,
		"type":	"status",
		"units":	"kVA",
		"value":	0
	},
	"pcs_avg_line_voltage":	{
		"name":	"PCS Average Line Voltage",
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"pcs_comms_ok":	{
		"name":	"PCS Comms OK",
		"type":	"status",
		"value":	false
	},
	"pcs_control_alarms":	{
		"bit0":	"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit1":	"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit10":	"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit11":	"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit12":	"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout",
		"bit13":	"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
		"bit14":	"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout",
		"bit15":	"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout",
		"bit16":	"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout",
		"bit17":	"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout",
		"bit18":	"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout",
		"bit19":	"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
		"bit2":	"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit20":	"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout",
		"bit21":	"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout",
		"bit22":	"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout",
		"bit23":	"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout",
		"bit24":	"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit3":	"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit4":	"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit5":	"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit6":	"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit7":	"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit8":	"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit9":	"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"name":	"PCS Control Alarms",
		"type":	"bitfield",
		"value":	0
	},
	"pcs_dc_current":	{
		"name":	"PCS DC Current",
		"scale":	10,
		"signed":	true,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"pcs_dc_power":	{
		"name":	"PCS DC Power",
		"scale":	10,
		"signed":	true,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"pcs_dc_voltage":	{
		"name":	"PCS DC Voltage",
		"scale":	10,
		"signed":	true,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"pcs_fault_active":	{
		"name":	"PCS Fault Active",
		"type":	"status",
		"value":	false
	},
	"pcs_frequency":	{
		"name":	"PCS Grid Frequency",
		"scale":	100,
		"type":	"status",
		"units":	"Hz",
		"value":	0
	},
	"pcs_frequency_setpoint_feedback":	{
		"name":	"PCS Frequency Setpoint Feedback",
		"type":	"status",
		"units":	"Hz",
		"value":	0
	},
	"pcs_grid_mode":	{
		"bit0":	"FollowPQ",
		"bit1":	"FormVF",
		"bit2":	"FormVSG",
		"name":	"PCS Grid Mode",
		"type":	"bitfield",
		"value":	0
	},
	"pcs_is_running":	{
		"name":	"PCS is Running",
		"type":	"status",
		"value":	false
	},
	"pcs_l1_current":	{
		"name":	"PCS Grid Current 1",
		"scale":	10,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"pcs_l1_l2_voltage":	{
		"name":	"PCS Grid Voltage L1-L2",
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"pcs_l2_current":	{
		"name":	"PCS Grid Current 2",
		"scale":	10,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"pcs_l2_l3_voltage":	{
		"name":	"PCS Grid Voltage L2-L3",
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"pcs_l3_current":	{
		"name":	"PCS Grid Current 3",
		"scale":	10,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"pcs_l3_l1_voltage":	{
		"name":	"PCS Grid Voltage L3-L1",
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"pcs_max_charge_power":	{
		"name":	"PCS Max Charge Power",
		"signed":	true,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"pcs_max_discharge_power":	{
		"name":	"PCS Max Discharge Power",
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"pcs_max_igbt_temperature":	{
		"name":	"PCS Max IGBT Temperature",
		"scale":	100,
		"type":	"status",
		"units":	"°C",
		"value":	0
	},
	"pcs_monitor_alarms":	{
		"bit0":	"PCS Active Power Max Threshold Exceeded",
		"bit1":	"PCS DC Voltage Max Threshold Exceeded",
		"bit2":	"PCS DC Voltage Min Threshold Exceeded",
		"bit3":	"PCS Number of Modules Online Below Min Threshold",
		"name":	"PCS Monitor Alarms",
		"type":	"bitfield",
		"value":	0
	},
	"pcs_monitor_faults":	{
		"bit0":	"PCS Active Power Max Threshold Exceeded",
		"bit1":	"PCS DC Voltage Max Threshold Exceeded",
		"bit2":	"PCS DC Voltage Min Threshold Exceeded",
		"bit3":	"PCS Number of Modules Online Below Min Threshold",
		"name":	"PCS Monitor Faults",
		"type":	"bitfield",
		"value":	0
	},
	"pcs_num_modules_online":	{
		"name":	"PCS Number of Modules Online",
		"type":	"status",
		"value":	0
	},
	"pcs_num_modules_total":	{
		"name":	"PCS Number of Modules Total",
		"type":	"status",
		"value":	0
	},
	"pcs_power_factor":	{
		"name":	"PCS Power Factor",
		"scale":	1000,
		"signed":	true,
		"type":	"status",
		"value":	0
	},
	"pcs_rated_active_power":	{
		"name":	"PCS Rated Active Power",
		"signed":	true,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"pcs_rated_apparent_power":	{
		"name":	"PCS Rated Apparent Power",
		"signed":	true,
		"type":	"status",
		"units":	"kVA",
		"value":	0
	},
	"pcs_rated_reactive_power":	{
		"name":	"PCS Rated Reactive Power",
		"signed":	true,
		"type":	"status",
		"units":	"kVAR",
		"value":	0
	},
	"pcs_reactive_power":	{
		"name":	"PCS Reactive Power",
		"signed":	true,
		"type":	"status",
		"units":	"kVAR",
		"value":	0
	},
	"pcs_reactive_power_ramp_rate_feedback":	{
		"name":	"PCS Reactive Power Ramp Rate Feedback",
		"type":	"status",
		"units":	"kVAR/s",
		"value":	0
	},
	"pcs_reactive_power_setpoint_feedback":	{
		"name":	"PCS Reactive Power Setpoint Feedback",
		"signed":	true,
		"type":	"status",
		"units":	"kVAR",
		"value":	0
	},
	"pcs_standby_enabled":	{
		"excludeFromFile":	true,
		"name":	"PCS Standby Enabled",
		"type":	"status",
		"value":	false
	},
	"pcs_start_enabled":	{
		"excludeFromFile":	true,
		"name":	"PCS Start Enabled",
		"type":	"status",
		"value":	false
	},
	"pcs_status":	{
		"excludeFromFile":	true,
		"name":	"PCS Status",
		"type":	"status",
		"value":	"INIT"
	},
	"pcs_stop_enabled":	{
		"excludeFromFile":	true,
		"name":	"PCS Stop Enabled",
		"type":	"status",
		"value":	false
	},
	"pcs_system_state":	{
		"bit0":	"Stop",
		"bit1":	"Run",
		"bit2":	"Fault",
		"bit3":	"Standby",
		"name":	"PCS System State",
		"type":	"bitfield",
		"value":	0
	},
	"pcs_voltage_setpoint_feedback":	{
		"name":	"PCS Voltage Setpoint Feedback",
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"reactive_power_ramp_rate":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/controls/pcs:ReactivePowerRampRate"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"name":	"Reactive Power Ramp Rate",
		"note":	"Sets the reactive power ramp rate",
		"type":	"control",
		"units":	"kVAR/s",
		"value":	0
	},
	"reactive_power_setpoint":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/controls/pcs:ReactivePowerSetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"name":	"Reactive Power Setpoint",
		"note":	"Sets the reactive power setpoint",
		"signed":	true,
		"type":	"control",
		"units":	"kVAR",
		"value":	0
	},
	"start_stop_standby_command":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched"
						}]
				}]
		},
		"aname":	"ess",
		"debug":	0,
		"enable":	"/config/pcs:enable",
		"every":	0.5,
		"ifChanged":	false,
		"name":	"Start/Stop/Standby Command",
		"note1":	"Initiates PCS start, standby, or stop command routines",
		"note2":	"0->stop | 1->start | 2->standby",
		"offset":	0,
		"size":	1,
		"type":	"control",
		"uri":	"/sched/ess:SitePCSStatusControl",
		"value":	-1
	},
	"voltage_setpoint":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:VoltageSetpoint@triggerCmd"
						}, {
							"uri":	"/controls/pcs:VoltageSetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"name":	"Voltage Setpoint",
		"note":	"Sets the voltage setpoint",
		"type":	"control",
		"units":	"V",
		"value":	0
	}
}].
[5.16597s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.16801s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.16955s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"site_pcs_active_power":	{
		"value":	"/site/ess:pcs_active_power",
		"vlink":	"/status/pcs:ActivePower"
	},
	"site_pcs_active_power_ramp_rate_feedback":	{
		"value":	"/site/ess:pcs_active_power_ramp_rate_feedback",
		"vlink":	"/status/pcs:ActivePowerRampRateFeedback"
	},
	"site_pcs_active_power_setpoint_feedback":	{
		"value":	"/site/ess:pcs_active_power_setpoint_feedback",
		"vlink":	"/status/pcs:ActivePowerSetpointFeedback"
	},
	"site_pcs_alarm_active":	{
		"value":	"/site/ess:pcs_alarm_active",
		"vlink":	"/status/pcs:IsAlarming"
	},
	"site_pcs_apparent_power":	{
		"value":	"/site/ess:pcs_apparent_power",
		"vlink":	"/status/pcs:ApparentPower"
	},
	"site_pcs_avg_line_voltage":	{
		"value":	"/site/ess:pcs_avg_line_voltage",
		"vlink":	"/status/pcs:AvgLineVoltage"
	},
	"site_pcs_comms_ok":	{
		"value":	"/site/ess:pcs_comms_ok",
		"vlink":	"/status/pcs:CommsOK"
	},
	"site_pcs_dc_current":	{
		"value":	"/site/ess:pcs_dc_current",
		"vlink":	"/status/pcs:DCCurrent"
	},
	"site_pcs_dc_power":	{
		"value":	"/site/ess:pcs_dc_power",
		"vlink":	"/status/pcs:DCPower"
	},
	"site_pcs_dc_voltage":	{
		"value":	"/site/ess:pcs_dc_voltage",
		"vlink":	"/status/pcs:DCVoltage"
	},
	"site_pcs_fault_active":	{
		"value":	"/site/ess:pcs_fault_active",
		"vlink":	"/status/pcs:IsFaulted"
	},
	"site_pcs_frequency":	{
		"value":	"/site/ess:pcs_frequency",
		"vlink":	"/status/pcs:Frequency"
	},
	"site_pcs_frequency_setpoint_feedback":	{
		"value":	"/site/ess:pcs_frequency_setpoint_feedback",
		"vlink":	"/status/pcs:FrequencySetpointFeedback"
	},
	"site_pcs_is_running":	{
		"value":	"/site/ess:pcs_is_running",
		"vlink":	"/status/pcs:IsRunning"
	},
	"site_pcs_l1_current":	{
		"value":	"/site/ess:pcs_l1_current",
		"vlink":	"/status/pcs:L1Current"
	},
	"site_pcs_l1_l2_voltage":	{
		"value":	"/site/ess:pcs_l1_l2_voltage",
		"vlink":	"/status/pcs:L1L2Voltage"
	},
	"site_pcs_l2_current":	{
		"value":	"/site/ess:pcs_l2_current",
		"vlink":	"/status/pcs:L2Current"
	},
	"site_pcs_l2_l3_voltage":	{
		"value":	"/site/ess:pcs_l2_l3_voltage",
		"vlink":	"/status/pcs:L2L3Voltage"
	},
	"site_pcs_l3_current":	{
		"value":	"/site/ess:pcs_l3_current",
		"vlink":	"/status/pcs:L3Current"
	},
	"site_pcs_l3_l1_voltage":	{
		"value":	"/site/ess:pcs_l3_l1_voltage",
		"vlink":	"/status/pcs:L3L1Voltage"
	},
	"site_pcs_max_charge_power":	{
		"value":	"/site/ess:pcs_max_charge_power",
		"vlink":	"/limits/pcs:MaxPCSChargePower"
	},
	"site_pcs_max_discharge_power":	{
		"value":	"/site/ess:pcs_max_discharge_power",
		"vlink":	"/limits/pcs:MaxPCSDischargePower"
	},
	"site_pcs_max_igbt_temperature":	{
		"value":	"/site/ess:pcs_max_igbt_temperature",
		"vlink":	"/status/pcs:MaxIGBTTemperature"
	},
	"site_pcs_num_modules_online":	{
		"value":	"/site/ess:pcs_num_modules_online",
		"vlink":	"/status/pcs:NumModulesOnline"
	},
	"site_pcs_num_modules_total":	{
		"value":	"/site/ess:pcs_num_modules_total",
		"vlink":	"/status/pcs:NumModulesTotal"
	},
	"site_pcs_power_factor":	{
		"value":	"/site/ess:pcs_power_factor",
		"vlink":	"/status/pcs:PowerFactor"
	},
	"site_pcs_rated_active_power":	{
		"value":	"/site/ess:pcs_rated_active_power",
		"vlink":	"/limits/pcs:RatedActivePower"
	},
	"site_pcs_rated_apparent_power":	{
		"value":	"/site/ess:pcs_rated_apparent_power",
		"vlink":	"/limits/pcs:RatedApparentPower"
	},
	"site_pcs_rated_reactive_power":	{
		"value":	"/site/ess:pcs_rated_reactive_power",
		"vlink":	"/limits/pcs:RatedReactivePower"
	},
	"site_pcs_reactive_power":	{
		"value":	"/site/ess:pcs_reactive_power",
		"vlink":	"/status/pcs:ReactivePower"
	},
	"site_pcs_reactive_power_ramp_rate_feedback":	{
		"value":	"/site/ess:pcs_reactive_power_ramp_rate_feedback",
		"vlink":	"/status/pcs:ReactivePowerRampRateFeedback"
	},
	"site_pcs_reactive_power_setpoint_feedback":	{
		"value":	"/site/ess:pcs_reactive_power_setpoint_feedback",
		"vlink":	"/status/pcs:ReactivePowerSetpointFeedback"
	},
	"site_pcs_standby_enabled":	{
		"value":	"/site/ess:pcs_standby_enabled",
		"vlink":	"/status/pcs:StandbyEnabled"
	},
	"site_pcs_start_enabled":	{
		"value":	"/site/ess:pcs_start_enabled",
		"vlink":	"/status/pcs:StartEnabled"
	},
	"site_pcs_status":	{
		"value":	"/site/ess:pcs_status",
		"vlink":	"/status/pcs:Status"
	},
	"site_pcs_stop_enabled":	{
		"value":	"/site/ess:pcs_stop_enabled",
		"vlink":	"/status/pcs:StopEnabled"
	},
	"site_pcs_voltage_setpoint_feedback":	{
		"value":	"/site/ess:pcs_voltage_setpoint_feedback",
		"vlink":	"/status/pcs:VoltageSetpointFeedback"
	}
}].
[5.1707s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_active_power]
[5.17113s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_active_power]
[5.17146s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_active_power_ramp_rate_feedback]
[5.17171s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_active_power_ramp_rate_feedback]
[5.17206s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_active_power_setpoint_feedback]
[5.1724s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_active_power_setpoint_feedback]
[5.17286s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_alarm_active]
[5.17327s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_alarm_active]
[5.17369s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_apparent_power]
[5.17398s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_apparent_power]
[5.17426s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_avg_line_voltage]
[5.17455s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_avg_line_voltage]
[5.17514s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_comms_ok]
[5.17544s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_comms_ok]
[5.17579s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_dc_current]
[5.17608s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_dc_current]
[5.17669s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_dc_power]
[5.17718s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_dc_power]
[5.17772s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_dc_voltage]
[5.1782s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_dc_voltage]
[5.17899s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_fault_active]
[5.17964s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_fault_active]
[5.18001s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_frequency]
[5.18037s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_frequency]
[5.18074s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_frequency_setpoint_feedback]
[5.18098s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_frequency_setpoint_feedback]
[5.18132s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_is_running]
[5.1818s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_is_running]
[5.18216s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_l1_current]
[5.18249s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_l1_current]
[5.18285s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_l1_l2_voltage]
[5.18328s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_l1_l2_voltage]
[5.18378s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_l2_current]
[5.19129s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_l2_current]
[5.19243s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_l2_l3_voltage]
[5.19336s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_l2_l3_voltage]
[5.19414s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_l3_current]
[5.1946s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_l3_current]
[5.19507s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_l3_l1_voltage]
[5.19555s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_l3_l1_voltage]
[5.19606s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_max_charge_power]
[5.1964s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_max_charge_power]
[5.19797s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_max_discharge_power]
[5.19854s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_max_discharge_power]
[5.19905s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_max_igbt_temperature]
[5.19949s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_max_igbt_temperature]
[5.20013s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_num_modules_online]
[5.20057s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_num_modules_online]
[5.201s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_num_modules_total]
[5.20155s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_num_modules_total]
[5.20197s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_power_factor]
[5.20234s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_power_factor]
[5.20262s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_rated_active_power]
[5.2029s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_rated_active_power]
[5.20316s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_rated_apparent_power]
[5.20354s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_rated_apparent_power]
[5.20389s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_rated_reactive_power]
[5.20437s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_rated_reactive_power]
[5.20469s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_reactive_power]
[5.20508s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_reactive_power]
[5.2055s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_reactive_power_ramp_rate_feedback]
[5.20587s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_reactive_power_ramp_rate_feedback]
[5.20649s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_reactive_power_setpoint_feedback]
[5.20681s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_reactive_power_setpoint_feedback]
[5.20719s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_standby_enabled]
[5.2075s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_standby_enabled]
[5.20784s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_start_enabled]
[5.20819s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_start_enabled]
[5.20862s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_status]
[5.2092s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_status]
[5.20984s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_stop_enabled]
[5.21111s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_stop_enabled]
[5.21168s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_voltage_setpoint_feedback]
[5.21212s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_voltage_setpoint_feedback]
[5.21361s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	0
	},
	"active_power_ramp_rate":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/controls/pcs:ActivePowerRampRate"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the active power ramp rate",
		"value":	0
	},
	"active_power_ramp_rate_feedback":	{
		"value":	0
	},
	"active_power_setpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/controls/pcs:ActivePowerSetpoint"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the active power setpoint",
		"value":	0
	},
	"active_power_setpoint_feedback":	{
		"value":	0
	},
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"apparent_power":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"comms_ok":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"frequency":	{
		"value":	0
	},
	"frequency_setpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:FrequencySetpoint@triggerCmd"
						}, {
							"uri":	"/controls/pcs:FrequencySetpoint"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the frequency setpoint while the PCS is in grid-forming (VF)",
		"value":	0
	},
	"frequency_setpoint_feedback":	{
		"value":	0
	},
	"grid_follow_pq":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:GridFollowPQ@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	1,
							"uri":	"/controls/pcs:GridFollowPQ"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate command routine for setting PCS to grid-following",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"grid_form_vf":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:GridFormVF@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	2,
							"uri":	"/controls/pcs:GridFormVF"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate command routine for setting PCS to grid-forming (voltage and frequency)",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"grid_form_vsg":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:GridFormVSG@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	3,
							"uri":	"/controls/pcs:GridFormVSG"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate command routine for setting PCS to grid-forming (virtual synchronous generator)",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"grid_mode":	{
		"value":	"INIT"
	},
	"l1_current":	{
		"value":	0
	},
	"l1_l2_voltage":	{
		"value":	0
	},
	"l2_current":	{
		"value":	0
	},
	"l2_l3_voltage":	{
		"value":	0
	},
	"l3_current":	{
		"value":	0
	},
	"l3_l1_voltage":	{
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/pcs/summary:clear_faults@enabled"
						}, {
							"uri":	"/assets/pcs/summary:active_power_ramp_rate@enabled"
						}, {
							"uri":	"/assets/pcs/summary:reactive_power_ramp_rate@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"max_igbt_temperature":	{
		"value":	0
	},
	"num_modules_online":	{
		"value":	0
	},
	"num_modules_total":	{
		"value":	0
	},
	"power_factor":	{
		"value":	0
	},
	"rated_active_power":	{
		"value":	0
	},
	"rated_apparent_power":	{
		"value":	0
	},
	"rated_power_factor":	{
		"value":	0
	},
	"rated_reactive_power":	{
		"value":	0
	},
	"reactive_power":	{
		"value":	0
	},
	"reactive_power_ramp_rate":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/controls/pcs:ReactivePowerRampRate"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the reactive power ramp rate",
		"value":	0
	},
	"reactive_power_ramp_rate_feedback":	{
		"value":	0
	},
	"reactive_power_setpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/controls/pcs:ReactivePowerSetpoint"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the reactive power setpoint",
		"value":	0
	},
	"reactive_power_setpoint_feedback":	{
		"value":	0
	},
	"standby":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched",
							"inValue":	true
						}]
				}]
		},
		"aname":	"pcs",
		"debug":	0,
		"enabled":	false,
		"every":	0.5,
		"name":	"Standby PCS",
		"note":	"Enabled conditions: [/status/bms/DCClosed] && [/assets/pcs/summary/maint_mode] && [/status/pcs/SystemState == (Stop || Run)]",
		"offset":	0,
		"scaler":	0,
		"type":	"enum_button",
		"ui_type":	"control",
		"unit":	"",
		"uri":	"/sched/pcs:LocalStandbyPCS",
		"value":	false
	},
	"start":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched",
							"inValue":	true
						}]
				}]
		},
		"aname":	"pcs",
		"debug":	0,
		"enabled":	false,
		"every":	0.5,
		"name":	"Start PCS",
		"note":	"Enabled conditions: [/status/bms/DCClosed] && [/assets/pcs/summary/maint_mode] && ![/status/pcs/IsFaulted]",
		"offset":	0,
		"scaler":	0,
		"type":	"enum_button",
		"ui_type":	"control",
		"unit":	"",
		"uri":	"/sched/pcs:LocalStartPCS",
		"value":	false
	},
	"status":	{
		"value":	"INIT"
	},
	"stop":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched",
							"inValue":	true
						}]
				}]
		},
		"aname":	"pcs",
		"debug":	0,
		"enabled":	false,
		"every":	0.5,
		"name":	"Stop PCS",
		"note":	"Enabled conditions: [/assets/pcs/summary/maint_mode] && [/status/pcs/SystemState != Stop]",
		"offset":	0,
		"scaler":	0,
		"type":	"enum_button",
		"ui_type":	"control",
		"unit":	"",
		"uri":	"/sched/pcs:LocalStopPCS",
		"value":	false
	},
	"system_state":	{
		"value":	"INIT"
	},
	"voltage_setpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:VoltageSetpoint@triggerCmd"
						}, {
							"uri":	"/controls/pcs:VoltageSetpoint"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the voltage setpoint while the PCS is in grid-forming (VF)",
		"value":	0
	},
	"voltage_setpoint_feedback":	{
		"value":	0
	}
}].
[5.21567s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.21605s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.21687s  ] [info    ] [LogInfo        ] [/assets/pcs/summary:maint_mode] received a value of [false]
[5.21753s  ] [info    ] [setParamfromAf ]  created var for uri [/assets/pcs/summary] as [/assets/pcs/summary:reactive_power_ramp_rate]
[5.21838s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"Failed Attempt to update [/assets/pcs/summary:standby] because [standby@enabled:false] == true","severity":1}]
[5.21887s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"Failed Attempt to update [/assets/pcs/summary:start] because [start@enabled:false] == true","severity":1}]
[5.21934s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.2197s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.22025s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"Failed Attempt to update [/assets/pcs/summary:stop] because [stop@enabled:false] == true","severity":1}]
[5.22071s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.2211s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.22205s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_active_power":	{
		"value":	"/assets/pcs/summary:active_power",
		"vlink":	"/status/pcs:ActivePower"
	},
	"ui_active_power_ramp_rate_feedback":	{
		"value":	"/assets/pcs/summary:active_power_ramp_rate_feedback",
		"vlink":	"/status/pcs:ActivePowerRampRateFeedback"
	},
	"ui_active_power_setpoint_feedback":	{
		"value":	"/assets/pcs/summary:active_power_setpoint_feedback",
		"vlink":	"/status/pcs:ActivePowerSetpointFeedback"
	},
	"ui_apparent_power":	{
		"value":	"/assets/pcs/summary:apparent_power",
		"vlink":	"/status/pcs:ApparentPower"
	},
	"ui_comms_ok":	{
		"value":	"/assets/pcs/summary:comms_ok",
		"vlink":	"/status/pcs:CommsOK"
	},
	"ui_dc_current":	{
		"value":	"/assets/pcs/summary:dc_current",
		"vlink":	"/status/pcs:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/pcs/summary:dc_power",
		"vlink":	"/status/pcs:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/pcs/summary:dc_voltage",
		"vlink":	"/status/pcs:DCVoltage"
	},
	"ui_frequency":	{
		"value":	"/assets/pcs/summary:frequency",
		"vlink":	"/status/pcs:Frequency"
	},
	"ui_frequency_setpoint_feedback":	{
		"value":	"/assets/pcs/summary:frequency_setpoint_feedback",
		"vlink":	"/status/pcs:FrequencySetpointFeedback"
	},
	"ui_grid_mode":	{
		"value":	"/assets/pcs/summary:grid_mode",
		"vlink":	"/status/pcs:GridMode"
	},
	"ui_l1_current":	{
		"value":	"/assets/pcs/summary:l1_current",
		"vlink":	"/status/pcs:L1Current"
	},
	"ui_l1_l2_voltage":	{
		"value":	"/assets/pcs/summary:l1_l2_voltage",
		"vlink":	"/status/pcs:L1L2Voltage"
	},
	"ui_l2_current":	{
		"value":	"/assets/pcs/summary:l2_current",
		"vlink":	"/status/pcs:L2Current"
	},
	"ui_l2_l3_voltage":	{
		"value":	"/assets/pcs/summary:l2_l3_voltage",
		"vlink":	"/status/pcs:L2L3Voltage"
	},
	"ui_l3_current":	{
		"value":	"/assets/pcs/summary:l3_current",
		"vlink":	"/status/pcs:L3Current"
	},
	"ui_l3_l1_voltage":	{
		"value":	"/assets/pcs/summary:l3_l1_voltage",
		"vlink":	"/status/pcs:L3L1Voltage"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/pcs/summary:max_charge_power",
		"vlink":	"/limits/pcs:MaxPCSChargePower"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/pcs/summary:max_discharge_power",
		"vlink":	"/limits/pcs:MaxPCSDischargePower"
	},
	"ui_max_igbt_temperature":	{
		"value":	"/assets/pcs/summary:max_igbt_temperature",
		"vlink":	"/status/pcs:MaxIGBTTemperature"
	},
	"ui_num_modules_online":	{
		"value":	"/assets/pcs/summary:num_modules_online",
		"vlink":	"/status/pcs:NumModulesOnline"
	},
	"ui_num_modules_total":	{
		"value":	"/assets/pcs/summary:num_modules_total",
		"vlink":	"/status/pcs:NumModulesTotal"
	},
	"ui_power_factor":	{
		"value":	"/assets/pcs/summary:power_factor",
		"vlink":	"/status/pcs:PowerFactor"
	},
	"ui_rated_active_power":	{
		"value":	"/assets/pcs/summary:rated_active_power",
		"vlink":	"/limits/pcs:RatedActivePower"
	},
	"ui_rated_apparent_power":	{
		"value":	"/assets/pcs/summary:rated_apparent_power",
		"vlink":	"/limits/pcs:RatedApparentPower"
	},
	"ui_rated_power_factor":	{
		"value":	"/assets/pcs/summary:rated_power_factor",
		"vlink":	"/config/pcs:RatedPowerFactor"
	},
	"ui_rated_reactive_power":	{
		"value":	"/assets/pcs/summary:rated_reactive_power",
		"vlink":	"/limits/pcs:RatedReactivePower"
	},
	"ui_reactive_power":	{
		"value":	"/assets/pcs/summary:reactive_power",
		"vlink":	"/status/pcs:ReactivePower"
	},
	"ui_reactive_power_ramp_rate_feedback":	{
		"value":	"/assets/pcs/summary:reactive_power_ramp_rate_feedback",
		"vlink":	"/status/pcs:ReactivePowerRampRateFeedback"
	},
	"ui_reactive_power_setpoint_feedback":	{
		"value":	"/assets/pcs/summary:reactive_power_setpoint_feedback",
		"vlink":	"/status/pcs:ReactivePowerSetpointFeedback"
	},
	"ui_status":	{
		"value":	"/assets/pcs/summary:status",
		"vlink":	"/status/pcs:Status"
	},
	"ui_system_state":	{
		"value":	"/assets/pcs/summary:system_state",
		"vlink":	"/status/pcs:SystemState"
	},
	"ui_voltage_setpoint_feedback":	{
		"value":	"/assets/pcs/summary:voltage_setpoint_feedback",
		"vlink":	"/status/pcs:VoltageSetpointFeedback"
	}
}].
[5.223s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:active_power]
[5.22341s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:active_power]
[5.22373s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:active_power_ramp_rate_feedback]
[5.22407s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:active_power_ramp_rate_feedback]
[5.22446s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:active_power_setpoint_feedback]
[5.22471s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:active_power_setpoint_feedback]
[5.22511s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:apparent_power]
[5.22561s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:apparent_power]
[5.22598s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:comms_ok]
[5.2264s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:comms_ok]
[5.22695s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:dc_current]
[5.22726s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:dc_current]
[5.22775s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:dc_power]
[5.22808s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:dc_power]
[5.22833s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:dc_voltage]
[5.22873s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:dc_voltage]
[5.22927s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:frequency]
[5.22967s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:frequency]
[5.22996s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:frequency_setpoint_feedback]
[5.23022s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:frequency_setpoint_feedback]
[5.23061s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:grid_mode]
[5.23089s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:grid_mode]
[5.23146s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:l1_current]
[5.23175s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:l1_current]
[5.23202s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:l1_l2_voltage]
[5.23246s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:l1_l2_voltage]
[5.23279s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:l2_current]
[5.23318s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:l2_current]
[5.23357s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:l2_l3_voltage]
[5.23402s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:l2_l3_voltage]
[5.23448s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:l3_current]
[5.23475s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:l3_current]
[5.23502s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:l3_l1_voltage]
[5.23527s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:l3_l1_voltage]
[5.23561s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:max_charge_power]
[5.23598s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:max_charge_power]
[5.23639s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:max_discharge_power]
[5.23676s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:max_discharge_power]
[5.23711s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:max_igbt_temperature]
[5.23752s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:max_igbt_temperature]
[5.23796s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:num_modules_online]
[5.23869s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:num_modules_online]
[5.23915s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:num_modules_total]
[5.23944s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:num_modules_total]
[5.23975s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:power_factor]
[5.24011s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:power_factor]
[5.24051s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:rated_active_power]
[5.24089s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:rated_active_power]
[5.24134s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:rated_apparent_power]
[5.24177s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:rated_apparent_power]
[5.24221s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:rated_power_factor]
[5.24265s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:rated_power_factor]
[5.24301s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:rated_reactive_power]
[5.2433s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:rated_reactive_power]
[5.24373s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:reactive_power]
[5.24404s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:reactive_power]
[5.24455s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:reactive_power_ramp_rate_feedback]
[5.245s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:reactive_power_ramp_rate_feedback]
[5.24538s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:reactive_power_setpoint_feedback]
[5.24577s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:reactive_power_setpoint_feedback]
[5.24625s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:status]
[5.24729s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:status]
[5.24784s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:system_state]
[5.24837s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:system_state]
[5.24892s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:voltage_setpoint_feedback]
[5.24944s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:voltage_setpoint_feedback]
[5.25127s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [module_1]
[5.25218s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [module_1] parent am [pcs] 
[5.25311s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [module_1]
[5.25359s  ] [info    ] [configure_vmapS] body: {"/config/module_1":{"AlarmDestination":"/assets/pcs/module_1:alarms","FaultDestination":"/assets/pcs/module_1:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/module_1":{"pubAssets_module_1":{"actions":{"onSet":[{"func":[{"amap":"module_1","func":"RunPub"}]}]},"enable":"/config/module_1:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/module_1)","table":"/assets/pcs/module_1","value":1},"runMonitor_module_1":{"actions":{"onSet":[{"func":[{"amap":"module_1","func":"RunMonitor"}]}]},"aname":"module_1","enable":"/config/module_1:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/module_1","value":1}},"/status/module_1":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"module_1","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/module_1) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"module_1","every":1,"uri":"/sched/module_1:pubAssets_module_1","value":1},{"aname":"module_1","every":0.1,"uri":"/sched/module_1:runMonitor_module_1","value":1},{"aname":"module_1","every":1,"uri":"/sched/module_1:checkInputs_module_1","value":1}],"targav":"/system/commands:run","value":false}},"/controls/module_1":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"module_1","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/module_1":{"/controls/module_1:ClearFaults":{"amap":"module_1","func":"HandleCmd"}},"/status/module_1":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/module_1:clear_faults"},{"outValue":"Clear","uri":"/alarms/module_1:clear_alarms"}]}]},"enable":"/config/module_1:enable","ifChanged":false,"note":"When this variable is set, /faults/module_1:clear_faults and /alarms/module_1:clear_alarms will be set to Clear","value":false}},"/alarms/module_1":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"module_1","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/module_1) will be reset to the normal state (defined in /config/module_1:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/module_1":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_1","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/module_1) will be reset to the normal state (defined in /config/module_1:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/module_1":{"/status/module_1:TotalAlarmCnt":{"amap":"module_1","func":"CalculateVar"},"/status/module_1:TotalFaultCnt":{"amap":"module_1","func":"CalculateVar"}},"/status/module_1":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"module_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_1:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_1:FaultCnt"}},"/schedule/wake_monitor/module_1":{"/status/module_1:CurrentFault":{"func":"CalculateVar"},"/status/module_1:CurrentWarning":{"func":"CalculateVar"},"/status/module_1:PCSDCPower":{"func":"CalculateVar"}},"/status/module_1":{"CurrentFault":{"expression":"if ((1 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((1 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/module_1:PCSDCVoltage","variable2":"/status/module_1:PCSDCCurrent"}},"/vlinks/module_1":{"active_power":{"value":"/components/pcs_registers_fast:module_1_p","vlink":"/status/module_1:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:module_1_dc_voltage_p","vlink":"/status/module_1:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:module_1_current_r","vlink":"/status/module_1:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:module_1_current_s","vlink":"/status/module_1:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:module_1_current_t","vlink":"/status/module_1:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:module_1_max_temp","vlink":"/status/module_1:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:module_1_dc_current","vlink":"/status/module_1:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:module_1_dc_voltage","vlink":"/status/module_1:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:module_1_q","vlink":"/status/module_1:ReactivePower"}},"/assets/pcs/module_1":{"active_power":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/module_1:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/module_1:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"l1_current":{"value":0},"l2_current":{"value":0},"l3_current":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"module_1","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/module_1:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_igbt_temperature":{"value":0},"reactive_power":{"value":0},"status":{"value":"INIT"}},"/vlinks/module_1":{"ui_active_power":{"value":"/assets/pcs/module_1:active_power","vlink":"/status/module_1:ActivePower"},"ui_apparent_power":{"value":"/assets/pcs/module_1:apparent_power","vlink":"/status/module_1:ApparentPower"},"ui_dc_current":{"value":"/assets/pcs/module_1:dc_current","vlink":"/status/module_1:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/module_1:dc_power","vlink":"/status/module_1:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/module_1:dc_voltage","vlink":"/status/module_1:DCVoltage"},"ui_l1_current":{"value":"/assets/pcs/module_1:l1_current","vlink":"/status/module_1:L1Current"},"ui_l2_current":{"value":"/assets/pcs/module_1:l2_current","vlink":"/status/module_1:L2Current"},"ui_l3_current":{"value":"/assets/pcs/module_1:l3_current","vlink":"/status/module_1:L3Current"},"ui_max_igbt_temperature":{"value":"/assets/pcs/module_1:max_igbt_temperature","vlink":"/status/module_1:MaxIGBTTemperature"},"ui_reactive_power":{"value":"/assets/pcs/module_1:reactive_power","vlink":"/status/module_1:ReactivePower"},"ui_status":{"value":"/assets/pcs/module_1:status","vlink":"/status/module_1:Status"}}}
[5.25469s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[5.25507s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/pcs/module_1:alarms",
	"FaultDestination":	"/assets/pcs/module_1:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[5.25544s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:alarms]
[5.25577s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:alarms]
[5.25612s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:faults]
[5.2565s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:faults]
[5.25688s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.25727s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.25777s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.25813s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.25865s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_module_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_1",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/module_1:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/pcs/module_1)",
		"table":	"/assets/pcs/module_1",
		"value":	1
	},
	"runMonitor_module_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_1",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"module_1",
		"enable":	"/config/module_1:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/module_1",
		"value":	1
	}
}].
[5.25928s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"Status":	"INIT"
}].
[5.25962s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.26008s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.26048s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_module":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_1",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/module_1) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"module_1",
				"every":	1,
				"uri":	"/sched/module_1:pubAssets_module_1",
				"value":	1
			}, {
				"aname":	"module_1",
				"every":	0.1,
				"uri":	"/sched/module_1:runMonitor_module_1",
				"value":	1
			}, {
				"aname":	"module_1",
				"every":	1,
				"uri":	"/sched/module_1:checkInputs_module_1",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[5.26098s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[5.26146s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_1:HandleCmd_ClearFaults]
[5.26231s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_1:HandleCmd_ClearFaults]
[5.26269s  ] [info    ] [HandleCmd      ] reload first run [module_1] [/controls/module_1:ClearFaults]  reload 0
[5.26304s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/module_1:ClearFaults]
[5.26335s  ] [info    ] [HandleCmd      ] Adding [/controls/module_1:ClearFaults] to amap in asset [module_1]
[5.26367s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/module_1:ClearFaults]
[5.264s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/module_1:ClearFaults]
[5.26443s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/module_1:ClearFaults":	{
		"amap":	"module_1",
		"func":	"HandleCmd"
	}
}].
[5.26495s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/module_1:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/module_1:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/module_1:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/module_1:clear_faults and /alarms/module_1:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[5.26576s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_1",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/module_1) will be reset to the normal state (defined in /config/module_1:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[5.26642s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.26676s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.26723s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.26755s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.26805s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_1:FaultDestination]
[5.26839s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_1:FaultDestination]
[5.26882s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_1:NoFaultMsg]
[5.26926s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_1:NoFaultMsg]
[5.26993s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_1:FaultCnt]
[5.2707s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_1:FaultCnt]
[5.27134s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_1:AlarmDestination]
[5.27175s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_1:AlarmDestination]
[5.27206s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_1:NoAlarmMsg]
[5.27237s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_1:NoAlarmMsg]
[5.27273s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_1:AlarmCnt]
[5.27314s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_1:AlarmCnt]
[5.27376s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_1",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/module_1) will be reset to the normal state (defined in /config/module_1:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[5.2745s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.27489s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.27539s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.27591s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.27681s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_1:TotalAlarmCnt":	{
		"amap":	"module_1",
		"func":	"CalculateVar"
	},
	"/status/module_1:TotalFaultCnt":	{
		"amap":	"module_1",
		"func":	"CalculateVar"
	}
}].
[5.27755s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/pcs:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the PCS Module faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_1:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_1:FaultCnt"
	}
}].
[5.27837s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_1:CurrentFault":	{
		"func":	"CalculateVar"
	},
	"/status/module_1:CurrentWarning":	{
		"func":	"CalculateVar"
	},
	"/status/module_1:PCSDCPower":	{
		"func":	"CalculateVar"
	}
}].
[5.27927s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CurrentFault":	{
		"expression":	"if ((1 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_fault"
	},
	"CurrentWarning":	{
		"expression":	"if ((1 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_warning"
	},
	"PCSDCPower":	{
		"expression":	"{1} * {2}",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_1:PCSDCVoltage",
		"variable2":	"/status/module_1:PCSDCCurrent"
	}
}].
[5.27987s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	"/components/pcs_registers_fast:module_1_p",
		"vlink":	"/status/module_1:ActivePower"
	},
	"apparent_power":	{
		"value":	"/components/pcs_registers_fast:module_1_dc_voltage_p",
		"vlink":	"/status/module_1:ApparentPower"
	},
	"l1_current":	{
		"value":	"/components/pcs_registers_fast:module_1_current_r",
		"vlink":	"/status/module_1:L1Current"
	},
	"l2_current":	{
		"value":	"/components/pcs_registers_fast:module_1_current_s",
		"vlink":	"/status/module_1:L2Current"
	},
	"l3_current":	{
		"value":	"/components/pcs_registers_fast:module_1_current_t",
		"vlink":	"/status/module_1:L3Current"
	},
	"max_igbt_temperature":	{
		"value":	"/components/pcs_registers_fast:module_1_max_temp",
		"vlink":	"/status/module_1:MaxIGBTTemperature"
	},
	"pcs_dc_current":	{
		"value":	"/components/pcs_registers_fast:module_1_dc_current",
		"vlink":	"/status/module_1:PCSDCCurrent"
	},
	"pcs_dc_voltage":	{
		"value":	"/components/pcs_registers_fast:module_1_dc_voltage",
		"vlink":	"/status/module_1:PCSDCVoltage"
	},
	"reactive_power":	{
		"value":	"/components/pcs_registers_fast:module_1_q",
		"vlink":	"/status/module_1:ReactivePower"
	}
}].
[5.28039s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_1_p]
[5.28071s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_1_p]
[5.28105s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_1_dc_voltage_p]
[5.28135s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_1_dc_voltage_p]
[5.28172s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_1_current_r]
[5.28201s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_1_current_r]
[5.28235s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_1_current_s]
[5.28274s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_1_current_s]
[5.28309s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_1_current_t]
[5.28354s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_1_current_t]
[5.28403s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_1_max_temp]
[5.28437s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_1_max_temp]
[5.28469s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_1_dc_current]
[5.28505s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_1_dc_current]
[5.28552s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_1_dc_voltage]
[5.28579s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_1_dc_voltage]
[5.28604s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_1_q]
[5.28643s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_1_q]
[5.28694s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	0
	},
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"apparent_power":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/module_1:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/module_1:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"l1_current":	{
		"value":	0
	},
	"l2_current":	{
		"value":	0
	},
	"l3_current":	{
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/pcs/module_1:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_igbt_temperature":	{
		"value":	0
	},
	"reactive_power":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[5.28784s  ] [info    ] [LogInfo        ] [/assets/pcs/module_1:maint_mode] received a value of [false]
[5.28829s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.28859s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.28907s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_active_power":	{
		"value":	"/assets/pcs/module_1:active_power",
		"vlink":	"/status/module_1:ActivePower"
	},
	"ui_apparent_power":	{
		"value":	"/assets/pcs/module_1:apparent_power",
		"vlink":	"/status/module_1:ApparentPower"
	},
	"ui_dc_current":	{
		"value":	"/assets/pcs/module_1:dc_current",
		"vlink":	"/status/module_1:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/pcs/module_1:dc_power",
		"vlink":	"/status/module_1:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/pcs/module_1:dc_voltage",
		"vlink":	"/status/module_1:DCVoltage"
	},
	"ui_l1_current":	{
		"value":	"/assets/pcs/module_1:l1_current",
		"vlink":	"/status/module_1:L1Current"
	},
	"ui_l2_current":	{
		"value":	"/assets/pcs/module_1:l2_current",
		"vlink":	"/status/module_1:L2Current"
	},
	"ui_l3_current":	{
		"value":	"/assets/pcs/module_1:l3_current",
		"vlink":	"/status/module_1:L3Current"
	},
	"ui_max_igbt_temperature":	{
		"value":	"/assets/pcs/module_1:max_igbt_temperature",
		"vlink":	"/status/module_1:MaxIGBTTemperature"
	},
	"ui_reactive_power":	{
		"value":	"/assets/pcs/module_1:reactive_power",
		"vlink":	"/status/module_1:ReactivePower"
	},
	"ui_status":	{
		"value":	"/assets/pcs/module_1:status",
		"vlink":	"/status/module_1:Status"
	}
}].
[5.28944s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:active_power]
[5.28979s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:active_power]
[5.29021s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:apparent_power]
[5.29054s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:apparent_power]
[5.29096s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:dc_current]
[5.29129s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:dc_current]
[5.29166s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:dc_power]
[5.29194s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:dc_power]
[5.29236s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:dc_voltage]
[5.2927s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:dc_voltage]
[5.29317s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:l1_current]
[5.2934s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:l1_current]
[5.29386s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:l2_current]
[5.29417s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:l2_current]
[5.2945s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:l3_current]
[5.29479s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:l3_current]
[5.29506s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:max_igbt_temperature]
[5.2953s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:max_igbt_temperature]
[5.29565s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:reactive_power]
[5.29604s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:reactive_power]
[5.29664s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_1:status]
[5.29697s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_1:status]
[5.29777s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [module_2]
[5.29806s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [module_2] parent am [pcs] 
[5.29887s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [module_2]
[5.29958s  ] [info    ] [configure_vmapS] body: {"/config/module_2":{"AlarmDestination":"/assets/pcs/module_2:alarms","FaultDestination":"/assets/pcs/module_2:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/module_2":{"pubAssets_module_2":{"actions":{"onSet":[{"func":[{"amap":"module_2","func":"RunPub"}]}]},"enable":"/config/module_2:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/module_2)","table":"/assets/pcs/module_2","value":1},"runMonitor_module_2":{"actions":{"onSet":[{"func":[{"amap":"module_2","func":"RunMonitor"}]}]},"aname":"module_2","enable":"/config/module_2:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/module_2","value":1}},"/status/module_2":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"module_2","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/module_2) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"module_2","every":1,"uri":"/sched/module_2:pubAssets_module_2","value":1},{"aname":"module_2","every":0.1,"uri":"/sched/module_2:runMonitor_module_2","value":1},{"aname":"module_2","every":1,"uri":"/sched/module_2:checkInputs_module_2","value":1}],"targav":"/system/commands:run","value":false}},"/controls/module_2":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"module_2","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/module_2":{"/controls/module_2:ClearFaults":{"amap":"module_2","func":"HandleCmd"}},"/status/module_2":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/module_2:clear_faults"},{"outValue":"Clear","uri":"/alarms/module_2:clear_alarms"}]}]},"enable":"/config/module_2:enable","ifChanged":false,"note":"When this variable is set, /faults/module_2:clear_faults and /alarms/module_2:clear_alarms will be set to Clear","value":false}},"/alarms/module_2":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"module_2","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/module_2) will be reset to the normal state (defined in /config/module_2:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/module_2":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_2","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/module_2) will be reset to the normal state (defined in /config/module_2:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/module_2":{"/status/module_2:TotalAlarmCnt":{"amap":"module_2","func":"CalculateVar"},"/status/module_2:TotalFaultCnt":{"amap":"module_2","func":"CalculateVar"}},"/status/module_2":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"module_2","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_2:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_2:FaultCnt"}},"/schedule/wake_monitor/module_2":{"/status/module_2:CurrentFault":{"func":"CalculateVar"},"/status/module_2:CurrentWarning":{"func":"CalculateVar"},"/status/module_2:PCSDCPower":{"func":"CalculateVar"}},"/status/module_2":{"CurrentFault":{"expression":"if ((2 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((2 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/module_2:PCSDCVoltage","variable2":"/status/module_2:PCSDCCurrent"}},"/vlinks/module_2":{"active_power":{"value":"/components/pcs_registers_fast:module_2_p","vlink":"/status/module_2:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:module_2_dc_voltage_p","vlink":"/status/module_2:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:module_2_current_r","vlink":"/status/module_2:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:module_2_current_s","vlink":"/status/module_2:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:module_2_current_t","vlink":"/status/module_2:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:module_2_max_temp","vlink":"/status/module_2:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:module_2_dc_current","vlink":"/status/module_2:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:module_2_dc_voltage","vlink":"/status/module_2:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:module_2_q","vlink":"/status/module_2:ReactivePower"}},"/assets/pcs/module_2":{"active_power":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_2","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/module_2:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/module_2:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"l1_current":{"value":0},"l2_current":{"value":0},"l3_current":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"module_2","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/module_2:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_igbt_temperature":{"value":0},"reactive_power":{"value":0},"status":{"value":"INIT"}},"/vlinks/module_2":{"ui_active_power":{"value":"/assets/pcs/module_2:active_power","vlink":"/status/module_2:ActivePower"},"ui_apparent_power":{"value":"/assets/pcs/module_2:apparent_power","vlink":"/status/module_2:ApparentPower"},"ui_dc_current":{"value":"/assets/pcs/module_2:dc_current","vlink":"/status/module_2:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/module_2:dc_power","vlink":"/status/module_2:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/module_2:dc_voltage","vlink":"/status/module_2:DCVoltage"},"ui_l1_current":{"value":"/assets/pcs/module_2:l1_current","vlink":"/status/module_2:L1Current"},"ui_l2_current":{"value":"/assets/pcs/module_2:l2_current","vlink":"/status/module_2:L2Current"},"ui_l3_current":{"value":"/assets/pcs/module_2:l3_current","vlink":"/status/module_2:L3Current"},"ui_max_igbt_temperature":{"value":"/assets/pcs/module_2:max_igbt_temperature","vlink":"/status/module_2:MaxIGBTTemperature"},"ui_reactive_power":{"value":"/assets/pcs/module_2:reactive_power","vlink":"/status/module_2:ReactivePower"},"ui_status":{"value":"/assets/pcs/module_2:status","vlink":"/status/module_2:Status"}}}
[5.30051s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[5.30088s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/pcs/module_2:alarms",
	"FaultDestination":	"/assets/pcs/module_2:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[5.3013s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:alarms]
[5.30166s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:alarms]
[5.30217s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:faults]
[5.30243s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:faults]
[5.30277s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.30323s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.30393s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.30437s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.3049s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_module_2":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_2",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/module_2:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/pcs/module_2)",
		"table":	"/assets/pcs/module_2",
		"value":	1
	},
	"runMonitor_module_2":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_2",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"module_2",
		"enable":	"/config/module_2:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/module_2",
		"value":	1
	}
}].
[5.3057s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"Status":	"INIT"
}].
[5.306s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.30629s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.30682s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_module":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_2",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/module_2) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"module_2",
				"every":	1,
				"uri":	"/sched/module_2:pubAssets_module_2",
				"value":	1
			}, {
				"aname":	"module_2",
				"every":	0.1,
				"uri":	"/sched/module_2:runMonitor_module_2",
				"value":	1
			}, {
				"aname":	"module_2",
				"every":	1,
				"uri":	"/sched/module_2:checkInputs_module_2",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[5.30746s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_2",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[5.30789s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_2:HandleCmd_ClearFaults]
[5.3082s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_2:HandleCmd_ClearFaults]
[5.30858s  ] [info    ] [HandleCmd      ] reload first run [module_2] [/controls/module_2:ClearFaults]  reload 0
[5.30881s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/module_2:ClearFaults]
[5.30919s  ] [info    ] [HandleCmd      ] Adding [/controls/module_2:ClearFaults] to amap in asset [module_2]
[5.3096s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/module_2:ClearFaults]
[5.30986s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/module_2:ClearFaults]
[5.3102s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/module_2:ClearFaults":	{
		"amap":	"module_2",
		"func":	"HandleCmd"
	}
}].
[5.31063s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/module_2:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/module_2:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/module_2:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/module_2:clear_faults and /alarms/module_2:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[5.3112s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_2",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/module_2) will be reset to the normal state (defined in /config/module_2:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[5.31157s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.3119s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.31239s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.31273s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.31321s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_2:FaultDestination]
[5.31355s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_2:FaultDestination]
[5.31392s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_2:NoFaultMsg]
[5.31437s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_2:NoFaultMsg]
[5.31472s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_2:FaultCnt]
[5.31498s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_2:FaultCnt]
[5.31541s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_2:AlarmDestination]
[5.31578s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_2:AlarmDestination]
[5.31639s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_2:NoAlarmMsg]
[5.31684s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_2:NoAlarmMsg]
[5.3172s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_2:AlarmCnt]
[5.31741s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_2:AlarmCnt]
[5.31787s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_2",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/module_2) will be reset to the normal state (defined in /config/module_2:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[5.31821s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.31866s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.31898s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.31938s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.32001s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_2:TotalAlarmCnt":	{
		"amap":	"module_2",
		"func":	"CalculateVar"
	},
	"/status/module_2:TotalFaultCnt":	{
		"amap":	"module_2",
		"func":	"CalculateVar"
	}
}].
[5.32046s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_2",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/pcs:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the PCS Module faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_2:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_2:FaultCnt"
	}
}].
[5.32103s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_2:CurrentFault":	{
		"func":	"CalculateVar"
	},
	"/status/module_2:CurrentWarning":	{
		"func":	"CalculateVar"
	},
	"/status/module_2:PCSDCPower":	{
		"func":	"CalculateVar"
	}
}].
[5.32151s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CurrentFault":	{
		"expression":	"if ((2 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_fault"
	},
	"CurrentWarning":	{
		"expression":	"if ((2 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_warning"
	},
	"PCSDCPower":	{
		"expression":	"{1} * {2}",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_2:PCSDCVoltage",
		"variable2":	"/status/module_2:PCSDCCurrent"
	}
}].
[5.32225s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	"/components/pcs_registers_fast:module_2_p",
		"vlink":	"/status/module_2:ActivePower"
	},
	"apparent_power":	{
		"value":	"/components/pcs_registers_fast:module_2_dc_voltage_p",
		"vlink":	"/status/module_2:ApparentPower"
	},
	"l1_current":	{
		"value":	"/components/pcs_registers_fast:module_2_current_r",
		"vlink":	"/status/module_2:L1Current"
	},
	"l2_current":	{
		"value":	"/components/pcs_registers_fast:module_2_current_s",
		"vlink":	"/status/module_2:L2Current"
	},
	"l3_current":	{
		"value":	"/components/pcs_registers_fast:module_2_current_t",
		"vlink":	"/status/module_2:L3Current"
	},
	"max_igbt_temperature":	{
		"value":	"/components/pcs_registers_fast:module_2_max_temp",
		"vlink":	"/status/module_2:MaxIGBTTemperature"
	},
	"pcs_dc_current":	{
		"value":	"/components/pcs_registers_fast:module_2_dc_current",
		"vlink":	"/status/module_2:PCSDCCurrent"
	},
	"pcs_dc_voltage":	{
		"value":	"/components/pcs_registers_fast:module_2_dc_voltage",
		"vlink":	"/status/module_2:PCSDCVoltage"
	},
	"reactive_power":	{
		"value":	"/components/pcs_registers_fast:module_2_q",
		"vlink":	"/status/module_2:ReactivePower"
	}
}].
[5.32292s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_2_p]
[5.3234s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_2_p]
[5.32404s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_2_dc_voltage_p]
[5.32453s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_2_dc_voltage_p]
[5.32515s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_2_current_r]
[5.32566s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_2_current_r]
[5.32609s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_2_current_s]
[5.32661s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_2_current_s]
[5.32724s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_2_current_t]
[5.32809s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_2_current_t]
[5.32872s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_2_max_temp]
[5.32909s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_2_max_temp]
[5.3295s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_2_dc_current]
[5.32988s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_2_dc_current]
[5.33036s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_2_dc_voltage]
[5.33062s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_2_dc_voltage]
[5.33096s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_2_q]
[5.33133s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_2_q]
[5.33194s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	0
	},
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"apparent_power":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_2",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/module_2:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/module_2:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"l1_current":	{
		"value":	0
	},
	"l2_current":	{
		"value":	0
	},
	"l3_current":	{
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_2",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/pcs/module_2:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_igbt_temperature":	{
		"value":	0
	},
	"reactive_power":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[5.33274s  ] [info    ] [LogInfo        ] [/assets/pcs/module_2:maint_mode] received a value of [false]
[5.33359s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.33401s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.33479s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_active_power":	{
		"value":	"/assets/pcs/module_2:active_power",
		"vlink":	"/status/module_2:ActivePower"
	},
	"ui_apparent_power":	{
		"value":	"/assets/pcs/module_2:apparent_power",
		"vlink":	"/status/module_2:ApparentPower"
	},
	"ui_dc_current":	{
		"value":	"/assets/pcs/module_2:dc_current",
		"vlink":	"/status/module_2:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/pcs/module_2:dc_power",
		"vlink":	"/status/module_2:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/pcs/module_2:dc_voltage",
		"vlink":	"/status/module_2:DCVoltage"
	},
	"ui_l1_current":	{
		"value":	"/assets/pcs/module_2:l1_current",
		"vlink":	"/status/module_2:L1Current"
	},
	"ui_l2_current":	{
		"value":	"/assets/pcs/module_2:l2_current",
		"vlink":	"/status/module_2:L2Current"
	},
	"ui_l3_current":	{
		"value":	"/assets/pcs/module_2:l3_current",
		"vlink":	"/status/module_2:L3Current"
	},
	"ui_max_igbt_temperature":	{
		"value":	"/assets/pcs/module_2:max_igbt_temperature",
		"vlink":	"/status/module_2:MaxIGBTTemperature"
	},
	"ui_reactive_power":	{
		"value":	"/assets/pcs/module_2:reactive_power",
		"vlink":	"/status/module_2:ReactivePower"
	},
	"ui_status":	{
		"value":	"/assets/pcs/module_2:status",
		"vlink":	"/status/module_2:Status"
	}
}].
[5.33549s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:active_power]
[5.33623s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:active_power]
[5.33678s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:apparent_power]
[5.33716s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:apparent_power]
[5.33789s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:dc_current]
[5.33825s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:dc_current]
[5.33864s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:dc_power]
[5.33894s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:dc_power]
[5.33924s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:dc_voltage]
[5.33953s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:dc_voltage]
[5.33983s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:l1_current]
[5.34018s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:l1_current]
[5.34055s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:l2_current]
[5.34092s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:l2_current]
[5.34131s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:l3_current]
[5.34167s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:l3_current]
[5.34212s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:max_igbt_temperature]
[5.34253s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:max_igbt_temperature]
[5.34299s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:reactive_power]
[5.34321s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:reactive_power]
[5.34347s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_2:status]
[5.3438s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_2:status]
[5.3447s   ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [module_3]
[5.34494s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [module_3] parent am [pcs] 
[5.34555s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [module_3]
[5.34581s  ] [info    ] [configure_vmapS] body: {"/config/module_3":{"AlarmDestination":"/assets/pcs/module_3:alarms","FaultDestination":"/assets/pcs/module_3:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/module_3":{"pubAssets_module_3":{"actions":{"onSet":[{"func":[{"amap":"module_3","func":"RunPub"}]}]},"enable":"/config/module_3:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/module_3)","table":"/assets/pcs/module_3","value":1},"runMonitor_module_3":{"actions":{"onSet":[{"func":[{"amap":"module_3","func":"RunMonitor"}]}]},"aname":"module_3","enable":"/config/module_3:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/module_3","value":1}},"/status/module_3":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"module_3","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/module_3) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"module_3","every":1,"uri":"/sched/module_3:pubAssets_module_3","value":1},{"aname":"module_3","every":0.1,"uri":"/sched/module_3:runMonitor_module_3","value":1},{"aname":"module_3","every":1,"uri":"/sched/module_3:checkInputs_module_3","value":1}],"targav":"/system/commands:run","value":false}},"/controls/module_3":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"module_3","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/module_3":{"/controls/module_3:ClearFaults":{"amap":"module_3","func":"HandleCmd"}},"/status/module_3":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/module_3:clear_faults"},{"outValue":"Clear","uri":"/alarms/module_3:clear_alarms"}]}]},"enable":"/config/module_3:enable","ifChanged":false,"note":"When this variable is set, /faults/module_3:clear_faults and /alarms/module_3:clear_alarms will be set to Clear","value":false}},"/alarms/module_3":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"module_3","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/module_3) will be reset to the normal state (defined in /config/module_3:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/module_3":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_3","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/module_3) will be reset to the normal state (defined in /config/module_3:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/module_3":{"/status/module_3:TotalAlarmCnt":{"amap":"module_3","func":"CalculateVar"},"/status/module_3:TotalFaultCnt":{"amap":"module_3","func":"CalculateVar"}},"/status/module_3":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"module_3","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_3:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_3:FaultCnt"}},"/schedule/wake_monitor/module_3":{"/status/module_3:CurrentFault":{"func":"CalculateVar"},"/status/module_3:CurrentWarning":{"func":"CalculateVar"},"/status/module_3:PCSDCPower":{"func":"CalculateVar"}},"/status/module_3":{"CurrentFault":{"expression":"if ((3 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((3 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/module_3:PCSDCVoltage","variable2":"/status/module_3:PCSDCCurrent"}},"/vlinks/module_3":{"active_power":{"value":"/components/pcs_registers_fast:module_3_p","vlink":"/status/module_3:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:module_3_dc_voltage_p","vlink":"/status/module_3:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:module_3_current_r","vlink":"/status/module_3:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:module_3_current_s","vlink":"/status/module_3:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:module_3_current_t","vlink":"/status/module_3:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:module_3_max_temp","vlink":"/status/module_3:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:module_3_dc_current","vlink":"/status/module_3:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:module_3_dc_voltage","vlink":"/status/module_3:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:module_3_q","vlink":"/status/module_3:ReactivePower"}},"/assets/pcs/module_3":{"active_power":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_3","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/module_3:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/module_3:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"l1_current":{"value":0},"l2_current":{"value":0},"l3_current":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"module_3","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/module_3:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_igbt_temperature":{"value":0},"reactive_power":{"value":0},"status":{"value":"INIT"}},"/vlinks/module_3":{"ui_active_power":{"value":"/assets/pcs/module_3:active_power","vlink":"/status/module_3:ActivePower"},"ui_apparent_power":{"value":"/assets/pcs/module_3:apparent_power","vlink":"/status/module_3:ApparentPower"},"ui_dc_current":{"value":"/assets/pcs/module_3:dc_current","vlink":"/status/module_3:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/module_3:dc_power","vlink":"/status/module_3:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/module_3:dc_voltage","vlink":"/status/module_3:DCVoltage"},"ui_l1_current":{"value":"/assets/pcs/module_3:l1_current","vlink":"/status/module_3:L1Current"},"ui_l2_current":{"value":"/assets/pcs/module_3:l2_current","vlink":"/status/module_3:L2Current"},"ui_l3_current":{"value":"/assets/pcs/module_3:l3_current","vlink":"/status/module_3:L3Current"},"ui_max_igbt_temperature":{"value":"/assets/pcs/module_3:max_igbt_temperature","vlink":"/status/module_3:MaxIGBTTemperature"},"ui_reactive_power":{"value":"/assets/pcs/module_3:reactive_power","vlink":"/status/module_3:ReactivePower"},"ui_status":{"value":"/assets/pcs/module_3:status","vlink":"/status/module_3:Status"}}}
[5.34685s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[5.34727s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/pcs/module_3:alarms",
	"FaultDestination":	"/assets/pcs/module_3:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[5.34769s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:alarms]
[5.34807s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:alarms]
[5.3488s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:faults]
[5.34939s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:faults]
[5.34973s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.34995s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.35035s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.35148s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.3522s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_module_3":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_3",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/module_3:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/pcs/module_3)",
		"table":	"/assets/pcs/module_3",
		"value":	1
	},
	"runMonitor_module_3":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_3",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"module_3",
		"enable":	"/config/module_3:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/module_3",
		"value":	1
	}
}].
[5.35285s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"Status":	"INIT"
}].
[5.35326s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.35358s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.35394s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_module":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_3",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/module_3) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"module_3",
				"every":	1,
				"uri":	"/sched/module_3:pubAssets_module_3",
				"value":	1
			}, {
				"aname":	"module_3",
				"every":	0.1,
				"uri":	"/sched/module_3:runMonitor_module_3",
				"value":	1
			}, {
				"aname":	"module_3",
				"every":	1,
				"uri":	"/sched/module_3:checkInputs_module_3",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[5.35496s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_3",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[5.35559s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_3:HandleCmd_ClearFaults]
[5.35584s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_3:HandleCmd_ClearFaults]
[5.35633s  ] [info    ] [HandleCmd      ] reload first run [module_3] [/controls/module_3:ClearFaults]  reload 0
[5.35677s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/module_3:ClearFaults]
[5.3572s   ] [info    ] [HandleCmd      ] Adding [/controls/module_3:ClearFaults] to amap in asset [module_3]
[5.35756s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/module_3:ClearFaults]
[5.35796s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/module_3:ClearFaults]
[5.35849s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/module_3:ClearFaults":	{
		"amap":	"module_3",
		"func":	"HandleCmd"
	}
}].
[5.3589s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/module_3:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/module_3:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/module_3:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/module_3:clear_faults and /alarms/module_3:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[5.35941s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_3",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/module_3) will be reset to the normal state (defined in /config/module_3:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[5.35983s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.36036s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.36073s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.36118s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.36166s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_3:FaultDestination]
[5.3621s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_3:FaultDestination]
[5.36268s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_3:NoFaultMsg]
[5.36313s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_3:NoFaultMsg]
[5.36391s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_3:FaultCnt]
[5.36441s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_3:FaultCnt]
[5.36496s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_3:AlarmDestination]
[5.36559s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_3:AlarmDestination]
[5.36644s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_3:NoAlarmMsg]
[5.36673s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_3:NoAlarmMsg]
[5.36704s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_3:AlarmCnt]
[5.3674s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_3:AlarmCnt]
[5.36792s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_3",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/module_3) will be reset to the normal state (defined in /config/module_3:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[5.36831s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.36872s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.36915s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.36953s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.37001s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_3:TotalAlarmCnt":	{
		"amap":	"module_3",
		"func":	"CalculateVar"
	},
	"/status/module_3:TotalFaultCnt":	{
		"amap":	"module_3",
		"func":	"CalculateVar"
	}
}].
[5.37059s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_3",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/pcs:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the PCS Module faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_3:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_3:FaultCnt"
	}
}].
[5.37109s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_3:CurrentFault":	{
		"func":	"CalculateVar"
	},
	"/status/module_3:CurrentWarning":	{
		"func":	"CalculateVar"
	},
	"/status/module_3:PCSDCPower":	{
		"func":	"CalculateVar"
	}
}].
[5.37154s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CurrentFault":	{
		"expression":	"if ((3 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_fault"
	},
	"CurrentWarning":	{
		"expression":	"if ((3 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_warning"
	},
	"PCSDCPower":	{
		"expression":	"{1} * {2}",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_3:PCSDCVoltage",
		"variable2":	"/status/module_3:PCSDCCurrent"
	}
}].
[5.37204s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	"/components/pcs_registers_fast:module_3_p",
		"vlink":	"/status/module_3:ActivePower"
	},
	"apparent_power":	{
		"value":	"/components/pcs_registers_fast:module_3_dc_voltage_p",
		"vlink":	"/status/module_3:ApparentPower"
	},
	"l1_current":	{
		"value":	"/components/pcs_registers_fast:module_3_current_r",
		"vlink":	"/status/module_3:L1Current"
	},
	"l2_current":	{
		"value":	"/components/pcs_registers_fast:module_3_current_s",
		"vlink":	"/status/module_3:L2Current"
	},
	"l3_current":	{
		"value":	"/components/pcs_registers_fast:module_3_current_t",
		"vlink":	"/status/module_3:L3Current"
	},
	"max_igbt_temperature":	{
		"value":	"/components/pcs_registers_fast:module_3_max_temp",
		"vlink":	"/status/module_3:MaxIGBTTemperature"
	},
	"pcs_dc_current":	{
		"value":	"/components/pcs_registers_fast:module_3_dc_current",
		"vlink":	"/status/module_3:PCSDCCurrent"
	},
	"pcs_dc_voltage":	{
		"value":	"/components/pcs_registers_fast:module_3_dc_voltage",
		"vlink":	"/status/module_3:PCSDCVoltage"
	},
	"reactive_power":	{
		"value":	"/components/pcs_registers_fast:module_3_q",
		"vlink":	"/status/module_3:ReactivePower"
	}
}].
[5.37247s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_3_p]
[5.37274s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_3_p]
[5.37319s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_3_dc_voltage_p]
[5.37344s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_3_dc_voltage_p]
[5.37374s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_3_current_r]
[5.37409s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_3_current_r]
[5.37449s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_3_current_s]
[5.37475s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_3_current_s]
[5.37502s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_3_current_t]
[5.37524s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_3_current_t]
[5.37549s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_3_max_temp]
[5.37613s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_3_max_temp]
[5.37663s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_3_dc_current]
[5.37689s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_3_dc_current]
[5.37743s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_3_dc_voltage]
[5.37772s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_3_dc_voltage]
[5.37823s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_3_q]
[5.37848s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_3_q]
[5.37899s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	0
	},
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"apparent_power":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_3",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/module_3:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/module_3:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"l1_current":	{
		"value":	0
	},
	"l2_current":	{
		"value":	0
	},
	"l3_current":	{
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_3",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/pcs/module_3:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_igbt_temperature":	{
		"value":	0
	},
	"reactive_power":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[5.37993s  ] [info    ] [LogInfo        ] [/assets/pcs/module_3:maint_mode] received a value of [false]
[5.38047s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.38086s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.38126s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_active_power":	{
		"value":	"/assets/pcs/module_3:active_power",
		"vlink":	"/status/module_3:ActivePower"
	},
	"ui_apparent_power":	{
		"value":	"/assets/pcs/module_3:apparent_power",
		"vlink":	"/status/module_3:ApparentPower"
	},
	"ui_dc_current":	{
		"value":	"/assets/pcs/module_3:dc_current",
		"vlink":	"/status/module_3:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/pcs/module_3:dc_power",
		"vlink":	"/status/module_3:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/pcs/module_3:dc_voltage",
		"vlink":	"/status/module_3:DCVoltage"
	},
	"ui_l1_current":	{
		"value":	"/assets/pcs/module_3:l1_current",
		"vlink":	"/status/module_3:L1Current"
	},
	"ui_l2_current":	{
		"value":	"/assets/pcs/module_3:l2_current",
		"vlink":	"/status/module_3:L2Current"
	},
	"ui_l3_current":	{
		"value":	"/assets/pcs/module_3:l3_current",
		"vlink":	"/status/module_3:L3Current"
	},
	"ui_max_igbt_temperature":	{
		"value":	"/assets/pcs/module_3:max_igbt_temperature",
		"vlink":	"/status/module_3:MaxIGBTTemperature"
	},
	"ui_reactive_power":	{
		"value":	"/assets/pcs/module_3:reactive_power",
		"vlink":	"/status/module_3:ReactivePower"
	},
	"ui_status":	{
		"value":	"/assets/pcs/module_3:status",
		"vlink":	"/status/module_3:Status"
	}
}].
[5.38174s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:active_power]
[5.3821s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:active_power]
[5.38251s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:apparent_power]
[5.3829s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:apparent_power]
[5.38338s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:dc_current]
[5.38395s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:dc_current]
[5.38448s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:dc_power]
[5.38485s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:dc_power]
[5.38552s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:dc_voltage]
[5.38616s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:dc_voltage]
[5.38692s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:l1_current]
[5.38731s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:l1_current]
[5.38773s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:l2_current]
[5.38827s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:l2_current]
[5.389s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:l3_current]
[5.38953s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:l3_current]
[5.39029s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:max_igbt_temperature]
[5.39076s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:max_igbt_temperature]
[5.39148s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:reactive_power]
[5.39204s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:reactive_power]
[5.39266s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_3:status]
[5.39307s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_3:status]
[5.39411s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [module_4]
[5.39438s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [module_4] parent am [pcs] 
[5.39522s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [module_4]
[5.39574s  ] [info    ] [configure_vmapS] body: {"/config/module_4":{"AlarmDestination":"/assets/pcs/module_4:alarms","FaultDestination":"/assets/pcs/module_4:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/module_4":{"pubAssets_module_4":{"actions":{"onSet":[{"func":[{"amap":"module_4","func":"RunPub"}]}]},"enable":"/config/module_4:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/module_4)","table":"/assets/pcs/module_4","value":1},"runMonitor_module_4":{"actions":{"onSet":[{"func":[{"amap":"module_4","func":"RunMonitor"}]}]},"aname":"module_4","enable":"/config/module_4:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/module_4","value":1}},"/status/module_4":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"module_4","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/module_4) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"module_4","every":1,"uri":"/sched/module_4:pubAssets_module_4","value":1},{"aname":"module_4","every":0.1,"uri":"/sched/module_4:runMonitor_module_4","value":1},{"aname":"module_4","every":1,"uri":"/sched/module_4:checkInputs_module_4","value":1}],"targav":"/system/commands:run","value":false}},"/controls/module_4":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"module_4","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/module_4":{"/controls/module_4:ClearFaults":{"amap":"module_4","func":"HandleCmd"}},"/status/module_4":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/module_4:clear_faults"},{"outValue":"Clear","uri":"/alarms/module_4:clear_alarms"}]}]},"enable":"/config/module_4:enable","ifChanged":false,"note":"When this variable is set, /faults/module_4:clear_faults and /alarms/module_4:clear_alarms will be set to Clear","value":false}},"/alarms/module_4":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"module_4","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/module_4) will be reset to the normal state (defined in /config/module_4:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/module_4":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_4","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/module_4) will be reset to the normal state (defined in /config/module_4:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/module_4":{"/status/module_4:TotalAlarmCnt":{"amap":"module_4","func":"CalculateVar"},"/status/module_4:TotalFaultCnt":{"amap":"module_4","func":"CalculateVar"}},"/status/module_4":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"module_4","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_4:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_4:FaultCnt"}},"/schedule/wake_monitor/module_4":{"/status/module_4:CurrentFault":{"func":"CalculateVar"},"/status/module_4:CurrentWarning":{"func":"CalculateVar"},"/status/module_4:PCSDCPower":{"func":"CalculateVar"}},"/status/module_4":{"CurrentFault":{"expression":"if ((4 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((4 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/module_4:PCSDCVoltage","variable2":"/status/module_4:PCSDCCurrent"}},"/vlinks/module_4":{"active_power":{"value":"/components/pcs_registers_fast:module_4_p","vlink":"/status/module_4:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:module_4_dc_voltage_p","vlink":"/status/module_4:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:module_4_current_r","vlink":"/status/module_4:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:module_4_current_s","vlink":"/status/module_4:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:module_4_current_t","vlink":"/status/module_4:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:module_4_max_temp","vlink":"/status/module_4:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:module_4_dc_current","vlink":"/status/module_4:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:module_4_dc_voltage","vlink":"/status/module_4:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:module_4_q","vlink":"/status/module_4:ReactivePower"}},"/assets/pcs/module_4":{"active_power":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_4","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/module_4:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/module_4:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"l1_current":{"value":0},"l2_current":{"value":0},"l3_current":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"module_4","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/module_4:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_igbt_temperature":{"value":0},"reactive_power":{"value":0},"status":{"value":"INIT"}},"/vlinks/module_4":{"ui_active_power":{"value":"/assets/pcs/module_4:active_power","vlink":"/status/module_4:ActivePower"},"ui_apparent_power":{"value":"/assets/pcs/module_4:apparent_power","vlink":"/status/module_4:ApparentPower"},"ui_dc_current":{"value":"/assets/pcs/module_4:dc_current","vlink":"/status/module_4:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/module_4:dc_power","vlink":"/status/module_4:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/module_4:dc_voltage","vlink":"/status/module_4:DCVoltage"},"ui_l1_current":{"value":"/assets/pcs/module_4:l1_current","vlink":"/status/module_4:L1Current"},"ui_l2_current":{"value":"/assets/pcs/module_4:l2_current","vlink":"/status/module_4:L2Current"},"ui_l3_current":{"value":"/assets/pcs/module_4:l3_current","vlink":"/status/module_4:L3Current"},"ui_max_igbt_temperature":{"value":"/assets/pcs/module_4:max_igbt_temperature","vlink":"/status/module_4:MaxIGBTTemperature"},"ui_reactive_power":{"value":"/assets/pcs/module_4:reactive_power","vlink":"/status/module_4:ReactivePower"},"ui_status":{"value":"/assets/pcs/module_4:status","vlink":"/status/module_4:Status"}}}
[5.39728s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[5.39774s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/pcs/module_4:alarms",
	"FaultDestination":	"/assets/pcs/module_4:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[5.3982s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:alarms]
[5.39845s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:alarms]
[5.39874s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:faults]
[5.39908s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:faults]
[5.39947s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.39974s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.40004s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.4004s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.40091s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_module_4":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_4",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/module_4:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/pcs/module_4)",
		"table":	"/assets/pcs/module_4",
		"value":	1
	},
	"runMonitor_module_4":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_4",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"module_4",
		"enable":	"/config/module_4:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/module_4",
		"value":	1
	}
}].
[5.4013s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"Status":	"INIT"
}].
[5.40161s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.40187s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.40233s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_module":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_4",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/module_4) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"module_4",
				"every":	1,
				"uri":	"/sched/module_4:pubAssets_module_4",
				"value":	1
			}, {
				"aname":	"module_4",
				"every":	0.1,
				"uri":	"/sched/module_4:runMonitor_module_4",
				"value":	1
			}, {
				"aname":	"module_4",
				"every":	1,
				"uri":	"/sched/module_4:checkInputs_module_4",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[5.40283s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_4",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[5.40347s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_4:HandleCmd_ClearFaults]
[5.40389s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_4:HandleCmd_ClearFaults]
[5.40417s  ] [info    ] [HandleCmd      ] reload first run [module_4] [/controls/module_4:ClearFaults]  reload 0
[5.40451s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/module_4:ClearFaults]
[5.4049s   ] [info    ] [HandleCmd      ] Adding [/controls/module_4:ClearFaults] to amap in asset [module_4]
[5.40532s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/module_4:ClearFaults]
[5.40558s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/module_4:ClearFaults]
[5.40591s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/module_4:ClearFaults":	{
		"amap":	"module_4",
		"func":	"HandleCmd"
	}
}].
[5.40646s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/module_4:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/module_4:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/module_4:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/module_4:clear_faults and /alarms/module_4:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[5.40706s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_4",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/module_4) will be reset to the normal state (defined in /config/module_4:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[5.40752s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.40784s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.40834s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.40868s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.40897s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_4:FaultDestination]
[5.40928s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_4:FaultDestination]
[5.40964s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_4:NoFaultMsg]
[5.40987s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_4:NoFaultMsg]
[5.41012s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_4:FaultCnt]
[5.41045s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_4:FaultCnt]
[5.41104s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_4:AlarmDestination]
[5.41164s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_4:AlarmDestination]
[5.41198s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_4:NoAlarmMsg]
[5.41248s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_4:NoAlarmMsg]
[5.41277s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_4:AlarmCnt]
[5.41304s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_4:AlarmCnt]
[5.41356s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_4",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/module_4) will be reset to the normal state (defined in /config/module_4:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[5.41475s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.41555s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.4164s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.4168s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.41725s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_4:TotalAlarmCnt":	{
		"amap":	"module_4",
		"func":	"CalculateVar"
	},
	"/status/module_4:TotalFaultCnt":	{
		"amap":	"module_4",
		"func":	"CalculateVar"
	}
}].
[5.4179s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_4",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/pcs:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the PCS Module faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_4:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_4:FaultCnt"
	}
}].
[5.41931s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_4:CurrentFault":	{
		"func":	"CalculateVar"
	},
	"/status/module_4:CurrentWarning":	{
		"func":	"CalculateVar"
	},
	"/status/module_4:PCSDCPower":	{
		"func":	"CalculateVar"
	}
}].
[5.42183s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CurrentFault":	{
		"expression":	"if ((4 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_fault"
	},
	"CurrentWarning":	{
		"expression":	"if ((4 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_warning"
	},
	"PCSDCPower":	{
		"expression":	"{1} * {2}",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_4:PCSDCVoltage",
		"variable2":	"/status/module_4:PCSDCCurrent"
	}
}].
[5.42258s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	"/components/pcs_registers_fast:module_4_p",
		"vlink":	"/status/module_4:ActivePower"
	},
	"apparent_power":	{
		"value":	"/components/pcs_registers_fast:module_4_dc_voltage_p",
		"vlink":	"/status/module_4:ApparentPower"
	},
	"l1_current":	{
		"value":	"/components/pcs_registers_fast:module_4_current_r",
		"vlink":	"/status/module_4:L1Current"
	},
	"l2_current":	{
		"value":	"/components/pcs_registers_fast:module_4_current_s",
		"vlink":	"/status/module_4:L2Current"
	},
	"l3_current":	{
		"value":	"/components/pcs_registers_fast:module_4_current_t",
		"vlink":	"/status/module_4:L3Current"
	},
	"max_igbt_temperature":	{
		"value":	"/components/pcs_registers_fast:module_4_max_temp",
		"vlink":	"/status/module_4:MaxIGBTTemperature"
	},
	"pcs_dc_current":	{
		"value":	"/components/pcs_registers_fast:module_4_dc_current",
		"vlink":	"/status/module_4:PCSDCCurrent"
	},
	"pcs_dc_voltage":	{
		"value":	"/components/pcs_registers_fast:module_4_dc_voltage",
		"vlink":	"/status/module_4:PCSDCVoltage"
	},
	"reactive_power":	{
		"value":	"/components/pcs_registers_fast:module_4_q",
		"vlink":	"/status/module_4:ReactivePower"
	}
}].
[5.42325s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_4_p]
[5.42367s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_4_p]
[5.42439s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_4_dc_voltage_p]
[5.42537s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_4_dc_voltage_p]
[5.42578s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_4_current_r]
[5.4264s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_4_current_r]
[5.42692s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_4_current_s]
[5.42726s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_4_current_s]
[5.42768s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_4_current_t]
[5.42813s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_4_current_t]
[5.42873s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_4_max_temp]
[5.42924s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_4_max_temp]
[5.42974s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_4_dc_current]
[5.43034s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_4_dc_current]
[5.4309s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_4_dc_voltage]
[5.43146s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_4_dc_voltage]
[5.43242s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_4_q]
[5.43336s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_4_q]
[5.43431s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	0
	},
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"apparent_power":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_4",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/module_4:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/module_4:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"l1_current":	{
		"value":	0
	},
	"l2_current":	{
		"value":	0
	},
	"l3_current":	{
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_4",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/pcs/module_4:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_igbt_temperature":	{
		"value":	0
	},
	"reactive_power":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[5.43535s  ] [info    ] [LogInfo        ] [/assets/pcs/module_4:maint_mode] received a value of [false]
[5.43638s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.4368s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.43767s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_active_power":	{
		"value":	"/assets/pcs/module_4:active_power",
		"vlink":	"/status/module_4:ActivePower"
	},
	"ui_apparent_power":	{
		"value":	"/assets/pcs/module_4:apparent_power",
		"vlink":	"/status/module_4:ApparentPower"
	},
	"ui_dc_current":	{
		"value":	"/assets/pcs/module_4:dc_current",
		"vlink":	"/status/module_4:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/pcs/module_4:dc_power",
		"vlink":	"/status/module_4:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/pcs/module_4:dc_voltage",
		"vlink":	"/status/module_4:DCVoltage"
	},
	"ui_l1_current":	{
		"value":	"/assets/pcs/module_4:l1_current",
		"vlink":	"/status/module_4:L1Current"
	},
	"ui_l2_current":	{
		"value":	"/assets/pcs/module_4:l2_current",
		"vlink":	"/status/module_4:L2Current"
	},
	"ui_l3_current":	{
		"value":	"/assets/pcs/module_4:l3_current",
		"vlink":	"/status/module_4:L3Current"
	},
	"ui_max_igbt_temperature":	{
		"value":	"/assets/pcs/module_4:max_igbt_temperature",
		"vlink":	"/status/module_4:MaxIGBTTemperature"
	},
	"ui_reactive_power":	{
		"value":	"/assets/pcs/module_4:reactive_power",
		"vlink":	"/status/module_4:ReactivePower"
	},
	"ui_status":	{
		"value":	"/assets/pcs/module_4:status",
		"vlink":	"/status/module_4:Status"
	}
}].
[5.43806s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:active_power]
[5.43837s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:active_power]
[5.43887s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:apparent_power]
[5.43939s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:apparent_power]
[5.43977s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:dc_current]
[5.44012s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:dc_current]
[5.4405s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:dc_power]
[5.44085s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:dc_power]
[5.44126s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:dc_voltage]
[5.44195s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:dc_voltage]
[5.44262s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:l1_current]
[5.44292s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:l1_current]
[5.44326s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:l2_current]
[5.44363s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:l2_current]
[5.44452s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:l3_current]
[5.44497s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:l3_current]
[5.44582s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:max_igbt_temperature]
[5.44621s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:max_igbt_temperature]
[5.44683s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:reactive_power]
[5.44743s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:reactive_power]
[5.44812s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_4:status]
[5.44843s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_4:status]
[5.4496s   ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [module_5]
[5.44987s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [module_5] parent am [pcs] 
[5.45088s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [module_5]
[5.45164s  ] [info    ] [configure_vmapS] body: {"/config/module_5":{"AlarmDestination":"/assets/pcs/module_5:alarms","FaultDestination":"/assets/pcs/module_5:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/module_5":{"pubAssets_module_5":{"actions":{"onSet":[{"func":[{"amap":"module_5","func":"RunPub"}]}]},"enable":"/config/module_5:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/module_5)","table":"/assets/pcs/module_5","value":1},"runMonitor_module_5":{"actions":{"onSet":[{"func":[{"amap":"module_5","func":"RunMonitor"}]}]},"aname":"module_5","enable":"/config/module_5:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/module_5","value":1}},"/status/module_5":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"module_5","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/module_5) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"module_5","every":1,"uri":"/sched/module_5:pubAssets_module_5","value":1},{"aname":"module_5","every":0.1,"uri":"/sched/module_5:runMonitor_module_5","value":1},{"aname":"module_5","every":1,"uri":"/sched/module_5:checkInputs_module_5","value":1}],"targav":"/system/commands:run","value":false}},"/controls/module_5":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"module_5","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/module_5":{"/controls/module_5:ClearFaults":{"amap":"module_5","func":"HandleCmd"}},"/status/module_5":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/module_5:clear_faults"},{"outValue":"Clear","uri":"/alarms/module_5:clear_alarms"}]}]},"enable":"/config/module_5:enable","ifChanged":false,"note":"When this variable is set, /faults/module_5:clear_faults and /alarms/module_5:clear_alarms will be set to Clear","value":false}},"/alarms/module_5":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"module_5","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/module_5) will be reset to the normal state (defined in /config/module_5:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/module_5":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_5","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/module_5) will be reset to the normal state (defined in /config/module_5:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/module_5":{"/status/module_5:TotalAlarmCnt":{"amap":"module_5","func":"CalculateVar"},"/status/module_5:TotalFaultCnt":{"amap":"module_5","func":"CalculateVar"}},"/status/module_5":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"module_5","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_5:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_5:FaultCnt"}},"/schedule/wake_monitor/module_5":{"/status/module_5:CurrentFault":{"func":"CalculateVar"},"/status/module_5:CurrentWarning":{"func":"CalculateVar"},"/status/module_5:PCSDCPower":{"func":"CalculateVar"}},"/status/module_5":{"CurrentFault":{"expression":"if ((5 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((5 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/module_5:PCSDCVoltage","variable2":"/status/module_5:PCSDCCurrent"}},"/vlinks/module_5":{"active_power":{"value":"/components/pcs_registers_fast:module_5_p","vlink":"/status/module_5:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:module_5_dc_voltage_p","vlink":"/status/module_5:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:module_5_current_r","vlink":"/status/module_5:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:module_5_current_s","vlink":"/status/module_5:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:module_5_current_t","vlink":"/status/module_5:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:module_5_max_temp","vlink":"/status/module_5:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:module_5_dc_current","vlink":"/status/module_5:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:module_5_dc_voltage","vlink":"/status/module_5:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:module_5_q","vlink":"/status/module_5:ReactivePower"}},"/assets/pcs/module_5":{"active_power":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_5","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/module_5:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/module_5:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"l1_current":{"value":0},"l2_current":{"value":0},"l3_current":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"module_5","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/module_5:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_igbt_temperature":{"value":0},"reactive_power":{"value":0},"status":{"value":"INIT"}},"/vlinks/module_5":{"ui_active_power":{"value":"/assets/pcs/module_5:active_power","vlink":"/status/module_5:ActivePower"},"ui_apparent_power":{"value":"/assets/pcs/module_5:apparent_power","vlink":"/status/module_5:ApparentPower"},"ui_dc_current":{"value":"/assets/pcs/module_5:dc_current","vlink":"/status/module_5:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/module_5:dc_power","vlink":"/status/module_5:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/module_5:dc_voltage","vlink":"/status/module_5:DCVoltage"},"ui_l1_current":{"value":"/assets/pcs/module_5:l1_current","vlink":"/status/module_5:L1Current"},"ui_l2_current":{"value":"/assets/pcs/module_5:l2_current","vlink":"/status/module_5:L2Current"},"ui_l3_current":{"value":"/assets/pcs/module_5:l3_current","vlink":"/status/module_5:L3Current"},"ui_max_igbt_temperature":{"value":"/assets/pcs/module_5:max_igbt_temperature","vlink":"/status/module_5:MaxIGBTTemperature"},"ui_reactive_power":{"value":"/assets/pcs/module_5:reactive_power","vlink":"/status/module_5:ReactivePower"},"ui_status":{"value":"/assets/pcs/module_5:status","vlink":"/status/module_5:Status"}}}
[5.45383s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[5.45427s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/pcs/module_5:alarms",
	"FaultDestination":	"/assets/pcs/module_5:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[5.4546s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:alarms]
[5.4552s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:alarms]
[5.45576s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:faults]
[5.45628s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:faults]
[5.45719s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.45773s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.45818s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.45861s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.45917s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_module_5":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_5",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/module_5:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/pcs/module_5)",
		"table":	"/assets/pcs/module_5",
		"value":	1
	},
	"runMonitor_module_5":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_5",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"module_5",
		"enable":	"/config/module_5:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/module_5",
		"value":	1
	}
}].
[5.4597s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"Status":	"INIT"
}].
[5.4602s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.46067s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.46142s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_module":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_5",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/module_5) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"module_5",
				"every":	1,
				"uri":	"/sched/module_5:pubAssets_module_5",
				"value":	1
			}, {
				"aname":	"module_5",
				"every":	0.1,
				"uri":	"/sched/module_5:runMonitor_module_5",
				"value":	1
			}, {
				"aname":	"module_5",
				"every":	1,
				"uri":	"/sched/module_5:checkInputs_module_5",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[5.46194s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_5",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[5.46243s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_5:HandleCmd_ClearFaults]
[5.46269s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_5:HandleCmd_ClearFaults]
[5.46301s  ] [info    ] [HandleCmd      ] reload first run [module_5] [/controls/module_5:ClearFaults]  reload 0
[5.46337s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/module_5:ClearFaults]
[5.4637s   ] [info    ] [HandleCmd      ] Adding [/controls/module_5:ClearFaults] to amap in asset [module_5]
[5.46412s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/module_5:ClearFaults]
[5.46455s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/module_5:ClearFaults]
[5.46495s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/module_5:ClearFaults":	{
		"amap":	"module_5",
		"func":	"HandleCmd"
	}
}].
[5.46534s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/module_5:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/module_5:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/module_5:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/module_5:clear_faults and /alarms/module_5:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[5.46592s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_5",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/module_5) will be reset to the normal state (defined in /config/module_5:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[5.46638s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.46662s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.46757s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.46797s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.46846s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_5:FaultDestination]
[5.46876s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_5:FaultDestination]
[5.46965s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_5:NoFaultMsg]
[5.47006s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_5:NoFaultMsg]
[5.47056s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_5:FaultCnt]
[5.47094s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_5:FaultCnt]
[5.47157s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_5:AlarmDestination]
[5.47224s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_5:AlarmDestination]
[5.47343s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_5:NoAlarmMsg]
[5.47392s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_5:NoAlarmMsg]
[5.47432s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_5:AlarmCnt]
[5.47464s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_5:AlarmCnt]
[5.4751s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_5",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/module_5) will be reset to the normal state (defined in /config/module_5:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[5.47545s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.47582s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.4763s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.48714s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.48759s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_5:TotalAlarmCnt":	{
		"amap":	"module_5",
		"func":	"CalculateVar"
	},
	"/status/module_5:TotalFaultCnt":	{
		"amap":	"module_5",
		"func":	"CalculateVar"
	}
}].
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[5.48884s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_5",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/pcs:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the PCS Module faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_5:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_5:FaultCnt"
	}
}].
[5.48962s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_5:CurrentFault":	{
		"func":	"CalculateVar"
	},
	"/status/module_5:CurrentWarning":	{
		"func":	"CalculateVar"
	},
	"/status/module_5:PCSDCPower":	{
		"func":	"CalculateVar"
	}
}].
[5.49019s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CurrentFault":	{
		"expression":	"if ((5 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_fault"
	},
	"CurrentWarning":	{
		"expression":	"if ((5 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_warning"
	},
	"PCSDCPower":	{
		"expression":	"{1} * {2}",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_5:PCSDCVoltage",
		"variable2":	"/status/module_5:PCSDCCurrent"
	}
}].
[5.49083s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	"/components/pcs_registers_fast:module_5_p",
		"vlink":	"/status/module_5:ActivePower"
	},
	"apparent_power":	{
		"value":	"/components/pcs_registers_fast:module_5_dc_voltage_p",
		"vlink":	"/status/module_5:ApparentPower"
	},
	"l1_current":	{
		"value":	"/components/pcs_registers_fast:module_5_current_r",
		"vlink":	"/status/module_5:L1Current"
	},
	"l2_current":	{
		"value":	"/components/pcs_registers_fast:module_5_current_s",
		"vlink":	"/status/module_5:L2Current"
	},
	"l3_current":	{
		"value":	"/components/pcs_registers_fast:module_5_current_t",
		"vlink":	"/status/module_5:L3Current"
	},
	"max_igbt_temperature":	{
		"value":	"/components/pcs_registers_fast:module_5_max_temp",
		"vlink":	"/status/module_5:MaxIGBTTemperature"
	},
	"pcs_dc_current":	{
		"value":	"/components/pcs_registers_fast:module_5_dc_current",
		"vlink":	"/status/module_5:PCSDCCurrent"
	},
	"pcs_dc_voltage":	{
		"value":	"/components/pcs_registers_fast:module_5_dc_voltage",
		"vlink":	"/status/module_5:PCSDCVoltage"
	},
	"reactive_power":	{
		"value":	"/components/pcs_registers_fast:module_5_q",
		"vlink":	"/status/module_5:ReactivePower"
	}
}].
[5.49148s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_5_p]
[5.49219s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_5_p]
[5.49267s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_5_dc_voltage_p]
[5.49325s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_5_dc_voltage_p]
[5.49378s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_5_current_r]
[5.49434s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_5_current_r]
[5.49481s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_5_current_s]
[5.49541s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_5_current_s]
[5.49598s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_5_current_t]
[5.49656s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_5_current_t]
[5.49709s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_5_max_temp]
[5.49778s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_5_max_temp]
[5.4984s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_5_dc_current]
[5.49898s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_5_dc_current]
[5.49971s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_5_dc_voltage]
[5.50017s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_5_dc_voltage]
[5.50079s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_5_q]
[5.50131s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_5_q]
[5.50223s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	0
	},
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"apparent_power":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_5",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/module_5:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/module_5:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"l1_current":	{
		"value":	0
	},
	"l2_current":	{
		"value":	0
	},
	"l3_current":	{
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_5",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/pcs/module_5:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_igbt_temperature":	{
		"value":	0
	},
	"reactive_power":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[5.50378s  ] [info    ] [LogInfo        ] [/assets/pcs/module_5:maint_mode] received a value of [false]
[5.50461s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.50513s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.50575s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_active_power":	{
		"value":	"/assets/pcs/module_5:active_power",
		"vlink":	"/status/module_5:ActivePower"
	},
	"ui_apparent_power":	{
		"value":	"/assets/pcs/module_5:apparent_power",
		"vlink":	"/status/module_5:ApparentPower"
	},
	"ui_dc_current":	{
		"value":	"/assets/pcs/module_5:dc_current",
		"vlink":	"/status/module_5:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/pcs/module_5:dc_power",
		"vlink":	"/status/module_5:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/pcs/module_5:dc_voltage",
		"vlink":	"/status/module_5:DCVoltage"
	},
	"ui_l1_current":	{
		"value":	"/assets/pcs/module_5:l1_current",
		"vlink":	"/status/module_5:L1Current"
	},
	"ui_l2_current":	{
		"value":	"/assets/pcs/module_5:l2_current",
		"vlink":	"/status/module_5:L2Current"
	},
	"ui_l3_current":	{
		"value":	"/assets/pcs/module_5:l3_current",
		"vlink":	"/status/module_5:L3Current"
	},
	"ui_max_igbt_temperature":	{
		"value":	"/assets/pcs/module_5:max_igbt_temperature",
		"vlink":	"/status/module_5:MaxIGBTTemperature"
	},
	"ui_reactive_power":	{
		"value":	"/assets/pcs/module_5:reactive_power",
		"vlink":	"/status/module_5:ReactivePower"
	},
	"ui_status":	{
		"value":	"/assets/pcs/module_5:status",
		"vlink":	"/status/module_5:Status"
	}
}].
[5.50621s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:active_power]
[5.50659s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:active_power]
[5.50714s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:apparent_power]
[5.50741s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:apparent_power]
[5.50797s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:dc_current]
[5.50831s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:dc_current]
[5.50868s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:dc_power]
[5.50897s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:dc_power]
[5.50938s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:dc_voltage]
[5.50977s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:dc_voltage]
[5.51022s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:l1_current]
[5.51052s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:l1_current]
[5.51091s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:l2_current]
[5.51117s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:l2_current]
[5.5116s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:l3_current]
[5.51201s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:l3_current]
[5.51248s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:max_igbt_temperature]
[5.51289s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:max_igbt_temperature]
[5.51587s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:reactive_power]
[5.5163s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:reactive_power]
[5.52144s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_5:status]
[5.52181s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_5:status]
[5.52245s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [module_6]
[5.52276s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [module_6] parent am [pcs] 
[5.52322s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [module_6]
[5.52343s  ] [info    ] [configure_vmapS] body: {"/config/module_6":{"AlarmDestination":"/assets/pcs/module_6:alarms","FaultDestination":"/assets/pcs/module_6:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/sched/module_6":{"pubAssets_module_6":{"actions":{"onSet":[{"func":[{"amap":"module_6","func":"RunPub"}]}]},"enable":"/config/module_6:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/module_6)","table":"/assets/pcs/module_6","value":1},"runMonitor_module_6":{"actions":{"onSet":[{"func":[{"amap":"module_6","func":"RunMonitor"}]}]},"aname":"module_6","enable":"/config/module_6:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/module_6","value":1}},"/status/module_6":{"Status":"INIT"},"/system/commands":{"runOpts_module":{"actions":{"onSet":[{"func":[{"amap":"module_6","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/module_6) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"module_6","every":1,"uri":"/sched/module_6:pubAssets_module_6","value":1},{"aname":"module_6","every":0.1,"uri":"/sched/module_6:runMonitor_module_6","value":1},{"aname":"module_6","every":1,"uri":"/sched/module_6:checkInputs_module_6","value":1}],"targav":"/system/commands:run","value":false}},"/controls/module_6":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"module_6","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"cmdVar":"","note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","value":0}},"/schedule/wake_monitor/module_6":{"/controls/module_6:ClearFaults":{"amap":"module_6","func":"HandleCmd"}},"/status/module_6":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/module_6:clear_faults"},{"outValue":"Clear","uri":"/alarms/module_6:clear_alarms"}]}]},"enable":"/config/module_6:enable","ifChanged":false,"note":"When this variable is set, /faults/module_6:clear_faults and /alarms/module_6:clear_alarms will be set to Clear","value":false}},"/alarms/module_6":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"module_6","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/module_6) will be reset to the normal state (defined in /config/module_6:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/module_6":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_6","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/module_6) will be reset to the normal state (defined in /config/module_6:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/module_6":{"/status/module_6:TotalAlarmCnt":{"amap":"module_6","func":"CalculateVar"},"/status/module_6:TotalFaultCnt":{"amap":"module_6","func":"CalculateVar"}},"/status/module_6":{"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"module_6","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS Module faults, the fault shutdown event will be propagated to its parent","value":false},"TotalAlarmCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_6:AlarmCnt"},"TotalFaultCnt":{"expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/module_6:FaultCnt"}},"/schedule/wake_monitor/module_6":{"/status/module_6:CurrentFault":{"func":"CalculateVar"},"/status/module_6:CurrentWarning":{"func":"CalculateVar"},"/status/module_6:PCSDCPower":{"func":"CalculateVar"}},"/status/module_6":{"CurrentFault":{"expression":"if ((6 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_fault"},"CurrentWarning":{"expression":"if ((6 == {1} \u003e\u003e 10), ({1} \u0026 1023), 0)","numVars":1,"useExpr":true,"value":0,"variable1":"/components/pcs_registers_fast:current_warning"},"PCSDCPower":{"expression":"{1} * {2}","numVars":2,"useExpr":true,"value":0,"variable1":"/status/module_6:PCSDCVoltage","variable2":"/status/module_6:PCSDCCurrent"}},"/vlinks/module_6":{"active_power":{"value":"/components/pcs_registers_fast:module_6_p","vlink":"/status/module_6:ActivePower"},"apparent_power":{"value":"/components/pcs_registers_fast:module_6_dc_voltage_p","vlink":"/status/module_6:ApparentPower"},"l1_current":{"value":"/components/pcs_registers_fast:module_6_current_r","vlink":"/status/module_6:L1Current"},"l2_current":{"value":"/components/pcs_registers_fast:module_6_current_s","vlink":"/status/module_6:L2Current"},"l3_current":{"value":"/components/pcs_registers_fast:module_6_current_t","vlink":"/status/module_6:L3Current"},"max_igbt_temperature":{"value":"/components/pcs_registers_fast:module_6_max_temp","vlink":"/status/module_6:MaxIGBTTemperature"},"pcs_dc_current":{"value":"/components/pcs_registers_fast:module_6_dc_current","vlink":"/status/module_6:PCSDCCurrent"},"pcs_dc_voltage":{"value":"/components/pcs_registers_fast:module_6_dc_voltage","vlink":"/status/module_6:PCSDCVoltage"},"reactive_power":{"value":"/components/pcs_registers_fast:module_6_q","vlink":"/status/module_6:ReactivePower"}},"/assets/pcs/module_6":{"active_power":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"module_6","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/module_6:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/module_6:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"l1_current":{"value":0},"l2_current":{"value":0},"l3_current":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"module_6","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/module_6:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_igbt_temperature":{"value":0},"reactive_power":{"value":0},"status":{"value":"INIT"}},"/vlinks/module_6":{"ui_active_power":{"value":"/assets/pcs/module_6:active_power","vlink":"/status/module_6:ActivePower"},"ui_apparent_power":{"value":"/assets/pcs/module_6:apparent_power","vlink":"/status/module_6:ApparentPower"},"ui_dc_current":{"value":"/assets/pcs/module_6:dc_current","vlink":"/status/module_6:DCCurrent"},"ui_dc_power":{"value":"/assets/pcs/module_6:dc_power","vlink":"/status/module_6:DCPower"},"ui_dc_voltage":{"value":"/assets/pcs/module_6:dc_voltage","vlink":"/status/module_6:DCVoltage"},"ui_l1_current":{"value":"/assets/pcs/module_6:l1_current","vlink":"/status/module_6:L1Current"},"ui_l2_current":{"value":"/assets/pcs/module_6:l2_current","vlink":"/status/module_6:L2Current"},"ui_l3_current":{"value":"/assets/pcs/module_6:l3_current","vlink":"/status/module_6:L3Current"},"ui_max_igbt_temperature":{"value":"/assets/pcs/module_6:max_igbt_temperature","vlink":"/status/module_6:MaxIGBTTemperature"},"ui_reactive_power":{"value":"/assets/pcs/module_6:reactive_power","vlink":"/status/module_6:ReactivePower"},"ui_status":{"value":"/assets/pcs/module_6:status","vlink":"/status/module_6:Status"}}}
[5.52425s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[5.52451s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/pcs/module_6:alarms",
	"FaultDestination":	"/assets/pcs/module_6:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[5.52484s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:alarms]
[5.52511s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:alarms]
[5.52538s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:faults]
[5.52576s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:faults]
[5.52607s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.52648s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.52683s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.52713s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.52745s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_module_6":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_6",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/module_6:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/pcs/module_6)",
		"table":	"/assets/pcs/module_6",
		"value":	1
	},
	"runMonitor_module_6":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_6",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"module_6",
		"enable":	"/config/module_6:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/module_6",
		"value":	1
	}
}].
[5.5278s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"Status":	"INIT"
}].
[5.52807s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.52831s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.52863s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_module":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_6",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/module_6) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"module_6",
				"every":	1,
				"uri":	"/sched/module_6:pubAssets_module_6",
				"value":	1
			}, {
				"aname":	"module_6",
				"every":	0.1,
				"uri":	"/sched/module_6:runMonitor_module_6",
				"value":	1
			}, {
				"aname":	"module_6",
				"every":	1,
				"uri":	"/sched/module_6:checkInputs_module_6",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[5.52907s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_6",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"cmdVar":	"",
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"value":	0
	}
}].
[5.52941s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_6:HandleCmd_ClearFaults]
[5.52969s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_6:HandleCmd_ClearFaults]
[5.52992s  ] [info    ] [HandleCmd      ] reload first run [module_6] [/controls/module_6:ClearFaults]  reload 0
[5.53016s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/module_6:ClearFaults]
[5.53042s  ] [info    ] [HandleCmd      ] Adding [/controls/module_6:ClearFaults] to amap in asset [module_6]
[5.53064s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/module_6:ClearFaults]
[5.5309s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/module_6:ClearFaults]
[5.53119s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/module_6:ClearFaults":	{
		"amap":	"module_6",
		"func":	"HandleCmd"
	}
}].
[5.5315s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/module_6:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/module_6:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/module_6:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/module_6:clear_faults and /alarms/module_6:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[5.53193s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_6",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/module_6) will be reset to the normal state (defined in /config/module_6:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[5.5324s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.53276s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.53324s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.53362s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.53397s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_6:FaultDestination]
[5.53422s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_6:FaultDestination]
[5.53496s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_6:NoFaultMsg]
[5.53533s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_6:NoFaultMsg]
[5.5357s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_6:FaultCnt]
[5.53611s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_6:FaultCnt]
[5.53647s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_6:AlarmDestination]
[5.53692s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_6:AlarmDestination]
[5.53734s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/module_6:NoAlarmMsg]
[5.53774s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/module_6:NoAlarmMsg]
[5.53833s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_6:AlarmCnt]
[5.53871s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_6:AlarmCnt]
[5.53934s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_6",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/module_6) will be reset to the normal state (defined in /config/module_6:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[5.54s     ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.54049s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.5409s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.54129s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.54167s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_6:TotalAlarmCnt":	{
		"amap":	"module_6",
		"func":	"CalculateVar"
	},
	"/status/module_6:TotalFaultCnt":	{
		"amap":	"module_6",
		"func":	"CalculateVar"
	}
}].
[5.54234s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_6",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/pcs:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the PCS Module faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"TotalAlarmCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_6:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_6:FaultCnt"
	}
}].
[5.54322s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/module_6:CurrentFault":	{
		"func":	"CalculateVar"
	},
	"/status/module_6:CurrentWarning":	{
		"func":	"CalculateVar"
	},
	"/status/module_6:PCSDCPower":	{
		"func":	"CalculateVar"
	}
}].
[5.54378s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CurrentFault":	{
		"expression":	"if ((6 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_fault"
	},
	"CurrentWarning":	{
		"expression":	"if ((6 == {1} >> 10), ({1} & 1023), 0)",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/components/pcs_registers_fast:current_warning"
	},
	"PCSDCPower":	{
		"expression":	"{1} * {2}",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/module_6:PCSDCVoltage",
		"variable2":	"/status/module_6:PCSDCCurrent"
	}
}].
[5.54454s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	"/components/pcs_registers_fast:module_6_p",
		"vlink":	"/status/module_6:ActivePower"
	},
	"apparent_power":	{
		"value":	"/components/pcs_registers_fast:module_6_dc_voltage_p",
		"vlink":	"/status/module_6:ApparentPower"
	},
	"l1_current":	{
		"value":	"/components/pcs_registers_fast:module_6_current_r",
		"vlink":	"/status/module_6:L1Current"
	},
	"l2_current":	{
		"value":	"/components/pcs_registers_fast:module_6_current_s",
		"vlink":	"/status/module_6:L2Current"
	},
	"l3_current":	{
		"value":	"/components/pcs_registers_fast:module_6_current_t",
		"vlink":	"/status/module_6:L3Current"
	},
	"max_igbt_temperature":	{
		"value":	"/components/pcs_registers_fast:module_6_max_temp",
		"vlink":	"/status/module_6:MaxIGBTTemperature"
	},
	"pcs_dc_current":	{
		"value":	"/components/pcs_registers_fast:module_6_dc_current",
		"vlink":	"/status/module_6:PCSDCCurrent"
	},
	"pcs_dc_voltage":	{
		"value":	"/components/pcs_registers_fast:module_6_dc_voltage",
		"vlink":	"/status/module_6:PCSDCVoltage"
	},
	"reactive_power":	{
		"value":	"/components/pcs_registers_fast:module_6_q",
		"vlink":	"/status/module_6:ReactivePower"
	}
}].
[5.54514s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_6_p]
[5.54563s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_6_p]
[5.54614s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_6_dc_voltage_p]
[5.54654s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_6_dc_voltage_p]
[5.54687s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_6_current_r]
[5.5471s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_6_current_r]
[5.54737s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_6_current_s]
[5.54765s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_6_current_s]
[5.54791s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_6_current_t]
[5.5482s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_6_current_t]
[5.54847s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_6_max_temp]
[5.54874s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_6_max_temp]
[5.54904s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_6_dc_current]
[5.54922s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_6_dc_current]
[5.54946s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_6_dc_voltage]
[5.54973s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_6_dc_voltage]
[5.55018s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_registers_fast:module_6_q]
[5.55052s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_registers_fast:module_6_q]
[5.55106s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	0
	},
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"apparent_power":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_6",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/module_6:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/module_6:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"l1_current":	{
		"value":	0
	},
	"l2_current":	{
		"value":	0
	},
	"l3_current":	{
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"module_6",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/pcs/module_6:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_igbt_temperature":	{
		"value":	0
	},
	"reactive_power":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[5.55174s  ] [info    ] [LogInfo        ] [/assets/pcs/module_6:maint_mode] received a value of [false]
[5.55214s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.55243s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.55286s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_active_power":	{
		"value":	"/assets/pcs/module_6:active_power",
		"vlink":	"/status/module_6:ActivePower"
	},
	"ui_apparent_power":	{
		"value":	"/assets/pcs/module_6:apparent_power",
		"vlink":	"/status/module_6:ApparentPower"
	},
	"ui_dc_current":	{
		"value":	"/assets/pcs/module_6:dc_current",
		"vlink":	"/status/module_6:DCCurrent"
	},
	"ui_dc_power":	{
		"value":	"/assets/pcs/module_6:dc_power",
		"vlink":	"/status/module_6:DCPower"
	},
	"ui_dc_voltage":	{
		"value":	"/assets/pcs/module_6:dc_voltage",
		"vlink":	"/status/module_6:DCVoltage"
	},
	"ui_l1_current":	{
		"value":	"/assets/pcs/module_6:l1_current",
		"vlink":	"/status/module_6:L1Current"
	},
	"ui_l2_current":	{
		"value":	"/assets/pcs/module_6:l2_current",
		"vlink":	"/status/module_6:L2Current"
	},
	"ui_l3_current":	{
		"value":	"/assets/pcs/module_6:l3_current",
		"vlink":	"/status/module_6:L3Current"
	},
	"ui_max_igbt_temperature":	{
		"value":	"/assets/pcs/module_6:max_igbt_temperature",
		"vlink":	"/status/module_6:MaxIGBTTemperature"
	},
	"ui_reactive_power":	{
		"value":	"/assets/pcs/module_6:reactive_power",
		"vlink":	"/status/module_6:ReactivePower"
	},
	"ui_status":	{
		"value":	"/assets/pcs/module_6:status",
		"vlink":	"/status/module_6:Status"
	}
}].
[5.55323s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:active_power]
[5.55353s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:active_power]
[5.55387s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:apparent_power]
[5.55414s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:apparent_power]
[5.55457s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:dc_current]
[5.55488s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:dc_current]
[5.55525s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:dc_power]
[5.5555s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:dc_power]
[5.55579s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:dc_voltage]
[5.55614s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:dc_voltage]
[5.5564s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:l1_current]
[5.5567s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:l1_current]
[5.55697s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:l2_current]
[5.55719s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:l2_current]
[5.55742s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:l3_current]
[5.55767s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:l3_current]
[5.55795s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:max_igbt_temperature]
[5.55821s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:max_igbt_temperature]
[5.5585s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:reactive_power]
[5.5587s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:reactive_power]
[5.55896s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/module_6:status]
[5.55914s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/module_6:status]
[5.55988s  ] [info    ] [runConfig      ]  All files loaded for loader [ess_controller] ready to run av [/config/load:ess_controller] load
[5.56014s  ] [info    ] [requestFfile   ]  fims send [/dbi/ess_controller/configs_ess_final] reply [/ess/cfg/cfile/ess/ess_final] cfile [ess_final]
[5.56036s  ] [info    ] [runConfig      ]  After requestFfile, requesting final [ess_final]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMongooseModule dependencies initialized[39m[38;5;3m +99ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +12ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mLoggerFilterModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mBffModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mThrottlerModule dependencies initialized[39m[38;5;3m +25ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +3ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mLoggingModule dependencies initialized[39m[38;5;3m +8ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mDiscoveryModule dependencies initialized[39m[38;5;3m +22ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mDBIModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppEnvModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mServeStaticModule dependencies initialized[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mEventsModule dependencies initialized[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPermissionsModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mScheduleModule dependencies initialized[39m[38;5;3m +27ms[39m
[5.6925s   ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:ess_final]  am at start [ess]
[5.69772s  ] [info    ] [configure_vmapS] process file seeking header stuff am [ess] ai [no ai]
[5.69818s  ] [info    ] [configure_vmapS] body: {"/system/commands":{"addSchedVars_ess":{"actions":{"onSet":[{"remap":[{"uri":"/system/commands:runOpts_ess@enabled"},{"uri":"/system/commands:runOpts_ess"},{"uri":"/system/commands:runOpts_bms@enabled"},{"uri":"/system/commands:runOpts_bms"},{"uri":"/system/commands:runOpts_rack@enabled"},{"uri":"/system/commands:runOpts_rack"},{"uri":"/system/commands:runOpts_pcs@enabled"},{"uri":"/system/commands:runOpts_pcs"},{"uri":"/system/commands:runOpts_module@enabled"},{"uri":"/system/commands:runOpts_module"}]}]},"enabled":false,"ifChanged":false,"note":"Sets /system/commands:runOpts_\u003casset\u003e to add schedule variables to scheduler","value":true},"enableVars_ess":{"actions":{"onSet":[{"remap":[{"uri":"/config/ess:enable"},{"uri":"/config/bms:enable"},{"uri":"/config/bms:enum_opt"},{"uri":"/config/rack_1:enable"},{"uri":"/config/rack_1:enum_opt"},{"uri":"/config/rack_2:enable"},{"uri":"/config/rack_2:enum_opt"},{"uri":"/config/rack_3:enable"},{"uri":"/config/rack_3:enum_opt"},{"uri":"/config/rack_4:enable"},{"uri":"/config/rack_4:enum_opt"},{"uri":"/config/rack_5:enable"},{"uri":"/config/rack_5:enum_opt"},{"uri":"/config/rack_6:enable"},{"uri":"/config/rack_6:enum_opt"},{"uri":"/config/rack_7:enable"},{"uri":"/config/rack_7:enum_opt"},{"uri":"/config/rack_8:enable"},{"uri":"/config/rack_8:enum_opt"},{"uri":"/config/rack_9:enable"},{"uri":"/config/rack_9:enum_opt"},{"uri":"/config/pcs:enable"},{"uri":"/config/pcs:enum_opt"},{"uri":"/config/module_1:enable"},{"uri":"/config/module_1:enum_opt"},{"uri":"/config/module_2:enable"},{"uri":"/config/module_2:enum_opt"},{"uri":"/config/module_3:enable"},{"uri":"/config/module_3:enum_opt"},{"uri":"/config/module_4:enable"},{"uri":"/config/module_4:enum_opt"},{"uri":"/config/module_5:enable"},{"uri":"/config/module_5:enum_opt"},{"uri":"/config/module_6:enable"},{"uri":"/config/module_6:enum_opt"}]}]},"enabled":false,"ifChanged":false,"note1":"Sets /config/\u003casset\u003e:enable and /config/\u003casset\u003e:enum_opt","note2":"Enable actions, if any, and other operations for variables that have the enable parameter","value":true},"link":{"actions":{"onSet":[{"func":[{"func":"RunAllLinks"}]}]},"enabled":false,"ifChanged":false,"note":"Command variable used to link all variables defined in /links","value":true},"run":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"enabled":true,"ifChanged":false,"note":"Command variable used to start scheduled tasks","value":true},"stop":{"actions":{"onSet":[{"func":[{"func":"StopSched"}]}]},"enabled":true,"ifChanged":false,"note":"Command variable used to stop scheduled tasks","value":true},"vlink":{"actions":{"onSet":[{"func":[{"func":"RunAllVLinks"}]}]},"enabled":false,"ifChanged":false,"note":"Command variable used to link all variables defined in /vlinks","value":true}},"/system/sequences":{"triggerSysCmds_ess":{"actions":{"onSet":[{"remap":[{"uri":"/system/commands:enableVars_ess@enabled"},{"uri":"/system/commands:enableVars_ess"},{"uri":"/system/commands:link@enabled"},{"uri":"/system/commands:link"},{"uri":"/system/commands:vlink@enabled"},{"uri":"/system/commands:vlink"},{"uri":"/system/commands:addSchedVars_ess@enabled"},{"uri":"/system/commands:addSchedVars_ess"}]}]},"enabled":true,"ifChanged":false,"note1":"Trigger some variables defined in /system/commands","note2":"Specifically, enableVars_ess, link, vlink, and addSchedVars_ess are triggered","value":true}}}
[5.69847s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[5.69898s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"addSchedVars_ess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/system/commands:runOpts_ess@enabled"
						}, {
							"uri":	"/system/commands:runOpts_ess"
						}, {
							"uri":	"/system/commands:runOpts_bms@enabled"
						}, {
							"uri":	"/system/commands:runOpts_bms"
						}, {
							"uri":	"/system/commands:runOpts_rack@enabled"
						}, {
							"uri":	"/system/commands:runOpts_rack"
						}, {
							"uri":	"/system/commands:runOpts_pcs@enabled"
						}, {
							"uri":	"/system/commands:runOpts_pcs"
						}, {
							"uri":	"/system/commands:runOpts_module@enabled"
						}, {
							"uri":	"/system/commands:runOpts_module"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"Sets /system/commands:runOpts_<asset> to add schedule variables to scheduler",
		"value":	true
	},
	"enableVars_ess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/config/ess:enable"
						}, {
							"uri":	"/config/bms:enable"
						}, {
							"uri":	"/config/bms:enum_opt"
						}, {
							"uri":	"/config/rack_1:enable"
						}, {
							"uri":	"/config/rack_1:enum_opt"
						}, {
							"uri":	"/config/rack_2:enable"
						}, {
							"uri":	"/config/rack_2:enum_opt"
						}, {
							"uri":	"/config/rack_3:enable"
						}, {
							"uri":	"/config/rack_3:enum_opt"
						}, {
							"uri":	"/config/rack_4:enable"
						}, {
							"uri":	"/config/rack_4:enum_opt"
						}, {
							"uri":	"/config/rack_5:enable"
						}, {
							"uri":	"/config/rack_5:enum_opt"
						}, {
							"uri":	"/config/rack_6:enable"
						}, {
							"uri":	"/config/rack_6:enum_opt"
						}, {
							"uri":	"/config/rack_7:enable"
						}, {
							"uri":	"/config/rack_7:enum_opt"
						}, {
							"uri":	"/config/rack_8:enable"
						}, {
							"uri":	"/config/rack_8:enum_opt"
						}, {
							"uri":	"/config/rack_9:enable"
						}, {
							"uri":	"/config/rack_9:enum_opt"
						}, {
							"uri":	"/config/pcs:enable"
						}, {
							"uri":	"/config/pcs:enum_opt"
						}, {
							"uri":	"/config/module_1:enable"
						}, {
							"uri":	"/config/module_1:enum_opt"
						}, {
							"uri":	"/config/module_2:enable"
						}, {
							"uri":	"/config/module_2:enum_opt"
						}, {
							"uri":	"/config/module_3:enable"
						}, {
							"uri":	"/config/module_3:enum_opt"
						}, {
							"uri":	"/config/module_4:enable"
						}, {
							"uri":	"/config/module_4:enum_opt"
						}, {
							"uri":	"/config/module_5:enable"
						}, {
							"uri":	"/config/module_5:enum_opt"
						}, {
							"uri":	"/config/module_6:enable"
						}, {
							"uri":	"/config/module_6:enum_opt"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note1":	"Sets /config/<asset>:enable and /config/<asset>:enum_opt",
		"note2":	"Enable actions, if any, and other operations for variables that have the enable parameter",
		"value":	true
	},
	"link":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunAllLinks"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"Command variable used to link all variables defined in /links",
		"value":	true
	},
	"run":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"Command variable used to start scheduled tasks",
		"value":	true
	},
	"stop":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"StopSched"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"Command variable used to stop scheduled tasks",
		"value":	true
	},
	"vlink":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunAllVLinks"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"Command variable used to link all variables defined in /vlinks",
		"value":	true
	}
}].
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +9ms[39m
RunSched >>  [/system/commands:run] missing uri
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mThrottlerModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +1ms[39m
StopSched >>  [/system/commands:stop] missing uri
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mDashboardsModule dependencies initialized[39m[38;5;3m +3ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mWebUIConfigModule dependencies initialized[39m[38;5;3m +1ms[39m
[5.70547s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"triggerSysCmds_ess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/system/commands:enableVars_ess@enabled"
						}, {
							"uri":	"/system/commands:enableVars_ess"
						}, {
							"uri":	"/system/commands:link@enabled"
						}, {
							"uri":	"/system/commands:link"
						}, {
							"uri":	"/system/commands:vlink@enabled"
						}, {
							"uri":	"/system/commands:vlink"
						}, {
							"uri":	"/system/commands:addSchedVars_ess@enabled"
						}, {
							"uri":	"/system/commands:addSchedVars_ess"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Trigger some variables defined in /system/commands",
		"note2":	"Specifically, enableVars_ess, link, vlink, and addSchedVars_ess are triggered",
		"value":	true
	}
}].
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mLayoutsModule dependencies initialized[39m[38;5;3m +9ms[39m
[5.72434s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_alllinks]
[5.72598s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_alllinks]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +14ms[39m
[5.7292s   ] [info    ] [RunAllLinks    ] found 18 keys
[5.72995s  ] [info    ] [RunAllLinks    ]  processing idx [00]  >> xx->aname :[/links/bms]->[bms] parent [ess]
[5.73023s  ] [info    ] [RunALink       ]  found am [bms]
[5.73065s  ] [info    ] [RunAllLinks    ]  processing idx [01]  >> xx->aname :[/links/ess]->[ess] parent [ess]
[5.73084s  ] [info    ] [RunALink       ]  found am [ess]
[5.73109s  ] [info    ] [RunAllLinks    ]  processing idx [02]  >> xx->aname :[/links/module_1]->[module_1] parent [ess]
[5.7315s   ] [info    ] [RunALink       ]  found ai [module_1]
[5.73194s  ] [info    ] [RunAllLinks    ]  processing idx [03]  >> xx->aname :[/links/module_2]->[module_2] parent [ess]
[5.73242s  ] [info    ] [RunALink       ]  found ai [module_2]
[5.73287s  ] [info    ] [RunAllLinks    ]  processing idx [04]  >> xx->aname :[/links/module_3]->[module_3] parent [ess]
[5.73333s  ] [info    ] [RunALink       ]  found ai [module_3]
[5.73361s  ] [info    ] [RunAllLinks    ]  processing idx [05]  >> xx->aname :[/links/module_4]->[module_4] parent [ess]
[5.73385s  ] [info    ] [RunALink       ]  found ai [module_4]
[5.73406s  ] [info    ] [RunAllLinks    ]  processing idx [06]  >> xx->aname :[/links/module_5]->[module_5] parent [ess]
[5.73429s  ] [info    ] [RunALink       ]  found ai [module_5]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mLockModeModule dependencies initialized[39m[38;5;3m +5ms[39m
[5.73462s  ] [info    ] [RunAllLinks    ]  processing idx [07]  >> xx->aname :[/links/module_6]->[module_6] parent [ess]
[5.73537s  ] [info    ] [RunALink       ]  found ai [module_6]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mDashboardModule dependencies initialized[39m[38;5;3m +1ms[39m
[5.73566s  ] [info    ] [RunAllLinks    ]  processing idx [08]  >> xx->aname :[/links/pcs]->[pcs] parent [ess]
[5.73635s  ] [info    ] [RunALink       ]  found am [pcs]
[5.73706s  ] [info    ] [RunAllLinks    ]  processing idx [09]  >> xx->aname :[/links/rack_1]->[rack_1] parent [ess]
[5.73736s  ] [info    ] [RunALink       ]  found ai [rack_1]
[5.73764s  ] [info    ] [RunAllLinks    ]  processing idx [10]  >> xx->aname :[/links/rack_2]->[rack_2] parent [ess]
[5.73788s  ] [info    ] [RunALink       ]  found ai [rack_2]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAuditLoggingModule dependencies initialized[39m[38;5;3m +3ms[39m
[5.73818s  ] [info    ] [RunAllLinks    ]  processing idx [11]  >> xx->aname :[/links/rack_3]->[rack_3] parent [ess]
[5.74005s  ] [info    ] [RunALink       ]  found ai [rack_3]
[5.74044s  ] [info    ] [RunAllLinks    ]  processing idx [12]  >> xx->aname :[/links/rack_4]->[rack_4] parent [ess]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mSiteStatusModule dependencies initialized[39m[38;5;3m +3ms[39m
[5.74076s  ] [info    ] [RunALink       ]  found ai [rack_4]
[5.74189s  ] [info    ] [RunAllLinks    ]  processing idx [13]  >> xx->aname :[/links/rack_5]->[rack_5] parent [ess]
[5.74223s  ] [info    ] [RunALink       ]  found ai [rack_5]
[5.74271s  ] [info    ] [RunAllLinks    ]  processing idx [14]  >> xx->aname :[/links/rack_6]->[rack_6] parent [ess]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAssetsPageModule dependencies initialized[39m[38;5;3m +1ms[39m
[5.74307s  ] [info    ] [RunALink       ]  found ai [rack_6]
[5.7446s   ] [info    ] [RunAllLinks    ]  processing idx [15]  >> xx->aname :[/links/rack_7]->[rack_7] parent [ess]
[5.74487s  ] [info    ] [RunALink       ]  found ai [rack_7]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mSystemStatusModule dependencies initialized[39m[38;5;3m +4ms[39m
[5.74542s  ] [info    ] [RunAllLinks    ]  processing idx [16]  >> xx->aname :[/links/rack_8]->[rack_8] parent [ess]
[5.74631s  ] [info    ] [RunALink       ]  found ai [rack_8]
[5.74669s  ] [info    ] [RunAllLinks    ]  processing idx [17]  >> xx->aname :[/links/rack_9]->[rack_9] parent [ess]
[5.74696s  ] [info    ] [RunALink       ]  found ai [rack_9]
[5.74741s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_allvlinks]
[5.74784s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_allvlinks]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mLegacyRestModule dependencies initialized[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mFimsModule dependencies initialized[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mRestModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAssetsModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mSchedulerModule dependencies initialized[39m[38;5;3m +1ms[39m
[5.75178s  ] [info    ] [RunAllVLinks   ] found 18 keys
[5.75308s  ] [info    ] [RunAllVLinks   ]  processing idx [0]  >> [/vlinks/bms] vmkey [bms]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mErcotOverrideModule dependencies initialized[39m[38;5;3m +1ms[39m
[5.75419s  ] [info    ] [RunAllVLinks   ]  processing idx [1]  >> [/vlinks/ess] vmkey [ess]
[5.75469s  ] [info    ] [RunAllVLinks   ]  processing idx [2]  >> [/vlinks/module_1] vmkey [module_1]
[5.75511s  ] [info    ] [RunAllVLinks   ]  processing idx [3]  >> [/vlinks/module_2] vmkey [module_2]
[5.75564s  ] [info    ] [RunAllVLinks   ]  processing idx [4]  >> [/vlinks/module_3] vmkey [module_3]
[5.7562s   ] [info    ] [RunAllVLinks   ]  processing idx [5]  >> [/vlinks/module_4] vmkey [module_4]
[5.75687s  ] [info    ] [RunAllVLinks   ]  processing idx [6]  >> [/vlinks/module_5] vmkey [module_5]
[5.75762s  ] [info    ] [RunAllVLinks   ]  processing idx [7]  >> [/vlinks/module_6] vmkey [module_6]
[5.75819s  ] [info    ] [RunAllVLinks   ]  processing idx [8]  >> [/vlinks/pcs] vmkey [pcs]
[5.76692s  ] [info    ] [RunAllVLinks   ]  processing idx [9]  >> [/vlinks/rack_1] vmkey [rack_1]
[5.76753s  ] [info    ] [RunAllVLinks   ]  processing idx [10]  >> [/vlinks/rack_2] vmkey [rack_2]
[5.76811s  ] [info    ] [RunAllVLinks   ]  processing idx [11]  >> [/vlinks/rack_3] vmkey [rack_3]
[5.7686s   ] [info    ] [RunAllVLinks   ]  processing idx [12]  >> [/vlinks/rack_4] vmkey [rack_4]
[5.76902s  ] [info    ] [RunAllVLinks   ]  processing idx [13]  >> [/vlinks/rack_5] vmkey [rack_5]
[5.77019s  ] [info    ] [RunAllVLinks   ]  processing idx [14]  >> [/vlinks/rack_6] vmkey [rack_6]
[5.77076s  ] [info    ] [RunAllVLinks   ]  processing idx [15]  >> [/vlinks/rack_7] vmkey [rack_7]
[5.77115s  ] [info    ] [RunAllVLinks   ]  processing idx [16]  >> [/vlinks/rack_8] vmkey [rack_8]
[5.77164s  ] [info    ] [RunAllVLinks   ]  processing idx [17]  >> [/vlinks/rack_9] vmkey [rack_9]
[5.77272s  ] [info    ] [SchedItemOpts  ] @@@@@ [/system/commands:runOpts_ess] found cjopts ready to schedule res1 [0x0] tav [/system/commands:run]
[5.77318s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/ess/ess_1]
[5.77353s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/ess/ess_1]
[5.77413s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_ess]
[5.77443s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_ess]
[5.77493s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:heartbeat_to_ess_reload]
[5.77518s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:heartbeat_to_ess_reload]
[5.77546s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:FaultCnt]
[5.77641s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:FaultCnt]
[5.7768s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:AlarmCnt]
[5.77736s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:AlarmCnt]
[5.77776s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/ess:FaultDestination]
[5.77835s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/ess:FaultDestination]
[5.77901s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/ess:AlarmDestination]
[5.77943s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/ess:AlarmDestination]
[5.77981s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/alarms/ess:MonitorVarAlarm]
[5.78021s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/alarms/ess:MonitorVarAlarm]
[5.78074s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/faults/ess:MonitorVarFault]
[5.78111s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/faults/ess:MonitorVarFault]
[5.78156s  ] [info    ] [CheckMonitorVar] Fault Destination for ess with assetVar /site/ess:heartbeat_to_ess is /assets/ess/ess_1:faults
[5.78187s  ] [info    ] [CheckMonitorVar] Alarm Destination for ess with assetVar /site/ess:heartbeat_to_ess is /assets/ess/ess_1:alarms
[5.78223s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.7826s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.78293s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.78318s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.78346s  ] [info    ] [CheckMonitorVar] Not set up for [heartbeat_to_ess] reloadStr [heartbeat_to_ess_reload]
[5.7839s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:CalculateVar_IsAlarming]
[5.78413s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:CalculateVar_IsAlarming]
[5.78467s  ] [info    ] [setupCalculateV] Setting up params for [/status/ess:IsAlarming]
[5.78501s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:IsAlarming]
[5.78543s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:IsAlarming]
[5.78621s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:CalculateVar_IsFaulted]
[5.7865s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:CalculateVar_IsFaulted]
[5.78685s  ] [info    ] [setupCalculateV] Setting up params for [/status/ess:IsFaulted]
[5.78725s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:IsFaulted]
[5.78751s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:IsFaulted]
[5.7883s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_ess]
[5.7891s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_ess]
[5.78965s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:CalculateVar_HeartbeatWrite]
[5.78998s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:CalculateVar_HeartbeatWrite]
[5.79031s  ] [info    ] [setupCalculateV] Setting up params for [/status/ess:HeartbeatWrite]
[5.79068s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:HeartbeatWrite]
[5.79112s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:HeartbeatWrite]
[5.79194s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [updateHeartbeatWrite_ess]
[5.79225s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [updateHeartbeatWrite_ess]
[5.79267s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/site/ess]
[5.79306s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/site/ess]
[5.79377s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubESS]
[5.79413s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubESS]
[5.79452s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_Every1000mS]
[5.79488s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_Every1000mS]
[5.79526s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_HandleCpuStats]
[5.79563s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_HandleCpuStats]
[5.79642s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [every1000ms_ess]
[5.79681s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [every1000ms_ess]
[5.79772s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[5.79809s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMongooseCoreModule dependencies initialized[39m[38;5;3m +45ms[39m
[5.79859s  ] [info    ] [SchedItemOpts  ] @@@@@ [/system/commands:runOpts_bms] found cjopts ready to schedule res1 [0x0] tav [/system/commands:run]
[5.79946s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/summary]
[5.79974s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/summary]
[5.80107s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssetsSummary_bms]
[5.80139s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssetsSummary_bms]
[5.80235s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_AnyFireFaultActive]
[5.80288s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_AnyFireFaultActive]
[5.80323s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:AnyFireFaultActive]
[5.80357s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:AnyFireFaultActive]. This indicates we are including all of asset instance's assetVars with name AnyFireFaultActive for aggregation
[5.80379s  ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [rack_1]
[5.80406s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [rack_1]
[5.80435s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_1:AnyFireFaultActive]
[5.80454s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_1:AnyFireFaultActive]
[5.80483s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/rack_1:AnyFireFaultActive] ptr am [0x0] ai [0x7f9b182db370] 
[5.80524s  ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [rack_2]
[5.80559s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [rack_2]
[5.80599s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_2:AnyFireFaultActive]
[5.80635s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_2:AnyFireFaultActive]
[5.80678s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/rack_2:AnyFireFaultActive] ptr am [0x0] ai [0x7f9b182c2ea0] 
[5.80712s  ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [rack_3]
[5.80736s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [rack_3]
[5.80765s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_3:AnyFireFaultActive]
[5.80797s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_3:AnyFireFaultActive]
[5.80834s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/rack_3:AnyFireFaultActive] ptr am [0x0] ai [0x7f9b183eaff0] 
[5.80855s  ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [rack_4]
[5.80882s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [rack_4]
[5.8093s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_4:AnyFireFaultActive]
[5.81052s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_4:AnyFireFaultActive]
[5.81105s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/rack_4:AnyFireFaultActive] ptr am [0x0] ai [0x7f9b183eb240] 
[5.81148s  ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [rack_5]
[5.81187s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [rack_5]
[5.81244s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_5:AnyFireFaultActive]
[5.81276s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_5:AnyFireFaultActive]
[5.81341s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/rack_5:AnyFireFaultActive] ptr am [0x0] ai [0x7f9b183eb490] 
[5.81381s  ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [rack_6]
[5.81413s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [rack_6]
[5.81447s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_6:AnyFireFaultActive]
[5.81473s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_6:AnyFireFaultActive]
[5.81536s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/rack_6:AnyFireFaultActive] ptr am [0x0] ai [0x7f9b18466360] 
[5.81586s  ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [rack_7]
[5.81621s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [rack_7]
[5.81681s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_7:AnyFireFaultActive]
[5.81715s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_7:AnyFireFaultActive]
[5.81742s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/rack_7:AnyFireFaultActive] ptr am [0x0] ai [0x7f9b184665b0] 
[5.81763s  ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [rack_8]
[5.8179s   ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [rack_8]
[5.81816s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_8:AnyFireFaultActive]
[5.81849s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_8:AnyFireFaultActive]
[5.81881s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/rack_8:AnyFireFaultActive] ptr am [0x0] ai [0x7f9b18466800] 
[5.81917s  ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [rack_9]
[5.81969s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [rack_9]
[5.82035s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_9:AnyFireFaultActive]
[5.82068s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_9:AnyFireFaultActive]
[5.82106s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/rack_9:AnyFireFaultActive] ptr am [0x0] ai [0x7f9b184daef0] 
[5.82153s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:AnyFireFaultActive]
[5.82183s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:AnyFireFaultActive]
[5.8224s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_CellTempDelta_Calculated]
[5.82262s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_CellTempDelta_Calculated]
[5.82303s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:CellTempDelta_Calculated]
[5.82333s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:CellTempDelta_Calculated]
[5.82353s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:CellTempDelta_Calculated]
[5.82393s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_CellVoltageDelta_Calculated]
[5.82422s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_CellVoltageDelta_Calculated]
[5.82489s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:CellVoltageDelta_Calculated]
[5.82539s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:CellVoltageDelta_Calculated]
[5.82568s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:CellVoltageDelta_Calculated]
[5.8261s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_CurrentBeforeStopIsOK]
[5.82638s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_CurrentBeforeStopIsOK]
[5.82691s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:CurrentBeforeStopIsOK]
[5.8273s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:CurrentBeforeStopIsOK]
[5.82769s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:CurrentBeforeStopIsOK]
[5.8281s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_DCCharging]
[5.8284s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_DCCharging]
[5.82873s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:DCCharging]
[5.82898s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:DCCharging]
[5.82931s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:DCCharging]
[5.82978s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_DCDischarging]
[5.83014s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_DCDischarging]
[5.83106s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:DCDischarging]
[5.83141s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:DCDischarging]
[5.83181s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:DCDischarging]
[5.83225s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_IsAlarming]
[5.83251s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_IsAlarming]
[5.83279s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:IsAlarming]
[5.83308s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:IsAlarming]
[5.83332s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:IsAlarming]
[5.83364s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_IsFaulted]
[5.83386s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_IsFaulted]
[5.83407s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:IsFaulted]
[5.83434s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:IsFaulted]
[5.83458s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:IsFaulted]
[5.83562s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_OverCurrentAlarm]
[5.83634s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_OverCurrentAlarm]
[5.83692s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:OverCurrentAlarm]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMongooseModule dependencies initialized[39m[38;5;3m +38ms[39m
[5.83815s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:OverCurrentAlarm]
[5.83878s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:OverCurrentAlarm]
[5.83926s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_OverCurrentFault]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMongooseModule dependencies initialized[39m[38;5;3m +2ms[39m
[5.83954s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_OverCurrentFault]
[5.8403s   ] [info    ] [setupCalculateV] Setting up params for [/status/bms:OverCurrentFault]
[5.84072s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:OverCurrentFault]
[5.84102s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:OverCurrentFault]
[5.84173s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_TotalAlarmCnt]
[5.84213s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_TotalAlarmCnt]
[5.8425s   ] [info    ] [setupCalculateV] Setting up params for [/status/bms:TotalAlarmCnt]
[5.843s    ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:TotalAlarmCnt]. This indicates we are including all of asset instance's assetVars with name TotalAlarmCnt for aggregation
[5.84339s  ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [rack_1]
[5.8438s   ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [rack_1]
[5.84412s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_1:TotalAlarmCnt]
[5.84454s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_1:TotalAlarmCnt]
[5.84481s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/rack_1:TotalAlarmCnt] ptr am [0x0] ai [0x7f9b182db370] 
[5.84515s  ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [rack_2]
[5.8454s   ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [rack_2]
[5.84584s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_2:TotalAlarmCnt]
[5.84683s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_2:TotalAlarmCnt]
[5.8472s   ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/rack_2:TotalAlarmCnt] ptr am [0x0] ai [0x7f9b182c2ea0] 
[5.84758s  ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [rack_3]
[5.84784s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [rack_3]
[5.8482s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_3:TotalAlarmCnt]
[5.84855s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_3:TotalAlarmCnt]
[5.84885s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/rack_3:TotalAlarmCnt] ptr am [0x0] ai [0x7f9b183eaff0] 
[5.84925s  ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [rack_4]
[5.84965s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [rack_4]
[5.85019s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_4:TotalAlarmCnt]
[5.85047s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_4:TotalAlarmCnt]
[5.85085s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/rack_4:TotalAlarmCnt] ptr am [0x0] ai [0x7f9b183eb240] 
[5.85119s  ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [rack_5]
[5.85156s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [rack_5]
[5.85285s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_5:TotalAlarmCnt]
[5.85318s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_5:TotalAlarmCnt]
[5.85349s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/rack_5:TotalAlarmCnt] ptr am [0x0] ai [0x7f9b183eb490] 
[5.85379s  ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [rack_6]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mSiteAdminsModule dependencies initialized[39m[38;5;3m +14ms[39m
[5.85401s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [rack_6]
[5.85585s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_6:TotalAlarmCnt]
[5.85637s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_6:TotalAlarmCnt]
[5.85678s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/rack_6:TotalAlarmCnt] ptr am [0x0] ai [0x7f9b18466360] 
[5.8572s   ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [rack_7]
[5.85748s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [rack_7]
[5.85798s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_7:TotalAlarmCnt]
[5.85887s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_7:TotalAlarmCnt]
[5.85935s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/rack_7:TotalAlarmCnt] ptr am [0x0] ai [0x7f9b184665b0] 
[5.85986s  ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [rack_8]
[5.86029s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [rack_8]
[5.86067s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_8:TotalAlarmCnt]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mUsersModule dependencies initialized[39m[38;5;3m +7ms[39m
[5.86096s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_8:TotalAlarmCnt]
[5.8626s   ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/rack_8:TotalAlarmCnt] ptr am [0x0] ai [0x7f9b18466800] 
[5.86296s  ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [rack_9]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:24 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAuthModule dependencies initialized[39m[38;5;3m +3ms[39m
[5.86337s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [rack_9]
[5.86503s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_9:TotalAlarmCnt]
[5.86548s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_9:TotalAlarmCnt]
[5.8658s   ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/rack_9:TotalAlarmCnt] ptr am [0x0] ai [0x7f9b184daef0] 
[5.86657s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:TotalAlarmCnt]
[5.86687s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:TotalAlarmCnt]
[5.86753s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_TotalFaultCnt]
[5.86797s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_TotalFaultCnt]
[5.86847s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:TotalFaultCnt]
[5.86898s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:TotalFaultCnt]. This indicates we are including all of asset instance's assetVars with name TotalFaultCnt for aggregation
[5.86954s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [rack_1]
[5.87043s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [rack_1]
[5.87075s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_1:TotalFaultCnt]
[5.87101s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_1:TotalFaultCnt]
[5.87132s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/rack_1:TotalFaultCnt] ptr am [0x0] ai [0x7f9b182db370] 
[5.87153s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [rack_2]
[5.87171s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [rack_2]
[5.87197s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_2:TotalFaultCnt]
[5.87242s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_2:TotalFaultCnt]
[5.87262s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/rack_2:TotalFaultCnt] ptr am [0x0] ai [0x7f9b182c2ea0] 
[5.87282s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [rack_3]
[5.87332s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [rack_3]
[5.87353s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_3:TotalFaultCnt]
[5.87382s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_3:TotalFaultCnt]
[5.87433s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/rack_3:TotalFaultCnt] ptr am [0x0] ai [0x7f9b183eaff0] 
[5.87458s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [rack_4]
[5.87498s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [rack_4]
[5.87554s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_4:TotalFaultCnt]
[5.87584s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_4:TotalFaultCnt]
[5.87611s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/rack_4:TotalFaultCnt] ptr am [0x0] ai [0x7f9b183eb240] 
[5.87642s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [rack_5]
[5.8769s   ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [rack_5]
[5.87748s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_5:TotalFaultCnt]
[5.87776s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_5:TotalFaultCnt]
[5.87806s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/rack_5:TotalFaultCnt] ptr am [0x0] ai [0x7f9b183eb490] 
[5.87828s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [rack_6]
[5.87865s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [rack_6]
[5.87895s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_6:TotalFaultCnt]
[5.87937s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_6:TotalFaultCnt]
[5.87971s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/rack_6:TotalFaultCnt] ptr am [0x0] ai [0x7f9b18466360] 
[5.88001s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [rack_7]
[5.88021s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [rack_7]
[5.88045s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_7:TotalFaultCnt]
[5.88068s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_7:TotalFaultCnt]
[5.88092s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/rack_7:TotalFaultCnt] ptr am [0x0] ai [0x7f9b184665b0] 
[5.88118s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [rack_8]
[5.88142s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [rack_8]
[5.88177s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_8:TotalFaultCnt]
[5.88224s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_8:TotalFaultCnt]
[5.88273s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/rack_8:TotalFaultCnt] ptr am [0x0] ai [0x7f9b18466800] 
[5.88319s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [rack_9]
[5.88366s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [rack_9]
[5.88428s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_9:TotalFaultCnt]
[5.88481s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_9:TotalFaultCnt]
[5.88545s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/rack_9:TotalFaultCnt] ptr am [0x0] ai [0x7f9b184daef0] 
[5.88626s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:TotalFaultCnt]
[5.88679s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:TotalFaultCnt]
[5.8874s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_UnderCurrentAlarm]
[5.88765s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_UnderCurrentAlarm]
[5.88794s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:UnderCurrentAlarm]
[5.88828s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:UnderCurrentAlarm]
[5.88853s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:UnderCurrentAlarm]
[5.88901s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_UnderCurrentFault]
[5.88938s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_UnderCurrentFault]
[5.88985s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:UnderCurrentFault]
[5.89037s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:UnderCurrentFault]
[5.89065s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:UnderCurrentFault]
[5.89349s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_bms]
[5.89389s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_bms]
[5.8944s   ] [info    ] [setParamfromAf ]  created var for uri [/components/bms] as [/components/bms:status]
[5.89494s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_bms]
[5.89518s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_bms]
[5.89567s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_HeartbeatWrite]
[5.89609s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_HeartbeatWrite]
[5.89642s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:HeartbeatWrite]
[5.89676s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:HeartbeatWrite]
[5.89712s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:HeartbeatWrite]
[5.89806s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [updateHeartbeatWrite_bms]
[5.89833s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [updateHeartbeatWrite_bms]
[5.89942s  ] [info    ] [SchedItemOpts  ] @@@@@ [/system/commands:runOpts_rack] found cjopts ready to schedule res1 [0x0] tav [/system/commands:run]
[5.8997s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_1]
[5.90008s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_1]
[5.90063s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_rack_1]
[5.90123s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_rack_1]
[5.9018s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_1:AnyFireFaultActive]  aname [rack_1] av->am 0x0
[5.90203s  ] [warning ] [runMonitorList2] avm [/status/rack_1:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.90227s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_1:CalculateVar_AnyFireFaultActive]
[5.90262s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_1:CalculateVar_AnyFireFaultActive]
[5.90323s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_1:AnyFireFaultActive]
[5.90359s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_1:CellTempDelta_Calculated]  aname [rack_1] av->am 0x0
[5.90403s  ] [warning ] [runMonitorList2] avm [/status/rack_1:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.9046s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_1:CalculateVar_CellTempDelta_Calculated]
[5.90501s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_1:CalculateVar_CellTempDelta_Calculated]
[5.90527s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_1:CellTempDelta_Calculated]
[5.90556s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_1:CellTempDelta_Calculated]
[5.90595s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_1:CellTempDelta_Calculated]
[5.90687s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_1:CellVoltageDelta_Calculated]  aname [rack_1] av->am 0x0
[5.90739s  ] [warning ] [runMonitorList2] avm [/status/rack_1:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.90772s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_1:CalculateVar_CellVoltageDelta_Calculated]
[5.90801s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_1:CalculateVar_CellVoltageDelta_Calculated]
[5.90839s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_1:CellVoltageDelta_Calculated]
[5.90892s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_1:CellVoltageDelta_Calculated]
[5.90921s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_1:CellVoltageDelta_Calculated]
[5.90963s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_1:TotalAlarmCnt]  aname [rack_1] av->am 0x0
[5.90993s  ] [warning ] [runMonitorList2] avm [/status/rack_1:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.91023s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_1:CalculateVar_TotalAlarmCnt]
[5.91064s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_1:CalculateVar_TotalAlarmCnt]
[5.91098s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_1:TotalAlarmCnt]
[5.91155s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_1:TotalFaultCnt]  aname [rack_1] av->am 0x0
[5.91186s  ] [warning ] [runMonitorList2] avm [/status/rack_1:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.91215s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_1:CalculateVar_TotalFaultCnt]
[5.9125s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_1:CalculateVar_TotalFaultCnt]
[5.91289s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_1:TotalFaultCnt]
[5.91381s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_rack_1]
[5.91414s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_rack_1]
[5.91477s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_rack_1]
[5.91507s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_rack_1]
[5.91564s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_2]
[5.91592s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_2]
[5.91697s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_rack_2]
[5.9172s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_rack_2]
[5.91763s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_2:AnyFireFaultActive]  aname [rack_2] av->am 0x0
[5.91787s  ] [warning ] [runMonitorList2] avm [/status/rack_2:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.91811s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_2:CalculateVar_AnyFireFaultActive]
[5.91832s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_2:CalculateVar_AnyFireFaultActive]
[5.91857s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_2:AnyFireFaultActive]
[5.91891s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_2:CellTempDelta_Calculated]  aname [rack_2] av->am 0x0
[5.91916s  ] [warning ] [runMonitorList2] avm [/status/rack_2:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.91961s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_2:CalculateVar_CellTempDelta_Calculated]
[5.91999s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_2:CalculateVar_CellTempDelta_Calculated]
[5.92025s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_2:CellTempDelta_Calculated]
[5.9206s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_2:CellTempDelta_Calculated]
[5.92082s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_2:CellTempDelta_Calculated]
[5.92148s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_2:CellVoltageDelta_Calculated]  aname [rack_2] av->am 0x0
[5.92203s  ] [warning ] [runMonitorList2] avm [/status/rack_2:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.92251s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_2:CalculateVar_CellVoltageDelta_Calculated]
[5.92319s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_2:CalculateVar_CellVoltageDelta_Calculated]
[5.9238s   ] [info    ] [setupCalculateV] Setting up params for [/status/rack_2:CellVoltageDelta_Calculated]
[5.92419s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_2:CellVoltageDelta_Calculated]
[5.92446s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_2:CellVoltageDelta_Calculated]
[5.92479s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_2:TotalAlarmCnt]  aname [rack_2] av->am 0x0
[5.925s    ] [warning ] [runMonitorList2] avm [/status/rack_2:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.92557s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_2:CalculateVar_TotalAlarmCnt]
[5.92588s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_2:CalculateVar_TotalAlarmCnt]
[5.92655s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_2:TotalAlarmCnt]
[5.92699s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_2:TotalFaultCnt]  aname [rack_2] av->am 0x0
[5.92721s  ] [warning ] [runMonitorList2] avm [/status/rack_2:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.92761s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_2:CalculateVar_TotalFaultCnt]
[5.92803s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_2:CalculateVar_TotalFaultCnt]
[5.92837s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_2:TotalFaultCnt]
[5.92916s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_rack_2]
[5.92944s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_rack_2]
[5.93005s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_rack_2]
[5.93029s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_rack_2]
[5.93079s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_3]
[5.9327s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_3]
[5.93368s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_rack_3]
[5.934s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_rack_3]
[5.93445s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_3:AnyFireFaultActive]  aname [rack_3] av->am 0x0
[5.93473s  ] [warning ] [runMonitorList2] avm [/status/rack_3:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.93519s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_3:CalculateVar_AnyFireFaultActive]
[5.9354s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_3:CalculateVar_AnyFireFaultActive]
[5.93577s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_3:AnyFireFaultActive]
[5.9364s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_3:CellTempDelta_Calculated]  aname [rack_3] av->am 0x0
[5.93683s  ] [warning ] [runMonitorList2] avm [/status/rack_3:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.93714s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_3:CalculateVar_CellTempDelta_Calculated]
[5.93742s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_3:CalculateVar_CellTempDelta_Calculated]
[5.93771s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_3:CellTempDelta_Calculated]
[5.93802s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_3:CellTempDelta_Calculated]
[5.93836s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_3:CellTempDelta_Calculated]
[5.9392s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_3:CellVoltageDelta_Calculated]  aname [rack_3] av->am 0x0
[5.93964s  ] [warning ] [runMonitorList2] avm [/status/rack_3:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.93997s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_3:CalculateVar_CellVoltageDelta_Calculated]
[5.94039s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_3:CalculateVar_CellVoltageDelta_Calculated]
[5.94068s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_3:CellVoltageDelta_Calculated]
[5.94147s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_3:CellVoltageDelta_Calculated]
[5.94177s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_3:CellVoltageDelta_Calculated]
[5.94227s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_3:TotalAlarmCnt]  aname [rack_3] av->am 0x0
[5.94316s  ] [warning ] [runMonitorList2] avm [/status/rack_3:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.94349s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_3:CalculateVar_TotalAlarmCnt]
[5.94381s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_3:CalculateVar_TotalAlarmCnt]
[5.94445s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_3:TotalAlarmCnt]
[5.94527s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_3:TotalFaultCnt]  aname [rack_3] av->am 0x0
[5.94564s  ] [warning ] [runMonitorList2] avm [/status/rack_3:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.94639s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_3:CalculateVar_TotalFaultCnt]
[5.9469s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_3:CalculateVar_TotalFaultCnt]
[5.94759s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_3:TotalFaultCnt]
[5.95258s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_rack_3]
[5.95294s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_rack_3]
[5.95336s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_rack_3]
[5.95408s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_rack_3]
[5.95498s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_4]
[5.95532s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_4]
[5.95772s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_rack_4]
[5.9595s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_rack_4]
[5.96069s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_4:AnyFireFaultActive]  aname [rack_4] av->am 0x0
[5.9611s   ] [warning ] [runMonitorList2] avm [/status/rack_4:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.962s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_4:CalculateVar_AnyFireFaultActive]
[5.96252s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_4:CalculateVar_AnyFireFaultActive]
[5.96305s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_4:AnyFireFaultActive]
[5.96367s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_4:CellTempDelta_Calculated]  aname [rack_4] av->am 0x0
[5.96405s  ] [warning ] [runMonitorList2] avm [/status/rack_4:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.9644s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_4:CalculateVar_CellTempDelta_Calculated]
[5.96473s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_4:CalculateVar_CellTempDelta_Calculated]
[5.96535s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_4:CellTempDelta_Calculated]
[5.96586s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_4:CellTempDelta_Calculated]
[5.96627s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_4:CellTempDelta_Calculated]
[5.96699s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_4:CellVoltageDelta_Calculated]  aname [rack_4] av->am 0x0
[5.96753s  ] [warning ] [runMonitorList2] avm [/status/rack_4:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.96801s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_4:CalculateVar_CellVoltageDelta_Calculated]
[5.96831s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_4:CalculateVar_CellVoltageDelta_Calculated]
[5.96889s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_4:CellVoltageDelta_Calculated]
[5.96946s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_4:CellVoltageDelta_Calculated]
[5.96972s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_4:CellVoltageDelta_Calculated]
[5.97035s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_4:TotalAlarmCnt]  aname [rack_4] av->am 0x0
[5.97217s  ] [warning ] [runMonitorList2] avm [/status/rack_4:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.97331s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_4:CalculateVar_TotalAlarmCnt]
[5.97372s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_4:CalculateVar_TotalAlarmCnt]
[5.97406s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_4:TotalAlarmCnt]
[5.97476s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_4:TotalFaultCnt]  aname [rack_4] av->am 0x0
[5.97522s  ] [warning ] [runMonitorList2] avm [/status/rack_4:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.97565s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_4:CalculateVar_TotalFaultCnt]
[5.97624s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_4:CalculateVar_TotalFaultCnt]
[5.97668s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_4:TotalFaultCnt]
[5.9777s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_rack_4]
[5.97835s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_rack_4]
[5.97915s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_rack_4]
[5.97942s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_rack_4]
[5.9806s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_5]
[5.98109s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_5]
[5.9822s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_rack_5]
[5.98276s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_rack_5]
[5.98346s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_5:AnyFireFaultActive]  aname [rack_5] av->am 0x0
[5.984s    ] [warning ] [runMonitorList2] avm [/status/rack_5:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.98484s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_5:CalculateVar_AnyFireFaultActive]
[5.98525s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_5:CalculateVar_AnyFireFaultActive]
[5.9856s   ] [info    ] [setupCalculateV] Setting up params for [/status/rack_5:AnyFireFaultActive]
[5.986s    ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_5:CellTempDelta_Calculated]  aname [rack_5] av->am 0x0
[5.98636s  ] [warning ] [runMonitorList2] avm [/status/rack_5:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.98696s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_5:CalculateVar_CellTempDelta_Calculated]
[5.98752s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_5:CalculateVar_CellTempDelta_Calculated]
[5.9882s   ] [info    ] [setupCalculateV] Setting up params for [/status/rack_5:CellTempDelta_Calculated]
[5.98879s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_5:CellTempDelta_Calculated]
[5.98928s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_5:CellTempDelta_Calculated]
[5.99006s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_5:CellVoltageDelta_Calculated]  aname [rack_5] av->am 0x0
[5.99049s  ] [warning ] [runMonitorList2] avm [/status/rack_5:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.99094s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_5:CalculateVar_CellVoltageDelta_Calculated]
[5.99147s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_5:CalculateVar_CellVoltageDelta_Calculated]
[5.99205s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_5:CellVoltageDelta_Calculated]
[5.9927s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_5:CellVoltageDelta_Calculated]
[5.99319s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_5:CellVoltageDelta_Calculated]
[5.99415s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_5:TotalAlarmCnt]  aname [rack_5] av->am 0x0
[5.9945s   ] [warning ] [runMonitorList2] avm [/status/rack_5:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.995s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_5:CalculateVar_TotalAlarmCnt]
[5.99541s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_5:CalculateVar_TotalAlarmCnt]
[5.99585s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_5:TotalAlarmCnt]
[5.99694s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_5:TotalFaultCnt]  aname [rack_5] av->am 0x0
[5.9973s   ] [warning ] [runMonitorList2] avm [/status/rack_5:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[5.99779s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_5:CalculateVar_TotalFaultCnt]
[5.99827s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_5:CalculateVar_TotalFaultCnt]
[5.99877s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_5:TotalFaultCnt]
[6.00117s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_rack_5]
[6.00156s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_rack_5]
[6.00295s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_rack_5]
[6.00324s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_rack_5]
[6.00373s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_6]
[6.00448s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_6]
[6.00572s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_rack_6]
[6.00614s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_rack_6]
[6.00671s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_6:AnyFireFaultActive]  aname [rack_6] av->am 0x0
[6.00701s  ] [warning ] [runMonitorList2] avm [/status/rack_6:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.00736s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_6:CalculateVar_AnyFireFaultActive]
[6.00773s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_6:CalculateVar_AnyFireFaultActive]
[6.00825s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_6:AnyFireFaultActive]
[6.00912s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_6:CellTempDelta_Calculated]  aname [rack_6] av->am 0x0
[6.00947s  ] [warning ] [runMonitorList2] avm [/status/rack_6:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.00982s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_6:CalculateVar_CellTempDelta_Calculated]
[6.01011s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_6:CalculateVar_CellTempDelta_Calculated]
[6.01049s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_6:CellTempDelta_Calculated]
[6.01097s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_6:CellTempDelta_Calculated]
[6.01252s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_6:CellTempDelta_Calculated]
[6.01333s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_6:CellVoltageDelta_Calculated]  aname [rack_6] av->am 0x0
[6.0139s   ] [warning ] [runMonitorList2] avm [/status/rack_6:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.01447s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_6:CalculateVar_CellVoltageDelta_Calculated]
[6.01503s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_6:CalculateVar_CellVoltageDelta_Calculated]
[6.01569s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_6:CellVoltageDelta_Calculated]
[6.01643s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_6:CellVoltageDelta_Calculated]
[6.0171s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_6:CellVoltageDelta_Calculated]
[6.01787s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_6:TotalAlarmCnt]  aname [rack_6] av->am 0x0
[6.01834s  ] [warning ] [runMonitorList2] avm [/status/rack_6:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.0191s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_6:CalculateVar_TotalAlarmCnt]
[6.01949s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_6:CalculateVar_TotalAlarmCnt]
[6.02001s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_6:TotalAlarmCnt]
[6.02088s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_6:TotalFaultCnt]  aname [rack_6] av->am 0x0
[6.0212s   ] [warning ] [runMonitorList2] avm [/status/rack_6:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.0219s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_6:CalculateVar_TotalFaultCnt]
[6.02238s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_6:CalculateVar_TotalFaultCnt]
[6.02277s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_6:TotalFaultCnt]
[6.0241s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_rack_6]
[6.02436s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_rack_6]
[6.02485s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_rack_6]
[6.0255s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_rack_6]
[6.02633s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_7]
[6.02668s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_7]
[6.02772s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_rack_7]
[6.02807s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_rack_7]
[6.02878s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_7:AnyFireFaultActive]  aname [rack_7] av->am 0x0
[6.0292s   ] [warning ] [runMonitorList2] avm [/status/rack_7:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.02974s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_7:CalculateVar_AnyFireFaultActive]
[6.03011s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_7:CalculateVar_AnyFireFaultActive]
[6.03039s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_7:AnyFireFaultActive]
[6.03103s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_7:CellTempDelta_Calculated]  aname [rack_7] av->am 0x0
[6.03132s  ] [warning ] [runMonitorList2] avm [/status/rack_7:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.03186s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_7:CalculateVar_CellTempDelta_Calculated]
[6.03243s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_7:CalculateVar_CellTempDelta_Calculated]
[6.03284s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_7:CellTempDelta_Calculated]
[6.03356s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_7:CellTempDelta_Calculated]
[6.03388s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_7:CellTempDelta_Calculated]
[6.0348s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_7:CellVoltageDelta_Calculated]  aname [rack_7] av->am 0x0
[6.03515s  ] [warning ] [runMonitorList2] avm [/status/rack_7:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.03547s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_7:CalculateVar_CellVoltageDelta_Calculated]
[6.03593s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_7:CalculateVar_CellVoltageDelta_Calculated]
[6.03738s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_7:CellVoltageDelta_Calculated]
[6.03774s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_7:CellVoltageDelta_Calculated]
[6.03811s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_7:CellVoltageDelta_Calculated]
[6.03878s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_7:TotalAlarmCnt]  aname [rack_7] av->am 0x0
[6.03919s  ] [warning ] [runMonitorList2] avm [/status/rack_7:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.03977s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_7:CalculateVar_TotalAlarmCnt]
[6.04005s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_7:CalculateVar_TotalAlarmCnt]
[6.0404s   ] [info    ] [setupCalculateV] Setting up params for [/status/rack_7:TotalAlarmCnt]
[6.04104s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_7:TotalFaultCnt]  aname [rack_7] av->am 0x0
[6.04165s  ] [warning ] [runMonitorList2] avm [/status/rack_7:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.04266s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_7:CalculateVar_TotalFaultCnt]
[6.04309s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_7:CalculateVar_TotalFaultCnt]
[6.04344s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_7:TotalFaultCnt]
[6.04462s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_rack_7]
[6.04489s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_rack_7]
[6.04536s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_rack_7]
[6.04587s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_rack_7]
[6.04666s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_8]
[6.04697s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_8]
[6.04793s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_rack_8]
[6.04826s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_rack_8]
[6.04876s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_8:AnyFireFaultActive]  aname [rack_8] av->am 0x0
[6.04908s  ] [warning ] [runMonitorList2] avm [/status/rack_8:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.04954s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_8:CalculateVar_AnyFireFaultActive]
[6.04989s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_8:CalculateVar_AnyFireFaultActive]
[6.05046s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_8:AnyFireFaultActive]
[6.05087s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_8:CellTempDelta_Calculated]  aname [rack_8] av->am 0x0
[6.0513s   ] [warning ] [runMonitorList2] avm [/status/rack_8:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.05185s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_8:CalculateVar_CellTempDelta_Calculated]
[6.05218s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_8:CalculateVar_CellTempDelta_Calculated]
[6.05275s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_8:CellTempDelta_Calculated]
[6.05357s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_8:CellTempDelta_Calculated]
[6.05389s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_8:CellTempDelta_Calculated]
[6.05511s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_8:CellVoltageDelta_Calculated]  aname [rack_8] av->am 0x0
[6.05566s  ] [warning ] [runMonitorList2] avm [/status/rack_8:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.05609s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_8:CalculateVar_CellVoltageDelta_Calculated]
[6.05739s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_8:CalculateVar_CellVoltageDelta_Calculated]
[6.05776s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_8:CellVoltageDelta_Calculated]
[6.05819s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_8:CellVoltageDelta_Calculated]
[6.05869s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_8:CellVoltageDelta_Calculated]
[6.05929s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_8:TotalAlarmCnt]  aname [rack_8] av->am 0x0
[6.05963s  ] [warning ] [runMonitorList2] avm [/status/rack_8:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.06039s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_8:CalculateVar_TotalAlarmCnt]
[6.06066s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_8:CalculateVar_TotalAlarmCnt]
[6.06115s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_8:TotalAlarmCnt]
[6.06165s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_8:TotalFaultCnt]  aname [rack_8] av->am 0x0
[6.06207s  ] [warning ] [runMonitorList2] avm [/status/rack_8:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.06237s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_8:CalculateVar_TotalFaultCnt]
[6.06282s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_8:CalculateVar_TotalFaultCnt]
[6.0631s   ] [info    ] [setupCalculateV] Setting up params for [/status/rack_8:TotalFaultCnt]
[6.06414s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_rack_8]
[6.06445s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_rack_8]
[6.0649s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_rack_8]
[6.0653s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_rack_8]
[6.06597s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_9]
[6.06631s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/rack_9]
[6.06726s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_rack_9]
[6.06748s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_rack_9]
[6.06801s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_9:AnyFireFaultActive]  aname [rack_9] av->am 0x0
[6.06826s  ] [warning ] [runMonitorList2] avm [/status/rack_9:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.06854s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_9:CalculateVar_AnyFireFaultActive]
[6.06896s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_9:CalculateVar_AnyFireFaultActive]
[6.06964s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_9:AnyFireFaultActive]
[6.07032s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_9:CellTempDelta_Calculated]  aname [rack_9] av->am 0x0
[6.07065s  ] [warning ] [runMonitorList2] avm [/status/rack_9:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.07098s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_9:CalculateVar_CellTempDelta_Calculated]
[6.07142s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_9:CalculateVar_CellTempDelta_Calculated]
[6.07188s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_9:CellTempDelta_Calculated]
[6.07238s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_9:CellTempDelta_Calculated]
[6.07311s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_9:CellTempDelta_Calculated]
[6.07375s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_9:CellVoltageDelta_Calculated]  aname [rack_9] av->am 0x0
[6.0741s   ] [warning ] [runMonitorList2] avm [/status/rack_9:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.0744s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_9:CalculateVar_CellVoltageDelta_Calculated]
[6.07467s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_9:CalculateVar_CellVoltageDelta_Calculated]
[6.07499s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_9:CellVoltageDelta_Calculated]
[6.07532s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/rack_9:CellVoltageDelta_Calculated]
[6.07564s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/rack_9:CellVoltageDelta_Calculated]
[6.07613s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_9:TotalAlarmCnt]  aname [rack_9] av->am 0x0
[6.07657s  ] [warning ] [runMonitorList2] avm [/status/rack_9:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.07702s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_9:CalculateVar_TotalAlarmCnt]
[6.07729s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_9:CalculateVar_TotalAlarmCnt]
[6.07763s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_9:TotalAlarmCnt]
[6.07842s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/rack_9:TotalFaultCnt]  aname [rack_9] av->am 0x0
[6.0792s   ] [warning ] [runMonitorList2] avm [/status/rack_9:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms] to avm
[6.0797s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/rack_9:CalculateVar_TotalFaultCnt]
[6.08034s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/rack_9:CalculateVar_TotalFaultCnt]
[6.08074s  ] [info    ] [setupCalculateV] Setting up params for [/status/rack_9:TotalFaultCnt]
[6.08176s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_rack_9]
[6.08226s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_rack_9]
[6.08307s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_rack_9]
[6.08369s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_rack_9]
[6.08468s  ] [info    ] [SchedItemOpts  ] @@@@@ [/system/commands:runOpts_pcs] found cjopts ready to schedule res1 [0x0] tav [/system/commands:run]
[6.08537s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/summary]
[6.08585s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/summary]
[6.08714s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssetsSummary_pcs]
[6.08745s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssetsSummary_pcs]
[6.08802s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerCmdConvert]
[6.08864s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerCmdConvert]
[6.08897s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ActivePowerCmdConvert]
[6.08961s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ActivePowerCmdConvert]
[6.08992s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ActivePowerCmdConvert]
[6.09079s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerRampRateCmdConvert]
[6.09105s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerRampRateCmdConvert]
[6.09136s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ActivePowerRampRateCmdConvert]
[6.09179s  ] [info    ] [setupCalculateV] assetVar param /controls/pcs:ActivePowerRampRate does not exist. Creating new one for am [pcs]
[6.09211s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ActivePowerRampRateCmdConvert]
[6.09285s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ActivePowerRampRateCmdConvert]
[6.09387s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerRampRateCmd]
[6.09452s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [1] to [/controls/pcs:ActivePowerRampRateCmd]","severity":1}]
[6.0949s   ] [info    ] [record         ] Sent command value [1] to [/controls/pcs:ActivePowerRampRateCmd]
[6.09519s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ActivePowerRampRateCmdSuccess]
[6.0956s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ActivePowerRampRateCmdSuccess]
[6.09627s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [1] from [/controls/pcs:ActivePowerRampRateCmd]","severity":1}]
[6.09668s  ] [info    ] [record         ] Received command value [1] from [/controls/pcs:ActivePowerRampRateCmd]
[6.09727s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerSetpointEnable]
[6.09791s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerSetpointEnable]
[6.09822s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ActivePowerSetpointEnable]
[6.09859s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ActivePowerSetpointEnable]
[6.09907s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ActivePowerSetpointEnable]
[6.09982s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_FrequencySetpointEnable]
[6.10016s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_FrequencySetpointEnable]
[6.10049s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:FrequencySetpointEnable]
[6.10106s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:FrequencySetpointEnable]
[6.10152s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:FrequencySetpointEnable]
[6.1021s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_GridFollowPQEnable]
[6.10249s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_GridFollowPQEnable]
[6.10283s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:GridFollowPQEnable]
[6.10315s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:GridFollowPQEnable]
[6.10343s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:GridFollowPQEnable]
[6.10445s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_GridFormVFEnable]
[6.10477s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_GridFormVFEnable]
[6.10513s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:GridFormVFEnable]
[6.10559s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:GridFormVFEnable]
[6.10765s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:GridFormVFEnable]
[6.10847s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_GridFormVSGEnable]
[6.10875s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_GridFormVSGEnable]
[6.10915s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:GridFormVSGEnable]
[6.10959s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:GridFormVSGEnable]
[6.10985s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:GridFormVSGEnable]
[6.11049s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerCmdConvert]
[6.11077s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerCmdConvert]
[6.1113s   ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ReactivePowerCmdConvert]
[6.11413s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ReactivePowerCmdConvert]
[6.1145s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ReactivePowerCmdConvert]
[6.11554s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerRampRateCmdConvert]
[6.11605s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerRampRateCmdConvert]
[6.11683s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ReactivePowerRampRateCmdConvert]
[6.11738s  ] [info    ] [setupCalculateV] assetVar param /controls/pcs:ReactivePowerRampRate does not exist. Creating new one for am [pcs]
[6.11795s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ReactivePowerRampRateCmdConvert]
[6.11847s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ReactivePowerRampRateCmdConvert]
[6.12s     ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ReactivePowerRampRateCmd]
[6.12059s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [1] to [/controls/pcs:ReactivePowerRampRateCmd]","severity":1}]
[6.1211s   ] [info    ] [record         ] Sent command value [1] to [/controls/pcs:ReactivePowerRampRateCmd]
[6.12163s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ReactivePowerRampRateCmdSuccess]
[6.12193s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ReactivePowerRampRateCmdSuccess]
[6.12244s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [1] from [/controls/pcs:ReactivePowerRampRateCmd]","severity":1}]
[6.12299s  ] [info    ] [record         ] Received command value [1] from [/controls/pcs:ReactivePowerRampRateCmd]
[6.12367s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerSetpointEnable]
[6.12406s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerSetpointEnable]
[6.12449s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ReactivePowerSetpointEnable]
[6.125s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ReactivePowerSetpointEnable]
[6.12537s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ReactivePowerSetpointEnable]
[6.12629s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_VoltageSetpointEnable]
[6.1277s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_VoltageSetpointEnable]
[6.12819s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:VoltageSetpointEnable]
[6.12875s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:VoltageSetpointEnable]
[6.12927s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:VoltageSetpointEnable]
[6.13007s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_AvgLineVoltage]
[6.13044s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_AvgLineVoltage]
[6.13082s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:AvgLineVoltage]
[6.13136s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:AvgLineVoltage]
[6.13162s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:AvgLineVoltage]
[6.13284s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_IsAlarming]
[6.1331s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_IsAlarming]
[6.13332s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:IsAlarming]
[6.13383s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:IsAlarming]
[6.13476s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:IsAlarming]
[6.13605s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_IsFaulted]
[6.13646s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_IsFaulted]
[6.13724s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:IsFaulted]
[6.1376s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:IsFaulted]
[6.13792s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:IsFaulted]
[6.13892s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_TotalAlarmCnt]
[6.13917s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_TotalAlarmCnt]
[6.13945s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:TotalAlarmCnt]
[6.13988s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:TotalAlarmCnt]. This indicates we are including all of asset instance's assetVars with name TotalAlarmCnt for aggregation
[6.14021s  ] [info    ] [setupCalculateV] [/status/pcs:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [module_1]
[6.14077s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [module_1]
[6.14127s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_1:TotalAlarmCnt]
[6.14165s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_1:TotalAlarmCnt]
[6.14225s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/module_1:TotalAlarmCnt] ptr am [0x0] ai [0x7f9b18690c50] 
[6.14286s  ] [info    ] [setupCalculateV] [/status/pcs:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [module_2]
[6.14332s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [module_2]
[6.1437s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_2:TotalAlarmCnt]
[6.14424s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_2:TotalAlarmCnt]
[6.1446s   ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/module_2:TotalAlarmCnt] ptr am [0x0] ai [0x7f9b185a2fb0] 
[6.14512s  ] [info    ] [setupCalculateV] [/status/pcs:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [module_3]
[6.14559s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [module_3]
[6.14589s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_3:TotalAlarmCnt]
[6.14658s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_3:TotalAlarmCnt]
[6.14707s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/module_3:TotalAlarmCnt] ptr am [0x0] ai [0x7f9b185a3200] 
[6.14739s  ] [info    ] [setupCalculateV] [/status/pcs:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [module_4]
[6.14772s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [module_4]
[6.14817s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_4:TotalAlarmCnt]
[6.14845s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_4:TotalAlarmCnt]
[6.15002s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/module_4:TotalAlarmCnt] ptr am [0x0] ai [0x7f9b18577e90] 
[6.15078s  ] [info    ] [setupCalculateV] [/status/pcs:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [module_5]
[6.15119s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [module_5]
[6.15279s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_5:TotalAlarmCnt]
[6.15315s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_5:TotalAlarmCnt]
[6.15381s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/module_5:TotalAlarmCnt] ptr am [0x0] ai [0x7f9b185780e0] 
[6.15439s  ] [info    ] [setupCalculateV] [/status/pcs:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [module_6]
[6.15475s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [module_6]
[6.15512s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_6:TotalAlarmCnt]
[6.1556s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_6:TotalAlarmCnt]
[6.15606s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/module_6:TotalAlarmCnt] ptr am [0x0] ai [0x7f9b18717660] 
[6.15687s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:TotalAlarmCnt]
[6.15721s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:TotalAlarmCnt]
[6.15758s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_TotalFaultCnt]
[6.15799s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_TotalFaultCnt]
[6.15859s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:TotalFaultCnt]
[6.15919s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:TotalFaultCnt]. This indicates we are including all of asset instance's assetVars with name TotalFaultCnt for aggregation
[6.15956s  ] [info    ] [setupCalculateV] [/status/pcs:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [module_1]
[6.16002s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [module_1]
[6.16059s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_1:TotalFaultCnt]
[6.16094s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_1:TotalFaultCnt]
[6.16144s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/module_1:TotalFaultCnt] ptr am [0x0] ai [0x7f9b18690c50] 
[6.16182s  ] [info    ] [setupCalculateV] [/status/pcs:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [module_2]
[6.16212s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [module_2]
[6.16265s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_2:TotalFaultCnt]
[6.16294s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_2:TotalFaultCnt]
[6.16326s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/module_2:TotalFaultCnt] ptr am [0x0] ai [0x7f9b185a2fb0] 
[6.16355s  ] [info    ] [setupCalculateV] [/status/pcs:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [module_3]
[6.16391s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [module_3]
[6.16421s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_3:TotalFaultCnt]
[6.16456s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_3:TotalFaultCnt]
[6.16495s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/module_3:TotalFaultCnt] ptr am [0x0] ai [0x7f9b185a3200] 
[6.16541s  ] [info    ] [setupCalculateV] [/status/pcs:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [module_4]
[6.16573s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [module_4]
[6.16672s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_4:TotalFaultCnt]
[6.16738s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_4:TotalFaultCnt]
[6.16784s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/module_4:TotalFaultCnt] ptr am [0x0] ai [0x7f9b18577e90] 
[6.16834s  ] [info    ] [setupCalculateV] [/status/pcs:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [module_5]
[6.16874s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [module_5]
[6.16924s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_5:TotalFaultCnt]
[6.16953s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_5:TotalFaultCnt]
[6.17s     ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/module_5:TotalFaultCnt] ptr am [0x0] ai [0x7f9b185780e0] 
[6.17042s  ] [info    ] [setupCalculateV] [/status/pcs:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [module_6]
[6.17084s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [module_6]
[6.17124s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_6:TotalFaultCnt]
[6.17156s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_6:TotalFaultCnt]
[6.17253s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/module_6:TotalFaultCnt] ptr am [0x0] ai [0x7f9b18717660] 
[6.17299s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:TotalFaultCnt]
[6.17331s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:TotalFaultCnt]
[6.1758s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_pcs]
[6.17786s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_pcs]
[6.17893s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_pcs]
[6.17937s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_pcs]
[6.1802s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_HeartbeatWrite]
[6.18074s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_HeartbeatWrite]
[6.18167s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:HeartbeatWrite]
[6.18225s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:HeartbeatWrite]
[6.18276s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:HeartbeatWrite]
[6.18381s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [updateHeartbeatWrite_pcs]
[6.18407s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [updateHeartbeatWrite_pcs]
[6.18469s  ] [info    ] [HandlePowerInit] RUNNING RELOAD 2 for pcs
[6.18517s  ] [info    ] [HandlePowerInit] Done checking hw and config
[6.1856s   ] [info    ] [HandlePowerInit] pcs Found Pr_c [4200]
[6.18619s  ] [info    ] [HandlePowerInit] pcs Found Qr_c [2100]
[6.18657s  ] [info    ] [HandlePowerInit] pcs Found Sr_c [4200]
[6.1873s   ] [info    ] [HandlePowerInit] pcs Found pfr_c [0.8]
[6.18779s  ] [info    ] [HandlePowerInit] Done initializing vars
[6.18834s  ] [info    ] [HandlePowerInit] pcs No priority found in /config or /controls. Setting power priority for pcs to default P P
[6.1891s   ] [info    ] [HandlePowerInit] Done initializing Priority
[6.1896s   ] [info    ] [HandlePowerInit] Done initializing Ps and Qs
[6.19125s  ] [info    ] [HandlePowerInit] Rated Active/Reactive/Apparent Powers set to 4200/2100/4200
[6.19155s  ] [info    ] [HandlePowerInit] Done initing vars
[6.19183s  ] [info    ] [HandlePowerInit] Done setting max Ps
[6.19255s  ] [info    ] [HandlePowerInit] Rated Power for pcs:
[6.19291s  ] [info    ] [HandlePowerInit]        Apparent Power  [4200]
[6.19367s  ] [info    ] [HandlePowerInit]        Reactive Power  [2100]
[6.19406s  ] [info    ] [HandlePowerInit] Max Powers for pcs:
[6.19462s  ] [info    ] [HandlePowerInit]        Charge Power    [-4200]
[6.19532s  ] [info    ] [HandlePowerInit]        Discharge Power [4200]
[6.19594s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 636.131 loops 129
[6.1967s   ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:handlePowerCmd_pcs] tRun(mS) 636.900 loops 130
[6.19724s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [handlePowerCmd_pcs]
[6.19758s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [handlePowerCmd_pcs]
[6.19806s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:LocalStartPCS] tRun(mS) 638.257 loops 131
[6.19867s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 638.869 loops 132
[6.1992s   ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:LocalStartPCS] tRun(mS) 639.400 loops 133
[6.19973s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:LocalStopPCS] tRun(mS) 639.931 loops 134
[6.20037s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 640.571 loops 135
[6.20078s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:LocalStopPCS] tRun(mS) 640.987 loops 136
[6.20146s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:LocalStandbyPCS] tRun(mS) 641.663 loops 137
[6.20204s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 642.240 loops 138
[6.20256s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:LocalStandbyPCS] tRun(mS) 642.758 loops 139
[6.20304s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:StartEnable] tRun(mS) 643.239 loops 140
[6.20411s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 644.306 loops 141
[6.20462s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:StartEnable] tRun(mS) 644.820 loops 142
[6.20538s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:StopEnable] tRun(mS) 645.578 loops 143
[6.20584s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 646.043 loops 144
[6.20618s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:StopEnable] tRun(mS) 646.380 loops 145
[6.20695s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:StandbyEnable] tRun(mS) 647.149 loops 146
[6.20768s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 647.876 loops 147
[6.20862s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:StandbyEnable] tRun(mS) 648.791 loops 148
[6.21176s  ] [info    ] [SchedItemOpts  ] @@@@@ [/system/commands:runOpts_module] found cjopts ready to schedule res1 [0x0] tav [/system/commands:run]
[6.21275s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_1]
[6.2131s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_1]
[6.2137s   ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 653.896 loops 149
[6.21467s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_1:pubAssets_module_1] tRun(mS) 654.865 loops 150
[6.21523s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_module_1]
[6.21566s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_module_1]
[6.21642s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_1:CurrentFault]  aname [module_1] av->am 0x0
[6.21689s  ] [warning ] [runMonitorList2] avm [/status/module_1:CurrentFault] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.21734s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_1:CalculateVar_CurrentFault]
[6.21784s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_1:CalculateVar_CurrentFault]
[6.21817s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_1:CurrentFault]
[6.21854s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_1:CurrentFault]
[6.2191s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_1:CurrentFault]
[6.21984s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_1:CurrentWarning]  aname [module_1] av->am 0x0
[6.22019s  ] [warning ] [runMonitorList2] avm [/status/module_1:CurrentWarning] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.22055s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_1:CalculateVar_CurrentWarning]
[6.2212s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_1:CalculateVar_CurrentWarning]
[6.22159s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_1:CurrentWarning]
[6.22207s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_1:CurrentWarning]
[6.22284s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_1:CurrentWarning]
[6.22332s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_1:PCSDCPower]  aname [module_1] av->am 0x0
[6.22391s  ] [warning ] [runMonitorList2] avm [/status/module_1:PCSDCPower] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.22426s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_1:CalculateVar_PCSDCPower]
[6.22483s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_1:CalculateVar_PCSDCPower]
[6.22526s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_1:PCSDCPower]
[6.22561s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_1:PCSDCPower]
[6.22588s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_1:PCSDCPower]
[6.22677s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_1:TotalAlarmCnt]  aname [module_1] av->am 0x0
[6.22727s  ] [warning ] [runMonitorList2] avm [/status/module_1:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.22777s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_1:CalculateVar_TotalAlarmCnt]
[6.22835s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_1:CalculateVar_TotalAlarmCnt]
[6.229s    ] [info    ] [setupCalculateV] Setting up params for [/status/module_1:TotalAlarmCnt]
[6.22967s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_1:TotalFaultCnt]  aname [module_1] av->am 0x0
[6.23019s  ] [warning ] [runMonitorList2] avm [/status/module_1:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.23065s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_1:CalculateVar_TotalFaultCnt]
[6.2311s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_1:CalculateVar_TotalFaultCnt]
[6.2316s   ] [info    ] [setupCalculateV] Setting up params for [/status/module_1:TotalFaultCnt]
[6.23368s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 673.872 loops 151
[6.23424s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_1:runMonitor_module_1] tRun(mS) 674.435 loops 152
[6.23514s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_module_1]
[6.23559s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_module_1]
[6.23693s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 677.129 loops 153
[6.23735s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_module_1]
[6.23766s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_module_1]
[6.23825s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_2]
[6.23881s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_2]
[6.23946s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 679.658 loops 154
[6.24001s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_2:pubAssets_module_2] tRun(mS) 680.208 loops 155
[6.24069s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_module_2]
[6.24124s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_module_2]
[6.24194s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_2:CurrentFault]  aname [module_2] av->am 0x0
[6.24242s  ] [warning ] [runMonitorList2] avm [/status/module_2:CurrentFault] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.24298s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_2:CalculateVar_CurrentFault]
[6.24332s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_2:CalculateVar_CurrentFault]
[6.24381s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_2:CurrentFault]
[6.24423s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_2:CurrentFault]
[6.24457s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_2:CurrentFault]
[6.24516s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_2:CurrentWarning]  aname [module_2] av->am 0x0
[6.24542s  ] [warning ] [runMonitorList2] avm [/status/module_2:CurrentWarning] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.24583s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_2:CalculateVar_CurrentWarning]
[6.24632s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_2:CalculateVar_CurrentWarning]
[6.24663s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_2:CurrentWarning]
[6.24698s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_2:CurrentWarning]
[6.24735s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_2:CurrentWarning]
[6.24808s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_2:PCSDCPower]  aname [module_2] av->am 0x0
[6.24869s  ] [warning ] [runMonitorList2] avm [/status/module_2:PCSDCPower] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.24936s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_2:CalculateVar_PCSDCPower]
[6.25645s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_2:CalculateVar_PCSDCPower]
[6.2592s   ] [info    ] [setupCalculateV] Setting up params for [/status/module_2:PCSDCPower]
[6.25965s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_2:PCSDCPower]
[6.26057s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_2:PCSDCPower]
[6.26175s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_2:TotalAlarmCnt]  aname [module_2] av->am 0x0
[6.26213s  ] [warning ] [runMonitorList2] avm [/status/module_2:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.26259s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_2:CalculateVar_TotalAlarmCnt]
[6.263s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_2:CalculateVar_TotalAlarmCnt]
[6.26346s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_2:TotalAlarmCnt]
[6.26443s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_2:TotalFaultCnt]  aname [module_2] av->am 0x0
[6.26476s  ] [warning ] [runMonitorList2] avm [/status/module_2:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.26539s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_2:CalculateVar_TotalFaultCnt]
[6.26573s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_2:CalculateVar_TotalFaultCnt]
[6.26643s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_2:TotalFaultCnt]
[6.26773s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 707.930 loops 156
[6.26824s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_2:runMonitor_module_2] tRun(mS) 708.434 loops 157
[6.26936s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_module_2]
[6.2696s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_module_2]
[6.27007s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 710.272 loops 158
[6.27051s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_module_2]
[6.27089s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_module_2]
[6.27143s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_3]
[6.27188s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_3]
[6.27283s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 713.015 loops 159
[6.27343s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_3:pubAssets_module_3] tRun(mS) 713.622 loops 160
[6.27402s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_module_3]
[6.27449s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_module_3]
[6.2752s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_3:CurrentFault]  aname [module_3] av->am 0x0
[6.27575s  ] [warning ] [runMonitorList2] avm [/status/module_3:CurrentFault] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.2768s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_3:CalculateVar_CurrentFault]
[6.27733s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_3:CalculateVar_CurrentFault]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mAuditLoggingGateway subscribed to the "audit-logging" message[39m[38;5;3m +414ms[39m
[6.27772s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_3:CurrentFault]
[6.27879s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_3:CurrentFault]
[6.27923s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_3:CurrentFault]
[6.27975s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_3:CurrentWarning]  aname [module_3] av->am 0x0
[6.28023s  ] [warning ] [runMonitorList2] avm [/status/module_3:CurrentWarning] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.2807s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_3:CalculateVar_CurrentWarning]
[6.28216s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_3:CalculateVar_CurrentWarning]
[6.28271s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_3:CurrentWarning]
[6.28322s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_3:CurrentWarning]
[6.28355s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_3:CurrentWarning]
[6.28419s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_3:PCSDCPower]  aname [module_3] av->am 0x0
[6.28461s  ] [warning ] [runMonitorList2] avm [/status/module_3:PCSDCPower] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.28533s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_3:CalculateVar_PCSDCPower]
[6.28566s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_3:CalculateVar_PCSDCPower]
[6.28606s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_3:PCSDCPower]
[6.28673s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_3:PCSDCPower]
[6.2875s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_3:PCSDCPower]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mFimsGateway subscribed to the "request" message[39m[38;5;3m +10ms[39m
[6.28804s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_3:TotalAlarmCnt]  aname [module_3] av->am 0x0
[6.2892s   ] [warning ] [runMonitorList2] avm [/status/module_3:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.2895s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_3:CalculateVar_TotalAlarmCnt]
[6.2898s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_3:CalculateVar_TotalAlarmCnt]
[6.29026s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_3:TotalAlarmCnt]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mFimsGateway subscribed to the "fimsNoReply" message[39m[38;5;3m +3ms[39m
[6.2909s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_3:TotalFaultCnt]  aname [module_3] av->am 0x0
[6.29226s  ] [warning ] [runMonitorList2] avm [/status/module_3:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mFimsGateway subscribed to the "subscribe" message[39m[38;5;3m +2ms[39m
[6.29264s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_3:CalculateVar_TotalFaultCnt]
[6.29367s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_3:CalculateVar_TotalFaultCnt]
[6.29404s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_3:TotalFaultCnt]
[6.29462s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 734.814 loops 161
[6.29518s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_3:runMonitor_module_3] tRun(mS) 735.303 loops 162
[6.29606s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_module_3]
[6.29662s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_module_3]
[6.29949s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 739.682 loops 163
[6.30057s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_module_3]
[6.30119s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_module_3]
[6.30248s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_4]
[6.30298s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_4]
[6.30384s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 744.039 loops 164
[6.30432s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_4:pubAssets_module_4] tRun(mS) 744.483 loops 165
[6.30524s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_module_4]
[6.30566s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_module_4]
[6.30654s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_4:CurrentFault]  aname [module_4] av->am 0x0
[6.30707s  ] [warning ] [runMonitorList2] avm [/status/module_4:CurrentFault] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.3077s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_4:CalculateVar_CurrentFault]
[6.30834s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_4:CalculateVar_CurrentFault]
[6.30896s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_4:CurrentFault]
[6.30956s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_4:CurrentFault]
[6.30989s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_4:CurrentFault]
[6.3105s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_4:CurrentWarning]  aname [module_4] av->am 0x0
[6.31082s  ] [warning ] [runMonitorList2] avm [/status/module_4:CurrentWarning] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.31144s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_4:CalculateVar_CurrentWarning]
[6.31209s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_4:CalculateVar_CurrentWarning]
[6.31261s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_4:CurrentWarning]
[6.31325s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_4:CurrentWarning]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mLayoutsGateway subscribed to the "layouts" message[39m[38;5;3m +20ms[39m
[6.31375s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_4:CurrentWarning]
[6.31475s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_4:PCSDCPower]  aname [module_4] av->am 0x0
[6.31514s  ] [warning ] [runMonitorList2] avm [/status/module_4:PCSDCPower] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.31547s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_4:CalculateVar_PCSDCPower]
[6.3157s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_4:CalculateVar_PCSDCPower]
[6.31598s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_4:PCSDCPower]
[6.31669s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_4:PCSDCPower]
[6.31705s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_4:PCSDCPower]
[6.31774s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_4:TotalAlarmCnt]  aname [module_4] av->am 0x0
[6.31819s  ] [warning ] [runMonitorList2] avm [/status/module_4:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.3186s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_4:CalculateVar_TotalAlarmCnt]
[6.31933s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_4:CalculateVar_TotalAlarmCnt]
[6.31983s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_4:TotalAlarmCnt]
[6.32044s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_4:TotalFaultCnt]  aname [module_4] av->am 0x0
[6.32116s  ] [warning ] [runMonitorList2] avm [/status/module_4:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.32155s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_4:CalculateVar_TotalFaultCnt]
[6.32193s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_4:CalculateVar_TotalFaultCnt]
[6.32259s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_4:TotalFaultCnt]
[6.32317s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 763.332 loops 166
[6.32357s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_4:runMonitor_module_4] tRun(mS) 763.774 loops 167
[6.32551s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_module_4]
[6.32594s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_module_4]
[6.3269s   ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 767.097 loops 168
[6.32735s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_module_4]
[6.32787s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_module_4]
[6.32854s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_5]
[6.32913s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_5]
[6.32979s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 769.982 loops 169
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mAssetsPageGateway subscribed to the "assetsPage" message[39m[38;5;3m +16ms[39m
[6.33049s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_5:pubAssets_module_5] tRun(mS) 770.688 loops 170
[6.33172s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_module_5]
[6.33201s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_module_5]
[6.33292s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_5:CurrentFault]  aname [module_5] av->am 0x0
[6.33351s  ] [warning ] [runMonitorList2] avm [/status/module_5:CurrentFault] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.33445s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_5:CalculateVar_CurrentFault]
[6.33476s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_5:CalculateVar_CurrentFault]
[6.3353s   ] [info    ] [setupCalculateV] Setting up params for [/status/module_5:CurrentFault]
[6.3359s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_5:CurrentFault]
[6.33643s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_5:CurrentFault]
[6.33706s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_5:CurrentWarning]  aname [module_5] av->am 0x0
[6.33783s  ] [warning ] [runMonitorList2] avm [/status/module_5:CurrentWarning] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.33833s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_5:CalculateVar_CurrentWarning]
[6.33878s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_5:CalculateVar_CurrentWarning]
[6.33914s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_5:CurrentWarning]
[6.33945s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_5:CurrentWarning]
[6.34486s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_5:CurrentWarning]
[6.34594s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_5:PCSDCPower]  aname [module_5] av->am 0x0
[6.3468s   ] [warning ] [runMonitorList2] avm [/status/module_5:PCSDCPower] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.34743s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_5:CalculateVar_PCSDCPower]
[6.3479s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_5:CalculateVar_PCSDCPower]
[6.34824s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_5:PCSDCPower]
[6.34892s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_5:PCSDCPower]
[6.34923s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_5:PCSDCPower]
[6.34975s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_5:TotalAlarmCnt]  aname [module_5] av->am 0x0
[6.35007s  ] [warning ] [runMonitorList2] avm [/status/module_5:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.35075s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_5:CalculateVar_TotalAlarmCnt]
[6.35359s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_5:CalculateVar_TotalAlarmCnt]
[6.35441s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_5:TotalAlarmCnt]
[6.35572s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_5:TotalFaultCnt]  aname [module_5] av->am 0x0
[6.35621s  ] [warning ] [runMonitorList2] avm [/status/module_5:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.3569s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_5:CalculateVar_TotalFaultCnt]
[6.35731s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_5:CalculateVar_TotalFaultCnt]
[6.35783s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_5:TotalFaultCnt]
[6.35847s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 798.667 loops 171
[6.35891s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_5:runMonitor_module_5] tRun(mS) 799.107 loops 172
[6.35982s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_module_5]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mLockModeGateway subscribed to the "lockMode" message[39m[38;5;3m +22ms[39m
[6.36009s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_module_5]
[6.36183s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 802.023 loops 173
[6.3624s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_module_5]
[6.36282s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_module_5]
[6.3636s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_6]
[6.36407s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/module_6]
[6.36466s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 804.859 loops 174
[6.36531s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_6:pubAssets_module_6] tRun(mS) 805.504 loops 175
[6.36585s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_module_6]
[6.36627s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_module_6]
[6.36707s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_6:CurrentFault]  aname [module_6] av->am 0x0
[6.36745s  ] [warning ] [runMonitorList2] avm [/status/module_6:CurrentFault] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.36784s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_6:CalculateVar_CurrentFault]
[6.36834s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_6:CalculateVar_CurrentFault]
[6.36869s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_6:CurrentFault]
[6.36929s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_6:CurrentFault]
[6.3698s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_6:CurrentFault]
[6.37056s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_6:CurrentWarning]  aname [module_6] av->am 0x0
[6.37174s  ] [warning ] [runMonitorList2] avm [/status/module_6:CurrentWarning] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mSchedulerGateway subscribed to the "scheduler" message[39m[38;5;3m +19ms[39m
[6.37282s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_6:CalculateVar_CurrentWarning]
[6.37423s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_6:CalculateVar_CurrentWarning]
[6.37459s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_6:CurrentWarning]
[6.37506s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_6:CurrentWarning]
[6.37535s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_6:CurrentWarning]
[6.37579s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_6:PCSDCPower]  aname [module_6] av->am 0x0
[6.3761s   ] [warning ] [runMonitorList2] avm [/status/module_6:PCSDCPower] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.37705s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_6:CalculateVar_PCSDCPower]
[6.3779s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_6:CalculateVar_PCSDCPower]
[6.37835s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_6:PCSDCPower]
[6.37875s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/module_6:PCSDCPower]
[6.37941s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/module_6:PCSDCPower]
[6.38001s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_6:TotalAlarmCnt]  aname [module_6] av->am 0x0
[6.38043s  ] [warning ] [runMonitorList2] avm [/status/module_6:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.38096s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_6:CalculateVar_TotalAlarmCnt]
[6.38139s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_6:CalculateVar_TotalAlarmCnt]
[6.38204s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_6:TotalAlarmCnt]
[6.38539s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/module_6:TotalFaultCnt]  aname [module_6] av->am 0x0
[6.38597s  ] [warning ] [runMonitorList2] avm [/status/module_6:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [pcs] to avm
[6.38922s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/module_6:CalculateVar_TotalFaultCnt]
[6.38965s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/module_6:CalculateVar_TotalFaultCnt]
[6.39012s  ] [info    ] [setupCalculateV] Setting up params for [/status/module_6:TotalFaultCnt]
[6.39069s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 830.882 loops 176
[6.39109s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/module_6:runMonitor_module_6] tRun(mS) 831.286 loops 177
[6.39174s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_module_6]
[6.3921s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_module_6]
[6.39257s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 832.771 loops 178
[6.39289s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_module_6]
[6.39329s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_module_6]
[6.41788s  ] [info    ] [LogInfo        ] [/status/pcs:SystemState] received a value of [Stop]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mDashboardGateway subscribed to the "dashboard" message[39m[38;5;3m +48ms[39m
[6.41872s  ] [info    ] [setParamfromAf ]  created var for uri [/status/bms] as [/status/bms:Voltage]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mSiteStatusGateway subscribed to the "sitestatus" message[39m[38;5;3m +4ms[39m
[6.42215s  ] [error   ] [setOutValue    ] Warning possible loopbackvar [/components/pcs_registers_fast:current_status] check abf->useAv [true]
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mErcotOverrideGateway subscribed to the "ercotOverride" message[39m[38;5;3m +9ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mSystemStatusGateway subscribed to the "systemStatus" message[39m[38;5;3m +14ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mUsersController {/api/users}:[39m[38;5;3m +29ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users, GET} route[39m[38;5;3m +10ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id, PUT} route[39m[38;5;3m +8ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id, DELETE} route[39m[38;5;3m +48ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users, POST} route[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id, GET} route[39m[38;5;3m +3ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mSiteAdminsController {/api/site-admins}:[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/site-admins, GET} route[39m[38;5;3m +3ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/site-admins, POST} route[39m[38;5;3m +4ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/site-admins/radius-test, POST} route[39m[38;5;3m +5ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAuditLoggingController {/api/audit-logging}:[39m[38;5;3m +14ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/audit-logging, POST} route[39m[38;5;3m +3ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mFimsController {/api/fims}:[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/fims/one-time-auth, GET} route[39m[38;5;3m +4ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/fims/get, GET} route[39m[38;5;3m +12ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/fims/set, PUT} route[39m[38;5;3m +3ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/fims/post, POST} route[39m[38;5;3m +13ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/fims/delete, DELETE} route[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAuthController {/api}:[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/login, POST} route[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/login/mfa, POST} route[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/login/passExp, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/refresh_token, GET} route[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/authenticate-user-token, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/logout, POST} route[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAssetsController {/api/assets}:[39m[38;5;3m +0ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/assets, GET} route[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/assets, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mLayoutsController {/api/layouts}:[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/layouts, GET} route[39m[38;5;3m +19ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/layouts, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mDashboardsController {/api}:[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/dashboards, GET} route[39m[38;5;3m +3ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/dashboards, POST} route[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mRestController {/api/rest/v2}:[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/rest/v2/:endpoint(*), POST} route[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/rest/v2/:endpoint(*), GET} route[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/rest/v2/:endpoint(*), PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/rest/v2/:endpoint(*), DELETE} route[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mLegacyRestController {/api/rest/v1}:[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/rest/v1/:endpoint(*), GET} route[39m[38;5;3m +3ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/rest/v1/:endpoint(*)/:value, PUT} route[39m[38;5;3m +3ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mLegacyRestController {/api/rest}:[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/rest/:endpoint(*), GET} route[39m[38;5;3m +3ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/rest/:endpoint(*)/:value, PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mSchedulerController {/api/scheduler}:[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/events, GET} route[39m[38;5;3m +3ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/events/:siteId/:eventId, DELETE} route[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/events/:siteId, POST} route[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/events/:siteId/:eventId, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/events/:siteId/:eventId/exceptions, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/modes, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/modes/:modeId, DELETE} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/modes, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/modes/:modeId, POST} route[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/configuration, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/configuration, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/timezones, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/connected, GET} route[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mEventsController {/api/events}:[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/events, GET} route[39m[38;5;3m +3ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mSiteStatusController {/api}:[39m[38;5;3m +17ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/sitestatus, GET} route[39m[38;5;3m +11ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mErcotOverrideController {/api/ercot-override}:[39m[38;5;3m +4ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/ercot-override/sites, GET} route[39m[38;5;3m +6ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/ercot-override/variable-names, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/ercot-override/variable-values/:id, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/ercot-override/override-value/:id/:name, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mSystemStatusController {/api/system-status}:[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/system-status, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/system-status/:serviceName/start, PUT} route[39m[38;5;3m +2ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/system-status/:serviceName/stop, PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/system-status/:serviceName/restart, PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mWebUIConfigController {/api}:[39m[38;5;3m +1ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/web-ui-config, GET} route[39m[38;5;3m +13ms[39m
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/login-info, GET} route[39m[38;5;3m +1ms[39m
[6.81089s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
Users found in Database:  1
[32m[Nest] 45255  - [39m01/11/2024, 3:07:25 PM [32m    LOG[39m [38;5;3m[NestApplication] [39m[32mNest application successfully started[39m[38;5;3m +132ms[39m
web_server listening on port 443
[17.2106s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[18.2241s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[18.2248s  ] [info    ] [BatteryRackBala] CLOSE CONTACTORS
[18.2255s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_CloseContactors]
[18.2261s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_CloseContactors]
[18.2267s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CloseContactors_bms]
[18.2273s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CloseContactors_bms]
[18.2279s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:SharedHandleCmdProcess_CloseContactors_bms]
[18.2282s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:SharedHandleCmdProcess_CloseContactors_bms]
[18.2289s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:HandleCmd_CloseContactors]
[18.2293s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:HandleCmd_CloseContactors]
[18.2299s  ] [info    ] [HandleCmd      ] reload first run [bms] [/controls/bms:CloseContactors]  reload 0
[18.2303s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/bms:CloseContactors]
[18.2307s  ] [info    ] [HandleCmd      ] Adding [/controls/bms:CloseContactors] to amap in asset [bms]
[18.231s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/bms:CloseContactors]
[18.2314s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/bms:CloseContactors]
[18.232s   ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"bms","message":"Sent command value [2] to [/components/catl_ems_bms_rw:ems_cmd]","severity":1}]
[18.2323s  ] [info    ] [record         ] Sent command value [2] to [/components/catl_ems_bms_rw:ems_cmd]
[18.7242s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[18.7246s  ] [info    ] [BatteryRackBala] CLOSE CONTACTORS
[19.2242s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[19.2245s  ] [info    ] [BatteryRackBala] CLOSE CONTACTORS
[19.7242s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[19.7248s  ] [info    ] [BatteryRackBala] CLOSE CONTACTORS
[20.2241s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[20.2244s  ] [info    ] [BatteryRackBala] CLOSE CONTACTORS
[20.7242s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[20.7249s  ] [info    ] [BatteryRackBala] CLOSE CONTACTORS
[21.1238s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:FaultShutdown]
[21.1258s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:FaultShutdown]
[21.3969s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[21.4125s  ] [info    ] [BatteryRackBala] CLOSE CONTACTORS
[21.4136s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"bms","message":"Received command value [2] from [/components/catl_ems_bms_rw:ems_cmd]","severity":1}]
[21.4142s  ] [info    ] [record         ] Received command value [2] from [/components/catl_ems_bms_rw:ems_cmd]
[21.4152s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:HandleCmd_VerifyCloseContactors]
[21.4156s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:HandleCmd_VerifyCloseContactors]
[21.4162s  ] [info    ] [HandleCmd      ] reload first run [bms] [/controls/bms:VerifyCloseContactors]  reload 0
[21.4343s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/bms:VerifyCloseContactors]
[21.4372s  ] [info    ] [HandleCmd      ] Adding [/controls/bms:VerifyCloseContactors] to amap in asset [bms]
[21.4383s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/bms:VerifyCloseContactors]
[21.4389s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/bms:VerifyCloseContactors]
[21.4396s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [bms] with [/controls/bms:VerifyCloseContactors]
[21.4404s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"bms","message":"Sent command value [0] to [/controls/bms:VerifyCloseContactors]","severity":1}]
[21.4408s  ] [info    ] [record         ] Sent command value [0] to [/controls/bms:VerifyCloseContactors]
[21.4416s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"bms","message":"Received command value [0] from [/controls/bms:VerifyCloseContactors]","severity":1}]
[21.4422s  ] [info    ] [record         ] Received command value [0] from [/controls/bms:VerifyCloseContactors]
[21.77s    ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[21.7709s  ] [info    ] [BatteryRackBala] START PCS
[21.7721s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_StartPCS]
[21.8046s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_StartPCS]
[21.8093s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:StartPCS_pcs]
[21.8213s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:StartPCS_pcs]
[21.8239s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:SharedHandleCmdProcess_Start_pcs]
[21.8303s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:SharedHandleCmdProcess_Start_pcs]
[21.8334s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_Start]
[21.8348s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_Start]
[21.8481s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:Start]  reload 0
[21.8507s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:Start]
[21.8527s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:Start] to amap in asset [pcs]
[21.8671s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:Start]
[21.8738s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:Start]
[21.8761s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [1] to [/components/pcs_registers_slow:selector_status]","severity":1}]
[21.8797s  ] [info    ] [record         ] Sent command value [1] to [/components/pcs_registers_slow:selector_status]
[22.0975s  ] [info    ] [getOperandInfo ] assetVar [ActivePowerCmd] has parameter [variable1]. Attempting to adding to list of operands
[22.0986s  ] [info    ] [getOperandInfo ] assetVar SystemState in parameter [variable1] of assetVar [ActivePowerCmd] exists. Adding info (uri, name, parameter) to list of operand info
[22.0997s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Cannot send command value [-100] to [/components/pcs_registers_fast:p_p_reference]. Condition(s): [/status/pcs:SystemState:Stop] != Stop and [/status/pcs:SystemState:Stop] != Fault","severity":3}]
[22.1013s  ] [warning ] [record         ] Cannot send command value [-100] to [/components/pcs_registers_fast:p_p_reference]. Condition(s): [/status/pcs:SystemState:Stop] != Stop and [/status/pcs:SystemState:Stop] != Fault
[22.1023s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ActivePowerCmdSuccess]
[22.1036s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ActivePowerCmdSuccess]
[22.1051s  ] [info    ] [sendAlarm      ] calling setAlarm [/alarms/pcs:ActivePowerCmd] in destAv [/assets/pcs/summary:alarms]
[22.1063s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"[ActivePowerCmd] received [PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details] at [01/11/2024 15:07:41]","severity":3}]
[22.2426s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[22.2434s  ] [info    ] [BatteryRackBala] START PCS
[22.6393s  ] [info    ] [sendAlarm      ] calling setAlarm [/status/bms:MinCellTemp] in destAv [/assets/bms/summary:alarms]
[22.6414s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"bms","message":"[MinCellTemp] value [0.000] < min alarm threshold [10.000] for 2.50 seconds at 01/11/2024 15:07:41","severity":3}]
[22.8207s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[22.846s   ] [info    ] [BatteryRackBala] START PCS
[23.7605s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[23.7612s  ] [info    ] [BatteryRackBala] START PCS
[24.508s   ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[24.5095s  ] [info    ] [BatteryRackBala] START PCS
[24.6856s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[24.6871s  ] [info    ] [BatteryRackBala] START PCS
[25.2041s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[25.2065s  ] [info    ] [BatteryRackBala] START PCS
[25.7175s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[25.7194s  ] [info    ] [BatteryRackBala] START PCS
[26.6115s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[26.6123s  ] [info    ] [BatteryRackBala] START PCS
[26.7731s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[26.7741s  ] [info    ] [BatteryRackBala] START PCS
[26.9244s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[26.9323s  ] [info    ] [BatteryRackBala] START PCS
[27.3021s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[27.3056s  ] [info    ] [BatteryRackBala] START PCS
[27.3075s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [1] from [/components/pcs_registers_slow:selector_status]","severity":1}]
[27.3087s  ] [info    ] [record         ] Received command value [1] from [/components/pcs_registers_slow:selector_status]
[27.3111s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyStart]
[27.3127s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyStart]
[27.3241s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyStart]  reload 0
[27.3256s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyStart]
[27.3265s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyStart] to amap in asset [pcs]
[27.3278s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyStart]
[27.3293s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyStart]
[27.7773s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[27.7803s  ] [info    ] [BatteryRackBala] START PCS
[27.8832s  ] [info    ] [LogInfo        ] [/status/pcs:SystemState] received a value of [Run]
[28.2345s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[28.2351s  ] [info    ] [BatteryRackBala] START PCS
[28.2357s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:VerifyStart]
[28.2366s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [0] to [/controls/pcs:VerifyStart]","severity":1}]
[28.2372s  ] [info    ] [record         ] Sent command value [0] to [/controls/pcs:VerifyStart]
[28.2382s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [0] from [/controls/pcs:VerifyStart]","severity":1}]
[28.2387s  ] [info    ] [record         ] Received command value [0] from [/controls/pcs:VerifyStart]
[28.7304s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[28.731s   ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[28.919s   ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[28.9202s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [-90] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[28.9214s  ] [info    ] [record         ] Sent command value [-90] to [/components/pcs_registers_fast:p_p_reference]
[28.923s   ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [-90] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[28.9337s  ] [info    ] [record         ] Received command value [-90] from [/components/pcs_registers_fast:p_p_reference]
[29.2804s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[29.2956s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[29.4173s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[29.4184s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [-80] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[29.4192s  ] [info    ] [record         ] Sent command value [-80] to [/components/pcs_registers_fast:p_p_reference]
[29.4201s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [-80] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[29.421s   ] [info    ] [record         ] Received command value [-80] from [/components/pcs_registers_fast:p_p_reference]
[29.9387s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[29.9409s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[30.0319s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[30.0325s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [-70] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[30.033s   ] [info    ] [record         ] Sent command value [-70] to [/components/pcs_registers_fast:p_p_reference]
[30.0336s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [-70] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[30.034s   ] [info    ] [record         ] Received command value [-70] from [/components/pcs_registers_fast:p_p_reference]
[30.2423s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[30.303s   ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[30.4563s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[30.4589s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [-60] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[30.4607s  ] [info    ] [record         ] Sent command value [-60] to [/components/pcs_registers_fast:p_p_reference]
[30.4635s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [-60] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[30.4645s  ] [info    ] [record         ] Received command value [-60] from [/components/pcs_registers_fast:p_p_reference]
[30.7435s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[30.7449s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[31.0331s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[31.0795s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [-50] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[31.0972s  ] [info    ] [record         ] Sent command value [-50] to [/components/pcs_registers_fast:p_p_reference]
[31.0994s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [-50] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[31.1s     ] [info    ] [record         ] Received command value [-50] from [/components/pcs_registers_fast:p_p_reference]
[31.2905s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[31.2952s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[31.4022s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[31.4052s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [-40] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[31.4058s  ] [info    ] [record         ] Sent command value [-40] to [/components/pcs_registers_fast:p_p_reference]
[31.4075s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [-40] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[31.4081s  ] [info    ] [record         ] Received command value [-40] from [/components/pcs_registers_fast:p_p_reference]
[31.7324s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[31.7646s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[31.8967s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[31.8974s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [-30] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[31.8981s  ] [info    ] [record         ] Sent command value [-30] to [/components/pcs_registers_fast:p_p_reference]
[31.9039s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [-30] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[31.9122s  ] [info    ] [record         ] Received command value [-30] from [/components/pcs_registers_fast:p_p_reference]
[32.446s   ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[32.4519s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[32.8921s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[32.8963s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [-20] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[32.8988s  ] [info    ] [record         ] Sent command value [-20] to [/components/pcs_registers_fast:p_p_reference]
[32.9039s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [-20] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[32.9058s  ] [info    ] [record         ] Received command value [-20] from [/components/pcs_registers_fast:p_p_reference]
[32.9515s  ] [info    ] [sendAlarm      ] calling setAlarm [/status/bms:DCCurrent] in destAv [/assets/bms/summary:alarms]
[32.9658s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"bms","message":"[DCCurrent] value [-45.933] < min alarm threshold [0.000] for 1.00 seconds at 01/11/2024 15:07:52","severity":3}]
[33.4088s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[33.4094s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[33.4412s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[33.4418s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [-10] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[33.4469s  ] [info    ] [record         ] Sent command value [-10] to [/components/pcs_registers_fast:p_p_reference]
[33.4501s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [-10] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[33.4507s  ] [info    ] [record         ] Received command value [-10] from [/components/pcs_registers_fast:p_p_reference]
[33.4983s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[33.4988s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[33.5132s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[33.5137s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [0] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[33.5145s  ] [info    ] [record         ] Sent command value [0] to [/components/pcs_registers_fast:p_p_reference]
[33.5153s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [0] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[33.5159s  ] [info    ] [record         ] Received command value [0] from [/components/pcs_registers_fast:p_p_reference]
[33.732s   ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[33.7326s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[33.8167s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_config_after_30s]
[33.8177s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_config_after_30s]
[34.2432s  ] [info    ] [write_cjson    ] Wrote 912771 bytes to file /var/log/ess_controller/run_configs_ess_after_30_seconds.json
[34.4214s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[34.4362s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [10] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[34.4385s  ] [info    ] [record         ] Sent command value [10] to [/components/pcs_registers_fast:p_p_reference]
[34.4428s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [10] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[34.4443s  ] [info    ] [record         ] Received command value [10] from [/components/pcs_registers_fast:p_p_reference]
[34.5562s  ] [info    ] [sendAlarm      ] calling setAlarm [/status/bms:DCCurrent] in destAv [/assets/bms/summary:faults]
[34.5582s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"bms","message":"[DCCurrent] value [-22.966] < min fault threshold [0.000] for 2.50 seconds at 01/11/2024 15:07:53","severity":4}]
[34.5588s  ] [info    ] [LogInfo        ] [/status/bms:FaultShutdown] received a value of [true]
[34.5752s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[34.5767s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [0] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[34.5776s  ] [info    ] [record         ] Sent command value [0] to [/components/pcs_registers_fast:p_p_reference]
[34.5791s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [0] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[34.5796s  ] [info    ] [record         ] Received command value [0] from [/components/pcs_registers_fast:p_p_reference]
[34.6128s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[34.6135s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[34.6412s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[34.6421s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [10] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[34.6427s  ] [info    ] [record         ] Sent command value [10] to [/components/pcs_registers_fast:p_p_reference]
[34.6435s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [10] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[34.6451s  ] [info    ] [record         ] Received command value [10] from [/components/pcs_registers_fast:p_p_reference]
[34.7301s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[34.7311s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[34.8286s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_config_after_31s]
[34.8409s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_config_after_31s]
[35.0033s  ] [info    ] [Every1000mS    ] Wrote 568977 bytes to file /var/log/ess_controller/run_configs_ess_after_31_seconds.json
[35.0372s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[35.0393s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [20] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[35.0397s  ] [info    ] [record         ] Sent command value [20] to [/components/pcs_registers_fast:p_p_reference]
[35.0413s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [20] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[35.042s   ] [info    ] [record         ] Received command value [20] from [/components/pcs_registers_fast:p_p_reference]
[35.3175s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[35.3236s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[35.396s   ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[35.3969s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [30] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[35.3989s  ] [info    ] [record         ] Sent command value [30] to [/components/pcs_registers_fast:p_p_reference]
[35.3998s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [30] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[35.4006s  ] [info    ] [record         ] Received command value [30] from [/components/pcs_registers_fast:p_p_reference]
[35.7428s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[35.7694s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[35.8202s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_config_after_32s]
[35.8244s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_config_after_32s]
[36.0396s  ] [info    ] [write_cjson    ] Wrote 913420 bytes to file /var/log/ess_controller/run_configs_ess_after_32_seconds.json
[36.0686s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[36.0699s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [40] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[36.0716s  ] [info    ] [record         ] Sent command value [40] to [/components/pcs_registers_fast:p_p_reference]
[36.0728s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [40] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[36.0739s  ] [info    ] [record         ] Received command value [40] from [/components/pcs_registers_fast:p_p_reference]
[36.3173s  ] [info    ] [LogInfo        ] [/status/bms:FaultShutdown] received a value of [false]
[36.4203s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[36.4382s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[36.4862s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[36.4874s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [50] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[36.4879s  ] [info    ] [record         ] Sent command value [50] to [/components/pcs_registers_fast:p_p_reference]
[36.4893s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [50] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[36.4899s  ] [info    ] [record         ] Received command value [50] from [/components/pcs_registers_fast:p_p_reference]
[36.7415s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[36.7421s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[36.9176s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[36.9188s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [60] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[36.9196s  ] [info    ] [record         ] Sent command value [60] to [/components/pcs_registers_fast:p_p_reference]
[36.9267s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [60] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[36.934s   ] [info    ] [record         ] Received command value [60] from [/components/pcs_registers_fast:p_p_reference]
[37.2558s  ] [info    ] [sendAlarm      ] calling setAlarm [/status/bms:DCCurrent] in destAv [/assets/bms/summary:alarms]
[37.2574s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"bms","message":"[DCCurrent] value [22.966] > max alarm threshold [0.000] for 1.00 seconds at 01/11/2024 15:07:56","severity":3}]
[37.2942s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[37.2955s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[37.4151s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[37.4174s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [70] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[37.4197s  ] [info    ] [record         ] Sent command value [70] to [/components/pcs_registers_fast:p_p_reference]
[37.4214s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [70] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[37.4219s  ] [info    ] [record         ] Received command value [70] from [/components/pcs_registers_fast:p_p_reference]
[37.9904s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[37.9916s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[38.0161s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[38.0176s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [80] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[38.0186s  ] [info    ] [record         ] Sent command value [80] to [/components/pcs_registers_fast:p_p_reference]
[38.0207s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [80] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[38.0212s  ] [info    ] [record         ] Received command value [80] from [/components/pcs_registers_fast:p_p_reference]
[38.2891s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[38.2897s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[38.3924s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[38.3932s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [90] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[38.3943s  ] [info    ] [record         ] Sent command value [90] to [/components/pcs_registers_fast:p_p_reference]
[38.3954s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [90] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[38.3964s  ] [info    ] [record         ] Received command value [90] from [/components/pcs_registers_fast:p_p_reference]
[38.7818s  ] [info    ] [sendAlarm      ] calling setAlarm [/status/bms:DCCurrent] in destAv [/assets/bms/summary:faults]
[38.7853s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"bms","message":"[DCCurrent] value [53.588] > max fault threshold [0.000] for 2.50 seconds at 01/11/2024 15:07:57","severity":4}]
[38.7945s  ] [info    ] [LogInfo        ] [/status/bms:FaultShutdown] received a value of [true]
[38.8128s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[38.8135s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[38.8374s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[38.8381s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [0] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[38.8389s  ] [info    ] [record         ] Sent command value [0] to [/components/pcs_registers_fast:p_p_reference]
[38.8399s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [0] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[38.8407s  ] [info    ] [record         ] Received command value [0] from [/components/pcs_registers_fast:p_p_reference]
[38.8922s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[38.8936s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [10] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[38.8943s  ] [info    ] [record         ] Sent command value [10] to [/components/pcs_registers_fast:p_p_reference]
[38.8951s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [10] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[38.8956s  ] [info    ] [record         ] Received command value [10] from [/components/pcs_registers_fast:p_p_reference]
[39.224s   ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[39.2247s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[39.3967s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[39.415s   ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [20] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[39.4442s  ] [info    ] [record         ] Sent command value [20] to [/components/pcs_registers_fast:p_p_reference]
[39.4516s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [20] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[39.453s   ] [info    ] [record         ] Received command value [20] from [/components/pcs_registers_fast:p_p_reference]
[39.7694s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[39.7704s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[39.8988s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[39.903s   ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [30] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[39.9048s  ] [info    ] [record         ] Sent command value [30] to [/components/pcs_registers_fast:p_p_reference]
[39.9183s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [30] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[39.9196s  ] [info    ] [record         ] Received command value [30] from [/components/pcs_registers_fast:p_p_reference]
[40.2531s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[40.2635s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[40.4366s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[40.4419s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [40] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[40.4607s  ] [info    ] [record         ] Sent command value [40] to [/components/pcs_registers_fast:p_p_reference]
[40.4661s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [40] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[40.468s   ] [info    ] [record         ] Received command value [40] from [/components/pcs_registers_fast:p_p_reference]
[40.7901s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[40.7907s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[40.8941s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[40.8948s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [50] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[40.8958s  ] [info    ] [record         ] Sent command value [50] to [/components/pcs_registers_fast:p_p_reference]
[40.8973s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [50] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[40.8979s  ] [info    ] [record         ] Received command value [50] from [/components/pcs_registers_fast:p_p_reference]
[41.306s   ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[41.3287s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[41.3961s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[41.401s   ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [60] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[41.4031s  ] [info    ] [record         ] Sent command value [60] to [/components/pcs_registers_fast:p_p_reference]
[41.4103s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [60] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[41.4115s  ] [info    ] [record         ] Received command value [60] from [/components/pcs_registers_fast:p_p_reference]
[41.7307s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[41.7328s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[41.9799s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[41.9808s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [70] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[41.9821s  ] [info    ] [record         ] Sent command value [70] to [/components/pcs_registers_fast:p_p_reference]
[41.9832s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [70] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[41.9838s  ] [info    ] [record         ] Received command value [70] from [/components/pcs_registers_fast:p_p_reference]
[42.3051s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[42.3059s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[42.3943s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[42.3955s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [80] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[42.3984s  ] [info    ] [record         ] Sent command value [80] to [/components/pcs_registers_fast:p_p_reference]
[42.4012s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [80] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[42.4031s  ] [info    ] [record         ] Received command value [80] from [/components/pcs_registers_fast:p_p_reference]
[42.7423s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[42.7833s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[42.8921s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[42.8935s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [90] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[42.8947s  ] [info    ] [record         ] Sent command value [90] to [/components/pcs_registers_fast:p_p_reference]
[42.898s   ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [90] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[42.9013s  ] [info    ] [record         ] Received command value [90] from [/components/pcs_registers_fast:p_p_reference]
[43.2282s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[43.2292s  ] [info    ] [BatteryRackBala] SET ACTIVE POWER
[43.4145s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerCmd]
[43.4199s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [100] to [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[43.4214s  ] [info    ] [record         ] Sent command value [100] to [/components/pcs_registers_fast:p_p_reference]
[43.4249s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [100] from [/components/pcs_registers_fast:p_p_reference]","severity":1}]
[43.4261s  ] [info    ] [record         ] Received command value [100] from [/components/pcs_registers_fast:p_p_reference]
[43.7242s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[44.2321s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[44.2556s  ] [info    ] [BatteryRackBala] STOP PCS
[44.264s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_StopPCS]
[44.2647s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_StopPCS]
[44.266s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:StopPCS_pcs]
[44.2666s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:StopPCS_pcs]
[44.2682s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:SharedHandleCmdProcess_Stop_pcs]
[44.2703s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:SharedHandleCmdProcess_Stop_pcs]
[44.2712s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_Stop]
[44.2719s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_Stop]
[44.2725s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:Stop]  reload 0
[44.2741s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:Stop]
[44.2755s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:Stop] to amap in asset [pcs]
[44.2778s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:Stop]
[44.2785s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:Stop]
[44.2806s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [0] to [/components/pcs_registers_slow:selector_status]","severity":1}]
[44.2837s  ] [info    ] [record         ] Sent command value [0] to [/components/pcs_registers_slow:selector_status]
[44.7565s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[44.7574s  ] [info    ] [BatteryRackBala] STOP PCS
[45.2639s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[45.2648s  ] [info    ] [BatteryRackBala] STOP PCS
[45.7244s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[45.7251s  ] [info    ] [BatteryRackBala] STOP PCS
[45.9721s  ] [info    ] [LogInfo        ] [/status/pcs:SystemState] received a value of [Stop]
[46.2391s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[46.2405s  ] [info    ] [BatteryRackBala] STOP PCS
[46.7245s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[46.726s   ] [info    ] [BatteryRackBala] STOP PCS
[47.2346s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[47.2354s  ] [info    ] [BatteryRackBala] STOP PCS
[47.237s   ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [0] from [/components/pcs_registers_slow:selector_status]","severity":1}]
[47.2374s  ] [info    ] [record         ] Received command value [0] from [/components/pcs_registers_slow:selector_status]
[47.2382s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyStop]
[47.2386s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyStop]
[47.2391s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyStop]  reload 0
[47.2395s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyStop]
[47.2401s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyStop] to amap in asset [pcs]
[47.2405s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyStop]
[47.241s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyStop]
[47.2417s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:VerifyStop]
[47.2421s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [0] to [/controls/pcs:VerifyStop]","severity":1}]
[47.2426s  ] [info    ] [record         ] Sent command value [0] to [/controls/pcs:VerifyStop]
[47.2432s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [0] from [/controls/pcs:VerifyStop]","severity":1}]
[47.2436s  ] [info    ] [record         ] Received command value [0] from [/controls/pcs:VerifyStop]
[47.7243s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[47.7247s  ] [info    ] [BatteryRackBala] OPEN CONTACTORS
[47.7252s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_OpenContactors]
[47.7257s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_OpenContactors]
[47.7262s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:OpenContactors_bms]
[47.7267s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:OpenContactors_bms]
[47.7272s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:SharedHandleCmdProcess_OpenContactors_bms]
[47.7488s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:SharedHandleCmdProcess_OpenContactors_bms]
[47.7508s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:HandleCmd_OpenContactors]
[47.7511s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:HandleCmd_OpenContactors]
[47.7523s  ] [info    ] [HandleCmd      ] reload first run [bms] [/controls/bms:OpenContactors]  reload 0
[47.7526s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/bms:OpenContactors]
[47.7531s  ] [info    ] [HandleCmd      ] Adding [/controls/bms:OpenContactors] to amap in asset [bms]
[47.7535s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/bms:OpenContactors]
[47.7539s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/bms:OpenContactors]
[47.7547s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"bms","message":"Sent command value [3] to [/components/catl_ems_bms_rw:ems_cmd]","severity":1}]
[47.7554s  ] [info    ] [record         ] Sent command value [3] to [/components/catl_ems_bms_rw:ems_cmd]
[47.7564s  ] [info    ] [FunctionResultH] IN PROGRESS | BatteryRackBalanceCoarse | HandleCmd for OpenContactors is not complete yet
[48.2453s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[48.2476s  ] [info    ] [BatteryRackBala] OPEN CONTACTORS
[48.2482s  ] [info    ] [FunctionResultH] IN PROGRESS | BatteryRackBalanceCoarse | HandleCmd for OpenContactors is not complete yet
[48.7261s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[48.7281s  ] [info    ] [BatteryRackBala] OPEN CONTACTORS
[48.7288s  ] [info    ] [FunctionResultH] IN PROGRESS | BatteryRackBalanceCoarse | HandleCmd for OpenContactors is not complete yet
[49.2282s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[49.2315s  ] [info    ] [BatteryRackBala] OPEN CONTACTORS
[49.2319s  ] [info    ] [FunctionResultH] IN PROGRESS | BatteryRackBalanceCoarse | HandleCmd for OpenContactors is not complete yet
[49.7242s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[49.7248s  ] [info    ] [BatteryRackBala] OPEN CONTACTORS
[49.7256s  ] [info    ] [FunctionResultH] IN PROGRESS | BatteryRackBalanceCoarse | HandleCmd for OpenContactors is not complete yet
[50.2302s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[50.2307s  ] [info    ] [BatteryRackBala] OPEN CONTACTORS
[50.2313s  ] [info    ] [FunctionResultH] IN PROGRESS | BatteryRackBalanceCoarse | HandleCmd for OpenContactors is not complete yet
[50.7243s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[50.7249s  ] [info    ] [BatteryRackBala] OPEN CONTACTORS
[50.7267s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"bms","message":"Received command value [3] from [/components/catl_ems_bms_rw:ems_cmd]","severity":1}]
[50.728s   ] [info    ] [record         ] Received command value [3] from [/components/catl_ems_bms_rw:ems_cmd]
[50.7287s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:HandleCmd_VerifyOpenContactors]
[50.7292s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:HandleCmd_VerifyOpenContactors]
[50.7296s  ] [info    ] [HandleCmd      ] reload first run [bms] [/controls/bms:VerifyOpenContactors]  reload 0
[50.7301s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/bms:VerifyOpenContactors]
[50.7308s  ] [info    ] [HandleCmd      ] Adding [/controls/bms:VerifyOpenContactors] to amap in asset [bms]
[50.7317s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/bms:VerifyOpenContactors]
[50.7322s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/bms:VerifyOpenContactors]
[50.7328s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [bms] with [/controls/bms:VerifyOpenContactors]
[50.7338s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"bms","message":"Sent command value [0] to [/controls/bms:VerifyOpenContactors]","severity":1}]
[50.7348s  ] [info    ] [record         ] Sent command value [0] to [/controls/bms:VerifyOpenContactors]
[50.7355s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"bms","message":"Received command value [0] from [/controls/bms:VerifyOpenContactors]","severity":1}]
[50.7362s  ] [info    ] [record         ] Received command value [0] from [/controls/bms:VerifyOpenContactors]
[50.7369s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"SUCCESS | BatteryRackBalanceCoarse | Successful process of VerifyOpenContactors for the bms","severity":1}]
fatal error: concurrent map iteration and map write

goroutine 22 [running]:
runtime.throw({0x626b52?, 0xc000038c00?})
	/usr/lib/golang/src/runtime/panic.go:992 +0x71 fp=0xc000048810 sp=0xc0000487e0 pc=0x4373f1
runtime.mapiternext(0x5eb100?)
	/usr/lib/golang/src/runtime/map.go:871 +0x4eb fp=0xc000048880 sp=0xc000048810 pc=0x41248b
reflect.mapiternext(0x4895ef?)
	/usr/lib/golang/src/runtime/map.go:1378 +0x19 fp=0xc000048898 sp=0xc000048880 pc=0x463879
reflect.(*MapIter).Next(0xc00029f980?)
	/usr/lib/golang/src/reflect/value.go:1789 +0x7e fp=0xc0000488c8 sp=0xc000048898 pc=0x4896be
encoding/json.mapEncoder.encode({0x4645db?}, 0xc000559580, {0x5f2d60?, 0xc000095320?, 0x5f2d60?}, {0x10?, 0x8b?})
	/usr/lib/golang/src/encoding/json/encode.go:799 +0x2d4 fp=0xc000048a88 sp=0xc0000488c8 pc=0x4c95f4
encoding/json.mapEncoder.encode-fm(0x5f2d60?, {0x5f2d60?, 0xc000095320?, 0x5?}, {0xbf?, 0xf?})
	<autogenerated>:1 +0x45 fp=0xc000048ac8 sp=0xc000048a88 pc=0x4d31a5
encoding/json.(*encodeState).reflectValue(0xc000048b60?, {0x5f2d60?, 0xc000095320?, 0x0?}, {0xa0?, 0x5c?})
	/usr/lib/golang/src/encoding/json/encode.go:360 +0x78 fp=0xc000048b28 sp=0xc000048ac8 pc=0x4c6bf8
encoding/json.(*encodeState).marshal(0xc0000c6300?, {0x5f2d60?, 0xc000095320?}, {0xa?, 0x0?})
	/usr/lib/golang/src/encoding/json/encode.go:332 +0xfa fp=0xc000048ba0 sp=0xc000048b28 pc=0x4c683a
encoding/json.Marshal({0x5f2d60, 0xc000095320})
	/usr/lib/golang/src/encoding/json/encode.go:161 +0x45 fp=0xc000048c00 sp=0xc000048ba0 pc=0x4c5ec5
fims.(*Fims).Send(0x781b80, {{0x61bc25, 0x3}, {0xc0000c6300, 0x1e}, {0x0, 0x0}, {0x61d461, 0xa}, {0x0, ...}, ...})
	/usr/lib/golang/src/fims/fims.go:447 +0xc5 fp=0xc000048cc8 sp=0xc000048c00 pc=0x501ba5
github.com/flexgen-power/go_metrics/pkg/go_metrics.StartEvalsAndPubs.func3(0x0)
	/codebuild/output/src2111137953/src/go_metrics/pkg/go_metrics/eval.go:189 +0x43f fp=0xc000048fc8 sp=0xc000048cc8 pc=0x55455f
github.com/flexgen-power/go_metrics/pkg/go_metrics.StartEvalsAndPubs.func7()
	/codebuild/output/src2111137953/src/go_metrics/pkg/go_metrics/eval.go:197 +0x2a fp=0xc000048fe0 sp=0xc000048fc8 pc=0x5540ea
runtime.goexit()
	/usr/lib/golang/src/runtime/asm_amd64.s:1571 +0x1 fp=0xc000048fe8 sp=0xc000048fe0 pc=0x468d21
created by github.com/flexgen-power/go_metrics/pkg/go_metrics.StartEvalsAndPubs
	/codebuild/output/src2111137953/src/go_metrics/pkg/go_metrics/eval.go:132 +0x50f

goroutine 1 [chan receive]:
github.com/flexgen-power/go_metrics/pkg/go_metrics.StartEvalsAndPubs(0x628bbb?)
	/codebuild/output/src2111137953/src/go_metrics/pkg/go_metrics/eval.go:204 +0x5fa
main.main()
	/codebuild/output/src2111137953/src/go_metrics/src/main.go:108 +0xb85

goroutine 19 [syscall]:
syscall.Syscall(0x13, 0x7, 0xc000043c18, 0x2)
	/usr/lib/golang/src/syscall/asm_linux_amd64.s:20 +0x5
fims.readv(0xc00026cd44?, {0xc000043c18?, 0x502e5f?, 0x61ba0f?})
	/usr/lib/golang/src/fims/fims.go:54 +0x4d
fims.(*Fims).recv_raw_dynamic(0xc00026cd38?, 0xc000043c88?)
	/usr/lib/golang/src/fims/fims.go:192 +0x5f
fims.(*Fims).ReceiveRawBufDynamic(0x781b80, 0xc000043e48)
	/usr/lib/golang/src/fims/fims.go:635 +0x98
fims.(*Fims).ReceiveChannelRaw(0x781b80, 0x0?)
	/usr/lib/golang/src/fims/fims.go:730 +0xe5
created by github.com/flexgen-power/go_metrics/pkg/go_metrics.StartEvalsAndPubs
	/codebuild/output/src2111137953/src/go_metrics/pkg/go_metrics/eval.go:42 +0x373

goroutine 20 [runnable]:
github.com/flexgen-power/go_metrics/pkg/go_metrics.StartEvalsAndPubs.func1()
	/codebuild/output/src2111137953/src/go_metrics/pkg/go_metrics/eval.go:48 +0x67
created by github.com/flexgen-power/go_metrics/pkg/go_metrics.StartEvalsAndPubs
	/codebuild/output/src2111137953/src/go_metrics/pkg/go_metrics/eval.go:46 +0x3d5

goroutine 21 [chan receive]:
github.com/flexgen-power/go_metrics/pkg/go_metrics.StartEvalsAndPubs.func2(0x0)
	/codebuild/output/src2111137953/src/go_metrics/pkg/go_metrics/eval.go:57 +0x85
created by github.com/flexgen-power/go_metrics/pkg/go_metrics.StartEvalsAndPubs
	/codebuild/output/src2111137953/src/go_metrics/pkg/go_metrics/eval.go:54 +0x425

goroutine 23 [chan receive]:
github.com/flexgen-power/go_metrics/pkg/go_metrics.StartEvalsAndPubs.func3(0x1)
	/codebuild/output/src2111137953/src/go_metrics/pkg/go_metrics/eval.go:135 +0xb0
created by github.com/flexgen-power/go_metrics/pkg/go_metrics.StartEvalsAndPubs
	/codebuild/output/src2111137953/src/go_metrics/pkg/go_metrics/eval.go:132 +0x50f
[1039.45s  ] [info    ] [signal_handler ] signal of type 2 caught.
[1039.45s  ] [info    ] [schedThread    ] shutting down
[1039.51s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"ess shutting down at 1038.503","severity":1}]
[1039.52s  ] [info    ] [fimsThread     ] fims shutting down
[1039.52s  ] [info    ] [main_test_new_e] threads done cleaning up ...
[1039.53s  ] [info    ] [~asset_manager ] asset manager running cleanup
[1039.53s  ] [info    ] [cleanup        ] STARTING for ess
[1039.53s  ] [info    ] [cleanup        ] STARTING for ess amap.size 83
[1039.53s  ] [info    ] [cleanup        ] Running (no delete) for ess item [ActivePowerSetpoint] 0x7f9b1829a6f0
[1039.53s  ] [info    ] [cleanup        ] Running (no delete) for ess item [AlarmCnt] 0x7f9b182a22c0
[1039.53s  ] [info    ] [cleanup        ] Running (no delete) for ess item [AlarmDestination] 0x7f9b18294a10
[1039.53s  ] [info    ] [cleanup        ] Running (no delete) for ess item [BatteryRackBalanceCoarse_ess] 0x7f9b18298f10
[1039.53s  ] [info    ] [cleanup        ] Running (no delete) for ess item [CalculateVar_HeartbeatWrite] 0x7f9b18788a40
[1039.53s  ] [info    ] [cleanup        ] Running (no delete) for ess item [CalculateVar_IsAlarming] 0x7f9b187516b0
[1039.53s  ] [info    ] [cleanup        ] Running (no delete) for ess item [CalculateVar_IsFaulted] 0x7f9b18752430
[1039.53s  ] [info    ] [cleanup        ] Running (no delete) for ess item [CloseContactors] 0x7f9b1830c4d0
[1039.53s  ] [info    ] [cleanup        ] Running (no delete) for ess item [CloseContactorsSuccess] 0x7f9b183273f0
[1039.53s  ] [info    ] [cleanup        ] Running (no delete) for ess item [CloseContactors_ALARM] 0x7f9b18334560
[1039.53s  ] [info    ] [cleanup        ] Running (no delete) for ess item [CloseContactors_bms] 0x7f9b187497b0
[1039.54s  ] [info    ] [cleanup        ] Running (no delete) for ess item [DCClosed] 0x7f9b18299fa0
[1039.54s  ] [info    ] [cleanup        ] Running (no delete) for ess item [DCVoltage] 0x7f9b18299ae0
[1039.54s  ] [info    ] [cleanup        ] Running (no delete) for ess item [FaultCnt] 0x7f9b1829dab0
[1039.54s  ] [info    ] [cleanup        ] Running (no delete) for ess item [FaultDestination] 0x7f9b18295130
[1039.54s  ] [info    ] [cleanup        ] Running (no delete) for ess item [HandleCmd_CloseContactors] 0x7f9b18784f20
[1039.54s  ] [info    ] [cleanup        ] Running (no delete) for ess item [HandleCmd_OpenContactors] 0x7f9b18835d70
[1039.54s  ] [info    ] [cleanup        ] Running (no delete) for ess item [HandleCmd_Start] 0x7f9b1877fdf0
[1039.54s  ] [info    ] [cleanup        ] Running (no delete) for ess item [HandleCmd_Stop] 0x7f9b188558c0
[1039.54s  ] [info    ] [cleanup        ] Running (no delete) for ess item [HandleCmd_VerifyCloseContactors] 0x7f9b1877d5b0
[1039.54s  ] [info    ] [cleanup        ] Running (no delete) for ess item [HandleCmd_VerifyOpenContactors] 0x7f9b18850a90
[1039.54s  ] [info    ] [cleanup        ] Running (no delete) for ess item [HandleCmd_VerifyStart] 0x7f9b1887deb0
[1039.54s  ] [info    ] [cleanup        ] Running (no delete) for ess item [HandleCmd_VerifyStop] 0x7f9b18870660
[1039.54s  ] [info    ] [cleanup        ] Running (no delete) for ess item [HandlePowerCmd_ess] 0x7f9b185baa20
[1039.54s  ] [info    ] [cleanup        ] Running (no delete) for ess item [HeartbeatWrite] 0x7f9b182a5ee0
[1039.55s  ] [info    ] [cleanup        ] Running (no delete) for ess item [IsAlarming] 0x7f9b182a72c0
[1039.55s  ] [info    ] [cleanup        ] Running (no delete) for ess item [IsFaulted] 0x7f9b182a7f30
[1039.55s  ] [info    ] [cleanup        ] Running (no delete) for ess item [IsFaulted_BMS] 0x7f9b1829a1d0
[1039.55s  ] [info    ] [cleanup        ] Running (no delete) for ess item [IsFaulted_PCS] 0x7f9b1829a400
[1039.55s  ] [info    ] [cleanup        ] Running (no delete) for ess item [MaxApparentPower] 0x7f9b185bc2a0
[1039.55s  ] [info    ] [cleanup        ] Running (no delete) for ess item [MaxChargePower] 0x7f9b185baf90
[1039.55s  ] [info    ] [cleanup        ] Running (no delete) for ess item [MaxDischargePower] 0x7f9b185bb660
[1039.55s  ] [info    ] [cleanup        ] Running (no delete) for ess item [MaxReactivePower] 0x7f9b185bbc80
[1039.55s  ] [info    ] [cleanup        ] Running (no delete) for ess item [MonitorVarAlarm] 0x7f9b18753130
[1039.55s  ] [info    ] [cleanup        ] Running (no delete) for ess item [MonitorVarFault] 0x7f9b18753790
[1039.55s  ] [info    ] [cleanup        ] Running (no delete) for ess item [NumRacks] 0x7f9b18299890
[1039.55s  ] [info    ] [cleanup        ] Running (no delete) for ess item [OpenContactors] 0x7f9b18315820
[1039.55s  ] [info    ] [cleanup        ] Running (no delete) for ess item [OpenContactorsSuccess] 0x7f9b18329670
[1039.56s  ] [info    ] [cleanup        ] Running (no delete) for ess item [OpenContactors_ALARM] 0x7f9b18341300
[1039.56s  ] [info    ] [cleanup        ] Running (no delete) for ess item [OpenContactors_bms] 0x7f9b18852d00
[1039.57s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SOC] 0x7f9b18299d70
[1039.57s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SendBms] 0x0
[1039.57s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SendPcs] 0x0
[1039.58s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SharedHandleCmdProcess_CloseContactors_bms] 0x7f9b187858a0
[1039.58s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SharedHandleCmdProcess_OpenContactors_bms] 0x7f9b1887cdf0
[1039.58s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SharedHandleCmdProcess_Start_pcs] 0x7f9b188340e0
[1039.58s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SharedHandleCmdProcess_Stop_pcs] 0x7f9b18bca1e0
[1039.59s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SiteBMSContactorControl_ess] 0x7f9b1829bc70
[1039.59s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SitePCSStatusControl_ess] 0x7f9b1829d440
[1039.59s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SiteRunCmd_ess] 0x7f9b1829eb70
[1039.59s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SiteRunCmd_maintModeBms] 0x7f9b1829f0c0
[1039.59s  ] [info    ] [cleanup        ] Running (no delete) for ess item [SiteRunCmd_maintModePcs] 0x7f9b1829f6d0
[1039.61s  ] [info    ] [cleanup        ] Running (no delete) for ess item [Start] 0x7f9b1860e710
[1039.61s  ] [info    ] [cleanup        ] Running (no delete) for ess item [StartPCS_pcs] 0x7f9b1877f1e0
[1039.61s  ] [info    ] [cleanup        ] Running (no delete) for ess item [StartSuccess] 0x7f9b1863aa70
[1039.61s  ] [info    ] [cleanup        ] Running (no delete) for ess item [Start_ALARM] 0x7f9b18664bb0
[1039.61s  ] [info    ] [cleanup        ] Running (no delete) for ess item [Stop] 0x7f9b1860f3a0
[1039.62s  ] [info    ] [cleanup        ] Running (no delete) for ess item [StopPCS_pcs] 0x7f9b18bc48c0
