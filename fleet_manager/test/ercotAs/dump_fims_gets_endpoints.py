#!/bin/python3
from asyncio.subprocess import PIPE
from logging import captureWarnings
import sys
import subprocess

#TO DO: update endpoints and test scripts
baseUri = "/fleet/features/ercotAs/"
sites = [
    "hoth/",
    "mustafar/",
    "tatooine/",
]
endpoints = [
    "baseload_cmd_mw",
    "baseload_cmd_max_limit_mw",
    "baseload_cmd_min_limit_mw",
    "gen_52m_status",
    "gen_basepoint_actual",
    "gen_basepoint_manual",
    "gen_basepoint_override",
    "gen_basepoint_select",
    "gen_basepoint_deviation",
    "gen_emergency_down_ramp_rate_actual",
    "gen_emergency_down_ramp_rate_manual",
    "gen_emergency_down_ramp_rate_override",
    "gen_emergency_down_ramp_rate_select",
    "gen_emergency_up_ramp_rate_actual",
    "gen_emergency_up_ramp_rate_manual",
    "gen_emergency_up_ramp_rate_override",
    "gen_emergency_up_ramp_rate_select",
    "gen_frrs_down_participation",
    "gen_frrs_down_requirement_actual",
    "gen_frrs_down_requirement_manual",
    "gen_frrs_down_requirement_override",
    "gen_frrs_down_requirement_select",
    "gen_frrs_down_responsibility_actual",
    "gen_frrs_down_responsibility_manual",
    "gen_frrs_down_responsibility_override",
    "gen_frrs_up_participation",
    "gen_frrs_up_responsibility_select",
    "gen_frrs_up_requirement_actual",
    "gen_frrs_up_requirement_manual",
    "gen_frrs_up_requirement_override",
    "gen_frrs_up_requirement_select",
    "gen_frrs_up_responsibility_actual",
    "gen_frrs_up_responsibility_manual",
    "gen_frrs_up_responsibility_override",
    "gen_frrs_up_responsibility_select",
    "gen_max_charge_mw_actual",
    "gen_max_charge_mw_manual",
    "gen_max_charge_mw_override",
    "gen_max_charge_mw_select",
    "gen_max_discharge_mw_actual",
    "gen_max_discharge_mw_manual",
    "gen_max_discharge_mw_override",
    "gen_max_discharge_mw_select",
    "gen_non_spin_requirement_actual",
    "gen_non_spin_requirement_manual",
    "gen_non_spin_requirement_override",
    "gen_non_spin_requirement_select",
    "gen_non_spin_responsibility_actual",
    "gen_non_spin_responsibility_manual",
    "gen_non_spin_responsibility_override",
    "gen_non_spin_responsibility_select",
    "gen_non_spin_scheduled",
    "gen_normal_down_ramp_rate_actual",
    "gen_normal_down_ramp_rate_manual",
    "gen_normal_down_ramp_rate_override",
    "gen_normal_down_ramp_rate_select",
    "gen_normal_up_ramp_rate_actual",
    "gen_normal_up_ramp_rate_manual",
    "gen_normal_up_ramp_rate_override",
    "gen_normal_up_ramp_rate_select",
    "gen_pseudo_switch_status",
    "gen_reg_down_participation",
    "gen_reg_down_requirement_actual",
    "gen_reg_down_requirement_manual",
    "gen_reg_down_requirement_override",
    "gen_reg_down_requirement_select",
    "gen_reg_down_responsibility_actual",
    "gen_reg_down_responsibility_manual",
    "gen_reg_down_responsibility_override",
    "gen_reg_up_participation",
    "gen_reg_up_responsibility_select",
    "gen_reg_up_requirement_actual",
    "gen_reg_up_requirement_manual",
    "gen_reg_up_requirement_override",
    "gen_reg_up_requirement_select",
    "gen_reg_up_responsibility_actual",
    "gen_reg_up_responsibility_manual",
    "gen_reg_up_responsibility_override",
    "gen_reg_up_responsibility_select",
    "gen_resource_status_actual",
    "gen_resource_status_manual",
    "gen_resource_status_override",
    "gen_resource_status_select",
    "gen_responsive_reserve_requirement_actual",
    "gen_responsive_reserve_requirement_manual",
    "gen_responsive_reserve_requirement_override",
    "gen_responsive_reserve_requirement_select",
    "gen_responsive_reserve_responsibility_actual",
    "gen_responsive_reserve_responsibility_manual",
    "gen_responsive_reserve_responsibility_override",
    "gen_responsive_reserve_responsibility_select",
    "gen_responsive_reserve_scheduled",
    "gen_updated_basepoint_actual",
    "gen_updated_basepoint_manual",
    "gen_updated_basepoint_override",
    "gen_updated_basepoint_select",
    "load_basepoint_actual",
    "load_basepoint_manual",
    "load_basepoint_override",
    "load_basepoint_select",
    "load_basepoint_deviation",
    "load_emergency_down_ramp_rate_actual",
    "load_emergency_down_ramp_rate_manual",
    "load_emergency_down_ramp_rate_override",
    "load_emergency_down_ramp_rate_select",
    "load_emergency_up_ramp_rate_actual",
    "load_emergency_up_ramp_rate_manual",
    "load_emergency_up_ramp_rate_override",
    "load_emergency_up_ramp_rate_select",
    "load_frrs_down_participation",
    "load_frrs_down_requirement_actual",
    "load_frrs_down_requirement_manual",
    "load_frrs_down_requirement_override",
    "load_frrs_down_requirement_select",
    "load_frrs_down_responsibility_actual",
    "load_frrs_down_responsibility_manual",
    "load_frrs_down_responsibility_override",
    "load_frrs_up_participation",
    "load_frrs_up_responsibility_select",
    "load_frrs_up_requirement_actual",
    "load_frrs_up_requirement_manual",
    "load_frrs_up_requirement_override",
    "load_frrs_up_requirement_select",
    "load_frrs_up_responsibility_actual",
    "load_frrs_up_responsibility_manual",
    "load_frrs_up_responsibility_override",
    "load_frrs_up_responsibility_select",
    "load_non_spin_requirement_actual",
    "load_non_spin_requirement_manual",
    "load_non_spin_requirement_override",
    "load_non_spin_requirement_select",
    "load_non_spin_responsibility_actual",
    "load_non_spin_responsibility_manual",
    "load_non_spin_responsibility_override",
    "load_non_spin_responsibility_select",
    "load_non_spin_scheduled",
    "load_normal_down_ramp_rate_actual",
    "load_normal_down_ramp_rate_manual",
    "load_normal_down_ramp_rate_override",
    "load_normal_down_ramp_rate_select",
    "load_normal_up_ramp_rate_actual",
    "load_normal_up_ramp_rate_manual",
    "load_normal_up_ramp_rate_override",
    "load_normal_up_ramp_rate_select",
    "load_pseudo_switch_status_actual",
    "load_pseudo_switch_status_manual",
    "load_pseudo_switch_status_override",
    "load_pseudo_switch_status_select",
    "load_reg_down_participation",
    "load_reg_down_requirement_actual",
    "load_reg_down_requirement_manual",
    "load_reg_down_requirement_override",
    "load_reg_down_requirement_select",
    "load_reg_down_responsibility_actual",
    "load_reg_down_responsibility_manual",
    "load_reg_down_responsibility_override",
    "load_reg_up_participation",
    "load_reg_up_responsibility_select",
    "load_reg_up_requirement_actual",
    "load_reg_up_requirement_manual",
    "load_reg_up_requirement_override",
    "load_reg_up_requirement_select",
    "load_reg_up_responsibility_actual",
    "load_reg_up_responsibility_manual",
    "load_reg_up_responsibility_override",
    "load_reg_up_responsibility_select",
    "load_resource_status_actual",
    "load_resource_status_manual",
    "load_resource_status_override",
    "load_resource_status_select",
    "load_responsive_reserve_requirement_actual",
    "load_responsive_reserve_requirement_manual",
    "load_responsive_reserve_requirement_override",
    "load_responsive_reserve_requirement_select",
    "load_responsive_reserve_responsibility_actual",
    "load_responsive_reserve_responsibility_manual",
    "load_responsive_reserve_responsibility_override",
    "load_responsive_reserve_responsibility_select",
    "load_responsive_reserve_scheduled",
    "load_updated_basepoint_actual",
    "load_updated_basepoint_manual",
    "load_updated_basepoint_override",
    "load_updated_basepoint_select",
    "inactive_cmd_max_limit_mw",
    "inactive_cmd_min_limit_mw",
    "PFR_OF_power_command",
    "PFR_UF_power_command",
    "updated_basepoint_sced"
]
# SETs
print("----------SETS----------\n")
# Loop for all desired sites uris
for siteUri in sites:
    floatSet = 0.0
    boolSet = "true"
    intSet = 0
    # Loop for all desired endpoints
    for endpoint in endpoints:
        uri = baseUri+siteUri+endpoint
        if endpoint.endswith("_override"):
            subprocess.run(["fims_send", "-m", "set", "-u", uri, boolSet])
            print(f"Sent {boolSet} to site {siteUri}'s {endpoint}")
        elif endpoint.endswith("_resource_status_actual") or endpoint.endswith("_resource_status_manual"):
            intSet = intSet + 1
            subprocess.run(["fims_send", "-m", "set", "-u", uri, str(intSet)])
            print(f"Sent {intSet} to site {siteUri}'s {endpoint}")
        else:
            floatSet = floatSet + .1
            subprocess.run(["fims_send", "-m", "set", "-u", uri, str(floatSet)])
            print(f"Sent {floatSet} to site {siteUri}'s {endpoint}")

# GETs
print("----------GETS----------\n")
# Loop for all desired sites uris
for siteUri in sites:
    # Loop for all desired endpoints
    for endpoint in endpoints:
        uri = baseUri+siteUri+endpoint            
        value = subprocess.run(["fims_send", "-m", "get", "-u", uri, "-r", "/me"],stdout=PIPE)
        print(f"value from {uri} is {value.stdout}")