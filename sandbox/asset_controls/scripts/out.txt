27206 mongod --config /etc/mongod.conf
27228 dbi
ess_controller
Loading catl_bms_init.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_manager.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_manager_client_interface.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_manager_controls.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_manager_faults.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_manager_server_interface.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_manager_ui.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_rack.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_rack_client_interface.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_rack_controls.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_rack_faults.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_rack_server_interface.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_rack_ui.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_virtual_manager.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_virtual_manager_client_interface.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_virtual_manager_controls.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_virtual_manager_faults.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_virtual_manager_server_interface.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading catl_bms_virtual_manager_ui.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/bms to database...
Loading ess_controller.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/ess to database...
Loading ess_controller_faults.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/ess to database...
Loading ess_controller_server_interface.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/ess to database...
Loading ess_controller_ui.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/ess to database...
Loading ess_final.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/ess to database...
Loading ess_init.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/ess to database...
Loading ess_file.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller to database...
Loading sungrow_pcs_init.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/pcs to database...
Loading sungrow_pcs_manager.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/pcs to database...
Loading sungrow_pcs_manager_client_interface.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/pcs to database...
Loading sungrow_pcs_manager_controls.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/pcs to database...
Loading sungrow_pcs_manager_faults.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/pcs to database...
Loading sungrow_pcs_manager_server_interface.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/pcs to database...
Loading sungrow_pcs_manager_ui.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/pcs to database...
Loading sungrow_pcs_virtual_manager.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/pcs to database...
Loading sungrow_pcs_virtual_manager_client_interface.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/pcs to database...
Loading sungrow_pcs_virtual_manager_controls.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/pcs to database...
Loading sungrow_pcs_virtual_manager_faults.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/pcs to database...
Loading sungrow_pcs_virtual_manager_server_interface.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/pcs to database...
Loading sungrow_pcs_virtual_manager_ui.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/ess_controller/pcs to database...
web_ui
Loading assets.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/web_ui to database...
Loading dashboard.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/web_ui to database...
Loading layout.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/web_ui to database...
Loading web_ui.json from /home/docker/hybridos/sandbox/asset_controls/config/new_configs/ess-controller/config/web_ui to database...
psm
loading /home/docker/hybridos/sandbox/asset_controls/config/new_configs/psm/config/psm/psm.json to dbi...
PSM: 2024/01/23 20:19:21 Configuring
PSM: 2024/01/23 20:19:21 Attempting to read configurations from dbi

2024-01-23T20:19:21Z  [GO_METRICS] | STARTUP |
 	Caller: logger.go:190
 	Message: File Logger startup!


2024-01-23T20:19:21Z  [GO_METRICS] | INFO  |
 	Caller: main.go:70
 	Message: Starting go_metrics


2024-01-23T20:19:21Z  [GO_METRICS] | INFO  |
 	Caller: main.go:79
 	Message: go_metrics 
	Tag:11.3.0.alpha.3.component 
	Version:310
	Commit: 5e05914


PSM: 2024/01/23 20:19:21 Received psm asset tree
PSM: 2024/01/23 20:19:21 Received default configs
PSM: 2024/01/23 20:19:21 Received update config psm_bms_updt
/components/catl_ems_bms_rw
1000

2024-01-23T20:19:21Z  [GO_METRICS] | WARN  |
 	Caller: initialization.go:1638
 	Message: Error unmarshaling json file: 
[] echo > {} 1 > {} echo > selector_status: default value for echo input register 'selector_status' was not specified and echo object does not contain field 'null_value_default' to override the null register value; setting default value of register to 0 (warning only)


{
	"/components/catl_bms_ems_r": {
		"Forward": {
			"bms_heartbeat": {
				"Uri": "/components/bms_1",
				"Register": "heart_heartbeat"
			},
			"bms_max_charge_allowed": {
				"Uri": "/components/bms_1",
				"Register": "pmax"
			},
			"bms_max_discharge_allowed": {
				"Uri": "/components/bms_1",
				"Register": "pmax"
			},
			"bms_poweron": {
				"Uri": "/components/bms_1",
				"Register": "status_0_value"
			},
			"bms_remain_charge_energy": {
				"Uri": "/components/bms_1",
				"Register": "echarge"
			},
			"bms_remain_discharge_energy": {
				"Uri": "/components/bms_1",
				"Register": "edischarge"
			},
			"num_hv_subsystem": {
				"Uri": "/components/bms_1",
				"Register": "numracks"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"bms_heartbeat": "heart_heartbeat",
				"bms_max_charge_allowed": "pmax",
				"bms_max_discharge_allowed": "pmax",
				"bms_poweron": "status_0_value",
				"bms_remain_charge_energy": "echarge",
				"bms_remain_discharge_energy": "edischarge",
				"num_hv_subsystem": "numracks"
			}
		}
	},
	"/components/catl_ems_bms_rw": {
		"Forward": {
			"ems_cmd": {
				"Uri": "/components/bms_1",
				"Register": "ctrlword1"
			},
			"ems_rtc_day": {
				"Uri": "/components/bms_1",
				"Register": "heart_day"
			},
			"ems_rtc_hour": {
				"Uri": "/components/bms_1",
				"Register": "heart_hour"
			},
			"ems_rtc_minute": {
				"Uri": "/components/bms_1",
				"Register": "heart_minute"
			},
			"ems_rtc_month": {
				"Uri": "/components/bms_1",
				"Register": "heart_month"
			},
			"ems_rtc_second": {
				"Uri": "/components/bms_1",
				"Register": "heart_second"
			},
			"ems_rtc_year": {
				"Uri": "/components/bms_1",
				"Register": "heart_year"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"ems_cmd": "ctrlword1",
				"ems_rtc_day": "heart_day",
				"ems_rtc_hour": "heart_hour",
				"ems_rtc_minute": "heart_minute",
				"ems_rtc_month": "heart_month",
				"ems_rtc_second": "heart_second",
				"ems_rtc_year": "heart_year"
			}
		}
	},
	"/components/catl_mbmu_stat_r": {
		"Forward": {},
		"Backward": {}
	},
	"/components/catl_mbmu_sum_r": {
		"Forward": {},
		"Backward": {}
	},
	"/components/catl_mbmu_summary_r": {
		"Forward": {
			"mbmu_avg_cell_temperature": {
				"Uri": "/components/bms_1",
				"Register": "avgcelltemp"
			},
			"mbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "avgcellvolt"
			},
			"mbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "idc_value"
			},
			"mbmu_max_cell_temperature": {
				"Uri": "/components/bms_1",
				"Register": "maxcelltemp_value"
			},
			"mbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "maxcellvolt_value"
			},
			"mbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "icharge"
			},
			"mbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "idischarge"
			},
			"mbmu_min_cell_temperature": {
				"Uri": "/components/bms_1",
				"Register": "mincelltemp_value"
			},
			"mbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "mincellvolt_value"
			},
			"mbmu_power": {
				"Uri": "/components/bms_1",
				"Register": "p"
			},
			"mbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "soc_value"
			},
			"mbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "soh"
			},
			"mbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "vdc_value"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"mbmu_avg_cell_temperature": "avgcelltemp",
				"mbmu_avg_cell_voltage": "avgcellvolt",
				"mbmu_current": "idc_value",
				"mbmu_max_cell_temperature": "maxcelltemp_value",
				"mbmu_max_cell_voltage": "maxcellvolt_value",
				"mbmu_max_charge_current": "icharge",
				"mbmu_max_discharge_current": "idischarge",
				"mbmu_min_cell_temperature": "mincelltemp_value",
				"mbmu_min_cell_voltage": "mincellvolt_value",
				"mbmu_power": "p",
				"mbmu_soc": "soc_value",
				"mbmu_soh": "soh",
				"mbmu_voltage": "vdc_value"
			}
		}
	},
	"/components/catl_rack_1": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_0_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_0_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_0_avgcellvolt",
				"sbmu_current": "sbmu_0_idc_value",
				"sbmu_master_negative": "sbmu_0_dccontactor",
				"sbmu_master_positive": "sbmu_0_dccontactor",
				"sbmu_max_cell_temp": "sbmu_0_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_0_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_0_icharge",
				"sbmu_max_discharge_current": "sbmu_0_idischarge",
				"sbmu_min_cell_temp": "sbmu_0_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_0_mincellvolt_value",
				"sbmu_soc": "sbmu_0_soc_value",
				"sbmu_soh": "sbmu_0_soh",
				"sbmu_voltage": "sbmu_0_vdc"
			}
		}
	},
	"/components/catl_rack_2": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_1_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_1_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_1_avgcellvolt",
				"sbmu_current": "sbmu_1_idc_value",
				"sbmu_master_negative": "sbmu_1_dccontactor",
				"sbmu_master_positive": "sbmu_1_dccontactor",
				"sbmu_max_cell_temp": "sbmu_1_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_1_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_1_icharge",
				"sbmu_max_discharge_current": "sbmu_1_idischarge",
				"sbmu_min_cell_temp": "sbmu_1_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_1_mincellvolt_value",
				"sbmu_soc": "sbmu_1_soc_value",
				"sbmu_soh": "sbmu_1_soh",
				"sbmu_voltage": "sbmu_1_vdc"
			}
		}
	},
	"/components/catl_rack_3": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_2_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_2_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_2_avgcellvolt",
				"sbmu_current": "sbmu_2_idc_value",
				"sbmu_master_negative": "sbmu_2_dccontactor",
				"sbmu_master_positive": "sbmu_2_dccontactor",
				"sbmu_max_cell_temp": "sbmu_2_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_2_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_2_icharge",
				"sbmu_max_discharge_current": "sbmu_2_idischarge",
				"sbmu_min_cell_temp": "sbmu_2_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_2_mincellvolt_value",
				"sbmu_soc": "sbmu_2_soc_value",
				"sbmu_soh": "sbmu_2_soh",
				"sbmu_voltage": "sbmu_2_vdc"
			}
		}
	},
	"/components/catl_rack_4": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_3_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_3_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_3_avgcellvolt",
				"sbmu_current": "sbmu_3_idc_value",
				"sbmu_master_negative": "sbmu_3_dccontactor",
				"sbmu_master_positive": "sbmu_3_dccontactor",
				"sbmu_max_cell_temp": "sbmu_3_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_3_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_3_icharge",
				"sbmu_max_discharge_current": "sbmu_3_idischarge",
				"sbmu_min_cell_temp": "sbmu_3_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_3_mincellvolt_value",
				"sbmu_soc": "sbmu_3_soc_value",
				"sbmu_soh": "sbmu_3_soh",
				"sbmu_voltage": "sbmu_3_vdc"
			}
		}
	},
	"/components/catl_rack_5": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_4_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_4_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_4_avgcellvolt",
				"sbmu_current": "sbmu_4_idc_value",
				"sbmu_master_negative": "sbmu_4_dccontactor",
				"sbmu_master_positive": "sbmu_4_dccontactor",
				"sbmu_max_cell_temp": "sbmu_4_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_4_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_4_icharge",
				"sbmu_max_discharge_current": "sbmu_4_idischarge",
				"sbmu_min_cell_temp": "sbmu_4_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_4_mincellvolt_value",
				"sbmu_soc": "sbmu_4_soc_value",
				"sbmu_soh": "sbmu_4_soh",
				"sbmu_voltage": "sbmu_4_vdc"
			}
		}
	},
	"/components/catl_rack_6": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_5_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_5_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_5_avgcellvolt",
				"sbmu_current": "sbmu_5_idc_value",
				"sbmu_master_negative": "sbmu_5_dccontactor",
				"sbmu_master_positive": "sbmu_5_dccontactor",
				"sbmu_max_cell_temp": "sbmu_5_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_5_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_5_icharge",
				"sbmu_max_discharge_current": "sbmu_5_idischarge",
				"sbmu_min_cell_temp": "sbmu_5_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_5_mincellvolt_value",
				"sbmu_soc": "sbmu_5_soc_value",
				"sbmu_soh": "sbmu_5_soh",
				"sbmu_voltage": "sbmu_5_vdc"
			}
		}
	},
	"/components/catl_rack_7": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_6_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_6_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_6_avgcellvolt",
				"sbmu_current": "sbmu_6_idc_value",
				"sbmu_master_negative": "sbmu_6_dccontactor",
				"sbmu_master_positive": "sbmu_6_dccontactor",
				"sbmu_max_cell_temp": "sbmu_6_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_6_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_6_icharge",
				"sbmu_max_discharge_current": "sbmu_6_idischarge",
				"sbmu_min_cell_temp": "sbmu_6_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_6_mincellvolt_value",
				"sbmu_soc": "sbmu_6_soc_value",
				"sbmu_soh": "sbmu_6_soh",
				"sbmu_voltage": "sbmu_6_vdc"
			}
		}
	},
	"/components/catl_rack_8": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_7_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_7_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_7_avgcellvolt",
				"sbmu_current": "sbmu_7_idc_value",
				"sbmu_master_negative": "sbmu_7_dccontactor",
				"sbmu_master_positive": "sbmu_7_dccontactor",
				"sbmu_max_cell_temp": "sbmu_7_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_7_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_7_icharge",
				"sbmu_max_discharge_current": "sbmu_7_idischarge",
				"sbmu_min_cell_temp": "sbmu_7_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_7_mincellvolt_value",
				"sbmu_soc": "sbmu_7_soc_value",
				"sbmu_soh": "sbmu_7_soh",
				"sbmu_voltage": "sbmu_7_vdc"
			}
		}
	},
	"/components/catl_rack_9": {
		"Forward": {
			"sbmu_avg_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_avgcelltemp"
			},
			"sbmu_avg_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_avgcellvolt"
			},
			"sbmu_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_idc_value"
			},
			"sbmu_master_negative": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_dccontactor"
			},
			"sbmu_master_positive": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_dccontactor"
			},
			"sbmu_max_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_maxcelltemp_value"
			},
			"sbmu_max_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_maxcellvolt_value"
			},
			"sbmu_max_charge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_icharge"
			},
			"sbmu_max_discharge_current": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_idischarge"
			},
			"sbmu_min_cell_temp": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_mincelltemp_value"
			},
			"sbmu_min_cell_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_mincellvolt_value"
			},
			"sbmu_soc": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_soc_value"
			},
			"sbmu_soh": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_soh"
			},
			"sbmu_voltage": {
				"Uri": "/components/bms_1",
				"Register": "sbmu_8_vdc"
			}
		},
		"Backward": {
			"/components/bms_1": {
				"sbmu_avg_cell_temp": "sbmu_8_avgcelltemp",
				"sbmu_avg_cell_voltage": "sbmu_8_avgcellvolt",
				"sbmu_current": "sbmu_8_idc_value",
				"sbmu_master_negative": "sbmu_8_dccontactor",
				"sbmu_master_positive": "sbmu_8_dccontactor",
				"sbmu_max_cell_temp": "sbmu_8_maxcelltemp_value",
				"sbmu_max_cell_voltage": "sbmu_8_maxcellvolt_value",
				"sbmu_max_charge_current": "sbmu_8_icharge",
				"sbmu_max_discharge_current": "sbmu_8_idischarge",
				"sbmu_min_cell_temp": "sbmu_8_mincelltemp_value",
				"sbmu_min_cell_voltage": "sbmu_8_mincellvolt_value",
				"sbmu_soc": "sbmu_8_soc_value",
				"sbmu_soh": "sbmu_8_soh",
				"sbmu_voltage": "sbmu_8_vdc"
			}
		}
	}
}

2024-01-23T20:19:21Z  [GO_METRICS] | INFO  |
 	Caller: eval.go:38
 	Message: Subscribed to:
		/go_metrics
		/components/pcs_1
		/components/twins_sel_735
		/components/bms_1
		/components/pcs_registers_fast
		/components/pcs_registers_slow


launching last ess ess_file with configs...
[0.000691365s] [info    ] [main_test_new_e]  -f option -> setup FlexCfile [ess_file]

[0.0036384s] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"Config":	"ess_init",
	"EssName":	"ess",
	"Subs":	":/assets:/site:/components:"
}].
tsc_ghz:2.8031989794445447
rdns_latency: 21 tmp: 2877378438512871140
[1.01525s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [ess_init]
[1.01565s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [ess_init]
[1.016s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [ess]
[1.0163s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [ess]
[1.0166s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [:/assets:/site:/components:]
[1.01686s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [:/assets:/site:/components:]
[1.01713s  ] [info    ] [scheduler      ] hello scheduler [essSched]
[1.10322s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [ess]
[1.10398s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [ess]
[1.10468s  ] [info    ] [setFunc        ] Note: adding aname [ess] to funMap av 0x7f57eda66040
[1.10525s  ] [info    ] [setFunc        ] Note: adding aname [bms] to funMap av 0x7f57eda66040
[1.10561s  ] [info    ] [setFunc        ] Note: adding aname [pcs] to funMap av 0x7f57eda66040
[1.10653s  ] [info    ] [setFunc        ] Note: adding aname [flex] to funMap av 0x7f57edacdb00
[1.10708s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [decode value bits  into a number  of different values]
[1.10738s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [decode value bits  into a number  of different values]
[1.10777s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [set or clear a bit in an output var]
[1.10819s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [set or clear a bit in an output var]
[1.10865s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [decode a value into a number of different values]
[1.10906s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [decode a value into a number of different values]
[1.10984s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [forward a value to a different uri]
[1.11026s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [forward a value to a different uri]
[1.11096s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [set limits on a value]
[1.11138s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [set limits on a value]
[1.11181s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [run a func using an assetVar as an argument]
[1.11212s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [run a func using an assetVar as an argument]
[1.11257s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [use a bitmap to set the output variable]
[1.11292s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [use a bitmap to set the output variable]
[1.11341s  ] [info    ] [showVecList    ] [0] :: [/ess]
[1.11379s  ] [info    ] [showVecList    ] [1] :: [/assets]
[1.11418s  ] [info    ] [showVecList    ] [2] :: [/site]
[1.11471s  ] [info    ] [showVecList    ] [3] :: [/components]
[1.11516s  ] [info    ] [getVecListbyNam] no entry in vecs for [Subs]
[1.11563s  ] [info    ] [main_test_new_e] recovered  [ess]  Subs [0x0] len  [0]
[1.11621s  ] [info    ] [main_test_new_e]  flex_man >> No Subs found in flex config
[1.11679s  ] [info    ] [fimsSetup      ] FIMSSETUP size of subs = 4
[1.11761s  ] [info    ] [fimsSetup      ] name FlexSched connected to FIMS at attempt 0
[1.11879s  ] [info    ] [fimsSetup      ] name FlexSched subscribed to FIMS [true] connected [true]
[1.11931s  ] [info    ] [main_test_new_e]  flex_man >> p_fims [0x1c8c2b0]  sched [0x1c8c2b0]
[1.12098s  ] [info    ] [write_cjson    ] Wrote 4793 bytes to file /var/log/ess_controller/run_configs/ess_after_assets.json
 main_test_new_ess >> aV [/config/system:ess]
[1.12281s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"ess starting  at 0.091","severity":1}]
[1.12331s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [ACO-170-Implement-Active-Power-Balancing-Layer-of-BRB-Algorithm]
[1.12369s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [ACO-170-Implement-Active-Power-Balancing-Layer-of-BRB-Algorithm]
[1.12406s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [309125f]
[1.1246s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [309125f]
[1.12536s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [v11.3.0-beta.4-412]
[1.12591s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [v11.3.0-beta.4-412]
[1.12707s  ] [info    ] [runConfig      ]  requesting cfile [ess_init] 
[1.12759s  ] [info    ] [requestCfile   ] Getting from DBI ess_init
[1.12819s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [ess_config]
[1.12848s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [ess_config]
[1.12916s  ] [info    ] [handleCfile    ]  Running Loader 
[1.12987s  ] [info    ] [setupControls  ] Created Fims var [/sched/fims:dummy]
[1.13015s  ] [info    ] [setupControls  ] Created Runvar var [/control/ess:runTime]
[1.13044s  ] [info    ] [setupControls  ] Created Stop var [/control/ess:stopTime]
[1.13092s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_SchedPerf]
[1.13122s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_SchedPerf]
[1.13188s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:ess_init]  am at start [ess]
[1.13236s  ] [info    ] [configure_vmapS] process file seeking header stuff am [ess] ai [no ai]
[1.13293s  ] [info    ] [configure_vmapS] body: {"/config/load":{"ess_controller":{"aname":"ess","file":"ess_controller","final":"ess_final","new_options":[{"aname":"ess","file":"ess_controller_server_interface","pname":"ess"},{"aname":"ess","file":"ess_controller_ui","pname":"ess"},{"aname":"ess","file":"ess_controller_faults","pname":"ess"},{"aname":"bms","load":"catl_bms_init","pname":"ess"},{"aname":"pcs","load":"sungrow_pcs_init","pname":"ess"}],"note1":"Loads ess_controller first. Then, configs defined in new_options, if any, are loaded next","note2":"Once all files are loaded, then ess_final is loaded","value":false}}}
[1.13338s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[1.13383s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ess_controller":	{
		"aname":	"ess",
		"file":	"ess_controller",
		"final":	"ess_final",
		"new_options":	[{
				"aname":	"ess",
				"file":	"ess_controller_server_interface",
				"pname":	"ess"
			}, {
				"aname":	"ess",
				"file":	"ess_controller_ui",
				"pname":	"ess"
			}, {
				"aname":	"ess",
				"file":	"ess_controller_faults",
				"pname":	"ess"
			}, {
				"aname":	"bms",
				"load":	"catl_bms_init",
				"pname":	"ess"
			}, {
				"aname":	"pcs",
				"load":	"sungrow_pcs_init",
				"pname":	"ess"
			}],
		"note1":	"Loads ess_controller first. Then, configs defined in new_options, if any, are loaded next",
		"note2":	"Once all files are loaded, then ess_final is loaded",
		"value":	false
	}
}].
[1.13424s  ] [info    ] [schedThread    ] this is a replacement schedItem 0x1cadb60 id ess_config uri /config/control:ess_config
[1.13449s  ] [info    ] [schedThread    ] schedItem deleted, seting repTime to 0.0
[2.14503s  ] [info    ] [runConfig      ]  requesting cfile [ess_controller] 
[2.14599s  ] [info    ] [requestCfile   ] Getting from DBI ess_controller
[2.15266s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:ess_controller]  am at start [ess]
[2.15373s  ] [info    ] [configure_vmapS] process file seeking header stuff am [ess] ai [no ai]
[2.1543s   ] [info    ] [configure_vmapS] body: {"/config/ess":{"AlarmDestination":"/assets/ess/ess_1:alarms","EventSourceFormat":{"value":"assetName"},"FaultDestination":"/assets/ess/ess_1:faults","LogDir":"/var/log/ess_controller","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","ZeroValue":0,"enable":false,"remote_control_enable":false},"/limits/ess":{"MaxChargePower":{"enable":"/config/ess:enable","note":"Calculates the maximum of the max charge powers reported by the BMS and PCS managers","numVars":2,"operation":"max","value":0,"variable1":"/limits/bms:ChargePowerLimit","variable2":"/limits/pcs:MaxPCSChargePower"},"MaxDischargePower":{"enable":"/config/ess:enable","note":"Calculates the minimum of the max discharge powers reported by the BMS and PCS managers","numVars":2,"operation":"min","value":0,"variable1":"/limits/bms:DischargePowerLimit","variable2":"/limits/pcs:MaxPCSDischargePower"}},"/sched/ess":{"BatteryRackBalanceCoarse":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"BatteryRackBalanceCoarse"}]}]},"every":0.5,"value":"BatteryRackBalanceCoarse"},"SiteBMSContactorControl":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"SiteBMSContactorControl"}]}]},"every":1,"value":"SiteBMSContactorControl"},"SitePCSStatusControl":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"SitePCSStatusControl"}]}]},"every":0.5,"value":"SitePCSStatusControl"},"SiteRunCmd":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"SiteRunCmd"}]}]},"every":0.5,"value":"SiteRunCmd"},"every1000ms_ess":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"Every1000mS"}]}]},"enable":"/config/ess:enable","note1":"Periodically runs Every1000mS, which is useful for reporting CPU statistics","note2":"Also useful for writing currently loaded ESS Controller variables to /var/log/ess_controller/run_configs folder","value":1},"pubAssets_ess":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"RunPub"}]}]},"enable":"/config/ess:enable","mode":"ui","note":"Publishes UI asset data (/assets/ess/ess_1)","table":"/assets/ess/ess_1","value":1},"pubESS":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"RunPub"}]}]},"enable":"/config/ess:enable","mode":"naked","note":"Publishes ESS Controller data (/site/ess)","table":"/site/ess","value":1},"runMonitor_ess":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"RunMonitor"}]}]},"aname":"ess","enable":"/config/ess:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/ess","value":1},"updateHeartbeatWrite_ess":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"CalculateVar","inAv":"/status/ess:HeartbeatWrite"}]}]},"enable":"/config/ess:enable","note":"Periodically updates the heartbeat write variable defined in /status/ess:HeartbeatWrite","value":1}},"/schedule/wake_monitor/ess":{"/limits/ess:MaxChargePower":{"amap":"ess","func":"CalculateVar"},"/limits/ess:MaxDischargePower":{"amap":"ess","func":"CalculateVar"},"/status/ess:InLocalMode":{"amap":"ess","func":"CalculateVar"}},"/status/ess":{"CommsOK":false,"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"uri":"/site/ess:heartbeat_from_ess"}]}]},"enable":"/config/ess:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/ess:HeartbeatWrite"},"InLocalMode":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":false,"uri":"/config/ess:remote_control_enable"},{"inValue":false,"outValue":true,"uri":"/config/ess:remote_control_enable"}]}]},"enable":"/config/ess:enable","note1":"Determines whether the ESS Controller is in remote or local mode","note2":"If in local mode, then remote controls are disabled, meaning that commands sent to the ESS Controller are ignored","numVars":7,"operation":"or","value":false,"variable1":"/assets/bms/summary:maint_mode","variable2":"/assets/bms/bms_1:maint_mode","variable3":"/assets/bms_1/rack_1:maint_mode","variable4":"/assets/bms_1/rack_2:maint_mode","variable5":"/assets/bms_1/rack_3:maint_mode","variable6":"/assets/pcs/summary:maint_mode","variable7":"/assets/pcs/pcs_1:maint_mode"}},"/system/commands":{"runOpts_ess":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/ess) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"ess","every":1,"uri":"/sched/ess:pubAssets_ess","value":1},{"aname":"ess","every":0.1,"uri":"/sched/ess:runMonitor_ess","value":1},{"aname":"ess","every":1,"uri":"/sched/ess:updateHeartbeatWrite_ess","value":1},{"aname":"ess","every":0.1,"uri":"/sched/ess:pubESS","value":1},{"aname":"ess","every":1,"uri":"/sched/ess:every1000ms_ess","value":1},{"aname":"ess","debug":0,"every":0,"offset":0,"uri":"/sched/ess:SiteRunCmd","value":0},{"aname":"ess","debug":0,"every":0,"offset":0,"uri":"/sched/ess:SiteBMSContactorControl","value":0},{"aname":"ess","debug":0,"every":0,"offset":0,"uri":"/sched/ess:SitePCSStatusControl","value":0},{"aname":"ess","debug":0,"every":0,"offset":0,"uri":"/sched/ess:BatteryRackBalanceCoarse","value":0}],"targav":"/system/commands:run","value":false}}}
[2.15531s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[2.15596s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/ess/ess_1:alarms",
	"EventSourceFormat":	{
		"value":	"assetName"
	},
	"FaultDestination":	"/assets/ess/ess_1:faults",
	"LogDir":	"/var/log/ess_controller",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"ZeroValue":	0,
	"enable":	false,
	"remote_control_enable":	false
}].
[2.15643s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:alarms]
[2.157s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:alarms]
[2.1576s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [assetName]
[2.15806s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [assetName]
[2.15853s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:faults]
[2.15893s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:faults]
[2.15936s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/var/log/ess_controller]
[2.16009s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/var/log/ess_controller]
[2.16062s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[2.16134s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[2.16204s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[2.16249s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[2.16319s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MaxChargePower":	{
		"enable":	"/config/ess:enable",
		"note":	"Calculates the maximum of the max charge powers reported by the BMS and PCS managers",
		"numVars":	2,
		"operation":	"max",
		"value":	0,
		"variable1":	"/limits/bms:ChargePowerLimit",
		"variable2":	"/limits/pcs:MaxPCSChargePower"
	},
	"MaxDischargePower":	{
		"enable":	"/config/ess:enable",
		"note":	"Calculates the minimum of the max discharge powers reported by the BMS and PCS managers",
		"numVars":	2,
		"operation":	"min",
		"value":	0,
		"variable1":	"/limits/bms:DischargePowerLimit",
		"variable2":	"/limits/pcs:MaxPCSDischargePower"
	}
}].
[2.16405s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"BatteryRackBalanceCoarse":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"BatteryRackBalanceCoarse"
						}]
				}]
		},
		"every":	0.5,
		"value":	"BatteryRackBalanceCoarse"
	},
	"SiteBMSContactorControl":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"SiteBMSContactorControl"
						}]
				}]
		},
		"every":	1,
		"value":	"SiteBMSContactorControl"
	},
	"SitePCSStatusControl":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"SitePCSStatusControl"
						}]
				}]
		},
		"every":	0.5,
		"value":	"SitePCSStatusControl"
	},
	"SiteRunCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"SiteRunCmd"
						}]
				}]
		},
		"every":	0.5,
		"value":	"SiteRunCmd"
	},
	"every1000ms_ess":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"Every1000mS"
						}]
				}]
		},
		"enable":	"/config/ess:enable",
		"note1":	"Periodically runs Every1000mS, which is useful for reporting CPU statistics",
		"note2":	"Also useful for writing currently loaded ESS Controller variables to /var/log/ess_controller/run_configs folder",
		"value":	1
	},
	"pubAssets_ess":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/ess:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/ess/ess_1)",
		"table":	"/assets/ess/ess_1",
		"value":	1
	},
	"pubESS":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/ess:enable",
		"mode":	"naked",
		"note":	"Publishes ESS Controller data (/site/ess)",
		"table":	"/site/ess",
		"value":	1
	},
	"runMonitor_ess":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"ess",
		"enable":	"/config/ess:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/ess",
		"value":	1
	},
	"updateHeartbeatWrite_ess":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"CalculateVar",
							"inAv":	"/status/ess:HeartbeatWrite"
						}]
				}]
		},
		"enable":	"/config/ess:enable",
		"note":	"Periodically updates the heartbeat write variable defined in /status/ess:HeartbeatWrite",
		"value":	1
	}
}].
[2.16486s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [BatteryRackBalanceCoarse]
[2.16544s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [BatteryRackBalanceCoarse]
[2.16641s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[2.16773s  ] [info    ] [BatteryRackBala] Before Test
[2.1683s   ] [info    ] [TestVoltageArbi] TestVoltageArbitration
[2.169s    ] [info    ] [VoltageArbitrat] closedVoltage 1100
[2.1694s   ] [info    ] [VoltageArbitrat] minVoltage 1004.5
[2.16978s  ] [info    ] [VoltageArbitrat] minVoltage 1004.5
[2.17039s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 95.5
[2.17115s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 95.5
[2.17172s  ] [info    ] [VoltageArbitrat] min 95.5
[2.17207s  ] [info    ] [VoltageArbitrat] bestVoltage 1004.5
[2.17254s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[2.17295s  ] [info    ] [PrintVoltageArb] 

Test Number #1 
Test Name: [1 Rack Open and Many Closed] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1004.5      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1004.5      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1004.5      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[2.17327s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[2.17357s  ] [info    ] [VoltageArbitrat] minVoltage 1200
[2.17394s  ] [info    ] [VoltageArbitrat] minVoltage 1230.3
[2.17447s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 100
[2.17488s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 130.29999999999995
[2.1754s   ] [info    ] [VoltageArbitrat] min 100
[2.17574s  ] [info    ] [VoltageArbitrat] bestVoltage 1200
[2.17612s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[2.17677s  ] [info    ] [PrintVoltageArb] 

Test Number #2 
Test Name: [2 Rack Open and Both Above Average] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1200      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1230.3      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1200      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1200      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[2.17737s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[2.17779s  ] [info    ] [VoltageArbitrat] minVoltage 1000.6
[2.17812s  ] [info    ] [VoltageArbitrat] minVoltage 1056.2
[2.17865s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 99.39999999999998
[2.179s    ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 43.799999999999955
[2.17949s  ] [info    ] [VoltageArbitrat] min 43.799999999999955
[2.17992s  ] [info    ] [VoltageArbitrat] bestVoltage 1056.2
[2.18021s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[2.18059s  ] [info    ] [PrintVoltageArb] 

Test Number #3 
Test Name: [2 Rack Open and Both Below Average] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1000.6      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1056.2      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1056.2      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1056.2      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[2.18095s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[2.1813s   ] [info    ] [VoltageArbitrat] minVoltage 1040.8
[2.18162s  ] [info    ] [VoltageArbitrat] minVoltage 1111.1
[2.18194s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 59.200000000000045
[2.18218s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 11.099999999999909
[2.1827s   ] [info    ] [VoltageArbitrat] min 11.099999999999909
[2.18304s  ] [info    ] [VoltageArbitrat] bestVoltage 1111.1
[2.18341s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[2.18375s  ] [info    ] [PrintVoltageArb] 

Test Number #4 
Test Name: [2 Rack Open (1 above and 1 below average) and the above is closer] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1111.1      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1040.8      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1111.1      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1111.1      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[2.18412s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[2.18446s  ] [info    ] [VoltageArbitrat] minVoltage 1040.8
[2.18482s  ] [info    ] [VoltageArbitrat] minVoltage 1220.4
[2.18517s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 59.200000000000045
[2.18558s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 120.40000000000009
[2.18615s  ] [info    ] [VoltageArbitrat] min 59.200000000000045
[2.18647s  ] [info    ] [VoltageArbitrat] bestVoltage 1040.8
[2.1868s   ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[2.18711s  ] [info    ] [PrintVoltageArb] 

Test Number #5 
Test Name: [2 Rack Open (1 above and 1 below average) and the below is closer] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1220.4      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1040.8      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1040.8      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1040.8      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[2.18738s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[2.18768s  ] [info    ] [PrintVoltageArb] 

Test Number #6 
Test Name: [1 rack open and is within deadband] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1101      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false

Actual Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false
 


[2.18797s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[2.18823s  ] [info    ] [VoltageArbitrat] minVoltage 1234.5
[2.18848s  ] [info    ] [VoltageArbitrat] minVoltage 1234.5
[2.18878s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 134.5
[2.18926s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 134.5
[2.18989s  ] [info    ] [VoltageArbitrat] min 134.5
[2.19027s  ] [info    ] [VoltageArbitrat] bestVoltage 1234.5
[2.19059s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[2.19113s  ] [info    ] [PrintVoltageArb] 

Test Number #7 
Test Name: [2 Rack Open (both above), one is in the deadband and one is out] 

Starting Rack List: 
Rack #1        Voltage:1234.5      ContactorStatus:Open
Rack #2        Voltage:1101.3      ContactorStatus:Open
Rack #3        Voltage:1100      ContactorStatus:Closed
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1234.5      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1234.5      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[2.19221s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[2.19251s  ] [info    ] [VoltageArbitrat] minVoltage 970.3
[2.19291s  ] [info    ] [VoltageArbitrat] minVoltage 970.3
[2.19327s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 129.70000000000005
[2.19359s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 129.70000000000005
[2.19388s  ] [info    ] [VoltageArbitrat] min 129.70000000000005
[2.19418s  ] [info    ] [VoltageArbitrat] bestVoltage 970.3
[2.19449s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[2.19501s  ] [info    ] [PrintVoltageArb] 

Test Number #8 
Test Name: [2 Rack Open (both below), one is in the deadband and one is out] 

Starting Rack List: 
Rack #1        Voltage:1098.6      ContactorStatus:Open
Rack #2        Voltage:970.3      ContactorStatus:Open
Rack #3        Voltage:1100      ContactorStatus:Closed
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 970.3      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 970.3      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[2.19565s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[2.19643s  ] [info    ] [PrintVoltageArb] 

Test Number #9 
Test Name: [2 Rack Open (1 above 1 below), both are within the deadband] 

Starting Rack List: 
Rack #1        Voltage:1098.6      ContactorStatus:Open
Rack #2        Voltage:1100.9      ContactorStatus:Open
Rack #3        Voltage:1100      ContactorStatus:Closed
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false

Actual Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false
 


[2.19677s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[2.19725s  ] [info    ] [PrintVoltageArb] 

Test Number #10 
Test Name: [Ignore an open rack that has been configured to be so] 

Starting Rack List: 
Rack #1        Voltage:1098.6      ContactorStatus:Open
Rack #2        Voltage:1100.9      ContactorStatus:Open
Rack #3        Voltage:1100      ContactorStatus:Closed
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:960      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false

Actual Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false
 


[2.19754s  ] [info    ] [BatteryRackBala] After Test
[2.198s    ] [info    ] [BatteryRackBala] reload == 0
[2.19841s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:BatteryRackBalanceCoarse_ess_bms_1]
[2.20001s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:BatteryRackBalanceCoarse_ess_bms_1]
[2.20052s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [SiteBMSContactorControl]
[2.20083s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [SiteBMSContactorControl]
[2.20113s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:SiteBMSContactorControl_ess]
[2.20142s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:SiteBMSContactorControl_ess]
[2.20179s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [SitePCSStatusControl]
[2.20208s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [SitePCSStatusControl]
[2.20234s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:SitePCSStatusControl_ess]
[2.20259s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:SitePCSStatusControl_ess]
[2.20288s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [SiteRunCmd]
[2.20313s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [SiteRunCmd]
[2.20341s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:SiteRunCmd_ess]
[2.20413s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:SiteRunCmd_ess]
[2.20447s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:SiteRunCmd_maintModeBms]
[2.2048s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:SiteRunCmd_maintModeBms]
[2.20508s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:SiteRunCmd_maintModePcs]
[2.20532s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:SiteRunCmd_maintModePcs]
[2.20581s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/limits/ess:MaxChargePower":	{
		"amap":	"ess",
		"func":	"CalculateVar"
	},
	"/limits/ess:MaxDischargePower":	{
		"amap":	"ess",
		"func":	"CalculateVar"
	},
	"/status/ess:InLocalMode":	{
		"amap":	"ess",
		"func":	"CalculateVar"
	}
}].
[2.20642s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CommsOK":	false,
	"HeartbeatWrite":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/site/ess:heartbeat_from_ess"
						}]
				}]
		},
		"enable":	"/config/ess:enable",
		"excludeFromDefaultSched":	true,
		"expression":	"if (({1} >= 59), 0, ({1} + 1))",
		"note":	"Updates and then sends the heartbeat write value",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/ess:HeartbeatWrite"
	},
	"InLocalMode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	false,
							"uri":	"/config/ess:remote_control_enable"
						}, {
							"inValue":	false,
							"outValue":	true,
							"uri":	"/config/ess:remote_control_enable"
						}]
				}]
		},
		"enable":	"/config/ess:enable",
		"note1":	"Determines whether the ESS Controller is in remote or local mode",
		"note2":	"If in local mode, then remote controls are disabled, meaning that commands sent to the ESS Controller are ignored",
		"numVars":	7,
		"operation":	"or",
		"value":	false,
		"variable1":	"/assets/bms/summary:maint_mode",
		"variable2":	"/assets/bms/bms_1:maint_mode",
		"variable3":	"/assets/bms_1/rack_1:maint_mode",
		"variable4":	"/assets/bms_1/rack_2:maint_mode",
		"variable5":	"/assets/bms_1/rack_3:maint_mode",
		"variable6":	"/assets/pcs/summary:maint_mode",
		"variable7":	"/assets/pcs/pcs_1:maint_mode"
	}
}].
[2.20719s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_ess":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/ess) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"ess",
				"every":	1,
				"uri":	"/sched/ess:pubAssets_ess",
				"value":	1
			}, {
				"aname":	"ess",
				"every":	0.1,
				"uri":	"/sched/ess:runMonitor_ess",
				"value":	1
			}, {
				"aname":	"ess",
				"every":	1,
				"uri":	"/sched/ess:updateHeartbeatWrite_ess",
				"value":	1
			}, {
				"aname":	"ess",
				"every":	0.1,
				"uri":	"/sched/ess:pubESS",
				"value":	1
			}, {
				"aname":	"ess",
				"every":	1,
				"uri":	"/sched/ess:every1000ms_ess",
				"value":	1
			}, {
				"aname":	"ess",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/ess:SiteRunCmd",
				"value":	0
			}, {
				"aname":	"ess",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/ess:SiteBMSContactorControl",
				"value":	0
			}, {
				"aname":	"ess",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/ess:SitePCSStatusControl",
				"value":	0
			}, {
				"aname":	"ess",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/ess:BatteryRackBalanceCoarse",
				"value":	0
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[2.34509s  ] [info    ] [runConfig      ]  requesting cfile [ess_controller_server_interface] 
[2.34663s  ] [info    ] [requestCfile   ] Getting from DBI ess_controller_server_interface
[2.35375s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:ess_controller_server_interface]  am at start [ess]
[2.35454s  ] [info    ] [configure_vmapS] process file seeking header stuff am [ess] ai [no ai]
[2.35511s  ] [info    ] [configure_vmapS] body: {"/schedule/wake_monitor/ess":{"/site/ess:heartbeat_to_ess":{"amap":"ess","func":"CheckMonitorVar"}},"/site/ess":{"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"LogInfo"}]},{"remap":[{"inValue":1,"outValue":true,"uri":"/controls/bms:ClearFaults@triggerCmd"},{"inValue":1,"outValue":0,"uri":"/controls/bms:ClearFaults"},{"inValue":1,"outValue":true,"uri":"/controls/pcs:ClearFaults@triggerCmd"},{"inValue":1,"outValue":0,"uri":"/controls/pcs:ClearFaults"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Clear Faults Command","note":"Initiates BMS/PCS clear faults command routines and clears ESS Controller alarms/faults","type":"control","value":0},"comms_faults":{"bit0":"PCS Communication Failure","bit1":"BMS Communication Failure","name":"Comms Faults","type":"bitfield","value":0},"ess_alarm_active":{"name":"ESS Alarm Active","type":"status","value":false},"ess_fault_active":{"name":"ESS Fault Active","type":"status","value":false},"ess_local_mode_signal":{"name":"ESS Local Mode Signal","type":"status","value":false},"ess_max_charge_power":{"name":"ESS Max Charge Power","signed":true,"type":"status","units":"kW","value":0},"ess_max_discharge_power":{"name":"ESS Max Discharge Power","type":"status","units":"kW","value":0},"heartbeat_from_ess":{"name":"Heartbeat From ESS Controller","type":"status","value":0},"heartbeat_to_ess":{"AlarmTimeout":5,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":10,"RecoverTimeout":0.1,"Type":"int","name":"Heartbeat To ESS Controller","note":"Checks if the ESS Controller is communicating with other processes (e.g. EMS, ESS Controller)","type":"control","value":0},"site_status_control_command":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/ess:remote_control_enable","every":0.5,"ifChanged":false,"name":"Start/Stop/Standby Command","note1":"Initiates ESS start, standby, or stop command routines","note2":"0-\u003estop | 1-\u003estart | 2-\u003estandby","offset":0,"size":1,"type":"control","uri":"/sched/ess:SiteRunCmd","value":-1}},"/vlinks/ess":{"site_ess_alarm_active":{"value":"/site/ess:ess_alarm_active","vlink":"/status/ess:IsAlarming"},"site_ess_fault_active":{"value":"/site/ess:ess_fault_active","vlink":"/status/ess:IsFaulted"},"site_ess_local_mode_signal":{"value":"/site/ess:ess_local_mode_signal","vlink":"/status/ess:InLocalMode"},"site_ess_max_charge_power":{"value":"/site/ess:ess_max_charge_power","vlink":"/limits/ess:MaxChargePower"},"site_ess_max_discharge_power":{"value":"/site/ess:ess_max_discharge_power","vlink":"/limits/ess:MaxDischargePower"}}}
[2.35565s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[2.35612s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/site/ess:heartbeat_to_ess":	{
		"amap":	"ess",
		"func":	"CheckMonitorVar"
	}
}].
[2.35688s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	1,
							"outValue":	true,
							"uri":	"/controls/bms:ClearFaults@triggerCmd"
						}, {
							"inValue":	1,
							"outValue":	0,
							"uri":	"/controls/bms:ClearFaults"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/controls/pcs:ClearFaults@triggerCmd"
						}, {
							"inValue":	1,
							"outValue":	0,
							"uri":	"/controls/pcs:ClearFaults"
						}]
				}]
		},
		"enable":	"/config/ess:remote_control_enable",
		"ifChanged":	false,
		"name":	"Clear Faults Command",
		"note":	"Initiates BMS/PCS clear faults command routines and clears ESS Controller alarms/faults",
		"type":	"control",
		"value":	0
	},
	"comms_faults":	{
		"bit0":	"PCS Communication Failure",
		"bit1":	"BMS Communication Failure",
		"name":	"Comms Faults",
		"type":	"bitfield",
		"value":	0
	},
	"ess_alarm_active":	{
		"name":	"ESS Alarm Active",
		"type":	"status",
		"value":	false
	},
	"ess_fault_active":	{
		"name":	"ESS Fault Active",
		"type":	"status",
		"value":	false
	},
	"ess_local_mode_signal":	{
		"name":	"ESS Local Mode Signal",
		"type":	"status",
		"value":	false
	},
	"ess_max_charge_power":	{
		"name":	"ESS Max Charge Power",
		"signed":	true,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"ess_max_discharge_power":	{
		"name":	"ESS Max Discharge Power",
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"heartbeat_from_ess":	{
		"name":	"Heartbeat From ESS Controller",
		"type":	"status",
		"value":	0
	},
	"heartbeat_to_ess":	{
		"AlarmTimeout":	5,
		"EnableCommsCheck":	false,
		"EnableStateCheck":	false,
		"FaultTimeout":	10,
		"RecoverTimeout":	0.1,
		"Type":	"int",
		"name":	"Heartbeat To ESS Controller",
		"note":	"Checks if the ESS Controller is communicating with other processes (e.g. EMS, ESS Controller)",
		"type":	"control",
		"value":	0
	},
	"site_status_control_command":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched"
						}]
				}]
		},
		"aname":	"ess",
		"debug":	0,
		"enable":	"/config/ess:remote_control_enable",
		"every":	0.5,
		"ifChanged":	false,
		"name":	"Start/Stop/Standby Command",
		"note1":	"Initiates ESS start, standby, or stop command routines",
		"note2":	"0->stop | 1->start | 2->standby",
		"offset":	0,
		"size":	1,
		"type":	"control",
		"uri":	"/sched/ess:SiteRunCmd",
		"value":	-1
	}
}].
[2.35821s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"site_ess_alarm_active":	{
		"value":	"/site/ess:ess_alarm_active",
		"vlink":	"/status/ess:IsAlarming"
	},
	"site_ess_fault_active":	{
		"value":	"/site/ess:ess_fault_active",
		"vlink":	"/status/ess:IsFaulted"
	},
	"site_ess_local_mode_signal":	{
		"value":	"/site/ess:ess_local_mode_signal",
		"vlink":	"/status/ess:InLocalMode"
	},
	"site_ess_max_charge_power":	{
		"value":	"/site/ess:ess_max_charge_power",
		"vlink":	"/limits/ess:MaxChargePower"
	},
	"site_ess_max_discharge_power":	{
		"value":	"/site/ess:ess_max_discharge_power",
		"vlink":	"/limits/ess:MaxDischargePower"
	}
}].
[2.35907s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:ess_alarm_active]
[2.36021s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:ess_alarm_active]
[2.36079s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:ess_fault_active]
[2.36135s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:ess_fault_active]
[2.36188s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:ess_local_mode_signal]
[2.3623s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:ess_local_mode_signal]
[2.36274s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:ess_max_charge_power]
[2.3631s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:ess_max_charge_power]
[2.36351s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:ess_max_discharge_power]
[2.3639s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:ess_max_discharge_power]
[2.54865s  ] [info    ] [runConfig      ]  requesting cfile [ess_controller_ui] 
[2.54917s  ] [info    ] [requestCfile   ] Getting from DBI ess_controller_ui
[2.55228s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:ess_controller_ui]  am at start [ess]
[2.55868s  ] [info    ] [configure_vmapS] process file seeking header stuff am [ess] ai [no ai]
[2.55927s  ] [info    ] [configure_vmapS] body: {"/assets/ess/ess_1":{"build":{"value":"INIT"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":"Clear","uri":"/faults/ess:clear_faults"},{"inValue":true,"outValue":"Clear","uri":"/alarms/ess:clear_alarms"},{"inValue":true,"outValue":true,"uri":"/controls/bms:ClearFaults@triggerCmd"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:ClearFaults@triggerCmd"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"comms_ok":{"value":false},"curr_real_mem":{"value":0},"max_apparent_power":{"value":0},"max_charge_power":{"value":0},"max_discharge_power":{"value":0},"max_reactive_power":{"value":0},"peak_real_mem":{"value":0},"system_temp":{"value":0}},"/assets/ess/summary":{"battery_rack_balance_coarse":{"ControlRate":"use every above for this","Gain":10,"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":true,"every":0.5,"maxPowerForBalancing":1000,"name":"Battery Rack Balance Coarse","offset":0,"powerVsDeltaVoltageSlope":1,"rampStartDeadband":10,"scaler":0,"targetVoltageDeadband":5,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/ess:BatteryRackBalanceCoarse","value":false}},"/vlinks/ess":{"ui_build":{"value":"/assets/ess/ess_1:build","vlink":"/status/ess:build"},"ui_comms_ok":{"value":"/assets/ess/ess_1:comms_ok","vlink":"/status/ess:CommsOK"},"ui_curr_real_mem":{"value":"/assets/ess/ess_1:curr_real_mem","vlink":"/status/ess:currRealMem"},"ui_max_apparent_power":{"value":"/assets/ess/ess_1:max_apparent_power","vlink":"/limits/ess:MaxApparentPower"},"ui_max_charge_power":{"value":"/assets/ess/ess_1:max_charge_power","vlink":"/limits/ess:MaxChargePower"},"ui_max_discharge_power":{"value":"/assets/ess/ess_1:max_discharge_power","vlink":"/limits/ess:MaxDischargePower"},"ui_max_reactive_power":{"value":"/assets/ess/ess_1:max_reactive_power","vlink":"/limits/ess:MaxReactivePower"},"ui_peak_real_mem":{"value":"/assets/ess/ess_1:peak_real_mem","vlink":"/status/ess:peakRealMem"},"ui_system_temp":{"value":"/assets/ess/ess_1:system_temp","vlink":"/status/ess:system_temp"}}}
[2.56202s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[2.56306s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"build":	{
		"value":	"INIT"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	"Clear",
							"uri":	"/faults/ess:clear_faults"
						}, {
							"inValue":	true,
							"outValue":	"Clear",
							"uri":	"/alarms/ess:clear_alarms"
						}, {
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/bms:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:ClearFaults@triggerCmd"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"comms_ok":	{
		"value":	false
	},
	"curr_real_mem":	{
		"value":	0
	},
	"max_apparent_power":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"max_reactive_power":	{
		"value":	0
	},
	"peak_real_mem":	{
		"value":	0
	},
	"system_temp":	{
		"value":	0
	}
}].
[2.56377s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[2.56445s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[2.56519s  ] [info    ] [LogInfo        ] [/assets/ess/ess_1:clear_faults] received a value of [false]
[2.56725s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"battery_rack_balance_coarse":	{
		"ControlRate":	"use every above for this",
		"Gain":	10,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched",
							"inValue":	true
						}]
				}]
		},
		"aname":	"bms",
		"debug":	0,
		"enabled":	true,
		"every":	0.5,
		"maxPowerForBalancing":	1000,
		"name":	"Battery Rack Balance Coarse",
		"offset":	0,
		"powerVsDeltaVoltageSlope":	1,
		"rampStartDeadband":	10,
		"scaler":	0,
		"targetVoltageDeadband":	5,
		"type":	"enum_button",
		"ui_type":	"control",
		"unit":	"",
		"uri":	"/sched/ess:BatteryRackBalanceCoarse",
		"value":	false
	}
}].
[2.56837s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_build":	{
		"value":	"/assets/ess/ess_1:build",
		"vlink":	"/status/ess:build"
	},
	"ui_comms_ok":	{
		"value":	"/assets/ess/ess_1:comms_ok",
		"vlink":	"/status/ess:CommsOK"
	},
	"ui_curr_real_mem":	{
		"value":	"/assets/ess/ess_1:curr_real_mem",
		"vlink":	"/status/ess:currRealMem"
	},
	"ui_max_apparent_power":	{
		"value":	"/assets/ess/ess_1:max_apparent_power",
		"vlink":	"/limits/ess:MaxApparentPower"
	},
	"ui_max_charge_power":	{
		"value":	"/assets/ess/ess_1:max_charge_power",
		"vlink":	"/limits/ess:MaxChargePower"
	},
	"ui_max_discharge_power":	{
		"value":	"/assets/ess/ess_1:max_discharge_power",
		"vlink":	"/limits/ess:MaxDischargePower"
	},
	"ui_max_reactive_power":	{
		"value":	"/assets/ess/ess_1:max_reactive_power",
		"vlink":	"/limits/ess:MaxReactivePower"
	},
	"ui_peak_real_mem":	{
		"value":	"/assets/ess/ess_1:peak_real_mem",
		"vlink":	"/status/ess:peakRealMem"
	},
	"ui_system_temp":	{
		"value":	"/assets/ess/ess_1:system_temp",
		"vlink":	"/status/ess:system_temp"
	}
}].
[2.56911s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:build]
[2.56965s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:build]
[2.57066s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:comms_ok]
[2.57226s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:comms_ok]
[2.57264s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:curr_real_mem]
[2.57291s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:curr_real_mem]
[2.57391s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:max_apparent_power]
[2.57426s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:max_apparent_power]
[2.57472s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:max_charge_power]
[2.57548s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:max_charge_power]
[2.57597s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:max_discharge_power]
[2.57678s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:max_discharge_power]
[2.57728s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:max_reactive_power]
[2.57776s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:max_reactive_power]
[2.57832s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:peak_real_mem]
[2.57867s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:peak_real_mem]
[2.57912s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/ess/ess_1:system_temp]
[2.57951s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/ess/ess_1:system_temp]
[2.74507s  ] [info    ] [runConfig      ]  requesting cfile [ess_controller_faults] 
[2.74572s  ] [info    ] [requestCfile   ] Getting from DBI ess_controller_faults
[2.75185s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:ess_controller_faults]  am at start [ess]
[2.75287s  ] [info    ] [configure_vmapS] process file seeking header stuff am [ess] ai [no ai]
[2.75347s  ] [info    ] [configure_vmapS] body: {"/alarms/ess":{"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/ess) will be reset to the normal state (defined in /config/ess:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":1,"type":"alarm","value":"Normal","variable1":"heartbeat_to_ess"}},"/faults/ess":{"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/ess) will be reset to the normal state (defined in /config/ess:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":1,"type":"fault","value":"Normal","variable1":"heartbeat_to_ess"}},"/schedule/wake_monitor/ess":{"/status/ess:IsAlarming":{"amap":"ess","func":"CalculateVar"},"/status/ess:IsFaulted":{"amap":"ess","func":"CalculateVar"}},"/status/ess":{"AlarmCnt":0,"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"ess","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"value":false},"IsAlarming":{"expression":"{1} or {2} or {3} \u003e 0","numVars":3,"useExpr":true,"value":false,"variable1":"/status/bms:IsAlarming","variable2":"/status/pcs:IsAlarming","variable3":"/status/ess:AlarmCnt"},"IsFaulted":{"expression":"{1} or {2} or {3} \u003e 0","numVars":3,"useExpr":true,"value":false,"variable1":"/status/bms:IsFaulted","variable2":"/status/pcs:IsFaulted","variable3":"/status/ess:FaultCnt"}}}
[2.7541s   ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[2.75472s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/ess) will be reset to the normal state (defined in /config/ess:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"numVars":	1,
		"type":	"alarm",
		"value":	"Normal",
		"variable1":	"heartbeat_to_ess"
	}
}].
[2.7553s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[2.75569s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[2.75627s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/ess:FaultDestination]
[2.75702s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/ess:FaultDestination]
[2.75748s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/ess:NoFaultMsg]
[2.75787s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/ess:NoFaultMsg]
[2.75836s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:FaultCnt]
[2.75931s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:FaultCnt]
[2.75974s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/ess:AlarmDestination]
[2.76014s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/ess:AlarmDestination]
[2.76099s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/ess:NoAlarmMsg]
[2.76244s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/ess:NoAlarmMsg]
[2.76318s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:AlarmCnt]
[2.76361s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:AlarmCnt]
[2.76425s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/ess) will be reset to the normal state (defined in /config/ess:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"numVars":	1,
		"type":	"fault",
		"value":	"Normal",
		"variable1":	"heartbeat_to_ess"
	}
}].
[2.7649s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[2.76537s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[2.76603s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/ess:IsAlarming":	{
		"amap":	"ess",
		"func":	"CalculateVar"
	},
	"/status/ess:IsFaulted":	{
		"amap":	"ess",
		"func":	"CalculateVar"
	}
}].
[2.76725s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"ess",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ActivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ReactivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:Stop@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:Stop"
						}]
				}]
		},
		"ifChanged":	true,
		"value":	false
	},
	"IsAlarming":	{
		"expression":	"{1} or {2} or {3} > 0",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:IsAlarming",
		"variable2":	"/status/pcs:IsAlarming",
		"variable3":	"/status/ess:AlarmCnt"
	},
	"IsFaulted":	{
		"expression":	"{1} or {2} or {3} > 0",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:IsFaulted",
		"variable2":	"/status/pcs:IsFaulted",
		"variable3":	"/status/ess:FaultCnt"
	}
}].
[3.04496s  ] [info    ] [runConfig      ]  requesting cfile [catl_bms_init] 
[3.0455s   ] [info    ] [requestCfile   ] Getting from DBI catl_bms_init
[3.04661s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:catl_bms_init]  am at start [no Am]
[3.04757s  ] [info    ] [configure_vmapS] process file seeking header stuff am [bms] ai [no ai]
[3.04822s  ] [info    ] [configure_vmapS] body: {"/config/load":{"catl_bms_init":{"aname":"bms","file":"catl_bms_init","new_options":[{"amname":"bms","from":1,"pname":"ess","tmpls":["catl_bms_virtual_manager","catl_bms_virtual_manager_controls","catl_bms_virtual_manager_faults","catl_bms_virtual_manager_client_interface","catl_bms_virtual_manager_server_interface","catl_bms_virtual_manager_ui"],"to":1},{"amname":"##BMS_ID##","from":1,"pname":"bms","reps":[{"replace":"##BMS_ID##","with":"bms_{:01d}"},{"replace":"##BMS_NUM##","with":"{:01d}"},{"replace":"##PCS_ID##","with":"pcs_{:01d}"},{"replace":"##ESS_ID##","with":"ess_{:01d}"}],"tmpls":["catl_bms_manager","catl_bms_manager_controls","catl_bms_manager_faults","catl_bms_manager_client_interface","catl_bms_manager_server_interface","catl_bms_manager_ui"],"to":1},{"ainame":"##BMS_ID##_##RACK_ID##","from":1,"pname":"##BMS_ID##","reps":[{"replace":"##RACK_ID##","with":"rack_{:01d}"},{"replace":"##RACK_NUM##","with":"{:01d}"}],"tmpls":["catl_bms_rack","catl_bms_rack_controls","catl_bms_rack_faults","catl_bms_rack_client_interface","catl_bms_rack_server_interface","catl_bms_rack_ui"],"to":3}],"note":"Loads catl_bms_init first. Then, configs defined in new_options, if any, are loaded next","pname":"ess","value":false}}}
[3.04859s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.04921s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"catl_bms_init":	{
		"aname":	"bms",
		"file":	"catl_bms_init",
		"new_options":	[{
				"amname":	"bms",
				"from":	1,
				"pname":	"ess",
				"tmpls":	["catl_bms_virtual_manager", "catl_bms_virtual_manager_controls", "catl_bms_virtual_manager_faults", "catl_bms_virtual_manager_client_interface", "catl_bms_virtual_manager_server_interface", "catl_bms_virtual_manager_ui"],
				"to":	1
			}, {
				"amname":	"##BMS_ID##",
				"from":	1,
				"pname":	"bms",
				"reps":	[{
						"replace":	"##BMS_ID##",
						"with":	"bms_{:01d}"
					}, {
						"replace":	"##BMS_NUM##",
						"with":	"{:01d}"
					}, {
						"replace":	"##PCS_ID##",
						"with":	"pcs_{:01d}"
					}, {
						"replace":	"##ESS_ID##",
						"with":	"ess_{:01d}"
					}],
				"tmpls":	["catl_bms_manager", "catl_bms_manager_controls", "catl_bms_manager_faults", "catl_bms_manager_client_interface", "catl_bms_manager_server_interface", "catl_bms_manager_ui"],
				"to":	1
			}, {
				"ainame":	"##BMS_ID##_##RACK_ID##",
				"from":	1,
				"pname":	"##BMS_ID##",
				"reps":	[{
						"replace":	"##RACK_ID##",
						"with":	"rack_{:01d}"
					}, {
						"replace":	"##RACK_NUM##",
						"with":	"{:01d}"
					}],
				"tmpls":	["catl_bms_rack", "catl_bms_rack_controls", "catl_bms_rack_faults", "catl_bms_rack_client_interface", "catl_bms_rack_server_interface", "catl_bms_rack_ui"],
				"to":	3
			}],
		"note":	"Loads catl_bms_init first. Then, configs defined in new_options, if any, are loaded next",
		"pname":	"ess",
		"value":	false
	}
}].
[3.24506s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_virtual_manager] try number [1] 
[3.24579s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_virtual_manager_client_interface] try number [1] 
[3.24655s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_virtual_manager_controls] try number [1] 
[3.24737s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_virtual_manager_faults] try number [1] 
[3.2487s   ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_virtual_manager_server_interface] try number [1] 
[3.24923s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_virtual_manager_ui] try number [1] 
[3.44502s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_manager] try number [1] 
[3.44563s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_manager_client_interface] try number [1] 
[3.44645s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_manager_controls] try number [1] 
[3.44708s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_manager_faults] try number [1] 
[3.4483s   ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_manager_server_interface] try number [1] 
[3.44886s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_manager_ui] try number [1] 
[3.64511s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_rack] try number [1] 
[3.64614s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_rack_client_interface] try number [1] 
[3.64783s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_rack_controls] try number [1] 
[3.64857s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_rack_faults] try number [1] 
[3.64904s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_rack_server_interface] try number [1] 
[3.64935s  ] [info    ] [runConfig      ]  requesting ctmpl [catl_bms_rack_ui] try number [1] 
[3.74517s  ] [info    ] [runConfig      ]  All files loaded for loader [catl_bms_init] ready to run av [/config/load:catl_bms_init] load
[3.74767s  ] [info    ] [configLoad     ] tmpls field is found in av [/config/load:catl_bms_init]. We'll perform template expansions with tmpls instead of tmpl
[3.7486s   ] [info    ] [configLoad     ] tbody before: {"/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","NumRacks":9,"enable":false,"enum_opt":false},"/limits/bms":{"ChargeCurrentLimit":{"enable":"/config/bms:enable","note":"Calculates the total charge current limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargeCurrentLimit"},"ChargePowerLimit":{"enable":"/config/bms:enable","note":"Calculates the total charge power limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargePowerLimit"},"DischargeCurrentLimit":{"enable":"/config/bms:enable","note":"Calculates the total discharge current limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargeCurrentLimit"},"DischargePowerLimit":{"enable":"/config/bms:enable","note":"Calculates the total discharge power limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargePowerLimit"}},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/limits/bms:ChargeCurrentLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:ChargePowerLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:DischargeCurrentLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:DischargePowerLimit":{"amap":"bms","func":"CalculateVar"},"/status/bms:AvgCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:AvgCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:ChargeableEnergy":{"amap":"bms","func":"CalculateVar"},"/status/bms:CommsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCClosed":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCPower":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DischargeableEnergy":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MinCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MinCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:NumRacksOnline_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:NumRacksTotal":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOH_Calculated":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AvgCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:AvgCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the average cell temperature reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:AvgCellTemp"},"AvgCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:AvgCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the average cell voltage reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:AvgCellVoltage"},"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"enable":"/config/bms:enable","note":"Calculates the max difference between the max and min cell temperatures reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:CellTempDelta"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"enable":"/config/bms:enable","note":"Calculates the max difference between the max and min cell voltages reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:CellVoltageDelta"},"ChargeableEnergy":{"enable":"/config/bms:enable","note":"Calculates the total chargeable energy reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargeableEnergy"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"enable":"/config/bms:enable","note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","numVars":1,"operation":"and","value":true,"variable1":"bms:CommsOK"},"DCCharging":{"enable":"/config/bms:enable","expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","numVars":1,"operation":"and","value":false,"variable1":"bms:DCClosed"},"DCCurrent_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent"}]}]},"enable":"/config/bms:enable","note":"Calculates the total DC current reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DCCurrent"},"DCDischarging":{"enable":"/config/bms:enable","expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCPower":{"enable":"/config/bms:enable","note":"Calculates the total DC power reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DCPower"},"DCVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the average DC voltage reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:DCVoltage"},"DischargeableEnergy":{"enable":"/config/bms:enable","note":"Calculates the total dischargeable energy reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargeableEnergy"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"MaxCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MaxCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the maximum cell temperature reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:MaxCellTemp"},"MaxCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MaxCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the maximum cell voltage reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:MaxCellVoltage"},"MinCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MinCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the minimum cell temperature reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:MinCellTemp"},"MinCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MinCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the minimum cell voltage reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:MinCellVoltage"},"NumRacksOnline_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:NumRacksOnline"}]}]},"enable":"/config/bms:enable","note":"Calculates the total number of racks online reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:NumRacksOnline"},"NumRacksTotal":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:NumRacksTotal"}]}]},"enable":"/config/bms:enable","note":"Calculates the total number of racks reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:NumRacksTotal"},"SOC_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:SOC"}]}]},"enable":"/config/bms:enable","note":"Calculates the average SOC reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:SOC"},"SOH_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:SOH"}]}]},"enable":"/config/bms:enable","note":"Calculates the min SOH reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:SOH"},"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}}}
[3.75052s  ] [info    ] [configLoad     ] tbody now: "/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","NumRacks":9,"enable":false,"enum_opt":false},"/limits/bms":{"ChargeCurrentLimit":{"enable":"/config/bms:enable","note":"Calculates the total charge current limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargeCurrentLimit"},"ChargePowerLimit":{"enable":"/config/bms:enable","note":"Calculates the total charge power limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargePowerLimit"},"DischargeCurrentLimit":{"enable":"/config/bms:enable","note":"Calculates the total discharge current limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargeCurrentLimit"},"DischargePowerLimit":{"enable":"/config/bms:enable","note":"Calculates the total discharge power limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargePowerLimit"}},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/limits/bms:ChargeCurrentLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:ChargePowerLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:DischargeCurrentLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:DischargePowerLimit":{"amap":"bms","func":"CalculateVar"},"/status/bms:AvgCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:AvgCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:ChargeableEnergy":{"amap":"bms","func":"CalculateVar"},"/status/bms:CommsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCClosed":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCPower":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DischargeableEnergy":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MinCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MinCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:NumRacksOnline_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:NumRacksTotal":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOH_Calculated":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AvgCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:AvgCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the average cell temperature reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:AvgCellTemp"},"AvgCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:AvgCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the average cell voltage reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:AvgCellVoltage"},"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"enable":"/config/bms:enable","note":"Calculates the max difference between the max and min cell temperatures reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:CellTempDelta"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"enable":"/config/bms:enable","note":"Calculates the max difference between the max and min cell voltages reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:CellVoltageDelta"},"ChargeableEnergy":{"enable":"/config/bms:enable","note":"Calculates the total chargeable energy reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargeableEnergy"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"enable":"/config/bms:enable","note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","numVars":1,"operation":"and","value":true,"variable1":"bms:CommsOK"},"DCCharging":{"enable":"/config/bms:enable","expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","numVars":1,"operation":"and","value":false,"variable1":"bms:DCClosed"},"DCCurrent_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent"}]}]},"enable":"/config/bms:enable","note":"Calculates the total DC current reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DCCurrent"},"DCDischarging":{"enable":"/config/bms:enable","expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCPower":{"enable":"/config/bms:enable","note":"Calculates the total DC power reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DCPower"},"DCVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the average DC voltage reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:DCVoltage"},"DischargeableEnergy":{"enable":"/config/bms:enable","note":"Calculates the total dischargeable energy reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargeableEnergy"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"MaxCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MaxCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the maximum cell temperature reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:MaxCellTemp"},"MaxCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MaxCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the maximum cell voltage reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:MaxCellVoltage"},"MinCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MinCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the minimum cell temperature reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:MinCellTemp"},"MinCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MinCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the minimum cell voltage reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:MinCellVoltage"},"NumRacksOnline_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:NumRacksOnline"}]}]},"enable":"/config/bms:enable","note":"Calculates the total number of racks online reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:NumRacksOnline"},"NumRacksTotal":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:NumRacksTotal"}]}]},"enable":"/config/bms:enable","note":"Calculates the total number of racks reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:NumRacksTotal"},"SOC_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:SOC"}]}]},"enable":"/config/bms:enable","note":"Calculates the average SOC reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:SOC"},"SOH_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:SOH"}]}]},"enable":"/config/bms:enable","note":"Calculates the min SOH reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:SOH"},"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}}
[3.75232s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","NumRacks":9,"enable":false,"enum_opt":false},"/limits/bms":{"ChargeCurrentLimit":{"enable":"/config/bms:enable","note":"Calculates the total charge current limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargeCurrentLimit"},"ChargePowerLimit":{"enable":"/config/bms:enable","note":"Calculates the total charge power limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargePowerLimit"},"DischargeCurrentLimit":{"enable":"/config/bms:enable","note":"Calculates the total discharge current limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargeCurrentLimit"},"DischargePowerLimit":{"enable":"/config/bms:enable","note":"Calculates the total discharge power limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargePowerLimit"}},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/limits/bms:ChargeCurrentLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:ChargePowerLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:DischargeCurrentLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:DischargePowerLimit":{"amap":"bms","func":"CalculateVar"},"/status/bms:AvgCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:AvgCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:ChargeableEnergy":{"amap":"bms","func":"CalculateVar"},"/status/bms:CommsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCClosed":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCPower":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DischargeableEnergy":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MinCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MinCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:NumRacksOnline_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:NumRacksTotal":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOH_Calculated":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AvgCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:AvgCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the average cell temperature reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:AvgCellTemp"},"AvgCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:AvgCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the average cell voltage reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:AvgCellVoltage"},"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"enable":"/config/bms:enable","note":"Calculates the max difference between the max and min cell temperatures reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:CellTempDelta"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"enable":"/config/bms:enable","note":"Calculates the max difference between the max and min cell voltages reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:CellVoltageDelta"},"ChargeableEnergy":{"enable":"/config/bms:enable","note":"Calculates the total chargeable energy reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargeableEnergy"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"enable":"/config/bms:enable","note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","numVars":1,"operation":"and","value":true,"variable1":"bms:CommsOK"},"DCCharging":{"enable":"/config/bms:enable","expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","numVars":1,"operation":"and","value":false,"variable1":"bms:DCClosed"},"DCCurrent_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent"}]}]},"enable":"/config/bms:enable","note":"Calculates the total DC current reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DCCurrent"},"DCDischarging":{"enable":"/config/bms:enable","expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCPower":{"enable":"/config/bms:enable","note":"Calculates the total DC power reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DCPower"},"DCVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the average DC voltage reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:DCVoltage"},"DischargeableEnergy":{"enable":"/config/bms:enable","note":"Calculates the total dischargeable energy reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargeableEnergy"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"MaxCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MaxCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the maximum cell temperature reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:MaxCellTemp"},"MaxCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MaxCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the maximum cell voltage reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:MaxCellVoltage"},"MinCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MinCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the minimum cell temperature reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:MinCellTemp"},"MinCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MinCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the minimum cell voltage reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:MinCellVoltage"},"NumRacksOnline_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:NumRacksOnline"}]}]},"enable":"/config/bms:enable","note":"Calculates the total number of racks online reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:NumRacksOnline"},"NumRacksTotal":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:NumRacksTotal"}]}]},"enable":"/config/bms:enable","note":"Calculates the total number of racks reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:NumRacksTotal"},"SOC_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:SOC"}]}]},"enable":"/config/bms:enable","note":"Calculates the average SOC reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:SOC"},"SOH_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:SOH"}]}]},"enable":"/config/bms:enable","note":"Calculates the min SOH reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:SOH"},"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}}
[3.75357s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","NumRacks":9,"enable":false,"enum_opt":false},"/limits/bms":{"ChargeCurrentLimit":{"enable":"/config/bms:enable","note":"Calculates the total charge current limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargeCurrentLimit"},"ChargePowerLimit":{"enable":"/config/bms:enable","note":"Calculates the total charge power limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargePowerLimit"},"DischargeCurrentLimit":{"enable":"/config/bms:enable","note":"Calculates the total discharge current limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargeCurrentLimit"},"DischargePowerLimit":{"enable":"/config/bms:enable","note":"Calculates the total discharge power limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargePowerLimit"}},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/limits/bms:ChargeCurrentLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:ChargePowerLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:DischargeCurrentLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:DischargePowerLimit":{"amap":"bms","func":"CalculateVar"},"/status/bms:AvgCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:AvgCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:ChargeableEnergy":{"amap":"bms","func":"CalculateVar"},"/status/bms:CommsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCClosed":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCPower":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DischargeableEnergy":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MinCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MinCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:NumRacksOnline_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:NumRacksTotal":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOH_Calculated":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AvgCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:AvgCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the average cell temperature reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:AvgCellTemp"},"AvgCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:AvgCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the average cell voltage reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:AvgCellVoltage"},"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"enable":"/config/bms:enable","note":"Calculates the max difference between the max and min cell temperatures reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:CellTempDelta"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"enable":"/config/bms:enable","note":"Calculates the max difference between the max and min cell voltages reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:CellVoltageDelta"},"ChargeableEnergy":{"enable":"/config/bms:enable","note":"Calculates the total chargeable energy reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargeableEnergy"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"enable":"/config/bms:enable","note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","numVars":1,"operation":"and","value":true,"variable1":"bms:CommsOK"},"DCCharging":{"enable":"/config/bms:enable","expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","numVars":1,"operation":"and","value":false,"variable1":"bms:DCClosed"},"DCCurrent_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent"}]}]},"enable":"/config/bms:enable","note":"Calculates the total DC current reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DCCurrent"},"DCDischarging":{"enable":"/config/bms:enable","expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCPower":{"enable":"/config/bms:enable","note":"Calculates the total DC power reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DCPower"},"DCVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the average DC voltage reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:DCVoltage"},"DischargeableEnergy":{"enable":"/config/bms:enable","note":"Calculates the total dischargeable energy reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargeableEnergy"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"MaxCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MaxCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the maximum cell temperature reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:MaxCellTemp"},"MaxCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MaxCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the maximum cell voltage reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:MaxCellVoltage"},"MinCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MinCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the minimum cell temperature reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:MinCellTemp"},"MinCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MinCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the minimum cell voltage reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:MinCellVoltage"},"NumRacksOnline_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:NumRacksOnline"}]}]},"enable":"/config/bms:enable","note":"Calculates the total number of racks online reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:NumRacksOnline"},"NumRacksTotal":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:NumRacksTotal"}]}]},"enable":"/config/bms:enable","note":"Calculates the total number of racks reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:NumRacksTotal"},"SOC_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:SOC"}]}]},"enable":"/config/bms:enable","note":"Calculates the average SOC reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:SOC"},"SOH_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:SOH"}]}]},"enable":"/config/bms:enable","note":"Calculates the min SOH reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:SOH"},"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/faults/bms":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/schedule/wake_monitor/bms":{"/status/bms:AnyFireFaultActive":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CellVoltageDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CurrentBeforeStopIsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:DCVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:HeartbeatRead":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:IsAlarming":{"amap":"bms","func":"CalculateVar"},"/status/bms:IsFaulted":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MaxCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:NumRacksOnline":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:OverCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:OverCurrentFault":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:SOH":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:TotalAlarmCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:TotalFaultCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentFault":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/bms:enable","numVars":2,"operation":"or","value":false,"variable1":"bms:AnyFireFaultActive","variable2":"/status/bms:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms:enable","note":"Set to true if the BMS DC current(s) are within an acceptable level before stopping the PCS","numVars":1,"operation":"and","value":false,"variable1":"bms:CurrentBeforeStopIsOK"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":0,"MaxAlarmTimeout":1,"MaxFaultThreshold":0,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":0,"MaxResetValue":0,"MinAlarmThreshold":0,"MinAlarmTimeout":1,"MinFaultThreshold":0,"MinFaultTimeout":2.5,"MinRecoverTimeout":0,"MinResetValue":0,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"enable":"/config/bms:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/bms:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:SystemFault","variable2":"/status/bms:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":45,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":52,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":45,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note1":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxAlarmThreshold"},{"uri":"/status/bms:DCCurrent@MaxResetValue"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the max alarm and reset thresholds for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/bms:enable","numVars":2,"operation":"+","value":0,"variable1":"bms:TotalAlarmCnt","variable2":"/status/bms:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/bms:enable","numVars":2,"operation":"+","value":0,"variable1":"bms:TotalFaultCnt","variable2":"/status/bms:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinAlarmThreshold"},{"uri":"/status/bms:DCCurrent@MinResetValue"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the min alarm and reset thresholds for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"}}
[3.75478s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","NumRacks":9,"enable":false,"enum_opt":false},"/limits/bms":{"ChargeCurrentLimit":{"enable":"/config/bms:enable","note":"Calculates the total charge current limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargeCurrentLimit"},"ChargePowerLimit":{"enable":"/config/bms:enable","note":"Calculates the total charge power limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargePowerLimit"},"DischargeCurrentLimit":{"enable":"/config/bms:enable","note":"Calculates the total discharge current limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargeCurrentLimit"},"DischargePowerLimit":{"enable":"/config/bms:enable","note":"Calculates the total discharge power limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargePowerLimit"}},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/limits/bms:ChargeCurrentLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:ChargePowerLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:DischargeCurrentLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:DischargePowerLimit":{"amap":"bms","func":"CalculateVar"},"/status/bms:AvgCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:AvgCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:ChargeableEnergy":{"amap":"bms","func":"CalculateVar"},"/status/bms:CommsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCClosed":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCPower":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DischargeableEnergy":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MinCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MinCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:NumRacksOnline_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:NumRacksTotal":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOH_Calculated":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AvgCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:AvgCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the average cell temperature reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:AvgCellTemp"},"AvgCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:AvgCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the average cell voltage reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:AvgCellVoltage"},"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"enable":"/config/bms:enable","note":"Calculates the max difference between the max and min cell temperatures reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:CellTempDelta"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"enable":"/config/bms:enable","note":"Calculates the max difference between the max and min cell voltages reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:CellVoltageDelta"},"ChargeableEnergy":{"enable":"/config/bms:enable","note":"Calculates the total chargeable energy reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargeableEnergy"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"enable":"/config/bms:enable","note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","numVars":1,"operation":"and","value":true,"variable1":"bms:CommsOK"},"DCCharging":{"enable":"/config/bms:enable","expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","numVars":1,"operation":"and","value":false,"variable1":"bms:DCClosed"},"DCCurrent_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent"}]}]},"enable":"/config/bms:enable","note":"Calculates the total DC current reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DCCurrent"},"DCDischarging":{"enable":"/config/bms:enable","expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCPower":{"enable":"/config/bms:enable","note":"Calculates the total DC power reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DCPower"},"DCVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the average DC voltage reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:DCVoltage"},"DischargeableEnergy":{"enable":"/config/bms:enable","note":"Calculates the total dischargeable energy reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargeableEnergy"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"MaxCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MaxCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the maximum cell temperature reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:MaxCellTemp"},"MaxCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MaxCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the maximum cell voltage reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:MaxCellVoltage"},"MinCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MinCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the minimum cell temperature reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:MinCellTemp"},"MinCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MinCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the minimum cell voltage reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:MinCellVoltage"},"NumRacksOnline_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:NumRacksOnline"}]}]},"enable":"/config/bms:enable","note":"Calculates the total number of racks online reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:NumRacksOnline"},"NumRacksTotal":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:NumRacksTotal"}]}]},"enable":"/config/bms:enable","note":"Calculates the total number of racks reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:NumRacksTotal"},"SOC_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:SOC"}]}]},"enable":"/config/bms:enable","note":"Calculates the average SOC reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:SOC"},"SOH_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:SOH"}]}]},"enable":"/config/bms:enable","note":"Calculates the min SOH reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:SOH"},"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/faults/bms":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/schedule/wake_monitor/bms":{"/status/bms:AnyFireFaultActive":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CellVoltageDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CurrentBeforeStopIsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:DCVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:HeartbeatRead":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:IsAlarming":{"amap":"bms","func":"CalculateVar"},"/status/bms:IsFaulted":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MaxCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:NumRacksOnline":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:OverCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:OverCurrentFault":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:SOH":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:TotalAlarmCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:TotalFaultCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentFault":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/bms:enable","numVars":2,"operation":"or","value":false,"variable1":"bms:AnyFireFaultActive","variable2":"/status/bms:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms:enable","note":"Set to true if the BMS DC current(s) are within an acceptable level before stopping the PCS","numVars":1,"operation":"and","value":false,"variable1":"bms:CurrentBeforeStopIsOK"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":0,"MaxAlarmTimeout":1,"MaxFaultThreshold":0,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":0,"MaxResetValue":0,"MinAlarmThreshold":0,"MinAlarmTimeout":1,"MinFaultThreshold":0,"MinFaultTimeout":2.5,"MinRecoverTimeout":0,"MinResetValue":0,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"enable":"/config/bms:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/bms:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:SystemFault","variable2":"/status/bms:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":45,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":52,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":45,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note1":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxAlarmThreshold"},{"uri":"/status/bms:DCCurrent@MaxResetValue"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the max alarm and reset thresholds for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/bms:enable","numVars":2,"operation":"+","value":0,"variable1":"bms:TotalAlarmCnt","variable2":"/status/bms:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/bms:enable","numVars":2,"operation":"+","value":0,"variable1":"bms:TotalFaultCnt","variable2":"/status/bms:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinAlarmThreshold"},{"uri":"/status/bms:DCCurrent@MinResetValue"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the min alarm and reset thresholds for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"}},"/components/bms":{"fire_fault_active":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":false,"uri":"/status/bms:FireFaultActive"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":true,"uri":"/status/bms:FireFaultActive"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:fire_fault_active@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms":{"checkInputs_bms":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms:status@ifChanged"},{"outValue":false,"uri":"/components/bms:fire_fault_active@ifChanged"}]}]},"enable":"/config/bms:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms":{"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms:heartbeat_read","vlink":"/status/bms:HeartbeatRead"}}
[3.75616s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","NumRacks":9,"enable":false,"enum_opt":false},"/limits/bms":{"ChargeCurrentLimit":{"enable":"/config/bms:enable","note":"Calculates the total charge current limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargeCurrentLimit"},"ChargePowerLimit":{"enable":"/config/bms:enable","note":"Calculates the total charge power limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargePowerLimit"},"DischargeCurrentLimit":{"enable":"/config/bms:enable","note":"Calculates the total discharge current limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargeCurrentLimit"},"DischargePowerLimit":{"enable":"/config/bms:enable","note":"Calculates the total discharge power limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargePowerLimit"}},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/limits/bms:ChargeCurrentLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:ChargePowerLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:DischargeCurrentLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:DischargePowerLimit":{"amap":"bms","func":"CalculateVar"},"/status/bms:AvgCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:AvgCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:ChargeableEnergy":{"amap":"bms","func":"CalculateVar"},"/status/bms:CommsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCClosed":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCPower":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DischargeableEnergy":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MinCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MinCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:NumRacksOnline_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:NumRacksTotal":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOH_Calculated":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AvgCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:AvgCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the average cell temperature reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:AvgCellTemp"},"AvgCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:AvgCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the average cell voltage reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:AvgCellVoltage"},"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"enable":"/config/bms:enable","note":"Calculates the max difference between the max and min cell temperatures reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:CellTempDelta"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"enable":"/config/bms:enable","note":"Calculates the max difference between the max and min cell voltages reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:CellVoltageDelta"},"ChargeableEnergy":{"enable":"/config/bms:enable","note":"Calculates the total chargeable energy reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargeableEnergy"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"enable":"/config/bms:enable","note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","numVars":1,"operation":"and","value":true,"variable1":"bms:CommsOK"},"DCCharging":{"enable":"/config/bms:enable","expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","numVars":1,"operation":"and","value":false,"variable1":"bms:DCClosed"},"DCCurrent_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent"}]}]},"enable":"/config/bms:enable","note":"Calculates the total DC current reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DCCurrent"},"DCDischarging":{"enable":"/config/bms:enable","expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCPower":{"enable":"/config/bms:enable","note":"Calculates the total DC power reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DCPower"},"DCVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the average DC voltage reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:DCVoltage"},"DischargeableEnergy":{"enable":"/config/bms:enable","note":"Calculates the total dischargeable energy reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargeableEnergy"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"MaxCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MaxCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the maximum cell temperature reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:MaxCellTemp"},"MaxCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MaxCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the maximum cell voltage reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:MaxCellVoltage"},"MinCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MinCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the minimum cell temperature reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:MinCellTemp"},"MinCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MinCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the minimum cell voltage reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:MinCellVoltage"},"NumRacksOnline_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:NumRacksOnline"}]}]},"enable":"/config/bms:enable","note":"Calculates the total number of racks online reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:NumRacksOnline"},"NumRacksTotal":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:NumRacksTotal"}]}]},"enable":"/config/bms:enable","note":"Calculates the total number of racks reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:NumRacksTotal"},"SOC_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:SOC"}]}]},"enable":"/config/bms:enable","note":"Calculates the average SOC reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:SOC"},"SOH_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:SOH"}]}]},"enable":"/config/bms:enable","note":"Calculates the min SOH reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:SOH"},"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/faults/bms":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/schedule/wake_monitor/bms":{"/status/bms:AnyFireFaultActive":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CellVoltageDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CurrentBeforeStopIsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:DCVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:HeartbeatRead":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:IsAlarming":{"amap":"bms","func":"CalculateVar"},"/status/bms:IsFaulted":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MaxCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:NumRacksOnline":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:OverCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:OverCurrentFault":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:SOH":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:TotalAlarmCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:TotalFaultCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentFault":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/bms:enable","numVars":2,"operation":"or","value":false,"variable1":"bms:AnyFireFaultActive","variable2":"/status/bms:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms:enable","note":"Set to true if the BMS DC current(s) are within an acceptable level before stopping the PCS","numVars":1,"operation":"and","value":false,"variable1":"bms:CurrentBeforeStopIsOK"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":0,"MaxAlarmTimeout":1,"MaxFaultThreshold":0,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":0,"MaxResetValue":0,"MinAlarmThreshold":0,"MinAlarmTimeout":1,"MinFaultThreshold":0,"MinFaultTimeout":2.5,"MinRecoverTimeout":0,"MinResetValue":0,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"enable":"/config/bms:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/bms:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:SystemFault","variable2":"/status/bms:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":45,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":52,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":45,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note1":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxAlarmThreshold"},{"uri":"/status/bms:DCCurrent@MaxResetValue"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the max alarm and reset thresholds for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/bms:enable","numVars":2,"operation":"+","value":0,"variable1":"bms:TotalAlarmCnt","variable2":"/status/bms:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/bms:enable","numVars":2,"operation":"+","value":0,"variable1":"bms:TotalFaultCnt","variable2":"/status/bms:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinAlarmThreshold"},{"uri":"/status/bms:DCCurrent@MinResetValue"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the min alarm and reset thresholds for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"}},"/components/bms":{"fire_fault_active":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":false,"uri":"/status/bms:FireFaultActive"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":true,"uri":"/status/bms:FireFaultActive"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:fire_fault_active@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms":{"checkInputs_bms":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms:status@ifChanged"},{"outValue":false,"uri":"/components/bms:fire_fault_active@ifChanged"}]}]},"enable":"/config/bms:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms":{"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms:heartbeat_read","vlink":"/status/bms:HeartbeatRead"}},"/site/ess":{"bms_alarm_active":{"name":"BMS Alarm Active","size":1,"type":"status","value":false},"bms_avg_cell_temp":{"name":"BMS Avg Cell Temperature","scale":100,"size":1,"type":"status","units":"°C","value":0},"bms_avg_cell_voltage":{"name":"BMS Avg Cell Voltage","scale":10000,"size":1,"type":"status","units":"V","value":0},"bms_cell_temp_delta":{"name":"BMS Cell Temperature Delta","scale":100,"size":1,"type":"status","units":"°C","value":0},"bms_cell_voltage_delta":{"name":"BMS Cell Voltage Delta","scale":10000,"size":1,"type":"status","units":"V","value":0},"bms_chargeable_energy":{"name":"BMS Chargeable Energy","scale":10,"size":1,"type":"status","units":"kWh","value":0},"bms_close_contactors_enabled":{"excludeFromFile":true,"name":"BMS Close Contactors Enabled","size":1,"type":"status","value":false},"bms_comms_ok":{"name":"BMS Comms OK","size":1,"type":"status","value":false},"bms_control_alarms":{"bit0":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit2":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","bit4":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","name":"BMS Control Alarms","type":"bitfield","value":0},"bms_current_before_stop_is_ok":{"excludeFromFile":true,"name":"BMS Current Before Stop is OK","size":1,"type":"status","value":false},"bms_dc_charging":{"name":"BMS DC Charging","size":1,"type":"status","value":false},"bms_dc_contactor_control":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/ess:remote_control_enable","every":1,"ifChanged":false,"name":"BMS Contactor Control Command","note1":"Initiates BMS close and open contactors","note2":"2-\u003eclose contactors | 3-\u003eopen contactors","offset":0,"size":1,"type":"control","uri":"/sched/ess:SiteBMSContactorControl","value":0},"bms_dc_contactors_closed":{"name":"BMS DC Contactors Closed","size":1,"type":"status","value":false},"bms_dc_current":{"name":"BMS DC Current","scale":10,"signed":true,"size":1,"type":"status","units":"A","value":0},"bms_dc_discharging":{"name":"BMS DC Discharging","size":1,"type":"status","value":false},"bms_dc_power":{"name":"BMS DC Power","scale":10,"signed":true,"size":1,"type":"status","units":"kW","value":0},"bms_dc_voltage":{"name":"BMS DC Voltage","scale":10,"signed":true,"size":1,"type":"status","units":"V","value":0},"bms_dischargeable_energy":{"name":"BMS Dischargeable Energy","scale":10,"size":1,"type":"status","units":"kWh","value":0},"bms_fault_active":{"name":"BMS Fault Active","size":1,"type":"status","value":false},"bms_fire_fault_active":{"name":"BMS Fire Fault Active","size":1,"type":"status","value":false},"bms_max_cell_temp":{"name":"BMS Max Cell Temperature","scale":100,"size":1,"type":"status","units":"°C","value":0},"bms_max_cell_voltage":{"name":"BMS Max Cell Voltage","scale":10000,"size":1,"type":"status","units":"V","value":0},"bms_max_charge_current":{"name":"BMS Max Charge Current","signed":true,"size":1,"type":"status","units":"A","value":0},"bms_max_charge_power":{"name":"BMS Max Charge Power","signed":true,"size":1,"type":"status","units":"kW","value":0},"bms_max_discharge_current":{"name":"BMS Max Discharge Current","size":1,"type":"status","units":"A","value":0},"bms_max_discharge_power":{"name":"BMS Max Discharge Power","size":1,"type":"status","units":"kW","value":0},"bms_min_cell_temp":{"name":"BMS Min Cell Temperature","scale":100,"size":1,"type":"status","units":"°C","value":0},"bms_min_cell_voltage":{"name":"BMS Min Cell Voltage","scale":10000,"size":1,"type":"status","units":"V","value":0},"bms_monitor_alarms":{"bit0":"BMS CellTempDelta - Max Threshold Exceeded","bit1":"BMS CellVoltageDelta - Max Threshold Exceeded","bit10":"BMS NumRacksOnline - Min Threshold Exceeded","bit11":"BMS SOC - Max Threshold Exceeded","bit12":"BMS SOC - Min Threshold Exceeded","bit13":"BMS SOH - Min Threshold Exceeded","bit2":"BMS DCCurrent - Max Threshold Exceeded","bit3":"BMS DCCurrent - Min Threshold Exceeded","bit4":"BMS DCVoltage - Max Threshold Exceeded","bit5":"BMS DCVoltage - Min Threshold Exceeded","bit6":"BMS MaxCellTemp - Max Threshold Exceeded","bit7":"BMS MaxCellVoltage - Max Threshold Exceeded","bit8":"BMS MinCellTemp - Min Threshold Exceeded","bit9":"BMS MinCellVoltage - Min Threshold Exceeded","name":"BMS Monitor Alarms","type":"bitfield","value":0},"bms_monitor_faults":{"bit0":"BMS CellTempDelta - Max Threshold Exceeded","bit1":"BMS CellVoltageDelta - Max Threshold Exceeded","bit10":"BMS NumRacksOnline - Min Threshold Exceeded","bit11":"BMS SOC - Max Threshold Exceeded","bit12":"BMS SOC - Min Threshold Exceeded","bit13":"BMS SOH - Min Threshold Exceeded","bit2":"BMS DCCurrent - Max Threshold Exceeded","bit3":"BMS DCCurrent - Min Threshold Exceeded","bit4":"BMS DCVoltage - Max Threshold Exceeded","bit5":"BMS DCVoltage - Min Threshold Exceeded","bit6":"BMS MaxCellTemp - Max Threshold Exceeded","bit7":"BMS MaxCellVoltage - Max Threshold Exceeded","bit8":"BMS MinCellTemp - Min Threshold Exceeded","bit9":"BMS MinCellVoltage - Min Threshold Exceeded","name":"BMS Monitor Faults","type":"bitfield","value":0},"bms_num_racks_online":{"name":"BMS Number of Racks Online","size":1,"type":"status","value":0},"bms_num_racks_total":{"name":"BMS Number of Racks Total","size":1,"type":"status","value":0},"bms_open_contactors_enabled":{"excludeFromFile":true,"name":"BMS Open Contactors Enabled","size":1,"type":"status","value":false},"bms_soc":{"name":"BMS State of Charge (SOC)","scale":10,"size":1,"type":"status","units":"%","value":0},"bms_soh":{"name":"BMS State of Health (SOH)","scale":10,"size":1,"type":"status","units":"%","value":0},"bms_status":{"excludeFromFile":true,"name":"BMS Status","size":1,"type":"status","value":"INIT"}},"/vlinks/bms":{"site_bms_alarm_active":{"default":false,"value":"/site/ess:bms_alarm_active","vlink":"/status/bms:IsAlarming"},"site_bms_avg_cell_temp":{"default":0,"value":"/site/ess:bms_avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"site_bms_avg_cell_voltage":{"default":0,"value":"/site/ess:bms_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"site_bms_cell_temp_delta":{"default":0,"value":"/site/ess:bms_cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"site_bms_cell_voltage_delta":{"default":0,"value":"/site/ess:bms_cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"site_bms_chargeable_energy":{"default":0,"value":"/site/ess:bms_chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"site_bms_close_contactors_enabled":{"default":false,"value":"/site/ess:bms_close_contactors_enabled","vlink":"/status/bms:CloseContactorsEnabled"},"site_bms_comms_ok":{"default":false,"value":"/site/ess:bms_comms_ok","vlink":"/status/bms:CommsOK"},"site_bms_current_before_stop_is_ok":{"default":false,"value":"/site/ess:bms_current_before_stop_is_ok","vlink":"/status/bms:CurrentBeforeStopIsOK"},"site_bms_dc_charging":{"default":false,"value":"/site/ess:bms_dc_charging","vlink":"/status/bms:DCCharging"},"site_bms_dc_contactors_closed":{"default":false,"value":"/site/ess:bms_dc_contactors_closed","vlink":"/status/bms:DCClosed"},"site_bms_dc_current":{"default":0,"value":"/site/ess:bms_dc_current","vlink":"/status/bms:DCCurrent"},"site_bms_dc_discharging":{"default":false,"value":"/site/ess:bms_dc_discharging","vlink":"/status/bms:DCDischarging"},"site_bms_dc_power":{"default":0,"value":"/site/ess:bms_dc_power","vlink":"/status/bms:DCPower"},"site_bms_dc_voltage":{"default":0,"value":"/site/ess:bms_dc_voltage","vlink":"/status/bms:DCVoltage"},"site_bms_dischargeable_energy":{"default":0,"value":"/site/ess:bms_dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"site_bms_fault_active":{"default":false,"value":"/site/ess:bms_fault_active","vlink":"/status/bms:IsFaulted"},"site_bms_fire_fault_active":{"default":false,"value":"/site/ess:bms_fire_fault_active","vlink":"/status/bms:AnyFireFaultActive"},"site_bms_max_cell_temp":{"default":0,"value":"/site/ess:bms_max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"site_bms_max_cell_voltage":{"default":0,"value":"/site/ess:bms_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"site_bms_max_charge_current":{"default":0,"value":"/site/ess:bms_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"site_bms_max_charge_power":{"default":0,"value":"/site/ess:bms_max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"site_bms_max_discharge_current":{"default":0,"value":"/site/ess:bms_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"site_bms_max_discharge_power":{"default":0,"value":"/site/ess:bms_max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"site_bms_min_cell_temp":{"default":0,"value":"/site/ess:bms_min_cell_temp","vlink":"/status/bms:MinCellTemp"},"site_bms_min_cell_voltage":{"default":0,"value":"/site/ess:bms_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"site_bms_num_racks_online":{"default":0,"value":"/site/ess:bms_num_racks_online","vlink":"/status/bms:NumRacksOnline"},"site_bms_num_racks_total":{"default":0,"value":"/site/ess:bms_num_racks_total","vlink":"/status/bms:NumRacksTotal"},"site_bms_open_contactors_enabled":{"default":false,"value":"/site/ess:bms_open_contactors_enabled","vlink":"/status/bms:OpenContactorsEnabled"},"site_bms_soc":{"default":0,"value":"/site/ess:bms_soc","vlink":"/status/bms:SOC"},"site_bms_soh":{"default":0,"value":"/site/ess:bms_soh","vlink":"/status/bms:SOH"},"site_bms_status":{"default":"INIT","value":"/site/ess:bms_status","vlink":"/status/bms:Status"}}
[3.75943s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","NumRacks":9,"enable":false,"enum_opt":false},"/limits/bms":{"ChargeCurrentLimit":{"enable":"/config/bms:enable","note":"Calculates the total charge current limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargeCurrentLimit"},"ChargePowerLimit":{"enable":"/config/bms:enable","note":"Calculates the total charge power limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargePowerLimit"},"DischargeCurrentLimit":{"enable":"/config/bms:enable","note":"Calculates the total discharge current limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargeCurrentLimit"},"DischargePowerLimit":{"enable":"/config/bms:enable","note":"Calculates the total discharge power limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargePowerLimit"}},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/limits/bms:ChargeCurrentLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:ChargePowerLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:DischargeCurrentLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:DischargePowerLimit":{"amap":"bms","func":"CalculateVar"},"/status/bms:AvgCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:AvgCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:ChargeableEnergy":{"amap":"bms","func":"CalculateVar"},"/status/bms:CommsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCClosed":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCPower":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DischargeableEnergy":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MinCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MinCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:NumRacksOnline_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:NumRacksTotal":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOH_Calculated":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AvgCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:AvgCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the average cell temperature reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:AvgCellTemp"},"AvgCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:AvgCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the average cell voltage reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:AvgCellVoltage"},"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"enable":"/config/bms:enable","note":"Calculates the max difference between the max and min cell temperatures reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:CellTempDelta"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"enable":"/config/bms:enable","note":"Calculates the max difference between the max and min cell voltages reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:CellVoltageDelta"},"ChargeableEnergy":{"enable":"/config/bms:enable","note":"Calculates the total chargeable energy reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargeableEnergy"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"enable":"/config/bms:enable","note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","numVars":1,"operation":"and","value":true,"variable1":"bms:CommsOK"},"DCCharging":{"enable":"/config/bms:enable","expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","numVars":1,"operation":"and","value":false,"variable1":"bms:DCClosed"},"DCCurrent_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent"}]}]},"enable":"/config/bms:enable","note":"Calculates the total DC current reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DCCurrent"},"DCDischarging":{"enable":"/config/bms:enable","expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCPower":{"enable":"/config/bms:enable","note":"Calculates the total DC power reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DCPower"},"DCVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the average DC voltage reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:DCVoltage"},"DischargeableEnergy":{"enable":"/config/bms:enable","note":"Calculates the total dischargeable energy reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargeableEnergy"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"MaxCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MaxCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the maximum cell temperature reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:MaxCellTemp"},"MaxCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MaxCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the maximum cell voltage reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:MaxCellVoltage"},"MinCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MinCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the minimum cell temperature reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:MinCellTemp"},"MinCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MinCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the minimum cell voltage reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:MinCellVoltage"},"NumRacksOnline_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:NumRacksOnline"}]}]},"enable":"/config/bms:enable","note":"Calculates the total number of racks online reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:NumRacksOnline"},"NumRacksTotal":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:NumRacksTotal"}]}]},"enable":"/config/bms:enable","note":"Calculates the total number of racks reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:NumRacksTotal"},"SOC_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:SOC"}]}]},"enable":"/config/bms:enable","note":"Calculates the average SOC reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:SOC"},"SOH_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:SOH"}]}]},"enable":"/config/bms:enable","note":"Calculates the min SOH reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:SOH"},"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/faults/bms":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/schedule/wake_monitor/bms":{"/status/bms:AnyFireFaultActive":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CellVoltageDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CurrentBeforeStopIsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:DCVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:HeartbeatRead":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:IsAlarming":{"amap":"bms","func":"CalculateVar"},"/status/bms:IsFaulted":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MaxCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:NumRacksOnline":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:OverCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:OverCurrentFault":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:SOH":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:TotalAlarmCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:TotalFaultCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentFault":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/bms:enable","numVars":2,"operation":"or","value":false,"variable1":"bms:AnyFireFaultActive","variable2":"/status/bms:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms:enable","note":"Set to true if the BMS DC current(s) are within an acceptable level before stopping the PCS","numVars":1,"operation":"and","value":false,"variable1":"bms:CurrentBeforeStopIsOK"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":0,"MaxAlarmTimeout":1,"MaxFaultThreshold":0,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":0,"MaxResetValue":0,"MinAlarmThreshold":0,"MinAlarmTimeout":1,"MinFaultThreshold":0,"MinFaultTimeout":2.5,"MinRecoverTimeout":0,"MinResetValue":0,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"enable":"/config/bms:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/bms:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:SystemFault","variable2":"/status/bms:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":45,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":52,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":45,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note1":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxAlarmThreshold"},{"uri":"/status/bms:DCCurrent@MaxResetValue"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the max alarm and reset thresholds for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/bms:enable","numVars":2,"operation":"+","value":0,"variable1":"bms:TotalAlarmCnt","variable2":"/status/bms:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/bms:enable","numVars":2,"operation":"+","value":0,"variable1":"bms:TotalFaultCnt","variable2":"/status/bms:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinAlarmThreshold"},{"uri":"/status/bms:DCCurrent@MinResetValue"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the min alarm and reset thresholds for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"}},"/components/bms":{"fire_fault_active":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":false,"uri":"/status/bms:FireFaultActive"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":true,"uri":"/status/bms:FireFaultActive"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:fire_fault_active@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms":{"checkInputs_bms":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms:status@ifChanged"},{"outValue":false,"uri":"/components/bms:fire_fault_active@ifChanged"}]}]},"enable":"/config/bms:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms":{"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms:heartbeat_read","vlink":"/status/bms:HeartbeatRead"}},"/site/ess":{"bms_alarm_active":{"name":"BMS Alarm Active","size":1,"type":"status","value":false},"bms_avg_cell_temp":{"name":"BMS Avg Cell Temperature","scale":100,"size":1,"type":"status","units":"°C","value":0},"bms_avg_cell_voltage":{"name":"BMS Avg Cell Voltage","scale":10000,"size":1,"type":"status","units":"V","value":0},"bms_cell_temp_delta":{"name":"BMS Cell Temperature Delta","scale":100,"size":1,"type":"status","units":"°C","value":0},"bms_cell_voltage_delta":{"name":"BMS Cell Voltage Delta","scale":10000,"size":1,"type":"status","units":"V","value":0},"bms_chargeable_energy":{"name":"BMS Chargeable Energy","scale":10,"size":1,"type":"status","units":"kWh","value":0},"bms_close_contactors_enabled":{"excludeFromFile":true,"name":"BMS Close Contactors Enabled","size":1,"type":"status","value":false},"bms_comms_ok":{"name":"BMS Comms OK","size":1,"type":"status","value":false},"bms_control_alarms":{"bit0":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit2":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","bit4":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","name":"BMS Control Alarms","type":"bitfield","value":0},"bms_current_before_stop_is_ok":{"excludeFromFile":true,"name":"BMS Current Before Stop is OK","size":1,"type":"status","value":false},"bms_dc_charging":{"name":"BMS DC Charging","size":1,"type":"status","value":false},"bms_dc_contactor_control":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/ess:remote_control_enable","every":1,"ifChanged":false,"name":"BMS Contactor Control Command","note1":"Initiates BMS close and open contactors","note2":"2-\u003eclose contactors | 3-\u003eopen contactors","offset":0,"size":1,"type":"control","uri":"/sched/ess:SiteBMSContactorControl","value":0},"bms_dc_contactors_closed":{"name":"BMS DC Contactors Closed","size":1,"type":"status","value":false},"bms_dc_current":{"name":"BMS DC Current","scale":10,"signed":true,"size":1,"type":"status","units":"A","value":0},"bms_dc_discharging":{"name":"BMS DC Discharging","size":1,"type":"status","value":false},"bms_dc_power":{"name":"BMS DC Power","scale":10,"signed":true,"size":1,"type":"status","units":"kW","value":0},"bms_dc_voltage":{"name":"BMS DC Voltage","scale":10,"signed":true,"size":1,"type":"status","units":"V","value":0},"bms_dischargeable_energy":{"name":"BMS Dischargeable Energy","scale":10,"size":1,"type":"status","units":"kWh","value":0},"bms_fault_active":{"name":"BMS Fault Active","size":1,"type":"status","value":false},"bms_fire_fault_active":{"name":"BMS Fire Fault Active","size":1,"type":"status","value":false},"bms_max_cell_temp":{"name":"BMS Max Cell Temperature","scale":100,"size":1,"type":"status","units":"°C","value":0},"bms_max_cell_voltage":{"name":"BMS Max Cell Voltage","scale":10000,"size":1,"type":"status","units":"V","value":0},"bms_max_charge_current":{"name":"BMS Max Charge Current","signed":true,"size":1,"type":"status","units":"A","value":0},"bms_max_charge_power":{"name":"BMS Max Charge Power","signed":true,"size":1,"type":"status","units":"kW","value":0},"bms_max_discharge_current":{"name":"BMS Max Discharge Current","size":1,"type":"status","units":"A","value":0},"bms_max_discharge_power":{"name":"BMS Max Discharge Power","size":1,"type":"status","units":"kW","value":0},"bms_min_cell_temp":{"name":"BMS Min Cell Temperature","scale":100,"size":1,"type":"status","units":"°C","value":0},"bms_min_cell_voltage":{"name":"BMS Min Cell Voltage","scale":10000,"size":1,"type":"status","units":"V","value":0},"bms_monitor_alarms":{"bit0":"BMS CellTempDelta - Max Threshold Exceeded","bit1":"BMS CellVoltageDelta - Max Threshold Exceeded","bit10":"BMS NumRacksOnline - Min Threshold Exceeded","bit11":"BMS SOC - Max Threshold Exceeded","bit12":"BMS SOC - Min Threshold Exceeded","bit13":"BMS SOH - Min Threshold Exceeded","bit2":"BMS DCCurrent - Max Threshold Exceeded","bit3":"BMS DCCurrent - Min Threshold Exceeded","bit4":"BMS DCVoltage - Max Threshold Exceeded","bit5":"BMS DCVoltage - Min Threshold Exceeded","bit6":"BMS MaxCellTemp - Max Threshold Exceeded","bit7":"BMS MaxCellVoltage - Max Threshold Exceeded","bit8":"BMS MinCellTemp - Min Threshold Exceeded","bit9":"BMS MinCellVoltage - Min Threshold Exceeded","name":"BMS Monitor Alarms","type":"bitfield","value":0},"bms_monitor_faults":{"bit0":"BMS CellTempDelta - Max Threshold Exceeded","bit1":"BMS CellVoltageDelta - Max Threshold Exceeded","bit10":"BMS NumRacksOnline - Min Threshold Exceeded","bit11":"BMS SOC - Max Threshold Exceeded","bit12":"BMS SOC - Min Threshold Exceeded","bit13":"BMS SOH - Min Threshold Exceeded","bit2":"BMS DCCurrent - Max Threshold Exceeded","bit3":"BMS DCCurrent - Min Threshold Exceeded","bit4":"BMS DCVoltage - Max Threshold Exceeded","bit5":"BMS DCVoltage - Min Threshold Exceeded","bit6":"BMS MaxCellTemp - Max Threshold Exceeded","bit7":"BMS MaxCellVoltage - Max Threshold Exceeded","bit8":"BMS MinCellTemp - Min Threshold Exceeded","bit9":"BMS MinCellVoltage - Min Threshold Exceeded","name":"BMS Monitor Faults","type":"bitfield","value":0},"bms_num_racks_online":{"name":"BMS Number of Racks Online","size":1,"type":"status","value":0},"bms_num_racks_total":{"name":"BMS Number of Racks Total","size":1,"type":"status","value":0},"bms_open_contactors_enabled":{"excludeFromFile":true,"name":"BMS Open Contactors Enabled","size":1,"type":"status","value":false},"bms_soc":{"name":"BMS State of Charge (SOC)","scale":10,"size":1,"type":"status","units":"%","value":0},"bms_soh":{"name":"BMS State of Health (SOH)","scale":10,"size":1,"type":"status","units":"%","value":0},"bms_status":{"excludeFromFile":true,"name":"BMS Status","size":1,"type":"status","value":"INIT"}},"/vlinks/bms":{"site_bms_alarm_active":{"default":false,"value":"/site/ess:bms_alarm_active","vlink":"/status/bms:IsAlarming"},"site_bms_avg_cell_temp":{"default":0,"value":"/site/ess:bms_avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"site_bms_avg_cell_voltage":{"default":0,"value":"/site/ess:bms_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"site_bms_cell_temp_delta":{"default":0,"value":"/site/ess:bms_cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"site_bms_cell_voltage_delta":{"default":0,"value":"/site/ess:bms_cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"site_bms_chargeable_energy":{"default":0,"value":"/site/ess:bms_chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"site_bms_close_contactors_enabled":{"default":false,"value":"/site/ess:bms_close_contactors_enabled","vlink":"/status/bms:CloseContactorsEnabled"},"site_bms_comms_ok":{"default":false,"value":"/site/ess:bms_comms_ok","vlink":"/status/bms:CommsOK"},"site_bms_current_before_stop_is_ok":{"default":false,"value":"/site/ess:bms_current_before_stop_is_ok","vlink":"/status/bms:CurrentBeforeStopIsOK"},"site_bms_dc_charging":{"default":false,"value":"/site/ess:bms_dc_charging","vlink":"/status/bms:DCCharging"},"site_bms_dc_contactors_closed":{"default":false,"value":"/site/ess:bms_dc_contactors_closed","vlink":"/status/bms:DCClosed"},"site_bms_dc_current":{"default":0,"value":"/site/ess:bms_dc_current","vlink":"/status/bms:DCCurrent"},"site_bms_dc_discharging":{"default":false,"value":"/site/ess:bms_dc_discharging","vlink":"/status/bms:DCDischarging"},"site_bms_dc_power":{"default":0,"value":"/site/ess:bms_dc_power","vlink":"/status/bms:DCPower"},"site_bms_dc_voltage":{"default":0,"value":"/site/ess:bms_dc_voltage","vlink":"/status/bms:DCVoltage"},"site_bms_dischargeable_energy":{"default":0,"value":"/site/ess:bms_dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"site_bms_fault_active":{"default":false,"value":"/site/ess:bms_fault_active","vlink":"/status/bms:IsFaulted"},"site_bms_fire_fault_active":{"default":false,"value":"/site/ess:bms_fire_fault_active","vlink":"/status/bms:AnyFireFaultActive"},"site_bms_max_cell_temp":{"default":0,"value":"/site/ess:bms_max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"site_bms_max_cell_voltage":{"default":0,"value":"/site/ess:bms_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"site_bms_max_charge_current":{"default":0,"value":"/site/ess:bms_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"site_bms_max_charge_power":{"default":0,"value":"/site/ess:bms_max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"site_bms_max_discharge_current":{"default":0,"value":"/site/ess:bms_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"site_bms_max_discharge_power":{"default":0,"value":"/site/ess:bms_max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"site_bms_min_cell_temp":{"default":0,"value":"/site/ess:bms_min_cell_temp","vlink":"/status/bms:MinCellTemp"},"site_bms_min_cell_voltage":{"default":0,"value":"/site/ess:bms_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"site_bms_num_racks_online":{"default":0,"value":"/site/ess:bms_num_racks_online","vlink":"/status/bms:NumRacksOnline"},"site_bms_num_racks_total":{"default":0,"value":"/site/ess:bms_num_racks_total","vlink":"/status/bms:NumRacksTotal"},"site_bms_open_contactors_enabled":{"default":false,"value":"/site/ess:bms_open_contactors_enabled","vlink":"/status/bms:OpenContactorsEnabled"},"site_bms_soc":{"default":0,"value":"/site/ess:bms_soc","vlink":"/status/bms:SOC"},"site_bms_soh":{"default":0,"value":"/site/ess:bms_soh","vlink":"/status/bms:SOH"},"site_bms_status":{"default":"INIT","value":"/site/ess:bms_status","vlink":"/status/bms:Status"}},"/assets/bms/summary":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"chargeable_energy":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"close_contactors":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":false,"every":0.5,"name":"Close DC Contactor","note":"Enabled conditions: ![/status/bms/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode] \u0026\u0026 ![/status/bms/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/bms:LocalStartBMS","value":false},"comms_ok":{"value":false},"dc_charging":{"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_discharging":{"value":false},"dc_power":{"value":0},"dc_voltage":{"value":0},"dischargeable_energy":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/summary:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"num_racks_online":{"value":0},"num_racks_total":{"value":0},"open_contactors":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":false,"every":0.5,"name":"Open DC Contactor","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 ![/status/pcs/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/bms:LocalStopBMS","value":false},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/bms":{"ui_avg_cell_temp":{"default":0,"value":"/assets/bms/summary:avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"ui_avg_cell_voltage":{"default":0,"value":"/assets/bms/summary:avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"ui_cell_temp_delta":{"default":0,"value":"/assets/bms/summary:cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"ui_cell_voltage_delta":{"default":0,"value":"/assets/bms/summary:cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"ui_chargeable_energy":{"default":0,"value":"/assets/bms/summary:chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"ui_comms_ok":{"default":false,"value":"/assets/bms/summary:comms_ok","vlink":"/status/bms:CommsOK"},"ui_dc_charging":{"default":false,"value":"/assets/bms/summary:dc_charging","vlink":"/status/bms:DCCharging"},"ui_dc_contactors_closed":{"default":false,"value":"/assets/bms/summary:dc_contactors_closed","vlink":"/status/bms:DCClosed"},"ui_dc_current":{"default":0,"value":"/assets/bms/summary:dc_current","vlink":"/status/bms:DCCurrent"},"ui_dc_discharging":{"default":false,"value":"/assets/bms/summary:dc_discharging","vlink":"/status/bms:DCDischarging"},"ui_dc_power":{"default":0,"value":"/assets/bms/summary:dc_power","vlink":"/status/bms:DCPower"},"ui_dc_voltage":{"default":0,"value":"/assets/bms/summary:dc_voltage","vlink":"/status/bms:DCVoltage"},"ui_dischargeable_energy":{"default":0,"value":"/assets/bms/summary:dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"ui_max_cell_temp":{"default":0,"value":"/assets/bms/summary:max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"ui_max_cell_voltage":{"default":0,"value":"/assets/bms/summary:max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"ui_max_charge_current":{"default":0,"value":"/assets/bms/summary:max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"ui_max_charge_power":{"default":0,"value":"/assets/bms/summary:max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"ui_max_discharge_current":{"default":0,"value":"/assets/bms/summary:max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"ui_max_discharge_power":{"default":0,"value":"/assets/bms/summary:max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"ui_min_cell_temp":{"default":0,"value":"/assets/bms/summary:min_cell_temp","vlink":"/status/bms:MinCellTemp"},"ui_min_cell_voltage":{"default":0,"value":"/assets/bms/summary:min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"ui_num_racks_online":{"default":0,"value":"/assets/bms/summary:num_racks_online","vlink":"/status/bms:NumRacksOnline"},"ui_num_racks_total":{"default":0,"value":"/assets/bms/summary:num_racks_total","vlink":"/status/bms:NumRacksTotal"},"ui_soc":{"default":0,"value":"/assets/bms/summary:soc","vlink":"/status/bms:SOC"},"ui_soh":{"default":0,"value":"/assets/bms/summary:soh","vlink":"/status/bms:SOH"},"ui_status":{"default":"INIT","value":"/assets/bms/summary:status","vlink":"/status/bms:Status"}}
[3.76295s  ] [info    ] [configLoad     ] Final tbody: {"/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","NumRacks":9,"enable":false,"enum_opt":false},"/limits/bms":{"ChargeCurrentLimit":{"enable":"/config/bms:enable","note":"Calculates the total charge current limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargeCurrentLimit"},"ChargePowerLimit":{"enable":"/config/bms:enable","note":"Calculates the total charge power limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargePowerLimit"},"DischargeCurrentLimit":{"enable":"/config/bms:enable","note":"Calculates the total discharge current limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargeCurrentLimit"},"DischargePowerLimit":{"enable":"/config/bms:enable","note":"Calculates the total discharge power limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargePowerLimit"}},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/limits/bms:ChargeCurrentLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:ChargePowerLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:DischargeCurrentLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:DischargePowerLimit":{"amap":"bms","func":"CalculateVar"},"/status/bms:AvgCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:AvgCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:ChargeableEnergy":{"amap":"bms","func":"CalculateVar"},"/status/bms:CommsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCClosed":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCPower":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DischargeableEnergy":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MinCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MinCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:NumRacksOnline_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:NumRacksTotal":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOH_Calculated":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AvgCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:AvgCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the average cell temperature reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:AvgCellTemp"},"AvgCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:AvgCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the average cell voltage reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:AvgCellVoltage"},"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"enable":"/config/bms:enable","note":"Calculates the max difference between the max and min cell temperatures reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:CellTempDelta"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"enable":"/config/bms:enable","note":"Calculates the max difference between the max and min cell voltages reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:CellVoltageDelta"},"ChargeableEnergy":{"enable":"/config/bms:enable","note":"Calculates the total chargeable energy reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargeableEnergy"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"enable":"/config/bms:enable","note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","numVars":1,"operation":"and","value":true,"variable1":"bms:CommsOK"},"DCCharging":{"enable":"/config/bms:enable","expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","numVars":1,"operation":"and","value":false,"variable1":"bms:DCClosed"},"DCCurrent_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent"}]}]},"enable":"/config/bms:enable","note":"Calculates the total DC current reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DCCurrent"},"DCDischarging":{"enable":"/config/bms:enable","expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCPower":{"enable":"/config/bms:enable","note":"Calculates the total DC power reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DCPower"},"DCVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the average DC voltage reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:DCVoltage"},"DischargeableEnergy":{"enable":"/config/bms:enable","note":"Calculates the total dischargeable energy reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargeableEnergy"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"MaxCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MaxCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the maximum cell temperature reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:MaxCellTemp"},"MaxCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MaxCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the maximum cell voltage reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:MaxCellVoltage"},"MinCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MinCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the minimum cell temperature reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:MinCellTemp"},"MinCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MinCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the minimum cell voltage reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:MinCellVoltage"},"NumRacksOnline_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:NumRacksOnline"}]}]},"enable":"/config/bms:enable","note":"Calculates the total number of racks online reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:NumRacksOnline"},"NumRacksTotal":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:NumRacksTotal"}]}]},"enable":"/config/bms:enable","note":"Calculates the total number of racks reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:NumRacksTotal"},"SOC_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:SOC"}]}]},"enable":"/config/bms:enable","note":"Calculates the average SOC reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:SOC"},"SOH_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:SOH"}]}]},"enable":"/config/bms:enable","note":"Calculates the min SOH reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:SOH"},"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/faults/bms":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/schedule/wake_monitor/bms":{"/status/bms:AnyFireFaultActive":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CellVoltageDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CurrentBeforeStopIsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:DCVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:HeartbeatRead":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:IsAlarming":{"amap":"bms","func":"CalculateVar"},"/status/bms:IsFaulted":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MaxCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:NumRacksOnline":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:OverCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:OverCurrentFault":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:SOH":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:TotalAlarmCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:TotalFaultCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentFault":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/bms:enable","numVars":2,"operation":"or","value":false,"variable1":"bms:AnyFireFaultActive","variable2":"/status/bms:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms:enable","note":"Set to true if the BMS DC current(s) are within an acceptable level before stopping the PCS","numVars":1,"operation":"and","value":false,"variable1":"bms:CurrentBeforeStopIsOK"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":0,"MaxAlarmTimeout":1,"MaxFaultThreshold":0,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":0,"MaxResetValue":0,"MinAlarmThreshold":0,"MinAlarmTimeout":1,"MinFaultThreshold":0,"MinFaultTimeout":2.5,"MinRecoverTimeout":0,"MinResetValue":0,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"enable":"/config/bms:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/bms:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:SystemFault","variable2":"/status/bms:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":45,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":52,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":45,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note1":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxAlarmThreshold"},{"uri":"/status/bms:DCCurrent@MaxResetValue"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the max alarm and reset thresholds for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/bms:enable","numVars":2,"operation":"+","value":0,"variable1":"bms:TotalAlarmCnt","variable2":"/status/bms:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/bms:enable","numVars":2,"operation":"+","value":0,"variable1":"bms:TotalFaultCnt","variable2":"/status/bms:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinAlarmThreshold"},{"uri":"/status/bms:DCCurrent@MinResetValue"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the min alarm and reset thresholds for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"}},"/components/bms":{"fire_fault_active":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":false,"uri":"/status/bms:FireFaultActive"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":true,"uri":"/status/bms:FireFaultActive"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:fire_fault_active@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms":{"checkInputs_bms":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms:status@ifChanged"},{"outValue":false,"uri":"/components/bms:fire_fault_active@ifChanged"}]}]},"enable":"/config/bms:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms":{"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms:heartbeat_read","vlink":"/status/bms:HeartbeatRead"}},"/site/ess":{"bms_alarm_active":{"name":"BMS Alarm Active","size":1,"type":"status","value":false},"bms_avg_cell_temp":{"name":"BMS Avg Cell Temperature","scale":100,"size":1,"type":"status","units":"°C","value":0},"bms_avg_cell_voltage":{"name":"BMS Avg Cell Voltage","scale":10000,"size":1,"type":"status","units":"V","value":0},"bms_cell_temp_delta":{"name":"BMS Cell Temperature Delta","scale":100,"size":1,"type":"status","units":"°C","value":0},"bms_cell_voltage_delta":{"name":"BMS Cell Voltage Delta","scale":10000,"size":1,"type":"status","units":"V","value":0},"bms_chargeable_energy":{"name":"BMS Chargeable Energy","scale":10,"size":1,"type":"status","units":"kWh","value":0},"bms_close_contactors_enabled":{"excludeFromFile":true,"name":"BMS Close Contactors Enabled","size":1,"type":"status","value":false},"bms_comms_ok":{"name":"BMS Comms OK","size":1,"type":"status","value":false},"bms_control_alarms":{"bit0":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit2":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","bit4":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","name":"BMS Control Alarms","type":"bitfield","value":0},"bms_current_before_stop_is_ok":{"excludeFromFile":true,"name":"BMS Current Before Stop is OK","size":1,"type":"status","value":false},"bms_dc_charging":{"name":"BMS DC Charging","size":1,"type":"status","value":false},"bms_dc_contactor_control":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/ess:remote_control_enable","every":1,"ifChanged":false,"name":"BMS Contactor Control Command","note1":"Initiates BMS close and open contactors","note2":"2-\u003eclose contactors | 3-\u003eopen contactors","offset":0,"size":1,"type":"control","uri":"/sched/ess:SiteBMSContactorControl","value":0},"bms_dc_contactors_closed":{"name":"BMS DC Contactors Closed","size":1,"type":"status","value":false},"bms_dc_current":{"name":"BMS DC Current","scale":10,"signed":true,"size":1,"type":"status","units":"A","value":0},"bms_dc_discharging":{"name":"BMS DC Discharging","size":1,"type":"status","value":false},"bms_dc_power":{"name":"BMS DC Power","scale":10,"signed":true,"size":1,"type":"status","units":"kW","value":0},"bms_dc_voltage":{"name":"BMS DC Voltage","scale":10,"signed":true,"size":1,"type":"status","units":"V","value":0},"bms_dischargeable_energy":{"name":"BMS Dischargeable Energy","scale":10,"size":1,"type":"status","units":"kWh","value":0},"bms_fault_active":{"name":"BMS Fault Active","size":1,"type":"status","value":false},"bms_fire_fault_active":{"name":"BMS Fire Fault Active","size":1,"type":"status","value":false},"bms_max_cell_temp":{"name":"BMS Max Cell Temperature","scale":100,"size":1,"type":"status","units":"°C","value":0},"bms_max_cell_voltage":{"name":"BMS Max Cell Voltage","scale":10000,"size":1,"type":"status","units":"V","value":0},"bms_max_charge_current":{"name":"BMS Max Charge Current","signed":true,"size":1,"type":"status","units":"A","value":0},"bms_max_charge_power":{"name":"BMS Max Charge Power","signed":true,"size":1,"type":"status","units":"kW","value":0},"bms_max_discharge_current":{"name":"BMS Max Discharge Current","size":1,"type":"status","units":"A","value":0},"bms_max_discharge_power":{"name":"BMS Max Discharge Power","size":1,"type":"status","units":"kW","value":0},"bms_min_cell_temp":{"name":"BMS Min Cell Temperature","scale":100,"size":1,"type":"status","units":"°C","value":0},"bms_min_cell_voltage":{"name":"BMS Min Cell Voltage","scale":10000,"size":1,"type":"status","units":"V","value":0},"bms_monitor_alarms":{"bit0":"BMS CellTempDelta - Max Threshold Exceeded","bit1":"BMS CellVoltageDelta - Max Threshold Exceeded","bit10":"BMS NumRacksOnline - Min Threshold Exceeded","bit11":"BMS SOC - Max Threshold Exceeded","bit12":"BMS SOC - Min Threshold Exceeded","bit13":"BMS SOH - Min Threshold Exceeded","bit2":"BMS DCCurrent - Max Threshold Exceeded","bit3":"BMS DCCurrent - Min Threshold Exceeded","bit4":"BMS DCVoltage - Max Threshold Exceeded","bit5":"BMS DCVoltage - Min Threshold Exceeded","bit6":"BMS MaxCellTemp - Max Threshold Exceeded","bit7":"BMS MaxCellVoltage - Max Threshold Exceeded","bit8":"BMS MinCellTemp - Min Threshold Exceeded","bit9":"BMS MinCellVoltage - Min Threshold Exceeded","name":"BMS Monitor Alarms","type":"bitfield","value":0},"bms_monitor_faults":{"bit0":"BMS CellTempDelta - Max Threshold Exceeded","bit1":"BMS CellVoltageDelta - Max Threshold Exceeded","bit10":"BMS NumRacksOnline - Min Threshold Exceeded","bit11":"BMS SOC - Max Threshold Exceeded","bit12":"BMS SOC - Min Threshold Exceeded","bit13":"BMS SOH - Min Threshold Exceeded","bit2":"BMS DCCurrent - Max Threshold Exceeded","bit3":"BMS DCCurrent - Min Threshold Exceeded","bit4":"BMS DCVoltage - Max Threshold Exceeded","bit5":"BMS DCVoltage - Min Threshold Exceeded","bit6":"BMS MaxCellTemp - Max Threshold Exceeded","bit7":"BMS MaxCellVoltage - Max Threshold Exceeded","bit8":"BMS MinCellTemp - Min Threshold Exceeded","bit9":"BMS MinCellVoltage - Min Threshold Exceeded","name":"BMS Monitor Faults","type":"bitfield","value":0},"bms_num_racks_online":{"name":"BMS Number of Racks Online","size":1,"type":"status","value":0},"bms_num_racks_total":{"name":"BMS Number of Racks Total","size":1,"type":"status","value":0},"bms_open_contactors_enabled":{"excludeFromFile":true,"name":"BMS Open Contactors Enabled","size":1,"type":"status","value":false},"bms_soc":{"name":"BMS State of Charge (SOC)","scale":10,"size":1,"type":"status","units":"%","value":0},"bms_soh":{"name":"BMS State of Health (SOH)","scale":10,"size":1,"type":"status","units":"%","value":0},"bms_status":{"excludeFromFile":true,"name":"BMS Status","size":1,"type":"status","value":"INIT"}},"/vlinks/bms":{"site_bms_alarm_active":{"default":false,"value":"/site/ess:bms_alarm_active","vlink":"/status/bms:IsAlarming"},"site_bms_avg_cell_temp":{"default":0,"value":"/site/ess:bms_avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"site_bms_avg_cell_voltage":{"default":0,"value":"/site/ess:bms_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"site_bms_cell_temp_delta":{"default":0,"value":"/site/ess:bms_cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"site_bms_cell_voltage_delta":{"default":0,"value":"/site/ess:bms_cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"site_bms_chargeable_energy":{"default":0,"value":"/site/ess:bms_chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"site_bms_close_contactors_enabled":{"default":false,"value":"/site/ess:bms_close_contactors_enabled","vlink":"/status/bms:CloseContactorsEnabled"},"site_bms_comms_ok":{"default":false,"value":"/site/ess:bms_comms_ok","vlink":"/status/bms:CommsOK"},"site_bms_current_before_stop_is_ok":{"default":false,"value":"/site/ess:bms_current_before_stop_is_ok","vlink":"/status/bms:CurrentBeforeStopIsOK"},"site_bms_dc_charging":{"default":false,"value":"/site/ess:bms_dc_charging","vlink":"/status/bms:DCCharging"},"site_bms_dc_contactors_closed":{"default":false,"value":"/site/ess:bms_dc_contactors_closed","vlink":"/status/bms:DCClosed"},"site_bms_dc_current":{"default":0,"value":"/site/ess:bms_dc_current","vlink":"/status/bms:DCCurrent"},"site_bms_dc_discharging":{"default":false,"value":"/site/ess:bms_dc_discharging","vlink":"/status/bms:DCDischarging"},"site_bms_dc_power":{"default":0,"value":"/site/ess:bms_dc_power","vlink":"/status/bms:DCPower"},"site_bms_dc_voltage":{"default":0,"value":"/site/ess:bms_dc_voltage","vlink":"/status/bms:DCVoltage"},"site_bms_dischargeable_energy":{"default":0,"value":"/site/ess:bms_dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"site_bms_fault_active":{"default":false,"value":"/site/ess:bms_fault_active","vlink":"/status/bms:IsFaulted"},"site_bms_fire_fault_active":{"default":false,"value":"/site/ess:bms_fire_fault_active","vlink":"/status/bms:AnyFireFaultActive"},"site_bms_max_cell_temp":{"default":0,"value":"/site/ess:bms_max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"site_bms_max_cell_voltage":{"default":0,"value":"/site/ess:bms_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"site_bms_max_charge_current":{"default":0,"value":"/site/ess:bms_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"site_bms_max_charge_power":{"default":0,"value":"/site/ess:bms_max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"site_bms_max_discharge_current":{"default":0,"value":"/site/ess:bms_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"site_bms_max_discharge_power":{"default":0,"value":"/site/ess:bms_max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"site_bms_min_cell_temp":{"default":0,"value":"/site/ess:bms_min_cell_temp","vlink":"/status/bms:MinCellTemp"},"site_bms_min_cell_voltage":{"default":0,"value":"/site/ess:bms_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"site_bms_num_racks_online":{"default":0,"value":"/site/ess:bms_num_racks_online","vlink":"/status/bms:NumRacksOnline"},"site_bms_num_racks_total":{"default":0,"value":"/site/ess:bms_num_racks_total","vlink":"/status/bms:NumRacksTotal"},"site_bms_open_contactors_enabled":{"default":false,"value":"/site/ess:bms_open_contactors_enabled","vlink":"/status/bms:OpenContactorsEnabled"},"site_bms_soc":{"default":0,"value":"/site/ess:bms_soc","vlink":"/status/bms:SOC"},"site_bms_soh":{"default":0,"value":"/site/ess:bms_soh","vlink":"/status/bms:SOH"},"site_bms_status":{"default":"INIT","value":"/site/ess:bms_status","vlink":"/status/bms:Status"}},"/assets/bms/summary":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"chargeable_energy":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"close_contactors":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":false,"every":0.5,"name":"Close DC Contactor","note":"Enabled conditions: ![/status/bms/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode] \u0026\u0026 ![/status/bms/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/bms:LocalStartBMS","value":false},"comms_ok":{"value":false},"dc_charging":{"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_discharging":{"value":false},"dc_power":{"value":0},"dc_voltage":{"value":0},"dischargeable_energy":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/summary:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"num_racks_online":{"value":0},"num_racks_total":{"value":0},"open_contactors":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":false,"every":0.5,"name":"Open DC Contactor","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 ![/status/pcs/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/bms:LocalStopBMS","value":false},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/bms":{"ui_avg_cell_temp":{"default":0,"value":"/assets/bms/summary:avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"ui_avg_cell_voltage":{"default":0,"value":"/assets/bms/summary:avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"ui_cell_temp_delta":{"default":0,"value":"/assets/bms/summary:cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"ui_cell_voltage_delta":{"default":0,"value":"/assets/bms/summary:cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"ui_chargeable_energy":{"default":0,"value":"/assets/bms/summary:chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"ui_comms_ok":{"default":false,"value":"/assets/bms/summary:comms_ok","vlink":"/status/bms:CommsOK"},"ui_dc_charging":{"default":false,"value":"/assets/bms/summary:dc_charging","vlink":"/status/bms:DCCharging"},"ui_dc_contactors_closed":{"default":false,"value":"/assets/bms/summary:dc_contactors_closed","vlink":"/status/bms:DCClosed"},"ui_dc_current":{"default":0,"value":"/assets/bms/summary:dc_current","vlink":"/status/bms:DCCurrent"},"ui_dc_discharging":{"default":false,"value":"/assets/bms/summary:dc_discharging","vlink":"/status/bms:DCDischarging"},"ui_dc_power":{"default":0,"value":"/assets/bms/summary:dc_power","vlink":"/status/bms:DCPower"},"ui_dc_voltage":{"default":0,"value":"/assets/bms/summary:dc_voltage","vlink":"/status/bms:DCVoltage"},"ui_dischargeable_energy":{"default":0,"value":"/assets/bms/summary:dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"ui_max_cell_temp":{"default":0,"value":"/assets/bms/summary:max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"ui_max_cell_voltage":{"default":0,"value":"/assets/bms/summary:max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"ui_max_charge_current":{"default":0,"value":"/assets/bms/summary:max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"ui_max_charge_power":{"default":0,"value":"/assets/bms/summary:max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"ui_max_discharge_current":{"default":0,"value":"/assets/bms/summary:max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"ui_max_discharge_power":{"default":0,"value":"/assets/bms/summary:max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"ui_min_cell_temp":{"default":0,"value":"/assets/bms/summary:min_cell_temp","vlink":"/status/bms:MinCellTemp"},"ui_min_cell_voltage":{"default":0,"value":"/assets/bms/summary:min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"ui_num_racks_online":{"default":0,"value":"/assets/bms/summary:num_racks_online","vlink":"/status/bms:NumRacksOnline"},"ui_num_racks_total":{"default":0,"value":"/assets/bms/summary:num_racks_total","vlink":"/status/bms:NumRacksTotal"},"ui_soc":{"default":0,"value":"/assets/bms/summary:soc","vlink":"/status/bms:SOC"},"ui_soh":{"default":0,"value":"/assets/bms/summary:soh","vlink":"/status/bms:SOH"},"ui_status":{"default":"INIT","value":"/assets/bms/summary:status","vlink":"/status/bms:Status"}}}
[3.76565s  ] [info    ] [configLoad     ] tmpls field is found in av [/config/load:catl_bms_init]. We'll perform template expansions with tmpls instead of tmpl
[3.76677s  ] [info    ] [configLoad     ] tbody before: {"/config/##BMS_ID##":{"AlarmDestination":"/assets/bms/##BMS_ID##:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/##BMS_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##BMS_ID##":{"ChargeCurrentLimit":{"value":"/limits/##BMS_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##BMS_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##BMS_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##BMS_ID##:DischargePowerLimit"}},"/sched/##BMS_ID##":{"pubAssets_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"RunPub"}]}]},"enable":"/config/##BMS_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##BMS_ID##)","table":"/assets/bms/##BMS_ID##","value":1},"runMonitor_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"RunMonitor"}]}]},"aname":"##BMS_ID##","enable":"/config/##BMS_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##BMS_ID##","value":1},"updateHeartbeatWrite_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CalculateVar","inAv":"/status/##BMS_ID##:HeartbeatWrite"}]}]},"enable":"/config/##BMS_ID##:enable","note":"Periodically updates the heartbeat write variable defined in /status/##BMS_ID##:HeartbeatWrite","value":1}},"/schedule/wake_monitor/##BMS_ID##":{"/status/##BMS_ID##:CellTempDelta_Calculated":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:CellVoltageDelta_Calculated":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCCharging":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCDischarging":{"amap":"##BMS_ID##","func":"CalculateVar"}},"/status/##BMS_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellTempDelta"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:MinCellTemp","variable2":"/status/##BMS_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellVoltageDelta"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:MinCellVoltage","variable2":"/status/##BMS_ID##:MaxCellVoltage"},"CommsOK":true,"DCCharging":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellTempDelta@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:CellVoltageDelta@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCCurrent@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:DCVoltage@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCVoltage@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:MinCellTemp@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:SOC@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:SOC@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:SOH@EnableMinValCheck"}]}]},"enable":"/config/##BMS_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/##BMS_ID##:heartbeat_write"}]}]},"enable":"/config/##BMS_ID##:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:HeartbeatWrite"},"NumRacksTotal":3,"Status":"INIT"},"/system/commands":{"runOpts_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##BMS_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:pubAssets_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":0.1,"uri":"/sched/##BMS_ID##:runMonitor_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:checkInputs_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:updateHeartbeatWrite_##BMS_ID##","value":1}],"targav":"/system/commands:run","value":false}}}
[3.76851s  ] [info    ] [configLoad     ] tbody now: "/config/##BMS_ID##":{"AlarmDestination":"/assets/bms/##BMS_ID##:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/##BMS_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##BMS_ID##":{"ChargeCurrentLimit":{"value":"/limits/##BMS_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##BMS_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##BMS_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##BMS_ID##:DischargePowerLimit"}},"/sched/##BMS_ID##":{"pubAssets_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"RunPub"}]}]},"enable":"/config/##BMS_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##BMS_ID##)","table":"/assets/bms/##BMS_ID##","value":1},"runMonitor_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"RunMonitor"}]}]},"aname":"##BMS_ID##","enable":"/config/##BMS_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##BMS_ID##","value":1},"updateHeartbeatWrite_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CalculateVar","inAv":"/status/##BMS_ID##:HeartbeatWrite"}]}]},"enable":"/config/##BMS_ID##:enable","note":"Periodically updates the heartbeat write variable defined in /status/##BMS_ID##:HeartbeatWrite","value":1}},"/schedule/wake_monitor/##BMS_ID##":{"/status/##BMS_ID##:CellTempDelta_Calculated":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:CellVoltageDelta_Calculated":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCCharging":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCDischarging":{"amap":"##BMS_ID##","func":"CalculateVar"}},"/status/##BMS_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellTempDelta"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:MinCellTemp","variable2":"/status/##BMS_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellVoltageDelta"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:MinCellVoltage","variable2":"/status/##BMS_ID##:MaxCellVoltage"},"CommsOK":true,"DCCharging":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellTempDelta@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:CellVoltageDelta@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCCurrent@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:DCVoltage@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCVoltage@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:MinCellTemp@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:SOC@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:SOC@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:SOH@EnableMinValCheck"}]}]},"enable":"/config/##BMS_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/##BMS_ID##:heartbeat_write"}]}]},"enable":"/config/##BMS_ID##:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:HeartbeatWrite"},"NumRacksTotal":3,"Status":"INIT"},"/system/commands":{"runOpts_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##BMS_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:pubAssets_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":0.1,"uri":"/sched/##BMS_ID##:runMonitor_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:checkInputs_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:updateHeartbeatWrite_##BMS_ID##","value":1}],"targav":"/system/commands:run","value":false}}
[3.76958s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##BMS_ID##":{"AlarmDestination":"/assets/bms/##BMS_ID##:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/##BMS_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##BMS_ID##":{"ChargeCurrentLimit":{"value":"/limits/##BMS_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##BMS_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##BMS_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##BMS_ID##:DischargePowerLimit"}},"/sched/##BMS_ID##":{"pubAssets_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"RunPub"}]}]},"enable":"/config/##BMS_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##BMS_ID##)","table":"/assets/bms/##BMS_ID##","value":1},"runMonitor_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"RunMonitor"}]}]},"aname":"##BMS_ID##","enable":"/config/##BMS_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##BMS_ID##","value":1},"updateHeartbeatWrite_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CalculateVar","inAv":"/status/##BMS_ID##:HeartbeatWrite"}]}]},"enable":"/config/##BMS_ID##:enable","note":"Periodically updates the heartbeat write variable defined in /status/##BMS_ID##:HeartbeatWrite","value":1}},"/schedule/wake_monitor/##BMS_ID##":{"/status/##BMS_ID##:CellTempDelta_Calculated":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:CellVoltageDelta_Calculated":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCCharging":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCDischarging":{"amap":"##BMS_ID##","func":"CalculateVar"}},"/status/##BMS_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellTempDelta"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:MinCellTemp","variable2":"/status/##BMS_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellVoltageDelta"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:MinCellVoltage","variable2":"/status/##BMS_ID##:MaxCellVoltage"},"CommsOK":true,"DCCharging":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellTempDelta@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:CellVoltageDelta@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCCurrent@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:DCVoltage@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCVoltage@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:MinCellTemp@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:SOC@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:SOC@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:SOH@EnableMinValCheck"}]}]},"enable":"/config/##BMS_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/##BMS_ID##:heartbeat_write"}]}]},"enable":"/config/##BMS_ID##:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:HeartbeatWrite"},"NumRacksTotal":3,"Status":"INIT"},"/system/commands":{"runOpts_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##BMS_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:pubAssets_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":0.1,"uri":"/sched/##BMS_ID##:runMonitor_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:checkInputs_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:updateHeartbeatWrite_##BMS_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##BMS_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"not {1} and {2} == Stop and not {3}","note1":"Close DC contactors command to send to BMS if DC contactors are open, the PCS is in Stop, and the BMS does not have any faults","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##BMS_ID##:IsFaulted"},"CloseContactorsEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/bms/##BMS_ID##:close_contactors@enabled"},{"uri":"/status/##BMS_ID##:CloseContactorsEnabled"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"not {1} and {2} and not {3}","note":"Enable Close Contactors UI control if DC Contactors are opened, the BMS is not faulted, and the BMS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/assets/bms/##BMS_ID##:maint_mode","variable3":"/status/##BMS_ID##:IsFaulted"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Stop or {2} == Fault)","note1":"Open DC contactors command to send to BMS if DC contactors are closed and the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/status/##PCS_ID##:SystemState"},"OpenContactorsEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/bms/##BMS_ID##:open_contactors@enabled"},{"uri":"/status/##BMS_ID##:OpenContactorsEnabled"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1} and not {2} and {3}","note":"Enable Open Contactors UI control if DC Contactors are closed and the BMS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/status/##PCS_ID##:DCClosed","variable3":"/assets/bms/##BMS_ID##:maint_mode"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed"}},"/schedule/wake_monitor/##BMS_ID##":{"/controls/##BMS_ID##:ClearFaults":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:CloseContactors":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:CloseContactorsEnable":{"amap":"##BMS_ID##","func":"CalculateVar"},"/controls/##BMS_ID##:OpenContactors":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:OpenContactorsEnable":{"amap":"##BMS_ID##","func":"CalculateVar"},"/controls/##BMS_ID##:VerifyCloseContactors":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:VerifyOpenContactors":{"amap":"##BMS_ID##","func":"HandleCmd"}},"/status/##BMS_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##BMS_ID##:ClearFaults"},{"outValue":"Clear","uri":"/faults/##BMS_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##BMS_ID##:clear_alarms"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##BMS_ID##:clear_faults and /alarms/##BMS_ID##:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##BMS_ID##:CloseContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##BMS_ID##:OpenContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##BMS_ID##:VerifyCloseContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##BMS_ID##:VerifyOpenContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}}
[3.77432s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##BMS_ID##":{"AlarmDestination":"/assets/bms/##BMS_ID##:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/##BMS_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##BMS_ID##":{"ChargeCurrentLimit":{"value":"/limits/##BMS_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##BMS_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##BMS_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##BMS_ID##:DischargePowerLimit"}},"/sched/##BMS_ID##":{"pubAssets_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"RunPub"}]}]},"enable":"/config/##BMS_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##BMS_ID##)","table":"/assets/bms/##BMS_ID##","value":1},"runMonitor_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"RunMonitor"}]}]},"aname":"##BMS_ID##","enable":"/config/##BMS_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##BMS_ID##","value":1},"updateHeartbeatWrite_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CalculateVar","inAv":"/status/##BMS_ID##:HeartbeatWrite"}]}]},"enable":"/config/##BMS_ID##:enable","note":"Periodically updates the heartbeat write variable defined in /status/##BMS_ID##:HeartbeatWrite","value":1}},"/schedule/wake_monitor/##BMS_ID##":{"/status/##BMS_ID##:CellTempDelta_Calculated":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:CellVoltageDelta_Calculated":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCCharging":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCDischarging":{"amap":"##BMS_ID##","func":"CalculateVar"}},"/status/##BMS_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellTempDelta"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:MinCellTemp","variable2":"/status/##BMS_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellVoltageDelta"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:MinCellVoltage","variable2":"/status/##BMS_ID##:MaxCellVoltage"},"CommsOK":true,"DCCharging":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellTempDelta@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:CellVoltageDelta@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCCurrent@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:DCVoltage@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCVoltage@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:MinCellTemp@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:SOC@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:SOC@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:SOH@EnableMinValCheck"}]}]},"enable":"/config/##BMS_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/##BMS_ID##:heartbeat_write"}]}]},"enable":"/config/##BMS_ID##:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:HeartbeatWrite"},"NumRacksTotal":3,"Status":"INIT"},"/system/commands":{"runOpts_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##BMS_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:pubAssets_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":0.1,"uri":"/sched/##BMS_ID##:runMonitor_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:checkInputs_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:updateHeartbeatWrite_##BMS_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##BMS_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"not {1} and {2} == Stop and not {3}","note1":"Close DC contactors command to send to BMS if DC contactors are open, the PCS is in Stop, and the BMS does not have any faults","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##BMS_ID##:IsFaulted"},"CloseContactorsEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/bms/##BMS_ID##:close_contactors@enabled"},{"uri":"/status/##BMS_ID##:CloseContactorsEnabled"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"not {1} and {2} and not {3}","note":"Enable Close Contactors UI control if DC Contactors are opened, the BMS is not faulted, and the BMS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/assets/bms/##BMS_ID##:maint_mode","variable3":"/status/##BMS_ID##:IsFaulted"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Stop or {2} == Fault)","note1":"Open DC contactors command to send to BMS if DC contactors are closed and the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/status/##PCS_ID##:SystemState"},"OpenContactorsEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/bms/##BMS_ID##:open_contactors@enabled"},{"uri":"/status/##BMS_ID##:OpenContactorsEnabled"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1} and not {2} and {3}","note":"Enable Open Contactors UI control if DC Contactors are closed and the BMS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/status/##PCS_ID##:DCClosed","variable3":"/assets/bms/##BMS_ID##:maint_mode"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed"}},"/schedule/wake_monitor/##BMS_ID##":{"/controls/##BMS_ID##:ClearFaults":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:CloseContactors":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:CloseContactorsEnable":{"amap":"##BMS_ID##","func":"CalculateVar"},"/controls/##BMS_ID##:OpenContactors":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:OpenContactorsEnable":{"amap":"##BMS_ID##","func":"CalculateVar"},"/controls/##BMS_ID##:VerifyCloseContactors":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:VerifyOpenContactors":{"amap":"##BMS_ID##","func":"HandleCmd"}},"/status/##BMS_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##BMS_ID##:ClearFaults"},{"outValue":"Clear","uri":"/faults/##BMS_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##BMS_ID##:clear_alarms"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##BMS_ID##:clear_faults and /alarms/##BMS_ID##:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##BMS_ID##:CloseContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##BMS_ID##:OpenContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##BMS_ID##:VerifyCloseContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##BMS_ID##:VerifyOpenContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/##BMS_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/##BMS_ID##:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##BMS_ID##) will be reset to the normal state (defined in /config/##BMS_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/faults/##BMS_ID##":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/##BMS_ID##:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##BMS_ID##) will be reset to the normal state (defined in /config/##BMS_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/schedule/wake_monitor/##BMS_ID##":{"/status/##BMS_ID##:AnyFireFaultActive":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:CellTempDelta":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:CellVoltageDelta":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:CurrentBeforeStopIsOK":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCCurrent":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:DCVoltage":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:HeartbeatRead":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:IsAlarming":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:IsFaulted":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:MaxCellTemp":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:MaxCellVoltage":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:MinCellTemp":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:MinCellVoltage":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:NumRacksOnline":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:OverCurrentAlarm":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:OverCurrentFault":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:SOC":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:SOH":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:TotalAlarmCnt":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:TotalFaultCnt":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:UnderCurrentAlarm":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:UnderCurrentFault":{"amap":"##BMS_ID##","func":"CalculateVar"}},"/status/##BMS_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/##BMS_ID##:enable","numVars":2,"operation":"or","value":false,"variable1":"##BMS_ID##:AnyFireFaultActive","variable2":"/status/##BMS_ID##:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_##BMS_ID##_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003c= {2} and {1} \u003e= (-1 * {2})","note":"Set to true if the BMS DC current is within an acceptable level before stopping the PCS","numVars":2,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent","variable2":"/config/##BMS_ID##:CurrentBeforeStopThreshold"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":0,"MaxAlarmTimeout":1,"MaxFaultThreshold":0,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":0,"MaxResetValue":0,"MinAlarmThreshold":0,"MinAlarmTimeout":1,"MinFaultThreshold":0,"MinFaultTimeout":2.5,"MinRecoverTimeout":0,"MinResetValue":0,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS instance faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/##BMS_ID##:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:SystemFault","variable2":"/status/##BMS_ID##:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":45,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":52,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":45,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note1":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MaxAlarmThreshold"},{"uri":"/status/##BMS_ID##:DCCurrent@MaxResetValue"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1}","note":"Adjusts the max alarm and reset thresholds for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/##BMS_ID##:enable","numVars":2,"operation":"+","value":0,"variable1":"##BMS_ID##:TotalAlarmCnt","variable2":"/status/##BMS_ID##:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/##BMS_ID##:enable","numVars":2,"operation":"+","value":0,"variable1":"##BMS_ID##:TotalFaultCnt","variable2":"/status/##BMS_ID##:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MinAlarmThreshold"},{"uri":"/status/##BMS_ID##:DCCurrent@MinResetValue"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1}","note":"Adjusts the min alarm and reset thresholds for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:ChargeCurrentLimit"}}
[3.77674s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##BMS_ID##":{"AlarmDestination":"/assets/bms/##BMS_ID##:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/##BMS_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##BMS_ID##":{"ChargeCurrentLimit":{"value":"/limits/##BMS_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##BMS_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##BMS_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##BMS_ID##:DischargePowerLimit"}},"/sched/##BMS_ID##":{"pubAssets_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"RunPub"}]}]},"enable":"/config/##BMS_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##BMS_ID##)","table":"/assets/bms/##BMS_ID##","value":1},"runMonitor_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"RunMonitor"}]}]},"aname":"##BMS_ID##","enable":"/config/##BMS_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##BMS_ID##","value":1},"updateHeartbeatWrite_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CalculateVar","inAv":"/status/##BMS_ID##:HeartbeatWrite"}]}]},"enable":"/config/##BMS_ID##:enable","note":"Periodically updates the heartbeat write variable defined in /status/##BMS_ID##:HeartbeatWrite","value":1}},"/schedule/wake_monitor/##BMS_ID##":{"/status/##BMS_ID##:CellTempDelta_Calculated":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:CellVoltageDelta_Calculated":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCCharging":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCDischarging":{"amap":"##BMS_ID##","func":"CalculateVar"}},"/status/##BMS_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellTempDelta"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:MinCellTemp","variable2":"/status/##BMS_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellVoltageDelta"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:MinCellVoltage","variable2":"/status/##BMS_ID##:MaxCellVoltage"},"CommsOK":true,"DCCharging":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellTempDelta@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:CellVoltageDelta@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCCurrent@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:DCVoltage@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCVoltage@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:MinCellTemp@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:SOC@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:SOC@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:SOH@EnableMinValCheck"}]}]},"enable":"/config/##BMS_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/##BMS_ID##:heartbeat_write"}]}]},"enable":"/config/##BMS_ID##:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:HeartbeatWrite"},"NumRacksTotal":3,"Status":"INIT"},"/system/commands":{"runOpts_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##BMS_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:pubAssets_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":0.1,"uri":"/sched/##BMS_ID##:runMonitor_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:checkInputs_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:updateHeartbeatWrite_##BMS_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##BMS_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"not {1} and {2} == Stop and not {3}","note1":"Close DC contactors command to send to BMS if DC contactors are open, the PCS is in Stop, and the BMS does not have any faults","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##BMS_ID##:IsFaulted"},"CloseContactorsEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/bms/##BMS_ID##:close_contactors@enabled"},{"uri":"/status/##BMS_ID##:CloseContactorsEnabled"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"not {1} and {2} and not {3}","note":"Enable Close Contactors UI control if DC Contactors are opened, the BMS is not faulted, and the BMS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/assets/bms/##BMS_ID##:maint_mode","variable3":"/status/##BMS_ID##:IsFaulted"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Stop or {2} == Fault)","note1":"Open DC contactors command to send to BMS if DC contactors are closed and the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/status/##PCS_ID##:SystemState"},"OpenContactorsEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/bms/##BMS_ID##:open_contactors@enabled"},{"uri":"/status/##BMS_ID##:OpenContactorsEnabled"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1} and not {2} and {3}","note":"Enable Open Contactors UI control if DC Contactors are closed and the BMS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/status/##PCS_ID##:DCClosed","variable3":"/assets/bms/##BMS_ID##:maint_mode"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed"}},"/schedule/wake_monitor/##BMS_ID##":{"/controls/##BMS_ID##:ClearFaults":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:CloseContactors":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:CloseContactorsEnable":{"amap":"##BMS_ID##","func":"CalculateVar"},"/controls/##BMS_ID##:OpenContactors":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:OpenContactorsEnable":{"amap":"##BMS_ID##","func":"CalculateVar"},"/controls/##BMS_ID##:VerifyCloseContactors":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:VerifyOpenContactors":{"amap":"##BMS_ID##","func":"HandleCmd"}},"/status/##BMS_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##BMS_ID##:ClearFaults"},{"outValue":"Clear","uri":"/faults/##BMS_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##BMS_ID##:clear_alarms"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##BMS_ID##:clear_faults and /alarms/##BMS_ID##:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##BMS_ID##:CloseContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##BMS_ID##:OpenContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##BMS_ID##:VerifyCloseContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##BMS_ID##:VerifyOpenContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/##BMS_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/##BMS_ID##:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##BMS_ID##) will be reset to the normal state (defined in /config/##BMS_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/faults/##BMS_ID##":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/##BMS_ID##:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##BMS_ID##) will be reset to the normal state (defined in /config/##BMS_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/schedule/wake_monitor/##BMS_ID##":{"/status/##BMS_ID##:AnyFireFaultActive":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:CellTempDelta":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:CellVoltageDelta":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:CurrentBeforeStopIsOK":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCCurrent":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:DCVoltage":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:HeartbeatRead":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:IsAlarming":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:IsFaulted":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:MaxCellTemp":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:MaxCellVoltage":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:MinCellTemp":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:MinCellVoltage":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:NumRacksOnline":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:OverCurrentAlarm":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:OverCurrentFault":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:SOC":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:SOH":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:TotalAlarmCnt":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:TotalFaultCnt":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:UnderCurrentAlarm":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:UnderCurrentFault":{"amap":"##BMS_ID##","func":"CalculateVar"}},"/status/##BMS_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/##BMS_ID##:enable","numVars":2,"operation":"or","value":false,"variable1":"##BMS_ID##:AnyFireFaultActive","variable2":"/status/##BMS_ID##:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_##BMS_ID##_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003c= {2} and {1} \u003e= (-1 * {2})","note":"Set to true if the BMS DC current is within an acceptable level before stopping the PCS","numVars":2,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent","variable2":"/config/##BMS_ID##:CurrentBeforeStopThreshold"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":0,"MaxAlarmTimeout":1,"MaxFaultThreshold":0,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":0,"MaxResetValue":0,"MinAlarmThreshold":0,"MinAlarmTimeout":1,"MinFaultThreshold":0,"MinFaultTimeout":2.5,"MinRecoverTimeout":0,"MinResetValue":0,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS instance faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/##BMS_ID##:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:SystemFault","variable2":"/status/##BMS_ID##:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":45,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":52,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":45,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note1":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MaxAlarmThreshold"},{"uri":"/status/##BMS_ID##:DCCurrent@MaxResetValue"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1}","note":"Adjusts the max alarm and reset thresholds for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/##BMS_ID##:enable","numVars":2,"operation":"+","value":0,"variable1":"##BMS_ID##:TotalAlarmCnt","variable2":"/status/##BMS_ID##:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/##BMS_ID##:enable","numVars":2,"operation":"+","value":0,"variable1":"##BMS_ID##:TotalFaultCnt","variable2":"/status/##BMS_ID##:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MinAlarmThreshold"},{"uri":"/status/##BMS_ID##:DCCurrent@MinResetValue"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1}","note":"Adjusts the min alarm and reset thresholds for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:ChargeCurrentLimit"}},"/components/##BMS_ID##":{"fire_fault_active":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":false,"uri":"/status/##BMS_ID##:FireFaultActive"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":true,"uri":"/status/##BMS_ID##:FireFaultActive"},{"enable":"/config/##BMS_ID##:enum_opt","outValue":true,"uri":"/components/##BMS_ID##:fire_fault_active@ifChanged","useAv":true}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/components/catl_bms_ems_r":{"bms_poweron":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Normal","uri":"/status/##BMS_ID##:Status"},{"inValue":1,"outValue":"Normal","uri":"/status/##BMS_ID##:Status"},{"inValue":2,"outValue":"On Fault","uri":"/status/##BMS_ID##:Status"},{"inValue":3,"outValue":"Off Fault","uri":"/status/##BMS_ID##:Status"},{"inValue":0,"outValue":false,"uri":"/status/##BMS_ID##:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/##BMS_ID##:DCClosed"},{"inValue":2,"outValue":false,"uri":"/status/##BMS_ID##:DCClosed"},{"inValue":3,"outValue":true,"uri":"/status/##BMS_ID##:DCClosed"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:status@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/##BMS_ID##":{"checkInputs_##BMS_ID##":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/##BMS_ID##:status@ifChanged"},{"outValue":false,"uri":"/components/##BMS_ID##:fire_fault_active@ifChanged"}]}]},"enable":"/config/##BMS_ID##:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/##BMS_ID##":{"avg_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:avg_cell_temp","vlink":"/status/##BMS_ID##:AvgCellTemp"},"avg_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:avg_cell_voltage","vlink":"/status/##BMS_ID##:AvgCellVoltage"},"chargeable_energy":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:chargeable_energy","vlink":"/status/##BMS_ID##:ChargeableEnergy"},"dc_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:dc_current","vlink":"/status/##BMS_ID##:DCCurrent"},"dc_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:dc_power","vlink":"/status/##BMS_ID##:DCPower"},"dc_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:dc_voltage","vlink":"/status/##BMS_ID##:DCVoltage"},"dischargeable_energy":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:dischargeable_energy","vlink":"/status/##BMS_ID##:DischargeableEnergy"},"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:heartbeat_read","vlink":"/status/##BMS_ID##:HeartbeatRead"},"max_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_cell_temp","vlink":"/status/##BMS_ID##:MaxCellTemp"},"max_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_cell_voltage","vlink":"/status/##BMS_ID##:MaxCellVoltage"},"max_charge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_charge_current","vlink":"/limits/##BMS_ID##:ChargeCurrentLimit"},"max_charge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_charge_power","vlink":"/limits/##BMS_ID##:ChargePowerLimit"},"max_discharge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_discharge_current","vlink":"/limits/##BMS_ID##:DischargeCurrentLimit"},"max_discharge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_discharge_power","vlink":"/limits/##BMS_ID##:DischargePowerLimit"},"min_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:min_cell_temp","vlink":"/status/##BMS_ID##:MinCellTemp"},"min_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:min_cell_voltage","vlink":"/status/##BMS_ID##:MinCellVoltage"},"num_racks_online":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:num_racks_online","vlink":"/status/##BMS_ID##:NumRacksOnline"},"soc":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:soc","vlink":"/status/##BMS_ID##:SOC"},"soh":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:soh","vlink":"/status/##BMS_ID##:SOH"}}
[3.77914s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##BMS_ID##":{"AlarmDestination":"/assets/bms/##BMS_ID##:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/##BMS_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##BMS_ID##":{"ChargeCurrentLimit":{"value":"/limits/##BMS_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##BMS_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##BMS_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##BMS_ID##:DischargePowerLimit"}},"/sched/##BMS_ID##":{"pubAssets_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"RunPub"}]}]},"enable":"/config/##BMS_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##BMS_ID##)","table":"/assets/bms/##BMS_ID##","value":1},"runMonitor_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"RunMonitor"}]}]},"aname":"##BMS_ID##","enable":"/config/##BMS_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##BMS_ID##","value":1},"updateHeartbeatWrite_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CalculateVar","inAv":"/status/##BMS_ID##:HeartbeatWrite"}]}]},"enable":"/config/##BMS_ID##:enable","note":"Periodically updates the heartbeat write variable defined in /status/##BMS_ID##:HeartbeatWrite","value":1}},"/schedule/wake_monitor/##BMS_ID##":{"/status/##BMS_ID##:CellTempDelta_Calculated":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:CellVoltageDelta_Calculated":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCCharging":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCDischarging":{"amap":"##BMS_ID##","func":"CalculateVar"}},"/status/##BMS_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellTempDelta"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:MinCellTemp","variable2":"/status/##BMS_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellVoltageDelta"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:MinCellVoltage","variable2":"/status/##BMS_ID##:MaxCellVoltage"},"CommsOK":true,"DCCharging":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellTempDelta@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:CellVoltageDelta@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCCurrent@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:DCVoltage@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCVoltage@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:MinCellTemp@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:SOC@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:SOC@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:SOH@EnableMinValCheck"}]}]},"enable":"/config/##BMS_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/##BMS_ID##:heartbeat_write"}]}]},"enable":"/config/##BMS_ID##:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:HeartbeatWrite"},"NumRacksTotal":3,"Status":"INIT"},"/system/commands":{"runOpts_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##BMS_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:pubAssets_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":0.1,"uri":"/sched/##BMS_ID##:runMonitor_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:checkInputs_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:updateHeartbeatWrite_##BMS_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##BMS_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"not {1} and {2} == Stop and not {3}","note1":"Close DC contactors command to send to BMS if DC contactors are open, the PCS is in Stop, and the BMS does not have any faults","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##BMS_ID##:IsFaulted"},"CloseContactorsEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/bms/##BMS_ID##:close_contactors@enabled"},{"uri":"/status/##BMS_ID##:CloseContactorsEnabled"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"not {1} and {2} and not {3}","note":"Enable Close Contactors UI control if DC Contactors are opened, the BMS is not faulted, and the BMS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/assets/bms/##BMS_ID##:maint_mode","variable3":"/status/##BMS_ID##:IsFaulted"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Stop or {2} == Fault)","note1":"Open DC contactors command to send to BMS if DC contactors are closed and the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/status/##PCS_ID##:SystemState"},"OpenContactorsEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/bms/##BMS_ID##:open_contactors@enabled"},{"uri":"/status/##BMS_ID##:OpenContactorsEnabled"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1} and not {2} and {3}","note":"Enable Open Contactors UI control if DC Contactors are closed and the BMS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/status/##PCS_ID##:DCClosed","variable3":"/assets/bms/##BMS_ID##:maint_mode"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed"}},"/schedule/wake_monitor/##BMS_ID##":{"/controls/##BMS_ID##:ClearFaults":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:CloseContactors":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:CloseContactorsEnable":{"amap":"##BMS_ID##","func":"CalculateVar"},"/controls/##BMS_ID##:OpenContactors":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:OpenContactorsEnable":{"amap":"##BMS_ID##","func":"CalculateVar"},"/controls/##BMS_ID##:VerifyCloseContactors":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:VerifyOpenContactors":{"amap":"##BMS_ID##","func":"HandleCmd"}},"/status/##BMS_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##BMS_ID##:ClearFaults"},{"outValue":"Clear","uri":"/faults/##BMS_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##BMS_ID##:clear_alarms"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##BMS_ID##:clear_faults and /alarms/##BMS_ID##:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##BMS_ID##:CloseContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##BMS_ID##:OpenContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##BMS_ID##:VerifyCloseContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##BMS_ID##:VerifyOpenContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/##BMS_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/##BMS_ID##:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##BMS_ID##) will be reset to the normal state (defined in /config/##BMS_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/faults/##BMS_ID##":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/##BMS_ID##:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##BMS_ID##) will be reset to the normal state (defined in /config/##BMS_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/schedule/wake_monitor/##BMS_ID##":{"/status/##BMS_ID##:AnyFireFaultActive":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:CellTempDelta":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:CellVoltageDelta":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:CurrentBeforeStopIsOK":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCCurrent":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:DCVoltage":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:HeartbeatRead":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:IsAlarming":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:IsFaulted":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:MaxCellTemp":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:MaxCellVoltage":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:MinCellTemp":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:MinCellVoltage":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:NumRacksOnline":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:OverCurrentAlarm":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:OverCurrentFault":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:SOC":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:SOH":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:TotalAlarmCnt":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:TotalFaultCnt":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:UnderCurrentAlarm":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:UnderCurrentFault":{"amap":"##BMS_ID##","func":"CalculateVar"}},"/status/##BMS_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/##BMS_ID##:enable","numVars":2,"operation":"or","value":false,"variable1":"##BMS_ID##:AnyFireFaultActive","variable2":"/status/##BMS_ID##:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_##BMS_ID##_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003c= {2} and {1} \u003e= (-1 * {2})","note":"Set to true if the BMS DC current is within an acceptable level before stopping the PCS","numVars":2,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent","variable2":"/config/##BMS_ID##:CurrentBeforeStopThreshold"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":0,"MaxAlarmTimeout":1,"MaxFaultThreshold":0,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":0,"MaxResetValue":0,"MinAlarmThreshold":0,"MinAlarmTimeout":1,"MinFaultThreshold":0,"MinFaultTimeout":2.5,"MinRecoverTimeout":0,"MinResetValue":0,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS instance faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/##BMS_ID##:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:SystemFault","variable2":"/status/##BMS_ID##:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":45,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":52,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":45,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note1":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MaxAlarmThreshold"},{"uri":"/status/##BMS_ID##:DCCurrent@MaxResetValue"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1}","note":"Adjusts the max alarm and reset thresholds for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/##BMS_ID##:enable","numVars":2,"operation":"+","value":0,"variable1":"##BMS_ID##:TotalAlarmCnt","variable2":"/status/##BMS_ID##:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/##BMS_ID##:enable","numVars":2,"operation":"+","value":0,"variable1":"##BMS_ID##:TotalFaultCnt","variable2":"/status/##BMS_ID##:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MinAlarmThreshold"},{"uri":"/status/##BMS_ID##:DCCurrent@MinResetValue"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1}","note":"Adjusts the min alarm and reset thresholds for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:ChargeCurrentLimit"}},"/components/##BMS_ID##":{"fire_fault_active":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":false,"uri":"/status/##BMS_ID##:FireFaultActive"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":true,"uri":"/status/##BMS_ID##:FireFaultActive"},{"enable":"/config/##BMS_ID##:enum_opt","outValue":true,"uri":"/components/##BMS_ID##:fire_fault_active@ifChanged","useAv":true}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/components/catl_bms_ems_r":{"bms_poweron":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Normal","uri":"/status/##BMS_ID##:Status"},{"inValue":1,"outValue":"Normal","uri":"/status/##BMS_ID##:Status"},{"inValue":2,"outValue":"On Fault","uri":"/status/##BMS_ID##:Status"},{"inValue":3,"outValue":"Off Fault","uri":"/status/##BMS_ID##:Status"},{"inValue":0,"outValue":false,"uri":"/status/##BMS_ID##:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/##BMS_ID##:DCClosed"},{"inValue":2,"outValue":false,"uri":"/status/##BMS_ID##:DCClosed"},{"inValue":3,"outValue":true,"uri":"/status/##BMS_ID##:DCClosed"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:status@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/##BMS_ID##":{"checkInputs_##BMS_ID##":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/##BMS_ID##:status@ifChanged"},{"outValue":false,"uri":"/components/##BMS_ID##:fire_fault_active@ifChanged"}]}]},"enable":"/config/##BMS_ID##:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/##BMS_ID##":{"avg_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:avg_cell_temp","vlink":"/status/##BMS_ID##:AvgCellTemp"},"avg_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:avg_cell_voltage","vlink":"/status/##BMS_ID##:AvgCellVoltage"},"chargeable_energy":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:chargeable_energy","vlink":"/status/##BMS_ID##:ChargeableEnergy"},"dc_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:dc_current","vlink":"/status/##BMS_ID##:DCCurrent"},"dc_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:dc_power","vlink":"/status/##BMS_ID##:DCPower"},"dc_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:dc_voltage","vlink":"/status/##BMS_ID##:DCVoltage"},"dischargeable_energy":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:dischargeable_energy","vlink":"/status/##BMS_ID##:DischargeableEnergy"},"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:heartbeat_read","vlink":"/status/##BMS_ID##:HeartbeatRead"},"max_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_cell_temp","vlink":"/status/##BMS_ID##:MaxCellTemp"},"max_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_cell_voltage","vlink":"/status/##BMS_ID##:MaxCellVoltage"},"max_charge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_charge_current","vlink":"/limits/##BMS_ID##:ChargeCurrentLimit"},"max_charge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_charge_power","vlink":"/limits/##BMS_ID##:ChargePowerLimit"},"max_discharge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_discharge_current","vlink":"/limits/##BMS_ID##:DischargeCurrentLimit"},"max_discharge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_discharge_power","vlink":"/limits/##BMS_ID##:DischargePowerLimit"},"min_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:min_cell_temp","vlink":"/status/##BMS_ID##:MinCellTemp"},"min_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:min_cell_voltage","vlink":"/status/##BMS_ID##:MinCellVoltage"},"num_racks_online":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:num_racks_online","vlink":"/status/##BMS_ID##:NumRacksOnline"},"soc":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:soc","vlink":"/status/##BMS_ID##:SOC"},"soh":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:soh","vlink":"/status/##BMS_ID##:SOH"}},"/site/ess":{"bms_##BMS_ID##_control_alarms":{"bit0":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit2":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","bit4":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","name":"BMS Control Alarms","type":"bitfield","value":0},"bms_##BMS_ID##_monitor_alarms":{"bit0":"BMS CellTempDelta - Max Threshold Exceeded","bit1":"BMS CellVoltageDelta - Max Threshold Exceeded","bit10":"BMS NumRacksOnline - Min Threshold Exceeded","bit11":"BMS SOC - Max Threshold Exceeded","bit12":"BMS SOC - Min Threshold Exceeded","bit13":"BMS SOH - Min Threshold Exceeded","bit2":"BMS DCCurrent - Max Threshold Exceeded","bit3":"BMS DCCurrent - Min Threshold Exceeded","bit4":"BMS DCVoltage - Max Threshold Exceeded","bit5":"BMS DCVoltage - Min Threshold Exceeded","bit6":"BMS MaxCellTemp - Max Threshold Exceeded","bit7":"BMS MaxCellVoltage - Max Threshold Exceeded","bit8":"BMS MinCellTemp - Min Threshold Exceeded","bit9":"BMS MinCellVoltage - Min Threshold Exceeded","name":"BMS Monitor Alarms","type":"bitfield","value":0},"bms_##BMS_ID##_monitor_faults":{"bit0":"BMS CellTempDelta - Max Threshold Exceeded","bit1":"BMS CellVoltageDelta - Max Threshold Exceeded","bit10":"BMS NumRacksOnline - Min Threshold Exceeded","bit11":"BMS SOC - Max Threshold Exceeded","bit12":"BMS SOC - Min Threshold Exceeded","bit13":"BMS SOH - Min Threshold Exceeded","bit2":"BMS DCCurrent - Max Threshold Exceeded","bit3":"BMS DCCurrent - Min Threshold Exceeded","bit4":"BMS DCVoltage - Max Threshold Exceeded","bit5":"BMS DCVoltage - Min Threshold Exceeded","bit6":"BMS MaxCellTemp - Max Threshold Exceeded","bit7":"BMS MaxCellVoltage - Max Threshold Exceeded","bit8":"BMS MinCellTemp - Min Threshold Exceeded","bit9":"BMS MinCellVoltage - Min Threshold Exceeded","name":"BMS Monitor Faults","type":"bitfield","value":0},"bms_##BMS_ID##_num_racks_online":{"name":"BMS Number of Racks Online","size":1,"type":"status","value":0},"bms_##BMS_ID##_num_racks_total":{"name":"BMS Number of Racks Total","size":1,"type":"status","value":0}},"/vlinks/##BMS_ID##":{"site_bms_##BMS_ID##_num_racks_online":{"default":0,"value":"/site/ess:bms_##BMS_ID##_num_racks_online","vlink":"/status/##BMS_ID##:NumRacksOnline"},"site_bms_##BMS_ID##_num_racks_total":{"default":0,"value":"/site/ess:bms_##BMS_ID##_num_racks_total","vlink":"/status/##BMS_ID##:NumRacksTotal"}}
[3.78177s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##BMS_ID##":{"AlarmDestination":"/assets/bms/##BMS_ID##:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/##BMS_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##BMS_ID##":{"ChargeCurrentLimit":{"value":"/limits/##BMS_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##BMS_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##BMS_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##BMS_ID##:DischargePowerLimit"}},"/sched/##BMS_ID##":{"pubAssets_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"RunPub"}]}]},"enable":"/config/##BMS_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##BMS_ID##)","table":"/assets/bms/##BMS_ID##","value":1},"runMonitor_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"RunMonitor"}]}]},"aname":"##BMS_ID##","enable":"/config/##BMS_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##BMS_ID##","value":1},"updateHeartbeatWrite_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CalculateVar","inAv":"/status/##BMS_ID##:HeartbeatWrite"}]}]},"enable":"/config/##BMS_ID##:enable","note":"Periodically updates the heartbeat write variable defined in /status/##BMS_ID##:HeartbeatWrite","value":1}},"/schedule/wake_monitor/##BMS_ID##":{"/status/##BMS_ID##:CellTempDelta_Calculated":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:CellVoltageDelta_Calculated":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCCharging":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCDischarging":{"amap":"##BMS_ID##","func":"CalculateVar"}},"/status/##BMS_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellTempDelta"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:MinCellTemp","variable2":"/status/##BMS_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellVoltageDelta"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:MinCellVoltage","variable2":"/status/##BMS_ID##:MaxCellVoltage"},"CommsOK":true,"DCCharging":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellTempDelta@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:CellVoltageDelta@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCCurrent@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:DCVoltage@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCVoltage@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:MinCellTemp@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:SOC@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:SOC@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:SOH@EnableMinValCheck"}]}]},"enable":"/config/##BMS_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/##BMS_ID##:heartbeat_write"}]}]},"enable":"/config/##BMS_ID##:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:HeartbeatWrite"},"NumRacksTotal":3,"Status":"INIT"},"/system/commands":{"runOpts_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##BMS_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:pubAssets_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":0.1,"uri":"/sched/##BMS_ID##:runMonitor_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:checkInputs_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:updateHeartbeatWrite_##BMS_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##BMS_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"not {1} and {2} == Stop and not {3}","note1":"Close DC contactors command to send to BMS if DC contactors are open, the PCS is in Stop, and the BMS does not have any faults","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##BMS_ID##:IsFaulted"},"CloseContactorsEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/bms/##BMS_ID##:close_contactors@enabled"},{"uri":"/status/##BMS_ID##:CloseContactorsEnabled"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"not {1} and {2} and not {3}","note":"Enable Close Contactors UI control if DC Contactors are opened, the BMS is not faulted, and the BMS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/assets/bms/##BMS_ID##:maint_mode","variable3":"/status/##BMS_ID##:IsFaulted"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Stop or {2} == Fault)","note1":"Open DC contactors command to send to BMS if DC contactors are closed and the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/status/##PCS_ID##:SystemState"},"OpenContactorsEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/bms/##BMS_ID##:open_contactors@enabled"},{"uri":"/status/##BMS_ID##:OpenContactorsEnabled"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1} and not {2} and {3}","note":"Enable Open Contactors UI control if DC Contactors are closed and the BMS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/status/##PCS_ID##:DCClosed","variable3":"/assets/bms/##BMS_ID##:maint_mode"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed"}},"/schedule/wake_monitor/##BMS_ID##":{"/controls/##BMS_ID##:ClearFaults":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:CloseContactors":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:CloseContactorsEnable":{"amap":"##BMS_ID##","func":"CalculateVar"},"/controls/##BMS_ID##:OpenContactors":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:OpenContactorsEnable":{"amap":"##BMS_ID##","func":"CalculateVar"},"/controls/##BMS_ID##:VerifyCloseContactors":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:VerifyOpenContactors":{"amap":"##BMS_ID##","func":"HandleCmd"}},"/status/##BMS_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##BMS_ID##:ClearFaults"},{"outValue":"Clear","uri":"/faults/##BMS_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##BMS_ID##:clear_alarms"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##BMS_ID##:clear_faults and /alarms/##BMS_ID##:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##BMS_ID##:CloseContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##BMS_ID##:OpenContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##BMS_ID##:VerifyCloseContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##BMS_ID##:VerifyOpenContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/##BMS_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/##BMS_ID##:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##BMS_ID##) will be reset to the normal state (defined in /config/##BMS_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/faults/##BMS_ID##":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/##BMS_ID##:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##BMS_ID##) will be reset to the normal state (defined in /config/##BMS_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/schedule/wake_monitor/##BMS_ID##":{"/status/##BMS_ID##:AnyFireFaultActive":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:CellTempDelta":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:CellVoltageDelta":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:CurrentBeforeStopIsOK":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCCurrent":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:DCVoltage":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:HeartbeatRead":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:IsAlarming":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:IsFaulted":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:MaxCellTemp":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:MaxCellVoltage":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:MinCellTemp":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:MinCellVoltage":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:NumRacksOnline":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:OverCurrentAlarm":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:OverCurrentFault":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:SOC":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:SOH":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:TotalAlarmCnt":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:TotalFaultCnt":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:UnderCurrentAlarm":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:UnderCurrentFault":{"amap":"##BMS_ID##","func":"CalculateVar"}},"/status/##BMS_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/##BMS_ID##:enable","numVars":2,"operation":"or","value":false,"variable1":"##BMS_ID##:AnyFireFaultActive","variable2":"/status/##BMS_ID##:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_##BMS_ID##_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003c= {2} and {1} \u003e= (-1 * {2})","note":"Set to true if the BMS DC current is within an acceptable level before stopping the PCS","numVars":2,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent","variable2":"/config/##BMS_ID##:CurrentBeforeStopThreshold"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":0,"MaxAlarmTimeout":1,"MaxFaultThreshold":0,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":0,"MaxResetValue":0,"MinAlarmThreshold":0,"MinAlarmTimeout":1,"MinFaultThreshold":0,"MinFaultTimeout":2.5,"MinRecoverTimeout":0,"MinResetValue":0,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS instance faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/##BMS_ID##:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:SystemFault","variable2":"/status/##BMS_ID##:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":45,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":52,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":45,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note1":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MaxAlarmThreshold"},{"uri":"/status/##BMS_ID##:DCCurrent@MaxResetValue"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1}","note":"Adjusts the max alarm and reset thresholds for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/##BMS_ID##:enable","numVars":2,"operation":"+","value":0,"variable1":"##BMS_ID##:TotalAlarmCnt","variable2":"/status/##BMS_ID##:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/##BMS_ID##:enable","numVars":2,"operation":"+","value":0,"variable1":"##BMS_ID##:TotalFaultCnt","variable2":"/status/##BMS_ID##:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MinAlarmThreshold"},{"uri":"/status/##BMS_ID##:DCCurrent@MinResetValue"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1}","note":"Adjusts the min alarm and reset thresholds for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:ChargeCurrentLimit"}},"/components/##BMS_ID##":{"fire_fault_active":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":false,"uri":"/status/##BMS_ID##:FireFaultActive"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":true,"uri":"/status/##BMS_ID##:FireFaultActive"},{"enable":"/config/##BMS_ID##:enum_opt","outValue":true,"uri":"/components/##BMS_ID##:fire_fault_active@ifChanged","useAv":true}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/components/catl_bms_ems_r":{"bms_poweron":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Normal","uri":"/status/##BMS_ID##:Status"},{"inValue":1,"outValue":"Normal","uri":"/status/##BMS_ID##:Status"},{"inValue":2,"outValue":"On Fault","uri":"/status/##BMS_ID##:Status"},{"inValue":3,"outValue":"Off Fault","uri":"/status/##BMS_ID##:Status"},{"inValue":0,"outValue":false,"uri":"/status/##BMS_ID##:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/##BMS_ID##:DCClosed"},{"inValue":2,"outValue":false,"uri":"/status/##BMS_ID##:DCClosed"},{"inValue":3,"outValue":true,"uri":"/status/##BMS_ID##:DCClosed"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:status@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/##BMS_ID##":{"checkInputs_##BMS_ID##":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/##BMS_ID##:status@ifChanged"},{"outValue":false,"uri":"/components/##BMS_ID##:fire_fault_active@ifChanged"}]}]},"enable":"/config/##BMS_ID##:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/##BMS_ID##":{"avg_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:avg_cell_temp","vlink":"/status/##BMS_ID##:AvgCellTemp"},"avg_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:avg_cell_voltage","vlink":"/status/##BMS_ID##:AvgCellVoltage"},"chargeable_energy":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:chargeable_energy","vlink":"/status/##BMS_ID##:ChargeableEnergy"},"dc_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:dc_current","vlink":"/status/##BMS_ID##:DCCurrent"},"dc_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:dc_power","vlink":"/status/##BMS_ID##:DCPower"},"dc_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:dc_voltage","vlink":"/status/##BMS_ID##:DCVoltage"},"dischargeable_energy":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:dischargeable_energy","vlink":"/status/##BMS_ID##:DischargeableEnergy"},"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:heartbeat_read","vlink":"/status/##BMS_ID##:HeartbeatRead"},"max_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_cell_temp","vlink":"/status/##BMS_ID##:MaxCellTemp"},"max_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_cell_voltage","vlink":"/status/##BMS_ID##:MaxCellVoltage"},"max_charge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_charge_current","vlink":"/limits/##BMS_ID##:ChargeCurrentLimit"},"max_charge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_charge_power","vlink":"/limits/##BMS_ID##:ChargePowerLimit"},"max_discharge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_discharge_current","vlink":"/limits/##BMS_ID##:DischargeCurrentLimit"},"max_discharge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_discharge_power","vlink":"/limits/##BMS_ID##:DischargePowerLimit"},"min_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:min_cell_temp","vlink":"/status/##BMS_ID##:MinCellTemp"},"min_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:min_cell_voltage","vlink":"/status/##BMS_ID##:MinCellVoltage"},"num_racks_online":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:num_racks_online","vlink":"/status/##BMS_ID##:NumRacksOnline"},"soc":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:soc","vlink":"/status/##BMS_ID##:SOC"},"soh":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:soh","vlink":"/status/##BMS_ID##:SOH"}},"/site/ess":{"bms_##BMS_ID##_control_alarms":{"bit0":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit2":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","bit4":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","name":"BMS Control Alarms","type":"bitfield","value":0},"bms_##BMS_ID##_monitor_alarms":{"bit0":"BMS CellTempDelta - Max Threshold Exceeded","bit1":"BMS CellVoltageDelta - Max Threshold Exceeded","bit10":"BMS NumRacksOnline - Min Threshold Exceeded","bit11":"BMS SOC - Max Threshold Exceeded","bit12":"BMS SOC - Min Threshold Exceeded","bit13":"BMS SOH - Min Threshold Exceeded","bit2":"BMS DCCurrent - Max Threshold Exceeded","bit3":"BMS DCCurrent - Min Threshold Exceeded","bit4":"BMS DCVoltage - Max Threshold Exceeded","bit5":"BMS DCVoltage - Min Threshold Exceeded","bit6":"BMS MaxCellTemp - Max Threshold Exceeded","bit7":"BMS MaxCellVoltage - Max Threshold Exceeded","bit8":"BMS MinCellTemp - Min Threshold Exceeded","bit9":"BMS MinCellVoltage - Min Threshold Exceeded","name":"BMS Monitor Alarms","type":"bitfield","value":0},"bms_##BMS_ID##_monitor_faults":{"bit0":"BMS CellTempDelta - Max Threshold Exceeded","bit1":"BMS CellVoltageDelta - Max Threshold Exceeded","bit10":"BMS NumRacksOnline - Min Threshold Exceeded","bit11":"BMS SOC - Max Threshold Exceeded","bit12":"BMS SOC - Min Threshold Exceeded","bit13":"BMS SOH - Min Threshold Exceeded","bit2":"BMS DCCurrent - Max Threshold Exceeded","bit3":"BMS DCCurrent - Min Threshold Exceeded","bit4":"BMS DCVoltage - Max Threshold Exceeded","bit5":"BMS DCVoltage - Min Threshold Exceeded","bit6":"BMS MaxCellTemp - Max Threshold Exceeded","bit7":"BMS MaxCellVoltage - Max Threshold Exceeded","bit8":"BMS MinCellTemp - Min Threshold Exceeded","bit9":"BMS MinCellVoltage - Min Threshold Exceeded","name":"BMS Monitor Faults","type":"bitfield","value":0},"bms_##BMS_ID##_num_racks_online":{"name":"BMS Number of Racks Online","size":1,"type":"status","value":0},"bms_##BMS_ID##_num_racks_total":{"name":"BMS Number of Racks Total","size":1,"type":"status","value":0}},"/vlinks/##BMS_ID##":{"site_bms_##BMS_ID##_num_racks_online":{"default":0,"value":"/site/ess:bms_##BMS_ID##_num_racks_online","vlink":"/status/##BMS_ID##:NumRacksOnline"},"site_bms_##BMS_ID##_num_racks_total":{"default":0,"value":"/site/ess:bms_##BMS_ID##_num_racks_total","vlink":"/status/##BMS_ID##:NumRacksTotal"}},"/assets/bms/##BMS_ID##":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"chargeable_energy":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"close_contactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##:CloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##:CloseContactors"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate close contactors command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"comms_ok":{"value":false},"dc_charging":{"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_discharging":{"value":false},"dc_power":{"value":0},"dc_voltage":{"value":0},"dischargeable_energy":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/##BMS_ID##:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"num_racks_online":{"value":0},"num_racks_total":{"value":0},"open_contactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##:OpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##:OpenContactors"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate open contactors command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/##BMS_ID##":{"ui_avg_cell_temp":{"default":0,"value":"/assets/bms/##BMS_ID##:avg_cell_temp","vlink":"/status/##BMS_ID##:AvgCellTemp"},"ui_avg_cell_voltage":{"default":0,"value":"/assets/bms/##BMS_ID##:avg_cell_voltage","vlink":"/status/##BMS_ID##:AvgCellVoltage"},"ui_cell_temp_delta":{"default":0,"value":"/assets/bms/##BMS_ID##:cell_temp_delta","vlink":"/status/##BMS_ID##:CellTempDelta"},"ui_cell_voltage_delta":{"default":0,"value":"/assets/bms/##BMS_ID##:cell_voltage_delta","vlink":"/status/##BMS_ID##:CellVoltageDelta"},"ui_chargeable_energy":{"default":0,"value":"/assets/bms/##BMS_ID##:chargeable_energy","vlink":"/status/##BMS_ID##:ChargeableEnergy"},"ui_comms_ok":{"default":false,"value":"/assets/bms/##BMS_ID##:comms_ok","vlink":"/status/##BMS_ID##:CommsOK"},"ui_dc_charging":{"default":false,"value":"/assets/bms/##BMS_ID##:dc_charging","vlink":"/status/##BMS_ID##:DCCharging"},"ui_dc_contactors_closed":{"default":false,"value":"/assets/bms/##BMS_ID##:dc_contactors_closed","vlink":"/status/##BMS_ID##:DCClosed"},"ui_dc_current":{"default":0,"value":"/assets/bms/##BMS_ID##:dc_current","vlink":"/status/##BMS_ID##:DCCurrent"},"ui_dc_discharging":{"default":false,"value":"/assets/bms/##BMS_ID##:dc_discharging","vlink":"/status/##BMS_ID##:DCDischarging"},"ui_dc_power":{"default":0,"value":"/assets/bms/##BMS_ID##:dc_power","vlink":"/status/##BMS_ID##:DCPower"},"ui_dc_voltage":{"default":0,"value":"/assets/bms/##BMS_ID##:dc_voltage","vlink":"/status/##BMS_ID##:DCVoltage"},"ui_dischargeable_energy":{"default":0,"value":"/assets/bms/##BMS_ID##:dischargeable_energy","vlink":"/status/##BMS_ID##:DischargeableEnergy"},"ui_max_cell_temp":{"default":0,"value":"/assets/bms/##BMS_ID##:max_cell_temp","vlink":"/status/##BMS_ID##:MaxCellTemp"},"ui_max_cell_voltage":{"default":0,"value":"/assets/bms/##BMS_ID##:max_cell_voltage","vlink":"/status/##BMS_ID##:MaxCellVoltage"},"ui_max_charge_current":{"default":0,"value":"/assets/bms/##BMS_ID##:max_charge_current","vlink":"/limits/##BMS_ID##:ChargeCurrentLimit"},"ui_max_charge_power":{"default":0,"value":"/assets/bms/##BMS_ID##:max_charge_power","vlink":"/limits/##BMS_ID##:ChargePowerLimit"},"ui_max_discharge_current":{"default":0,"value":"/assets/bms/##BMS_ID##:max_discharge_current","vlink":"/limits/##BMS_ID##:DischargeCurrentLimit"},"ui_max_discharge_power":{"default":0,"value":"/assets/bms/##BMS_ID##:max_discharge_power","vlink":"/limits/##BMS_ID##:DischargePowerLimit"},"ui_min_cell_temp":{"default":0,"value":"/assets/bms/##BMS_ID##:min_cell_temp","vlink":"/status/##BMS_ID##:MinCellTemp"},"ui_min_cell_voltage":{"default":0,"value":"/assets/bms/##BMS_ID##:min_cell_voltage","vlink":"/status/##BMS_ID##:MinCellVoltage"},"ui_num_racks_online":{"default":0,"value":"/assets/bms/##BMS_ID##:num_racks_online","vlink":"/status/##BMS_ID##:NumRacksOnline"},"ui_num_racks_total":{"default":0,"value":"/assets/bms/##BMS_ID##:num_racks_total","vlink":"/status/##BMS_ID##:NumRacksTotal"},"ui_soc":{"default":0,"value":"/assets/bms/##BMS_ID##:soc","vlink":"/status/##BMS_ID##:SOC"},"ui_soh":{"default":0,"value":"/assets/bms/##BMS_ID##:soh","vlink":"/status/##BMS_ID##:SOH"},"ui_status":{"default":"INIT","value":"/assets/bms/##BMS_ID##:status","vlink":"/status/##BMS_ID##:Status"}}
[3.78329s  ] [info    ] [configLoad     ] Final tbody: {"/config/##BMS_ID##":{"AlarmDestination":"/assets/bms/##BMS_ID##:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/##BMS_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##BMS_ID##":{"ChargeCurrentLimit":{"value":"/limits/##BMS_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##BMS_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##BMS_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##BMS_ID##:DischargePowerLimit"}},"/sched/##BMS_ID##":{"pubAssets_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"RunPub"}]}]},"enable":"/config/##BMS_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/##BMS_ID##)","table":"/assets/bms/##BMS_ID##","value":1},"runMonitor_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"RunMonitor"}]}]},"aname":"##BMS_ID##","enable":"/config/##BMS_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##BMS_ID##","value":1},"updateHeartbeatWrite_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CalculateVar","inAv":"/status/##BMS_ID##:HeartbeatWrite"}]}]},"enable":"/config/##BMS_ID##:enable","note":"Periodically updates the heartbeat write variable defined in /status/##BMS_ID##:HeartbeatWrite","value":1}},"/schedule/wake_monitor/##BMS_ID##":{"/status/##BMS_ID##:CellTempDelta_Calculated":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:CellVoltageDelta_Calculated":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCCharging":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCDischarging":{"amap":"##BMS_ID##","func":"CalculateVar"}},"/status/##BMS_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellTempDelta"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:MinCellTemp","variable2":"/status/##BMS_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellVoltageDelta"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:MinCellVoltage","variable2":"/status/##BMS_ID##:MaxCellVoltage"},"CommsOK":true,"DCCharging":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:CellTempDelta@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:CellVoltageDelta@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCCurrent@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCCurrent@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:DCVoltage@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:DCVoltage@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:MinCellTemp@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:SOC@EnableMaxValCheck"},{"uri":"/status/##BMS_ID##:SOC@EnableMinValCheck"},{"uri":"/status/##BMS_ID##:SOH@EnableMinValCheck"}]}]},"enable":"/config/##BMS_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/##BMS_ID##:heartbeat_write"}]}]},"enable":"/config/##BMS_ID##:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:HeartbeatWrite"},"NumRacksTotal":3,"Status":"INIT"},"/system/commands":{"runOpts_##BMS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##BMS_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:pubAssets_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":0.1,"uri":"/sched/##BMS_ID##:runMonitor_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:checkInputs_##BMS_ID##","value":1},{"aname":"##BMS_ID##","every":1,"uri":"/sched/##BMS_ID##:updateHeartbeatWrite_##BMS_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##BMS_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"not {1} and {2} == Stop and not {3}","note1":"Close DC contactors command to send to BMS if DC contactors are open, the PCS is in Stop, and the BMS does not have any faults","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##BMS_ID##:IsFaulted"},"CloseContactorsEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/bms/##BMS_ID##:close_contactors@enabled"},{"uri":"/status/##BMS_ID##:CloseContactorsEnabled"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"not {1} and {2} and not {3}","note":"Enable Close Contactors UI control if DC Contactors are opened, the BMS is not faulted, and the BMS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/assets/bms/##BMS_ID##:maint_mode","variable3":"/status/##BMS_ID##:IsFaulted"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Stop or {2} == Fault)","note1":"Open DC contactors command to send to BMS if DC contactors are closed and the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/status/##PCS_ID##:SystemState"},"OpenContactorsEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/bms/##BMS_ID##:open_contactors@enabled"},{"uri":"/status/##BMS_ID##:OpenContactorsEnabled"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1} and not {2} and {3}","note":"Enable Open Contactors UI control if DC Contactors are closed and the BMS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/status/##PCS_ID##:DCClosed","variable3":"/assets/bms/##BMS_ID##:maint_mode"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:DCClosed"}},"/schedule/wake_monitor/##BMS_ID##":{"/controls/##BMS_ID##:ClearFaults":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:CloseContactors":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:CloseContactorsEnable":{"amap":"##BMS_ID##","func":"CalculateVar"},"/controls/##BMS_ID##:OpenContactors":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:OpenContactorsEnable":{"amap":"##BMS_ID##","func":"CalculateVar"},"/controls/##BMS_ID##:VerifyCloseContactors":{"amap":"##BMS_ID##","func":"HandleCmd"},"/controls/##BMS_ID##:VerifyOpenContactors":{"amap":"##BMS_ID##","func":"HandleCmd"}},"/status/##BMS_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##BMS_ID##:ClearFaults"},{"outValue":"Clear","uri":"/faults/##BMS_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##BMS_ID##:clear_alarms"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##BMS_ID##:clear_faults and /alarms/##BMS_ID##:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##BMS_ID##:CloseContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##BMS_ID##:OpenContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##BMS_ID##:VerifyCloseContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##BMS_ID##:VerifyOpenContactors"}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/##BMS_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/##BMS_ID##:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##BMS_ID##) will be reset to the normal state (defined in /config/##BMS_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/faults/##BMS_ID##":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/##BMS_ID##:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##BMS_ID##) will be reset to the normal state (defined in /config/##BMS_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/schedule/wake_monitor/##BMS_ID##":{"/status/##BMS_ID##:AnyFireFaultActive":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:CellTempDelta":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:CellVoltageDelta":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:CurrentBeforeStopIsOK":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:DCCurrent":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:DCVoltage":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:HeartbeatRead":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:IsAlarming":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:IsFaulted":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:MaxCellTemp":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:MaxCellVoltage":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:MinCellTemp":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:MinCellVoltage":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:NumRacksOnline":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:OverCurrentAlarm":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:OverCurrentFault":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:SOC":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:SOH":{"amap":"##BMS_ID##","func":"CheckMonitorVar"},"/status/##BMS_ID##:TotalAlarmCnt":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:TotalFaultCnt":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:UnderCurrentAlarm":{"amap":"##BMS_ID##","func":"CalculateVar"},"/status/##BMS_ID##:UnderCurrentFault":{"amap":"##BMS_ID##","func":"CalculateVar"}},"/status/##BMS_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/##BMS_ID##:enable","numVars":2,"operation":"or","value":false,"variable1":"##BMS_ID##:AnyFireFaultActive","variable2":"/status/##BMS_ID##:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_##BMS_ID##_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_##BMS_ID##_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_##BMS_ID##_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003c= {2} and {1} \u003e= (-1 * {2})","note":"Set to true if the BMS DC current is within an acceptable level before stopping the PCS","numVars":2,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCCurrent","variable2":"/config/##BMS_ID##:CurrentBeforeStopThreshold"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":0,"MaxAlarmTimeout":1,"MaxFaultThreshold":0,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":0,"MaxResetValue":0,"MinAlarmThreshold":0,"MinAlarmTimeout":1,"MinFaultThreshold":0,"MinFaultTimeout":2.5,"MinRecoverTimeout":0,"MinResetValue":0,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS instance faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"enable":"/config/##BMS_ID##:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/##BMS_ID##:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:SystemFault","variable2":"/status/##BMS_ID##:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":45,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":52,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":45,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note1":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MaxAlarmThreshold"},{"uri":"/status/##BMS_ID##:DCCurrent@MaxResetValue"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1}","note":"Adjusts the max alarm and reset thresholds for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/##BMS_ID##:enable","numVars":2,"operation":"+","value":0,"variable1":"##BMS_ID##:TotalAlarmCnt","variable2":"/status/##BMS_ID##:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/##BMS_ID##:enable","numVars":2,"operation":"+","value":0,"variable1":"##BMS_ID##:TotalFaultCnt","variable2":"/status/##BMS_ID##:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MinAlarmThreshold"},{"uri":"/status/##BMS_ID##:DCCurrent@MinResetValue"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1}","note":"Adjusts the min alarm and reset thresholds for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/##BMS_ID##:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/##BMS_ID##:ChargeCurrentLimit"}},"/components/##BMS_ID##":{"fire_fault_active":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":false,"uri":"/status/##BMS_ID##:FireFaultActive"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":true,"uri":"/status/##BMS_ID##:FireFaultActive"},{"enable":"/config/##BMS_ID##:enum_opt","outValue":true,"uri":"/components/##BMS_ID##:fire_fault_active@ifChanged","useAv":true}]}]},"enable":"/config/##BMS_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/components/catl_bms_ems_r":{"bms_poweron":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Normal","uri":"/status/##BMS_ID##:Status"},{"inValue":1,"outValue":"Normal","uri":"/status/##BMS_ID##:Status"},{"inValue":2,"outValue":"On Fault","uri":"/status/##BMS_ID##:Status"},{"inValue":3,"outValue":"Off Fault","uri":"/status/##BMS_ID##:Status"},{"inValue":0,"outValue":false,"uri":"/status/##BMS_ID##:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/##BMS_ID##:DCClosed"},{"inValue":2,"outValue":false,"uri":"/status/##BMS_ID##:DCClosed"},{"inValue":3,"outValue":true,"uri":"/status/##BMS_ID##:DCClosed"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:status@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/##BMS_ID##":{"checkInputs_##BMS_ID##":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/##BMS_ID##:status@ifChanged"},{"outValue":false,"uri":"/components/##BMS_ID##:fire_fault_active@ifChanged"}]}]},"enable":"/config/##BMS_ID##:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/##BMS_ID##":{"avg_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:avg_cell_temp","vlink":"/status/##BMS_ID##:AvgCellTemp"},"avg_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:avg_cell_voltage","vlink":"/status/##BMS_ID##:AvgCellVoltage"},"chargeable_energy":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:chargeable_energy","vlink":"/status/##BMS_ID##:ChargeableEnergy"},"dc_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:dc_current","vlink":"/status/##BMS_ID##:DCCurrent"},"dc_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:dc_power","vlink":"/status/##BMS_ID##:DCPower"},"dc_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:dc_voltage","vlink":"/status/##BMS_ID##:DCVoltage"},"dischargeable_energy":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:dischargeable_energy","vlink":"/status/##BMS_ID##:DischargeableEnergy"},"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:heartbeat_read","vlink":"/status/##BMS_ID##:HeartbeatRead"},"max_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_cell_temp","vlink":"/status/##BMS_ID##:MaxCellTemp"},"max_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_cell_voltage","vlink":"/status/##BMS_ID##:MaxCellVoltage"},"max_charge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_charge_current","vlink":"/limits/##BMS_ID##:ChargeCurrentLimit"},"max_charge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_charge_power","vlink":"/limits/##BMS_ID##:ChargePowerLimit"},"max_discharge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_discharge_current","vlink":"/limits/##BMS_ID##:DischargeCurrentLimit"},"max_discharge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:max_discharge_power","vlink":"/limits/##BMS_ID##:DischargePowerLimit"},"min_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:min_cell_temp","vlink":"/status/##BMS_ID##:MinCellTemp"},"min_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:min_cell_voltage","vlink":"/status/##BMS_ID##:MinCellVoltage"},"num_racks_online":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:num_racks_online","vlink":"/status/##BMS_ID##:NumRacksOnline"},"soc":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:soc","vlink":"/status/##BMS_ID##:SOC"},"soh":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:soh","vlink":"/status/##BMS_ID##:SOH"}},"/site/ess":{"bms_##BMS_ID##_control_alarms":{"bit0":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit2":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","bit4":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","name":"BMS Control Alarms","type":"bitfield","value":0},"bms_##BMS_ID##_monitor_alarms":{"bit0":"BMS CellTempDelta - Max Threshold Exceeded","bit1":"BMS CellVoltageDelta - Max Threshold Exceeded","bit10":"BMS NumRacksOnline - Min Threshold Exceeded","bit11":"BMS SOC - Max Threshold Exceeded","bit12":"BMS SOC - Min Threshold Exceeded","bit13":"BMS SOH - Min Threshold Exceeded","bit2":"BMS DCCurrent - Max Threshold Exceeded","bit3":"BMS DCCurrent - Min Threshold Exceeded","bit4":"BMS DCVoltage - Max Threshold Exceeded","bit5":"BMS DCVoltage - Min Threshold Exceeded","bit6":"BMS MaxCellTemp - Max Threshold Exceeded","bit7":"BMS MaxCellVoltage - Max Threshold Exceeded","bit8":"BMS MinCellTemp - Min Threshold Exceeded","bit9":"BMS MinCellVoltage - Min Threshold Exceeded","name":"BMS Monitor Alarms","type":"bitfield","value":0},"bms_##BMS_ID##_monitor_faults":{"bit0":"BMS CellTempDelta - Max Threshold Exceeded","bit1":"BMS CellVoltageDelta - Max Threshold Exceeded","bit10":"BMS NumRacksOnline - Min Threshold Exceeded","bit11":"BMS SOC - Max Threshold Exceeded","bit12":"BMS SOC - Min Threshold Exceeded","bit13":"BMS SOH - Min Threshold Exceeded","bit2":"BMS DCCurrent - Max Threshold Exceeded","bit3":"BMS DCCurrent - Min Threshold Exceeded","bit4":"BMS DCVoltage - Max Threshold Exceeded","bit5":"BMS DCVoltage - Min Threshold Exceeded","bit6":"BMS MaxCellTemp - Max Threshold Exceeded","bit7":"BMS MaxCellVoltage - Max Threshold Exceeded","bit8":"BMS MinCellTemp - Min Threshold Exceeded","bit9":"BMS MinCellVoltage - Min Threshold Exceeded","name":"BMS Monitor Faults","type":"bitfield","value":0},"bms_##BMS_ID##_num_racks_online":{"name":"BMS Number of Racks Online","size":1,"type":"status","value":0},"bms_##BMS_ID##_num_racks_total":{"name":"BMS Number of Racks Total","size":1,"type":"status","value":0}},"/vlinks/##BMS_ID##":{"site_bms_##BMS_ID##_num_racks_online":{"default":0,"value":"/site/ess:bms_##BMS_ID##_num_racks_online","vlink":"/status/##BMS_ID##:NumRacksOnline"},"site_bms_##BMS_ID##_num_racks_total":{"default":0,"value":"/site/ess:bms_##BMS_ID##_num_racks_total","vlink":"/status/##BMS_ID##:NumRacksTotal"}},"/assets/bms/##BMS_ID##":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"chargeable_energy":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"close_contactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##:CloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##:CloseContactors"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate close contactors command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"comms_ok":{"value":false},"dc_charging":{"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_discharging":{"value":false},"dc_power":{"value":0},"dc_voltage":{"value":0},"dischargeable_energy":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/##BMS_ID##:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"num_racks_online":{"value":0},"num_racks_total":{"value":0},"open_contactors":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##:OpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##:OpenContactors"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate open contactors command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/##BMS_ID##":{"ui_avg_cell_temp":{"default":0,"value":"/assets/bms/##BMS_ID##:avg_cell_temp","vlink":"/status/##BMS_ID##:AvgCellTemp"},"ui_avg_cell_voltage":{"default":0,"value":"/assets/bms/##BMS_ID##:avg_cell_voltage","vlink":"/status/##BMS_ID##:AvgCellVoltage"},"ui_cell_temp_delta":{"default":0,"value":"/assets/bms/##BMS_ID##:cell_temp_delta","vlink":"/status/##BMS_ID##:CellTempDelta"},"ui_cell_voltage_delta":{"default":0,"value":"/assets/bms/##BMS_ID##:cell_voltage_delta","vlink":"/status/##BMS_ID##:CellVoltageDelta"},"ui_chargeable_energy":{"default":0,"value":"/assets/bms/##BMS_ID##:chargeable_energy","vlink":"/status/##BMS_ID##:ChargeableEnergy"},"ui_comms_ok":{"default":false,"value":"/assets/bms/##BMS_ID##:comms_ok","vlink":"/status/##BMS_ID##:CommsOK"},"ui_dc_charging":{"default":false,"value":"/assets/bms/##BMS_ID##:dc_charging","vlink":"/status/##BMS_ID##:DCCharging"},"ui_dc_contactors_closed":{"default":false,"value":"/assets/bms/##BMS_ID##:dc_contactors_closed","vlink":"/status/##BMS_ID##:DCClosed"},"ui_dc_current":{"default":0,"value":"/assets/bms/##BMS_ID##:dc_current","vlink":"/status/##BMS_ID##:DCCurrent"},"ui_dc_discharging":{"default":false,"value":"/assets/bms/##BMS_ID##:dc_discharging","vlink":"/status/##BMS_ID##:DCDischarging"},"ui_dc_power":{"default":0,"value":"/assets/bms/##BMS_ID##:dc_power","vlink":"/status/##BMS_ID##:DCPower"},"ui_dc_voltage":{"default":0,"value":"/assets/bms/##BMS_ID##:dc_voltage","vlink":"/status/##BMS_ID##:DCVoltage"},"ui_dischargeable_energy":{"default":0,"value":"/assets/bms/##BMS_ID##:dischargeable_energy","vlink":"/status/##BMS_ID##:DischargeableEnergy"},"ui_max_cell_temp":{"default":0,"value":"/assets/bms/##BMS_ID##:max_cell_temp","vlink":"/status/##BMS_ID##:MaxCellTemp"},"ui_max_cell_voltage":{"default":0,"value":"/assets/bms/##BMS_ID##:max_cell_voltage","vlink":"/status/##BMS_ID##:MaxCellVoltage"},"ui_max_charge_current":{"default":0,"value":"/assets/bms/##BMS_ID##:max_charge_current","vlink":"/limits/##BMS_ID##:ChargeCurrentLimit"},"ui_max_charge_power":{"default":0,"value":"/assets/bms/##BMS_ID##:max_charge_power","vlink":"/limits/##BMS_ID##:ChargePowerLimit"},"ui_max_discharge_current":{"default":0,"value":"/assets/bms/##BMS_ID##:max_discharge_current","vlink":"/limits/##BMS_ID##:DischargeCurrentLimit"},"ui_max_discharge_power":{"default":0,"value":"/assets/bms/##BMS_ID##:max_discharge_power","vlink":"/limits/##BMS_ID##:DischargePowerLimit"},"ui_min_cell_temp":{"default":0,"value":"/assets/bms/##BMS_ID##:min_cell_temp","vlink":"/status/##BMS_ID##:MinCellTemp"},"ui_min_cell_voltage":{"default":0,"value":"/assets/bms/##BMS_ID##:min_cell_voltage","vlink":"/status/##BMS_ID##:MinCellVoltage"},"ui_num_racks_online":{"default":0,"value":"/assets/bms/##BMS_ID##:num_racks_online","vlink":"/status/##BMS_ID##:NumRacksOnline"},"ui_num_racks_total":{"default":0,"value":"/assets/bms/##BMS_ID##:num_racks_total","vlink":"/status/##BMS_ID##:NumRacksTotal"},"ui_soc":{"default":0,"value":"/assets/bms/##BMS_ID##:soc","vlink":"/status/##BMS_ID##:SOC"},"ui_soh":{"default":0,"value":"/assets/bms/##BMS_ID##:soh","vlink":"/status/##BMS_ID##:SOH"},"ui_status":{"default":"INIT","value":"/assets/bms/##BMS_ID##:status","vlink":"/status/##BMS_ID##:Status"}}}
[3.78467s  ] [info    ] [configLoad     ] tmpls field is found in av [/config/load:catl_bms_init]. We'll perform template expansions with tmpls instead of tmpl
[3.78508s  ] [info    ] [configLoad     ] tbody before: {"/config/##BMS_ID##_##RACK_ID##":{"AlarmDestination":"/assets/##BMS_ID##/##RACK_ID##:alarms","FaultDestination":"/assets/##BMS_ID##/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##BMS_ID##_##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:DischargePowerLimit"}},"/sched/##BMS_ID##_##RACK_ID##":{"pubAssets_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/##BMS_ID##/##RACK_ID##)","table":"/assets/##BMS_ID##/##RACK_ID##","value":1},"runMonitor_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##BMS_ID##_##RACK_ID##","enable":"/config/##BMS_ID##_##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##BMS_ID##_##RACK_ID##","value":1}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/status/##BMS_ID##_##RACK_ID##:CellTempDelta_Calculated":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"},"/status/##BMS_ID##_##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"}},"/status/##BMS_ID##_##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##_##RACK_ID##:CellTempDelta"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:MinCellTemp","variable2":"/status/##BMS_ID##_##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##_##RACK_ID##:CellVoltageDelta"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:MinCellVoltage","variable2":"/status/##BMS_ID##_##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##BMS_ID##_##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##BMS_ID##_##RACK_ID##","every":1,"uri":"/sched/##BMS_ID##_##RACK_ID##:pubAssets_##BMS_ID##_##RACK_ID##","value":1},{"aname":"##BMS_ID##_##RACK_ID##","every":0.1,"uri":"/sched/##BMS_ID##_##RACK_ID##:runMonitor_##BMS_ID##_##RACK_ID##","value":1},{"aname":"##BMS_ID##_##RACK_ID##","every":1,"uri":"/sched/##BMS_ID##_##RACK_ID##:checkInputs_##BMS_ID##_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}}}
[3.78547s  ] [info    ] [configLoad     ] tbody now: "/config/##BMS_ID##_##RACK_ID##":{"AlarmDestination":"/assets/##BMS_ID##/##RACK_ID##:alarms","FaultDestination":"/assets/##BMS_ID##/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##BMS_ID##_##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:DischargePowerLimit"}},"/sched/##BMS_ID##_##RACK_ID##":{"pubAssets_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/##BMS_ID##/##RACK_ID##)","table":"/assets/##BMS_ID##/##RACK_ID##","value":1},"runMonitor_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##BMS_ID##_##RACK_ID##","enable":"/config/##BMS_ID##_##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##BMS_ID##_##RACK_ID##","value":1}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/status/##BMS_ID##_##RACK_ID##:CellTempDelta_Calculated":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"},"/status/##BMS_ID##_##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"}},"/status/##BMS_ID##_##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##_##RACK_ID##:CellTempDelta"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:MinCellTemp","variable2":"/status/##BMS_ID##_##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##_##RACK_ID##:CellVoltageDelta"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:MinCellVoltage","variable2":"/status/##BMS_ID##_##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##BMS_ID##_##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##BMS_ID##_##RACK_ID##","every":1,"uri":"/sched/##BMS_ID##_##RACK_ID##:pubAssets_##BMS_ID##_##RACK_ID##","value":1},{"aname":"##BMS_ID##_##RACK_ID##","every":0.1,"uri":"/sched/##BMS_ID##_##RACK_ID##:runMonitor_##BMS_ID##_##RACK_ID##","value":1},{"aname":"##BMS_ID##_##RACK_ID##","every":1,"uri":"/sched/##BMS_ID##_##RACK_ID##:checkInputs_##BMS_ID##_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}}
[3.78587s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##BMS_ID##_##RACK_ID##":{"AlarmDestination":"/assets/##BMS_ID##/##RACK_ID##:alarms","FaultDestination":"/assets/##BMS_ID##/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##BMS_ID##_##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:DischargePowerLimit"}},"/sched/##BMS_ID##_##RACK_ID##":{"pubAssets_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/##BMS_ID##/##RACK_ID##)","table":"/assets/##BMS_ID##/##RACK_ID##","value":1},"runMonitor_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##BMS_ID##_##RACK_ID##","enable":"/config/##BMS_ID##_##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##BMS_ID##_##RACK_ID##","value":1}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/status/##BMS_ID##_##RACK_ID##:CellTempDelta_Calculated":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"},"/status/##BMS_ID##_##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"}},"/status/##BMS_ID##_##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##_##RACK_ID##:CellTempDelta"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:MinCellTemp","variable2":"/status/##BMS_ID##_##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##_##RACK_ID##:CellVoltageDelta"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:MinCellVoltage","variable2":"/status/##BMS_ID##_##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##BMS_ID##_##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##BMS_ID##_##RACK_ID##","every":1,"uri":"/sched/##BMS_ID##_##RACK_ID##:pubAssets_##BMS_ID##_##RACK_ID##","value":1},{"aname":"##BMS_ID##_##RACK_ID##","every":0.1,"uri":"/sched/##BMS_ID##_##RACK_ID##:runMonitor_##BMS_ID##_##RACK_ID##","value":1},{"aname":"##BMS_ID##_##RACK_ID##","every":1,"uri":"/sched/##BMS_ID##_##RACK_ID##:checkInputs_##BMS_ID##_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##BMS_ID##_##RACK_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/controls/##BMS_ID##_##RACK_ID##:ClearFaults":{"amap":"##BMS_ID##_##RACK_ID##","func":"HandleCmd"}},"/status/##BMS_ID##_##RACK_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##BMS_ID##_##RACK_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##BMS_ID##_##RACK_ID##:clear_alarms"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##BMS_ID##_##RACK_ID##:clear_faults and /alarms/##BMS_ID##_##RACK_ID##:clear_alarms will be set to Clear","value":false}}
[3.78655s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##BMS_ID##_##RACK_ID##":{"AlarmDestination":"/assets/##BMS_ID##/##RACK_ID##:alarms","FaultDestination":"/assets/##BMS_ID##/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##BMS_ID##_##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:DischargePowerLimit"}},"/sched/##BMS_ID##_##RACK_ID##":{"pubAssets_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/##BMS_ID##/##RACK_ID##)","table":"/assets/##BMS_ID##/##RACK_ID##","value":1},"runMonitor_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##BMS_ID##_##RACK_ID##","enable":"/config/##BMS_ID##_##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##BMS_ID##_##RACK_ID##","value":1}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/status/##BMS_ID##_##RACK_ID##:CellTempDelta_Calculated":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"},"/status/##BMS_ID##_##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"}},"/status/##BMS_ID##_##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##_##RACK_ID##:CellTempDelta"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:MinCellTemp","variable2":"/status/##BMS_ID##_##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##_##RACK_ID##:CellVoltageDelta"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:MinCellVoltage","variable2":"/status/##BMS_ID##_##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##BMS_ID##_##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##BMS_ID##_##RACK_ID##","every":1,"uri":"/sched/##BMS_ID##_##RACK_ID##:pubAssets_##BMS_ID##_##RACK_ID##","value":1},{"aname":"##BMS_ID##_##RACK_ID##","every":0.1,"uri":"/sched/##BMS_ID##_##RACK_ID##:runMonitor_##BMS_ID##_##RACK_ID##","value":1},{"aname":"##BMS_ID##_##RACK_ID##","every":1,"uri":"/sched/##BMS_ID##_##RACK_ID##:checkInputs_##BMS_ID##_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##BMS_ID##_##RACK_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/controls/##BMS_ID##_##RACK_ID##:ClearFaults":{"amap":"##BMS_ID##_##RACK_ID##","func":"HandleCmd"}},"/status/##BMS_ID##_##RACK_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##BMS_ID##_##RACK_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##BMS_ID##_##RACK_ID##:clear_alarms"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##BMS_ID##_##RACK_ID##:clear_faults and /alarms/##BMS_ID##_##RACK_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##BMS_ID##_##RACK_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##BMS_ID##_##RACK_ID##) will be reset to the normal state (defined in /config/##BMS_ID##_##RACK_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##BMS_ID##_##RACK_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##BMS_ID##_##RACK_ID##) will be reset to the normal state (defined in /config/##BMS_ID##_##RACK_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/status/##BMS_ID##_##RACK_ID##:AnyFireFaultActive":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"},"/status/##BMS_ID##_##RACK_ID##:TotalAlarmCnt":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"},"/status/##BMS_ID##_##RACK_ID##:TotalFaultCnt":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"}},"/status/##BMS_ID##_##RACK_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##_##RACK_ID##:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/##BMS_ID##:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:FaultCnt"}}
[3.78765s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##BMS_ID##_##RACK_ID##":{"AlarmDestination":"/assets/##BMS_ID##/##RACK_ID##:alarms","FaultDestination":"/assets/##BMS_ID##/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##BMS_ID##_##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:DischargePowerLimit"}},"/sched/##BMS_ID##_##RACK_ID##":{"pubAssets_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/##BMS_ID##/##RACK_ID##)","table":"/assets/##BMS_ID##/##RACK_ID##","value":1},"runMonitor_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##BMS_ID##_##RACK_ID##","enable":"/config/##BMS_ID##_##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##BMS_ID##_##RACK_ID##","value":1}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/status/##BMS_ID##_##RACK_ID##:CellTempDelta_Calculated":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"},"/status/##BMS_ID##_##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"}},"/status/##BMS_ID##_##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##_##RACK_ID##:CellTempDelta"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:MinCellTemp","variable2":"/status/##BMS_ID##_##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##_##RACK_ID##:CellVoltageDelta"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:MinCellVoltage","variable2":"/status/##BMS_ID##_##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##BMS_ID##_##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##BMS_ID##_##RACK_ID##","every":1,"uri":"/sched/##BMS_ID##_##RACK_ID##:pubAssets_##BMS_ID##_##RACK_ID##","value":1},{"aname":"##BMS_ID##_##RACK_ID##","every":0.1,"uri":"/sched/##BMS_ID##_##RACK_ID##:runMonitor_##BMS_ID##_##RACK_ID##","value":1},{"aname":"##BMS_ID##_##RACK_ID##","every":1,"uri":"/sched/##BMS_ID##_##RACK_ID##:checkInputs_##BMS_ID##_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##BMS_ID##_##RACK_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/controls/##BMS_ID##_##RACK_ID##:ClearFaults":{"amap":"##BMS_ID##_##RACK_ID##","func":"HandleCmd"}},"/status/##BMS_ID##_##RACK_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##BMS_ID##_##RACK_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##BMS_ID##_##RACK_ID##:clear_alarms"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##BMS_ID##_##RACK_ID##:clear_faults and /alarms/##BMS_ID##_##RACK_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##BMS_ID##_##RACK_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##BMS_ID##_##RACK_ID##) will be reset to the normal state (defined in /config/##BMS_ID##_##RACK_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##BMS_ID##_##RACK_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##BMS_ID##_##RACK_ID##) will be reset to the normal state (defined in /config/##BMS_ID##_##RACK_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/status/##BMS_ID##_##RACK_ID##:AnyFireFaultActive":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"},"/status/##BMS_ID##_##RACK_ID##:TotalAlarmCnt":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"},"/status/##BMS_ID##_##RACK_ID##:TotalFaultCnt":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"}},"/status/##BMS_ID##_##RACK_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##_##RACK_ID##:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/##BMS_ID##:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:FaultCnt"}},"/components/##BMS_ID##":{"##RACK_ID##_fire_fault_active":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":false,"uri":"/status/##BMS_ID##_##RACK_ID##:FireFaultActive"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":true,"uri":"/status/##BMS_ID##_##RACK_ID##:FireFaultActive"},{"enable":"/config/##BMS_ID##_##RACK_ID##:enum_opt","outValue":true,"uri":"/components/##BMS_ID##:##RACK_ID##_fire_fault_active@ifChanged","useAv":true}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0},"##RACK_ID##_status":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"TODO: add output value to set to uri","uri":"/status/##BMS_ID##_##RACK_ID##:Status"},{"enable":"/config/##BMS_ID##_##RACK_ID##:enum_opt","outValue":true,"uri":"/components/##BMS_ID##:##RACK_ID##_status@ifChanged","useAv":true}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/##BMS_ID##_##RACK_ID##":{"checkInputs_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/##BMS_ID##:##RACK_ID##_status@ifChanged"},{"outValue":false,"uri":"/components/##BMS_ID##:##RACK_ID##_fire_fault_active@ifChanged"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/##BMS_ID##_##RACK_ID##":{"avg_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_avg_cell_temp","vlink":"/status/##BMS_ID##_##RACK_ID##:AvgCellTemp"},"avg_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_avg_cell_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:AvgCellVoltage"},"dc_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_dc_current","vlink":"/status/##BMS_ID##_##RACK_ID##:DCCurrent"},"dc_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_dc_power","vlink":"/status/##BMS_ID##_##RACK_ID##:DCPower"},"dc_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_dc_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:DCVoltage"},"max_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_cell_temp","vlink":"/status/##BMS_ID##_##RACK_ID##:MaxCellTemp"},"max_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_cell_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:MaxCellVoltage"},"max_charge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_charge_current","vlink":"/limits/##BMS_ID##_##RACK_ID##:ChargeCurrentLimit"},"max_charge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_charge_power","vlink":"/limits/##BMS_ID##_##RACK_ID##:ChargePowerLimit"},"max_discharge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_discharge_current","vlink":"/limits/##BMS_ID##_##RACK_ID##:DischargeCurrentLimit"},"max_discharge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_discharge_power","vlink":"/limits/##BMS_ID##_##RACK_ID##:DischargePowerLimit"},"min_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_min_cell_temp","vlink":"/status/##BMS_ID##_##RACK_ID##:MinCellTemp"},"min_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_min_cell_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:MinCellVoltage"},"soc":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_soc","vlink":"/status/##BMS_ID##_##RACK_ID##:SOC"},"soh":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_soh","vlink":"/status/##BMS_ID##_##RACK_ID##:SOH"}}
[3.78868s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##BMS_ID##_##RACK_ID##":{"AlarmDestination":"/assets/##BMS_ID##/##RACK_ID##:alarms","FaultDestination":"/assets/##BMS_ID##/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##BMS_ID##_##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:DischargePowerLimit"}},"/sched/##BMS_ID##_##RACK_ID##":{"pubAssets_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/##BMS_ID##/##RACK_ID##)","table":"/assets/##BMS_ID##/##RACK_ID##","value":1},"runMonitor_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##BMS_ID##_##RACK_ID##","enable":"/config/##BMS_ID##_##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##BMS_ID##_##RACK_ID##","value":1}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/status/##BMS_ID##_##RACK_ID##:CellTempDelta_Calculated":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"},"/status/##BMS_ID##_##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"}},"/status/##BMS_ID##_##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##_##RACK_ID##:CellTempDelta"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:MinCellTemp","variable2":"/status/##BMS_ID##_##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##_##RACK_ID##:CellVoltageDelta"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:MinCellVoltage","variable2":"/status/##BMS_ID##_##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##BMS_ID##_##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##BMS_ID##_##RACK_ID##","every":1,"uri":"/sched/##BMS_ID##_##RACK_ID##:pubAssets_##BMS_ID##_##RACK_ID##","value":1},{"aname":"##BMS_ID##_##RACK_ID##","every":0.1,"uri":"/sched/##BMS_ID##_##RACK_ID##:runMonitor_##BMS_ID##_##RACK_ID##","value":1},{"aname":"##BMS_ID##_##RACK_ID##","every":1,"uri":"/sched/##BMS_ID##_##RACK_ID##:checkInputs_##BMS_ID##_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##BMS_ID##_##RACK_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/controls/##BMS_ID##_##RACK_ID##:ClearFaults":{"amap":"##BMS_ID##_##RACK_ID##","func":"HandleCmd"}},"/status/##BMS_ID##_##RACK_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##BMS_ID##_##RACK_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##BMS_ID##_##RACK_ID##:clear_alarms"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##BMS_ID##_##RACK_ID##:clear_faults and /alarms/##BMS_ID##_##RACK_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##BMS_ID##_##RACK_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##BMS_ID##_##RACK_ID##) will be reset to the normal state (defined in /config/##BMS_ID##_##RACK_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##BMS_ID##_##RACK_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##BMS_ID##_##RACK_ID##) will be reset to the normal state (defined in /config/##BMS_ID##_##RACK_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/status/##BMS_ID##_##RACK_ID##:AnyFireFaultActive":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"},"/status/##BMS_ID##_##RACK_ID##:TotalAlarmCnt":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"},"/status/##BMS_ID##_##RACK_ID##:TotalFaultCnt":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"}},"/status/##BMS_ID##_##RACK_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##_##RACK_ID##:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/##BMS_ID##:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:FaultCnt"}},"/components/##BMS_ID##":{"##RACK_ID##_fire_fault_active":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":false,"uri":"/status/##BMS_ID##_##RACK_ID##:FireFaultActive"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":true,"uri":"/status/##BMS_ID##_##RACK_ID##:FireFaultActive"},{"enable":"/config/##BMS_ID##_##RACK_ID##:enum_opt","outValue":true,"uri":"/components/##BMS_ID##:##RACK_ID##_fire_fault_active@ifChanged","useAv":true}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0},"##RACK_ID##_status":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"TODO: add output value to set to uri","uri":"/status/##BMS_ID##_##RACK_ID##:Status"},{"enable":"/config/##BMS_ID##_##RACK_ID##:enum_opt","outValue":true,"uri":"/components/##BMS_ID##:##RACK_ID##_status@ifChanged","useAv":true}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/##BMS_ID##_##RACK_ID##":{"checkInputs_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/##BMS_ID##:##RACK_ID##_status@ifChanged"},{"outValue":false,"uri":"/components/##BMS_ID##:##RACK_ID##_fire_fault_active@ifChanged"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/##BMS_ID##_##RACK_ID##":{"avg_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_avg_cell_temp","vlink":"/status/##BMS_ID##_##RACK_ID##:AvgCellTemp"},"avg_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_avg_cell_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:AvgCellVoltage"},"dc_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_dc_current","vlink":"/status/##BMS_ID##_##RACK_ID##:DCCurrent"},"dc_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_dc_power","vlink":"/status/##BMS_ID##_##RACK_ID##:DCPower"},"dc_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_dc_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:DCVoltage"},"max_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_cell_temp","vlink":"/status/##BMS_ID##_##RACK_ID##:MaxCellTemp"},"max_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_cell_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:MaxCellVoltage"},"max_charge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_charge_current","vlink":"/limits/##BMS_ID##_##RACK_ID##:ChargeCurrentLimit"},"max_charge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_charge_power","vlink":"/limits/##BMS_ID##_##RACK_ID##:ChargePowerLimit"},"max_discharge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_discharge_current","vlink":"/limits/##BMS_ID##_##RACK_ID##:DischargeCurrentLimit"},"max_discharge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_discharge_power","vlink":"/limits/##BMS_ID##_##RACK_ID##:DischargePowerLimit"},"min_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_min_cell_temp","vlink":"/status/##BMS_ID##_##RACK_ID##:MinCellTemp"},"min_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_min_cell_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:MinCellVoltage"},"soc":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_soc","vlink":"/status/##BMS_ID##_##RACK_ID##:SOC"},"soh":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_soh","vlink":"/status/##BMS_ID##_##RACK_ID##:SOH"}}
[3.78976s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##BMS_ID##_##RACK_ID##":{"AlarmDestination":"/assets/##BMS_ID##/##RACK_ID##:alarms","FaultDestination":"/assets/##BMS_ID##/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##BMS_ID##_##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:DischargePowerLimit"}},"/sched/##BMS_ID##_##RACK_ID##":{"pubAssets_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/##BMS_ID##/##RACK_ID##)","table":"/assets/##BMS_ID##/##RACK_ID##","value":1},"runMonitor_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##BMS_ID##_##RACK_ID##","enable":"/config/##BMS_ID##_##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##BMS_ID##_##RACK_ID##","value":1}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/status/##BMS_ID##_##RACK_ID##:CellTempDelta_Calculated":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"},"/status/##BMS_ID##_##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"}},"/status/##BMS_ID##_##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##_##RACK_ID##:CellTempDelta"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:MinCellTemp","variable2":"/status/##BMS_ID##_##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##_##RACK_ID##:CellVoltageDelta"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:MinCellVoltage","variable2":"/status/##BMS_ID##_##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##BMS_ID##_##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##BMS_ID##_##RACK_ID##","every":1,"uri":"/sched/##BMS_ID##_##RACK_ID##:pubAssets_##BMS_ID##_##RACK_ID##","value":1},{"aname":"##BMS_ID##_##RACK_ID##","every":0.1,"uri":"/sched/##BMS_ID##_##RACK_ID##:runMonitor_##BMS_ID##_##RACK_ID##","value":1},{"aname":"##BMS_ID##_##RACK_ID##","every":1,"uri":"/sched/##BMS_ID##_##RACK_ID##:checkInputs_##BMS_ID##_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##BMS_ID##_##RACK_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/controls/##BMS_ID##_##RACK_ID##:ClearFaults":{"amap":"##BMS_ID##_##RACK_ID##","func":"HandleCmd"}},"/status/##BMS_ID##_##RACK_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##BMS_ID##_##RACK_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##BMS_ID##_##RACK_ID##:clear_alarms"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##BMS_ID##_##RACK_ID##:clear_faults and /alarms/##BMS_ID##_##RACK_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##BMS_ID##_##RACK_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##BMS_ID##_##RACK_ID##) will be reset to the normal state (defined in /config/##BMS_ID##_##RACK_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##BMS_ID##_##RACK_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##BMS_ID##_##RACK_ID##) will be reset to the normal state (defined in /config/##BMS_ID##_##RACK_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/status/##BMS_ID##_##RACK_ID##:AnyFireFaultActive":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"},"/status/##BMS_ID##_##RACK_ID##:TotalAlarmCnt":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"},"/status/##BMS_ID##_##RACK_ID##:TotalFaultCnt":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"}},"/status/##BMS_ID##_##RACK_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##_##RACK_ID##:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/##BMS_ID##:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:FaultCnt"}},"/components/##BMS_ID##":{"##RACK_ID##_fire_fault_active":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":false,"uri":"/status/##BMS_ID##_##RACK_ID##:FireFaultActive"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":true,"uri":"/status/##BMS_ID##_##RACK_ID##:FireFaultActive"},{"enable":"/config/##BMS_ID##_##RACK_ID##:enum_opt","outValue":true,"uri":"/components/##BMS_ID##:##RACK_ID##_fire_fault_active@ifChanged","useAv":true}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0},"##RACK_ID##_status":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"TODO: add output value to set to uri","uri":"/status/##BMS_ID##_##RACK_ID##:Status"},{"enable":"/config/##BMS_ID##_##RACK_ID##:enum_opt","outValue":true,"uri":"/components/##BMS_ID##:##RACK_ID##_status@ifChanged","useAv":true}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/##BMS_ID##_##RACK_ID##":{"checkInputs_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/##BMS_ID##:##RACK_ID##_status@ifChanged"},{"outValue":false,"uri":"/components/##BMS_ID##:##RACK_ID##_fire_fault_active@ifChanged"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/##BMS_ID##_##RACK_ID##":{"avg_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_avg_cell_temp","vlink":"/status/##BMS_ID##_##RACK_ID##:AvgCellTemp"},"avg_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_avg_cell_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:AvgCellVoltage"},"dc_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_dc_current","vlink":"/status/##BMS_ID##_##RACK_ID##:DCCurrent"},"dc_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_dc_power","vlink":"/status/##BMS_ID##_##RACK_ID##:DCPower"},"dc_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_dc_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:DCVoltage"},"max_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_cell_temp","vlink":"/status/##BMS_ID##_##RACK_ID##:MaxCellTemp"},"max_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_cell_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:MaxCellVoltage"},"max_charge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_charge_current","vlink":"/limits/##BMS_ID##_##RACK_ID##:ChargeCurrentLimit"},"max_charge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_charge_power","vlink":"/limits/##BMS_ID##_##RACK_ID##:ChargePowerLimit"},"max_discharge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_discharge_current","vlink":"/limits/##BMS_ID##_##RACK_ID##:DischargeCurrentLimit"},"max_discharge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_discharge_power","vlink":"/limits/##BMS_ID##_##RACK_ID##:DischargePowerLimit"},"min_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_min_cell_temp","vlink":"/status/##BMS_ID##_##RACK_ID##:MinCellTemp"},"min_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_min_cell_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:MinCellVoltage"},"soc":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_soc","vlink":"/status/##BMS_ID##_##RACK_ID##:SOC"},"soh":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_soh","vlink":"/status/##BMS_ID##_##RACK_ID##:SOH"}},"/assets/##BMS_ID##/##RACK_ID##":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##_##RACK_ID##:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##_##RACK_ID##:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/assets/##BMS_ID##/##RACK_ID##:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/##BMS_ID##_##RACK_ID##":{"ui_avg_cell_temp":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:avg_cell_temp","vlink":"/status/##BMS_ID##_##RACK_ID##:AvgCellTemp"},"ui_avg_cell_voltage":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:avg_cell_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:AvgCellVoltage"},"ui_cell_temp_delta":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:cell_temp_delta","vlink":"/status/##BMS_ID##_##RACK_ID##:CellTempDelta"},"ui_cell_voltage_delta":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:cell_voltage_delta","vlink":"/status/##BMS_ID##_##RACK_ID##:CellVoltageDelta"},"ui_dc_contactors_closed":{"default":false,"value":"/assets/##BMS_ID##/##RACK_ID##:dc_contactors_closed","vlink":"/status/##BMS_ID##_##RACK_ID##:DCClosed"},"ui_dc_current":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:dc_current","vlink":"/status/##BMS_ID##_##RACK_ID##:DCCurrent"},"ui_dc_power":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:dc_power","vlink":"/status/##BMS_ID##_##RACK_ID##:DCPower"},"ui_dc_voltage":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:dc_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:DCVoltage"},"ui_max_cell_temp":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:max_cell_temp","vlink":"/status/##BMS_ID##_##RACK_ID##:MaxCellTemp"},"ui_max_cell_voltage":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:max_cell_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:MaxCellVoltage"},"ui_max_charge_current":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:max_charge_current","vlink":"/limits/##BMS_ID##_##RACK_ID##:ChargeCurrentLimit"},"ui_max_charge_power":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:max_charge_power","vlink":"/limits/##BMS_ID##_##RACK_ID##:ChargePowerLimit"},"ui_max_discharge_current":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:max_discharge_current","vlink":"/limits/##BMS_ID##_##RACK_ID##:DischargeCurrentLimit"},"ui_max_discharge_power":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:max_discharge_power","vlink":"/limits/##BMS_ID##_##RACK_ID##:DischargePowerLimit"},"ui_min_cell_temp":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:min_cell_temp","vlink":"/status/##BMS_ID##_##RACK_ID##:MinCellTemp"},"ui_min_cell_voltage":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:min_cell_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:MinCellVoltage"},"ui_soc":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:soc","vlink":"/status/##BMS_ID##_##RACK_ID##:SOC"},"ui_soh":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:soh","vlink":"/status/##BMS_ID##_##RACK_ID##:SOH"},"ui_status":{"default":"INIT","value":"/assets/##BMS_ID##/##RACK_ID##:status","vlink":"/status/##BMS_ID##_##RACK_ID##:Status"}}
[3.79116s  ] [info    ] [configLoad     ] Final tbody: {"/config/##BMS_ID##_##RACK_ID##":{"AlarmDestination":"/assets/##BMS_ID##/##RACK_ID##:alarms","FaultDestination":"/assets/##BMS_ID##/##RACK_ID##:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/##BMS_ID##_##RACK_ID##":{"ChargeCurrentLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/##BMS_ID##_##RACK_ID##:DischargePowerLimit"}},"/sched/##BMS_ID##_##RACK_ID##":{"pubAssets_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"RunPub"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/##BMS_ID##/##RACK_ID##)","table":"/assets/##BMS_ID##/##RACK_ID##","value":1},"runMonitor_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"RunMonitor"}]}]},"aname":"##BMS_ID##_##RACK_ID##","enable":"/config/##BMS_ID##_##RACK_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##BMS_ID##_##RACK_ID##","value":1}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/status/##BMS_ID##_##RACK_ID##:CellTempDelta_Calculated":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"},"/status/##BMS_ID##_##RACK_ID##:CellVoltageDelta_Calculated":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"}},"/status/##BMS_ID##_##RACK_ID##":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##_##RACK_ID##:CellTempDelta"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:MinCellTemp","variable2":"/status/##BMS_ID##_##RACK_ID##:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/##BMS_ID##_##RACK_ID##:CellVoltageDelta"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:MinCellVoltage","variable2":"/status/##BMS_ID##_##RACK_ID##:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##BMS_ID##_##RACK_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##BMS_ID##_##RACK_ID##","every":1,"uri":"/sched/##BMS_ID##_##RACK_ID##:pubAssets_##BMS_ID##_##RACK_ID##","value":1},{"aname":"##BMS_ID##_##RACK_ID##","every":0.1,"uri":"/sched/##BMS_ID##_##RACK_ID##:runMonitor_##BMS_ID##_##RACK_ID##","value":1},{"aname":"##BMS_ID##_##RACK_ID##","every":1,"uri":"/sched/##BMS_ID##_##RACK_ID##:checkInputs_##BMS_ID##_##RACK_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##BMS_ID##_##RACK_ID##":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/controls/##BMS_ID##_##RACK_ID##:ClearFaults":{"amap":"##BMS_ID##_##RACK_ID##","func":"HandleCmd"}},"/status/##BMS_ID##_##RACK_ID##":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/##BMS_ID##_##RACK_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##BMS_ID##_##RACK_ID##:clear_alarms"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##BMS_ID##_##RACK_ID##:clear_faults and /alarms/##BMS_ID##_##RACK_ID##:clear_alarms will be set to Clear","value":false}},"/alarms/##BMS_ID##_##RACK_ID##":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##BMS_ID##_##RACK_ID##) will be reset to the normal state (defined in /config/##BMS_ID##_##RACK_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/##BMS_ID##_##RACK_ID##":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##BMS_ID##_##RACK_ID##) will be reset to the normal state (defined in /config/##BMS_ID##_##RACK_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/##BMS_ID##_##RACK_ID##":{"/status/##BMS_ID##_##RACK_ID##:AnyFireFaultActive":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"},"/status/##BMS_ID##_##RACK_ID##:TotalAlarmCnt":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"},"/status/##BMS_ID##_##RACK_ID##:TotalFaultCnt":{"amap":"##BMS_ID##_##RACK_ID##","func":"CalculateVar"}},"/status/##BMS_ID##_##RACK_ID##":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##_##RACK_ID##:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/##BMS_ID##:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/##BMS_ID##_##RACK_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##_##RACK_ID##:FaultCnt"}},"/components/##BMS_ID##":{"##RACK_ID##_fire_fault_active":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":false,"uri":"/status/##BMS_ID##_##RACK_ID##:FireFaultActive"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":true,"uri":"/status/##BMS_ID##_##RACK_ID##:FireFaultActive"},{"enable":"/config/##BMS_ID##_##RACK_ID##:enum_opt","outValue":true,"uri":"/components/##BMS_ID##:##RACK_ID##_fire_fault_active@ifChanged","useAv":true}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0},"##RACK_ID##_status":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"TODO: add output value to set to uri","uri":"/status/##BMS_ID##_##RACK_ID##:Status"},{"enable":"/config/##BMS_ID##_##RACK_ID##:enum_opt","outValue":true,"uri":"/components/##BMS_ID##:##RACK_ID##_status@ifChanged","useAv":true}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/##BMS_ID##_##RACK_ID##":{"checkInputs_##BMS_ID##_##RACK_ID##":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/##BMS_ID##:##RACK_ID##_status@ifChanged"},{"outValue":false,"uri":"/components/##BMS_ID##:##RACK_ID##_fire_fault_active@ifChanged"}]}]},"enable":"/config/##BMS_ID##_##RACK_ID##:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/##BMS_ID##_##RACK_ID##":{"avg_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_avg_cell_temp","vlink":"/status/##BMS_ID##_##RACK_ID##:AvgCellTemp"},"avg_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_avg_cell_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:AvgCellVoltage"},"dc_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_dc_current","vlink":"/status/##BMS_ID##_##RACK_ID##:DCCurrent"},"dc_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_dc_power","vlink":"/status/##BMS_ID##_##RACK_ID##:DCPower"},"dc_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_dc_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:DCVoltage"},"max_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_cell_temp","vlink":"/status/##BMS_ID##_##RACK_ID##:MaxCellTemp"},"max_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_cell_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:MaxCellVoltage"},"max_charge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_charge_current","vlink":"/limits/##BMS_ID##_##RACK_ID##:ChargeCurrentLimit"},"max_charge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_charge_power","vlink":"/limits/##BMS_ID##_##RACK_ID##:ChargePowerLimit"},"max_discharge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_discharge_current","vlink":"/limits/##BMS_ID##_##RACK_ID##:DischargeCurrentLimit"},"max_discharge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_max_discharge_power","vlink":"/limits/##BMS_ID##_##RACK_ID##:DischargePowerLimit"},"min_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_min_cell_temp","vlink":"/status/##BMS_ID##_##RACK_ID##:MinCellTemp"},"min_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_min_cell_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:MinCellVoltage"},"soc":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_soc","vlink":"/status/##BMS_ID##_##RACK_ID##:SOC"},"soh":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##BMS_ID##:##RACK_ID##_soh","vlink":"/status/##BMS_ID##_##RACK_ID##:SOH"}},"/assets/##BMS_ID##/##RACK_ID##":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##BMS_ID##_##RACK_ID##:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##BMS_ID##_##RACK_ID##:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"##BMS_ID##_##RACK_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/assets/##BMS_ID##/##RACK_ID##:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/##BMS_ID##_##RACK_ID##":{"ui_avg_cell_temp":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:avg_cell_temp","vlink":"/status/##BMS_ID##_##RACK_ID##:AvgCellTemp"},"ui_avg_cell_voltage":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:avg_cell_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:AvgCellVoltage"},"ui_cell_temp_delta":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:cell_temp_delta","vlink":"/status/##BMS_ID##_##RACK_ID##:CellTempDelta"},"ui_cell_voltage_delta":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:cell_voltage_delta","vlink":"/status/##BMS_ID##_##RACK_ID##:CellVoltageDelta"},"ui_dc_contactors_closed":{"default":false,"value":"/assets/##BMS_ID##/##RACK_ID##:dc_contactors_closed","vlink":"/status/##BMS_ID##_##RACK_ID##:DCClosed"},"ui_dc_current":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:dc_current","vlink":"/status/##BMS_ID##_##RACK_ID##:DCCurrent"},"ui_dc_power":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:dc_power","vlink":"/status/##BMS_ID##_##RACK_ID##:DCPower"},"ui_dc_voltage":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:dc_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:DCVoltage"},"ui_max_cell_temp":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:max_cell_temp","vlink":"/status/##BMS_ID##_##RACK_ID##:MaxCellTemp"},"ui_max_cell_voltage":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:max_cell_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:MaxCellVoltage"},"ui_max_charge_current":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:max_charge_current","vlink":"/limits/##BMS_ID##_##RACK_ID##:ChargeCurrentLimit"},"ui_max_charge_power":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:max_charge_power","vlink":"/limits/##BMS_ID##_##RACK_ID##:ChargePowerLimit"},"ui_max_discharge_current":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:max_discharge_current","vlink":"/limits/##BMS_ID##_##RACK_ID##:DischargeCurrentLimit"},"ui_max_discharge_power":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:max_discharge_power","vlink":"/limits/##BMS_ID##_##RACK_ID##:DischargePowerLimit"},"ui_min_cell_temp":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:min_cell_temp","vlink":"/status/##BMS_ID##_##RACK_ID##:MinCellTemp"},"ui_min_cell_voltage":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:min_cell_voltage","vlink":"/status/##BMS_ID##_##RACK_ID##:MinCellVoltage"},"ui_soc":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:soc","vlink":"/status/##BMS_ID##_##RACK_ID##:SOC"},"ui_soh":{"default":0,"value":"/assets/##BMS_ID##/##RACK_ID##:soh","vlink":"/status/##BMS_ID##_##RACK_ID##:SOH"},"ui_status":{"default":"INIT","value":"/assets/##BMS_ID##/##RACK_ID##:status","vlink":"/status/##BMS_ID##_##RACK_ID##:Status"}}}
[3.79798s  ] [info    ] [configure_vmapS] process file seeking header stuff am [bms] ai [no ai]
[3.79881s  ] [info    ] [configure_vmapS] body: {"/config/bms":{"AlarmDestination":"/assets/bms/summary:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/summary:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","NumRacks":9,"enable":false,"enum_opt":false},"/limits/bms":{"ChargeCurrentLimit":{"enable":"/config/bms:enable","note":"Calculates the total charge current limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargeCurrentLimit"},"ChargePowerLimit":{"enable":"/config/bms:enable","note":"Calculates the total charge power limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargePowerLimit"},"DischargeCurrentLimit":{"enable":"/config/bms:enable","note":"Calculates the total discharge current limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargeCurrentLimit"},"DischargePowerLimit":{"enable":"/config/bms:enable","note":"Calculates the total discharge power limit reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargePowerLimit"}},"/links/bms":{"ChargeCurrentLimit":{"value":"/limits/bms:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms:DischargePowerLimit"}},"/sched/bms":{"CloseContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CloseContactorsEnable"}]}]},"value":"CloseContactorsEnable"},"LocalStartBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStartBMS"}]}]},"every":0.5,"value":"LocalStartBMS"},"LocalStopBMS":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LocalStopBMS"}]}]},"every":0.5,"value":"LocalStopBMS"},"OpenContactorsEnable":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"OpenContactorsEnable"}]}]},"value":"OpenContactorsEnable"},"pubAssetsSummary_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunPub"}]}]},"enable":"/config/bms:enable","mode":"ui","note":"Publishes UI summary data (/assets/bms/summary)","table":"/assets/bms/summary","value":1},"runMonitor_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"RunMonitor"}]}]},"aname":"bms","enable":"/config/bms:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms","value":1},"updateHeartbeatWrite_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"CalculateVar","inAv":"/status/bms:HeartbeatWrite"}]}]},"enable":"/config/bms:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms":{"/limits/bms:ChargeCurrentLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:ChargePowerLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:DischargeCurrentLimit":{"amap":"bms","func":"CalculateVar"},"/limits/bms:DischargePowerLimit":{"amap":"bms","func":"CalculateVar"},"/status/bms:AvgCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:AvgCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellVoltageDelta_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:ChargeableEnergy":{"amap":"bms","func":"CalculateVar"},"/status/bms:CommsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCharging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCClosed":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCDischarging":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCPower":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:DischargeableEnergy":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MinCellTemp_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:MinCellVoltage_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:NumRacksOnline_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:NumRacksTotal":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC_Calculated":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOH_Calculated":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AvgCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:AvgCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the average cell temperature reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:AvgCellTemp"},"AvgCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:AvgCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the average cell voltage reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:AvgCellVoltage"},"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellTempDelta"}]}]},"enable":"/config/bms:enable","note":"Calculates the max difference between the max and min cell temperatures reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:CellTempDelta"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:CellVoltageDelta"}]}]},"enable":"/config/bms:enable","note":"Calculates the max difference between the max and min cell voltages reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:CellVoltageDelta"},"ChargeableEnergy":{"enable":"/config/bms:enable","note":"Calculates the total chargeable energy reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:ChargeableEnergy"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[1]"}]}]},"enable":"/config/bms:enable","note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","numVars":1,"operation":"and","value":true,"variable1":"bms:CommsOK"},"DCCharging":{"enable":"/config/bms:enable","expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms:SOH@EnableMinValCheck"},{"uri":"/status/bms:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms:MinCellTemp@EnableMinValCheck"}]}]},"enable":"/config/bms:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","numVars":1,"operation":"and","value":false,"variable1":"bms:DCClosed"},"DCCurrent_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent"}]}]},"enable":"/config/bms:enable","note":"Calculates the total DC current reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DCCurrent"},"DCDischarging":{"enable":"/config/bms:enable","expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:DCCurrent"},"DCPower":{"enable":"/config/bms:enable","note":"Calculates the total DC power reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DCPower"},"DCVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the average DC voltage reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:DCVoltage"},"DischargeableEnergy":{"enable":"/config/bms:enable","note":"Calculates the total dischargeable energy reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:DischargeableEnergy"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms:heartbeat_write"}]}]},"enable":"/config/bms:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms:HeartbeatWrite"},"MaxCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MaxCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the maximum cell temperature reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:MaxCellTemp"},"MaxCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MaxCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the maximum cell voltage reported by all BMS instances","numVars":1,"operation":"max","value":0,"variable1":"bms:MaxCellVoltage"},"MinCellTemp_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MinCellTemp"}]}]},"enable":"/config/bms:enable","note":"Calculates the minimum cell temperature reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:MinCellTemp"},"MinCellVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:MinCellVoltage"}]}]},"enable":"/config/bms:enable","note":"Calculates the minimum cell voltage reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:MinCellVoltage"},"NumRacksOnline_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:NumRacksOnline"}]}]},"enable":"/config/bms:enable","note":"Calculates the total number of racks online reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:NumRacksOnline"},"NumRacksTotal":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:NumRacksTotal"}]}]},"enable":"/config/bms:enable","note":"Calculates the total number of racks reported by all BMS instances","numVars":1,"operation":"+","value":0,"variable1":"bms:NumRacksTotal"},"SOC_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:SOC"}]}]},"enable":"/config/bms:enable","note":"Calculates the average SOC reported by all BMS instances","numVars":1,"operation":"avg","value":0,"variable1":"bms:SOC"},"SOH_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:SOH"}]}]},"enable":"/config/bms:enable","note":"Calculates the min SOH reported by all BMS instances","numVars":1,"operation":"min","value":0,"variable1":"bms:SOH"},"Status":"INIT"},"/system/commands":{"runOpts_bms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms","every":1,"uri":"/sched/bms:pubAssetsSummary_bms","value":1},{"aname":"bms","every":0.1,"uri":"/sched/bms:runMonitor_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:checkInputs_bms","value":1},{"aname":"bms","every":1,"uri":"/sched/bms:updateHeartbeatWrite_bms","value":1},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStartBMS","value":0},{"aname":"bms","debug":0,"every":0,"offset":0,"uri":"/sched/bms:LocalStopBMS","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:CloseContactorsEnable","value":0},{"aname":"bms","debug":0,"every":0.1,"offset":0,"uri":"/sched/bms:OpenContactorsEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"CloseContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":2},"OpenContactors":{"checkCmdHoldTimeout":2,"checkCmdTimeout":2,"cmdVar":"/components/catl_ems_bms_rw:ems_cmd","maxCmdTries":2,"value":3},"VerifyCloseContactors":{"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"},"VerifyOpenContactors":{"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/status/bms:DCClosed"}},"/schedule/wake_monitor/bms":{"/controls/bms:ClearFaults":{"amap":"bms","func":"HandleCmd"}},"/status/bms":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms:clear_alarms"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:CloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms:OpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyCloseContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms:VerifyOpenContactors"}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/faults/bms":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/schedule/wake_monitor/bms":{"/status/bms:AnyFireFaultActive":{"amap":"bms","func":"CalculateVar"},"/status/bms:CellTempDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CellVoltageDelta":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:CurrentBeforeStopIsOK":{"amap":"bms","func":"CalculateVar"},"/status/bms:DCCurrent":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:DCVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:HeartbeatRead":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:IsAlarming":{"amap":"bms","func":"CalculateVar"},"/status/bms:IsFaulted":{"amap":"bms","func":"CalculateVar"},"/status/bms:MaxCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MaxCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellTemp":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:MinCellVoltage":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:NumRacksOnline":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:OverCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:OverCurrentFault":{"amap":"bms","func":"CalculateVar"},"/status/bms:SOC":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:SOH":{"amap":"bms","func":"CheckMonitorVar"},"/status/bms:TotalAlarmCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:TotalFaultCnt":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentAlarm":{"amap":"bms","func":"CalculateVar"},"/status/bms:UnderCurrentFault":{"amap":"bms","func":"CalculateVar"}},"/status/bms":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/bms:enable","numVars":2,"operation":"or","value":false,"variable1":"bms:AnyFireFaultActive","variable2":"/status/bms:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms:enable","note":"Set to true if the BMS DC current(s) are within an acceptable level before stopping the PCS","numVars":1,"operation":"and","value":false,"variable1":"bms:CurrentBeforeStopIsOK"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":0,"MaxAlarmTimeout":1,"MaxFaultThreshold":0,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":0,"MaxResetValue":0,"MinAlarmThreshold":0,"MinAlarmTimeout":1,"MinFaultThreshold":0,"MinFaultTimeout":2.5,"MinRecoverTimeout":0,"MinResetValue":0,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"enable":"/config/bms:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/bms:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms:SystemFault","variable2":"/status/bms:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":45,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":52,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":45,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note1":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxAlarmThreshold"},{"uri":"/status/bms:DCCurrent@MaxResetValue"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the max alarm and reset thresholds for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/bms:enable","numVars":2,"operation":"+","value":0,"variable1":"bms:TotalAlarmCnt","variable2":"/status/bms:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/bms:enable","numVars":2,"operation":"+","value":0,"variable1":"bms:TotalFaultCnt","variable2":"/status/bms:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinAlarmThreshold"},{"uri":"/status/bms:DCCurrent@MinResetValue"}]}]},"enable":"/config/bms:enable","expression":"{1}","note":"Adjusts the min alarm and reset thresholds for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms:ChargeCurrentLimit"}},"/components/bms":{"fire_fault_active":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":false,"uri":"/status/bms:FireFaultActive"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":true,"uri":"/status/bms:FireFaultActive"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:fire_fault_active@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms":{"checkInputs_bms":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms:status@ifChanged"},{"outValue":false,"uri":"/components/bms:fire_fault_active@ifChanged"}]}]},"enable":"/config/bms:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms":{"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms:heartbeat_read","vlink":"/status/bms:HeartbeatRead"}},"/site/ess":{"bms_alarm_active":{"name":"BMS Alarm Active","size":1,"type":"status","value":false},"bms_avg_cell_temp":{"name":"BMS Avg Cell Temperature","scale":100,"size":1,"type":"status","units":"°C","value":0},"bms_avg_cell_voltage":{"name":"BMS Avg Cell Voltage","scale":10000,"size":1,"type":"status","units":"V","value":0},"bms_cell_temp_delta":{"name":"BMS Cell Temperature Delta","scale":100,"size":1,"type":"status","units":"°C","value":0},"bms_cell_voltage_delta":{"name":"BMS Cell Voltage Delta","scale":10000,"size":1,"type":"status","units":"V","value":0},"bms_chargeable_energy":{"name":"BMS Chargeable Energy","scale":10,"size":1,"type":"status","units":"kWh","value":0},"bms_close_contactors_enabled":{"excludeFromFile":true,"name":"BMS Close Contactors Enabled","size":1,"type":"status","value":false},"bms_comms_ok":{"name":"BMS Comms OK","size":1,"type":"status","value":false},"bms_control_alarms":{"bit0":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit2":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","bit4":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","name":"BMS Control Alarms","type":"bitfield","value":0},"bms_current_before_stop_is_ok":{"excludeFromFile":true,"name":"BMS Current Before Stop is OK","size":1,"type":"status","value":false},"bms_dc_charging":{"name":"BMS DC Charging","size":1,"type":"status","value":false},"bms_dc_contactor_control":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/ess:remote_control_enable","every":1,"ifChanged":false,"name":"BMS Contactor Control Command","note1":"Initiates BMS close and open contactors","note2":"2-\u003eclose contactors | 3-\u003eopen contactors","offset":0,"size":1,"type":"control","uri":"/sched/ess:SiteBMSContactorControl","value":0},"bms_dc_contactors_closed":{"name":"BMS DC Contactors Closed","size":1,"type":"status","value":false},"bms_dc_current":{"name":"BMS DC Current","scale":10,"signed":true,"size":1,"type":"status","units":"A","value":0},"bms_dc_discharging":{"name":"BMS DC Discharging","size":1,"type":"status","value":false},"bms_dc_power":{"name":"BMS DC Power","scale":10,"signed":true,"size":1,"type":"status","units":"kW","value":0},"bms_dc_voltage":{"name":"BMS DC Voltage","scale":10,"signed":true,"size":1,"type":"status","units":"V","value":0},"bms_dischargeable_energy":{"name":"BMS Dischargeable Energy","scale":10,"size":1,"type":"status","units":"kWh","value":0},"bms_fault_active":{"name":"BMS Fault Active","size":1,"type":"status","value":false},"bms_fire_fault_active":{"name":"BMS Fire Fault Active","size":1,"type":"status","value":false},"bms_max_cell_temp":{"name":"BMS Max Cell Temperature","scale":100,"size":1,"type":"status","units":"°C","value":0},"bms_max_cell_voltage":{"name":"BMS Max Cell Voltage","scale":10000,"size":1,"type":"status","units":"V","value":0},"bms_max_charge_current":{"name":"BMS Max Charge Current","signed":true,"size":1,"type":"status","units":"A","value":0},"bms_max_charge_power":{"name":"BMS Max Charge Power","signed":true,"size":1,"type":"status","units":"kW","value":0},"bms_max_discharge_current":{"name":"BMS Max Discharge Current","size":1,"type":"status","units":"A","value":0},"bms_max_discharge_power":{"name":"BMS Max Discharge Power","size":1,"type":"status","units":"kW","value":0},"bms_min_cell_temp":{"name":"BMS Min Cell Temperature","scale":100,"size":1,"type":"status","units":"°C","value":0},"bms_min_cell_voltage":{"name":"BMS Min Cell Voltage","scale":10000,"size":1,"type":"status","units":"V","value":0},"bms_monitor_alarms":{"bit0":"BMS CellTempDelta - Max Threshold Exceeded","bit1":"BMS CellVoltageDelta - Max Threshold Exceeded","bit10":"BMS NumRacksOnline - Min Threshold Exceeded","bit11":"BMS SOC - Max Threshold Exceeded","bit12":"BMS SOC - Min Threshold Exceeded","bit13":"BMS SOH - Min Threshold Exceeded","bit2":"BMS DCCurrent - Max Threshold Exceeded","bit3":"BMS DCCurrent - Min Threshold Exceeded","bit4":"BMS DCVoltage - Max Threshold Exceeded","bit5":"BMS DCVoltage - Min Threshold Exceeded","bit6":"BMS MaxCellTemp - Max Threshold Exceeded","bit7":"BMS MaxCellVoltage - Max Threshold Exceeded","bit8":"BMS MinCellTemp - Min Threshold Exceeded","bit9":"BMS MinCellVoltage - Min Threshold Exceeded","name":"BMS Monitor Alarms","type":"bitfield","value":0},"bms_monitor_faults":{"bit0":"BMS CellTempDelta - Max Threshold Exceeded","bit1":"BMS CellVoltageDelta - Max Threshold Exceeded","bit10":"BMS NumRacksOnline - Min Threshold Exceeded","bit11":"BMS SOC - Max Threshold Exceeded","bit12":"BMS SOC - Min Threshold Exceeded","bit13":"BMS SOH - Min Threshold Exceeded","bit2":"BMS DCCurrent - Max Threshold Exceeded","bit3":"BMS DCCurrent - Min Threshold Exceeded","bit4":"BMS DCVoltage - Max Threshold Exceeded","bit5":"BMS DCVoltage - Min Threshold Exceeded","bit6":"BMS MaxCellTemp - Max Threshold Exceeded","bit7":"BMS MaxCellVoltage - Max Threshold Exceeded","bit8":"BMS MinCellTemp - Min Threshold Exceeded","bit9":"BMS MinCellVoltage - Min Threshold Exceeded","name":"BMS Monitor Faults","type":"bitfield","value":0},"bms_num_racks_online":{"name":"BMS Number of Racks Online","size":1,"type":"status","value":0},"bms_num_racks_total":{"name":"BMS Number of Racks Total","size":1,"type":"status","value":0},"bms_open_contactors_enabled":{"excludeFromFile":true,"name":"BMS Open Contactors Enabled","size":1,"type":"status","value":false},"bms_soc":{"name":"BMS State of Charge (SOC)","scale":10,"size":1,"type":"status","units":"%","value":0},"bms_soh":{"name":"BMS State of Health (SOH)","scale":10,"size":1,"type":"status","units":"%","value":0},"bms_status":{"excludeFromFile":true,"name":"BMS Status","size":1,"type":"status","value":"INIT"}},"/vlinks/bms":{"site_bms_alarm_active":{"default":false,"value":"/site/ess:bms_alarm_active","vlink":"/status/bms:IsAlarming"},"site_bms_avg_cell_temp":{"default":0,"value":"/site/ess:bms_avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"site_bms_avg_cell_voltage":{"default":0,"value":"/site/ess:bms_avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"site_bms_cell_temp_delta":{"default":0,"value":"/site/ess:bms_cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"site_bms_cell_voltage_delta":{"default":0,"value":"/site/ess:bms_cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"site_bms_chargeable_energy":{"default":0,"value":"/site/ess:bms_chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"site_bms_close_contactors_enabled":{"default":false,"value":"/site/ess:bms_close_contactors_enabled","vlink":"/status/bms:CloseContactorsEnabled"},"site_bms_comms_ok":{"default":false,"value":"/site/ess:bms_comms_ok","vlink":"/status/bms:CommsOK"},"site_bms_current_before_stop_is_ok":{"default":false,"value":"/site/ess:bms_current_before_stop_is_ok","vlink":"/status/bms:CurrentBeforeStopIsOK"},"site_bms_dc_charging":{"default":false,"value":"/site/ess:bms_dc_charging","vlink":"/status/bms:DCCharging"},"site_bms_dc_contactors_closed":{"default":false,"value":"/site/ess:bms_dc_contactors_closed","vlink":"/status/bms:DCClosed"},"site_bms_dc_current":{"default":0,"value":"/site/ess:bms_dc_current","vlink":"/status/bms:DCCurrent"},"site_bms_dc_discharging":{"default":false,"value":"/site/ess:bms_dc_discharging","vlink":"/status/bms:DCDischarging"},"site_bms_dc_power":{"default":0,"value":"/site/ess:bms_dc_power","vlink":"/status/bms:DCPower"},"site_bms_dc_voltage":{"default":0,"value":"/site/ess:bms_dc_voltage","vlink":"/status/bms:DCVoltage"},"site_bms_dischargeable_energy":{"default":0,"value":"/site/ess:bms_dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"site_bms_fault_active":{"default":false,"value":"/site/ess:bms_fault_active","vlink":"/status/bms:IsFaulted"},"site_bms_fire_fault_active":{"default":false,"value":"/site/ess:bms_fire_fault_active","vlink":"/status/bms:AnyFireFaultActive"},"site_bms_max_cell_temp":{"default":0,"value":"/site/ess:bms_max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"site_bms_max_cell_voltage":{"default":0,"value":"/site/ess:bms_max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"site_bms_max_charge_current":{"default":0,"value":"/site/ess:bms_max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"site_bms_max_charge_power":{"default":0,"value":"/site/ess:bms_max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"site_bms_max_discharge_current":{"default":0,"value":"/site/ess:bms_max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"site_bms_max_discharge_power":{"default":0,"value":"/site/ess:bms_max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"site_bms_min_cell_temp":{"default":0,"value":"/site/ess:bms_min_cell_temp","vlink":"/status/bms:MinCellTemp"},"site_bms_min_cell_voltage":{"default":0,"value":"/site/ess:bms_min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"site_bms_num_racks_online":{"default":0,"value":"/site/ess:bms_num_racks_online","vlink":"/status/bms:NumRacksOnline"},"site_bms_num_racks_total":{"default":0,"value":"/site/ess:bms_num_racks_total","vlink":"/status/bms:NumRacksTotal"},"site_bms_open_contactors_enabled":{"default":false,"value":"/site/ess:bms_open_contactors_enabled","vlink":"/status/bms:OpenContactorsEnabled"},"site_bms_soc":{"default":0,"value":"/site/ess:bms_soc","vlink":"/status/bms:SOC"},"site_bms_soh":{"default":0,"value":"/site/ess:bms_soh","vlink":"/status/bms:SOH"},"site_bms_status":{"default":"INIT","value":"/site/ess:bms_status","vlink":"/status/bms:Status"}},"/assets/bms/summary":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"chargeable_energy":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"close_contactors":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":false,"every":0.5,"name":"Close DC Contactor","note":"Enabled conditions: ![/status/bms/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode] \u0026\u0026 ![/status/bms/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/bms:LocalStartBMS","value":false},"comms_ok":{"value":false},"dc_charging":{"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_discharging":{"value":false},"dc_power":{"value":0},"dc_voltage":{"value":0},"dischargeable_energy":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"bms","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/summary:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"num_racks_online":{"value":0},"num_racks_total":{"value":0},"open_contactors":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"bms","debug":0,"enabled":false,"every":0.5,"name":"Open DC Contactor","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 ![/status/pcs/DCClosed] \u0026\u0026 [/assets/bms/summary/maint_mode]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/bms:LocalStopBMS","value":false},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/bms":{"ui_avg_cell_temp":{"default":0,"value":"/assets/bms/summary:avg_cell_temp","vlink":"/status/bms:AvgCellTemp"},"ui_avg_cell_voltage":{"default":0,"value":"/assets/bms/summary:avg_cell_voltage","vlink":"/status/bms:AvgCellVoltage"},"ui_cell_temp_delta":{"default":0,"value":"/assets/bms/summary:cell_temp_delta","vlink":"/status/bms:CellTempDelta"},"ui_cell_voltage_delta":{"default":0,"value":"/assets/bms/summary:cell_voltage_delta","vlink":"/status/bms:CellVoltageDelta"},"ui_chargeable_energy":{"default":0,"value":"/assets/bms/summary:chargeable_energy","vlink":"/status/bms:ChargeableEnergy"},"ui_comms_ok":{"default":false,"value":"/assets/bms/summary:comms_ok","vlink":"/status/bms:CommsOK"},"ui_dc_charging":{"default":false,"value":"/assets/bms/summary:dc_charging","vlink":"/status/bms:DCCharging"},"ui_dc_contactors_closed":{"default":false,"value":"/assets/bms/summary:dc_contactors_closed","vlink":"/status/bms:DCClosed"},"ui_dc_current":{"default":0,"value":"/assets/bms/summary:dc_current","vlink":"/status/bms:DCCurrent"},"ui_dc_discharging":{"default":false,"value":"/assets/bms/summary:dc_discharging","vlink":"/status/bms:DCDischarging"},"ui_dc_power":{"default":0,"value":"/assets/bms/summary:dc_power","vlink":"/status/bms:DCPower"},"ui_dc_voltage":{"default":0,"value":"/assets/bms/summary:dc_voltage","vlink":"/status/bms:DCVoltage"},"ui_dischargeable_energy":{"default":0,"value":"/assets/bms/summary:dischargeable_energy","vlink":"/status/bms:DischargeableEnergy"},"ui_max_cell_temp":{"default":0,"value":"/assets/bms/summary:max_cell_temp","vlink":"/status/bms:MaxCellTemp"},"ui_max_cell_voltage":{"default":0,"value":"/assets/bms/summary:max_cell_voltage","vlink":"/status/bms:MaxCellVoltage"},"ui_max_charge_current":{"default":0,"value":"/assets/bms/summary:max_charge_current","vlink":"/limits/bms:ChargeCurrentLimit"},"ui_max_charge_power":{"default":0,"value":"/assets/bms/summary:max_charge_power","vlink":"/limits/bms:ChargePowerLimit"},"ui_max_discharge_current":{"default":0,"value":"/assets/bms/summary:max_discharge_current","vlink":"/limits/bms:DischargeCurrentLimit"},"ui_max_discharge_power":{"default":0,"value":"/assets/bms/summary:max_discharge_power","vlink":"/limits/bms:DischargePowerLimit"},"ui_min_cell_temp":{"default":0,"value":"/assets/bms/summary:min_cell_temp","vlink":"/status/bms:MinCellTemp"},"ui_min_cell_voltage":{"default":0,"value":"/assets/bms/summary:min_cell_voltage","vlink":"/status/bms:MinCellVoltage"},"ui_num_racks_online":{"default":0,"value":"/assets/bms/summary:num_racks_online","vlink":"/status/bms:NumRacksOnline"},"ui_num_racks_total":{"default":0,"value":"/assets/bms/summary:num_racks_total","vlink":"/status/bms:NumRacksTotal"},"ui_soc":{"default":0,"value":"/assets/bms/summary:soc","vlink":"/status/bms:SOC"},"ui_soh":{"default":0,"value":"/assets/bms/summary:soh","vlink":"/status/bms:SOH"},"ui_status":{"default":"INIT","value":"/assets/bms/summary:status","vlink":"/status/bms:Status"}}}
[3.80142s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.80206s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/summary:alarms",
	"CurrentBeforeStopThreshold":	35,
	"FaultDestination":	"/assets/bms/summary:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"NumRacks":	9,
	"enable":	false,
	"enum_opt":	false
}].
[3.80265s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:alarms]
[3.80296s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:alarms]
[3.80329s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:faults]
[3.80352s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:faults]
[3.80385s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.80407s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.80432s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.80455s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.8049s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"enable":	"/config/bms:enable",
		"note":	"Calculates the total charge current limit reported by all BMS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"bms:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"enable":	"/config/bms:enable",
		"note":	"Calculates the total charge power limit reported by all BMS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"bms:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"enable":	"/config/bms:enable",
		"note":	"Calculates the total discharge current limit reported by all BMS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"bms:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"enable":	"/config/bms:enable",
		"note":	"Calculates the total discharge power limit reported by all BMS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"bms:DischargePowerLimit"
	}
}].
[3.80531s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/bms:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/bms:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/bms:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/bms:DischargePowerLimit"
	}
}].
[3.80557s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms:ChargeCurrentLimit]
[3.80581s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms:ChargeCurrentLimit]
[3.80611s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms:ChargePowerLimit]
[3.80673s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms:ChargePowerLimit]
[3.808s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms:DischargeCurrentLimit]
[3.80947s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms:DischargeCurrentLimit]
[3.80986s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms:DischargePowerLimit]
[3.81029s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms:DischargePowerLimit]
[3.81081s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CloseContactorsEnable":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CloseContactorsEnable"
						}]
				}]
		},
		"value":	"CloseContactorsEnable"
	},
	"LocalStartBMS":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"LocalStartBMS"
						}]
				}]
		},
		"every":	0.5,
		"value":	"LocalStartBMS"
	},
	"LocalStopBMS":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"LocalStopBMS"
						}]
				}]
		},
		"every":	0.5,
		"value":	"LocalStopBMS"
	},
	"OpenContactorsEnable":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"OpenContactorsEnable"
						}]
				}]
		},
		"value":	"OpenContactorsEnable"
	},
	"pubAssetsSummary_bms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"mode":	"ui",
		"note":	"Publishes UI summary data (/assets/bms/summary)",
		"table":	"/assets/bms/summary",
		"value":	1
	},
	"runMonitor_bms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"bms",
		"enable":	"/config/bms:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/bms",
		"value":	1
	},
	"updateHeartbeatWrite_bms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CalculateVar",
							"inAv":	"/status/bms:HeartbeatWrite"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Periodically updates the heartbeat write variable defined in /status/bms:HeartbeatWrite",
		"value":	1
	}
}].
[3.81186s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [CloseContactorsEnable]
[3.81241s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [CloseContactorsEnable]
[3.81275s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/bms:perf_CloseContactorsEnable]
[3.81313s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/bms:perf_CloseContactorsEnable]
[3.81348s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CloseContactorsEnable_bms]
[3.81384s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CloseContactorsEnable_bms]
[3.81423s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [LocalStartBMS]
[3.81451s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [LocalStartBMS]
[3.81486s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [LocalStopBMS]
[3.81512s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [LocalStopBMS]
[3.81548s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [OpenContactorsEnable]
[3.81601s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [OpenContactorsEnable]
[3.81657s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/bms:perf_OpenContactorsEnable]
[3.81684s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/bms:perf_OpenContactorsEnable]
[3.81709s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:OpenContactorsEnable_bms]
[3.81733s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:OpenContactorsEnable_bms]
[3.81789s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/limits/bms:ChargeCurrentLimit":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/limits/bms:ChargePowerLimit":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/limits/bms:DischargeCurrentLimit":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/limits/bms:DischargePowerLimit":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:AvgCellTemp_Calculated":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:AvgCellVoltage_Calculated":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:CellTempDelta_Calculated":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:CellVoltageDelta_Calculated":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:ChargeableEnergy":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:CommsOK":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:DCCharging":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:DCClosed":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:DCCurrent_Calculated":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:DCDischarging":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:DCPower":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:DCVoltage_Calculated":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:DischargeableEnergy":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:MaxCellTemp_Calculated":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:MaxCellVoltage_Calculated":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:MinCellTemp_Calculated":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:MinCellVoltage_Calculated":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:NumRacksOnline_Calculated":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:NumRacksTotal":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:SOC_Calculated":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:SOH_Calculated":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	}
}].
[3.81903s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AvgCellTemp_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:AvgCellTemp"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Calculates the average cell temperature reported by all BMS instances",
		"numVars":	1,
		"operation":	"avg",
		"value":	0,
		"variable1":	"bms:AvgCellTemp"
	},
	"AvgCellVoltage_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:AvgCellVoltage"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Calculates the average cell voltage reported by all BMS instances",
		"numVars":	1,
		"operation":	"avg",
		"value":	0,
		"variable1":	"bms:AvgCellVoltage"
	},
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:CellTempDelta"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Calculates the max difference between the max and min cell temperatures reported by all BMS instances",
		"numVars":	1,
		"operation":	"max",
		"value":	0,
		"variable1":	"bms:CellTempDelta"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:CellVoltageDelta"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Calculates the max difference between the max and min cell voltages reported by all BMS instances",
		"numVars":	1,
		"operation":	"max",
		"value":	0,
		"variable1":	"bms:CellVoltageDelta"
	},
	"ChargeableEnergy":	{
		"enable":	"/config/bms:enable",
		"note":	"Calculates the total chargeable energy reported by all BMS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"bms:ChargeableEnergy"
	},
	"CommsOK":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	true,
							"uri":	"/site/ess:comms_faults[1]"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable",
		"numVars":	1,
		"operation":	"and",
		"value":	true,
		"variable1":	"bms:CommsOK"
	},
	"DCCharging":	{
		"enable":	"/config/bms:enable",
		"expression":	"{1} < 0",
		"note":	"Determines if the BMS is charging",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:DCCurrent"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/bms:DCCurrent@EnableMinValCheck"
						}, {
							"uri":	"/status/bms:NumRacksOnline@EnableMinValCheck"
						}, {
							"uri":	"/status/bms:SOH@EnableMinValCheck"
						}, {
							"uri":	"/status/bms:MaxCellVoltage@EnableMaxValCheck"
						}, {
							"uri":	"/status/bms:MinCellVoltage@EnableMinValCheck"
						}, {
							"uri":	"/status/bms:MaxCellTemp@EnableMaxValCheck"
						}, {
							"uri":	"/status/bms:MinCellTemp@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"numVars":	1,
		"operation":	"and",
		"value":	false,
		"variable1":	"bms:DCClosed"
	},
	"DCCurrent_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:DCCurrent"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Calculates the total DC current reported by all BMS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"bms:DCCurrent"
	},
	"DCDischarging":	{
		"enable":	"/config/bms:enable",
		"expression":	"{1} > 0",
		"note":	"Determines if the BMS is discharging",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:DCCurrent"
	},
	"DCPower":	{
		"enable":	"/config/bms:enable",
		"note":	"Calculates the total DC power reported by all BMS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"bms:DCPower"
	},
	"DCVoltage_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:DCVoltage"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Calculates the average DC voltage reported by all BMS instances",
		"numVars":	1,
		"operation":	"avg",
		"value":	0,
		"variable1":	"bms:DCVoltage"
	},
	"DischargeableEnergy":	{
		"enable":	"/config/bms:enable",
		"note":	"Calculates the total dischargeable energy reported by all BMS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"bms:DischargeableEnergy"
	},
	"HeartbeatWrite":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"fims":	"set",
							"uri":	"/components/bms:heartbeat_write"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"excludeFromDefaultSched":	true,
		"expression":	"if (({1} >= 59), 0, ({1} + 1))",
		"note":	"Updates and then sends the heartbeat write value",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms:HeartbeatWrite"
	},
	"MaxCellTemp_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:MaxCellTemp"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Calculates the maximum cell temperature reported by all BMS instances",
		"numVars":	1,
		"operation":	"max",
		"value":	0,
		"variable1":	"bms:MaxCellTemp"
	},
	"MaxCellVoltage_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:MaxCellVoltage"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Calculates the maximum cell voltage reported by all BMS instances",
		"numVars":	1,
		"operation":	"max",
		"value":	0,
		"variable1":	"bms:MaxCellVoltage"
	},
	"MinCellTemp_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:MinCellTemp"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Calculates the minimum cell temperature reported by all BMS instances",
		"numVars":	1,
		"operation":	"min",
		"value":	0,
		"variable1":	"bms:MinCellTemp"
	},
	"MinCellVoltage_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:MinCellVoltage"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Calculates the minimum cell voltage reported by all BMS instances",
		"numVars":	1,
		"operation":	"min",
		"value":	0,
		"variable1":	"bms:MinCellVoltage"
	},
	"NumRacksOnline_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:NumRacksOnline"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Calculates the total number of racks online reported by all BMS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"bms:NumRacksOnline"
	},
	"NumRacksTotal":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:NumRacksTotal"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Calculates the total number of racks reported by all BMS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"bms:NumRacksTotal"
	},
	"SOC_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:SOC"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Calculates the average SOC reported by all BMS instances",
		"numVars":	1,
		"operation":	"avg",
		"value":	0,
		"variable1":	"bms:SOC"
	},
	"SOH_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:SOH"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Calculates the min SOH reported by all BMS instances",
		"numVars":	1,
		"operation":	"min",
		"value":	0,
		"variable1":	"bms:SOH"
	},
	"Status":	"INIT"
}].
[3.82089s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.82125s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.82178s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_bms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/bms) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"bms",
				"every":	1,
				"uri":	"/sched/bms:pubAssetsSummary_bms",
				"value":	1
			}, {
				"aname":	"bms",
				"every":	0.1,
				"uri":	"/sched/bms:runMonitor_bms",
				"value":	1
			}, {
				"aname":	"bms",
				"every":	1,
				"uri":	"/sched/bms:checkInputs_bms",
				"value":	1
			}, {
				"aname":	"bms",
				"every":	1,
				"uri":	"/sched/bms:updateHeartbeatWrite_bms",
				"value":	1
			}, {
				"aname":	"bms",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/bms:LocalStartBMS",
				"value":	0
			}, {
				"aname":	"bms",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/bms:LocalStopBMS",
				"value":	0
			}, {
				"aname":	"bms",
				"debug":	0,
				"every":	0.1,
				"offset":	0,
				"uri":	"/sched/bms:CloseContactorsEnable",
				"value":	0
			}, {
				"aname":	"bms",
				"debug":	0,
				"every":	0.1,
				"offset":	0,
				"uri":	"/sched/bms:OpenContactorsEnable",
				"value":	0
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[3.82233s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"useExpr":	false,
		"value":	0
	},
	"CloseContactors":	{
		"checkCmdHoldTimeout":	2,
		"checkCmdTimeout":	2,
		"cmdVar":	"/components/catl_ems_bms_rw:ems_cmd",
		"maxCmdTries":	2,
		"value":	2
	},
	"OpenContactors":	{
		"checkCmdHoldTimeout":	2,
		"checkCmdTimeout":	2,
		"cmdVar":	"/components/catl_ems_bms_rw:ems_cmd",
		"maxCmdTries":	2,
		"value":	3
	},
	"VerifyCloseContactors":	{
		"enableAlert":	false,
		"expression":	"{1}",
		"numVars":	1,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms:DCClosed"
	},
	"VerifyOpenContactors":	{
		"enableAlert":	false,
		"expression":	"not {1}",
		"numVars":	1,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms:DCClosed"
	}
}].
[3.82271s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:HandleCmd_ClearFaults]
[3.82299s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:HandleCmd_ClearFaults]
[3.82327s  ] [info    ] [HandleCmd      ] reload first run [bms] [/controls/bms:ClearFaults]  reload 0
[3.82389s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/bms:ClearFaults]
[3.82422s  ] [info    ] [HandleCmd      ] Adding [/controls/bms:ClearFaults] to amap in asset [bms]
[3.82461s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/bms:ClearFaults]
[3.83227s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/bms:ClearFaults]
[3.83312s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/bms:ClearFaults":	{
		"amap":	"bms",
		"func":	"HandleCmd"
	}
}].
[3.83358s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/bms:ClearFaults"
						}, {
							"outValue":	"Clear",
							"uri":	"/faults/bms:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/bms:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/bms:clear_faults and /alarms/bms:clear_alarms will be set to Clear",
		"value":	false
	},
	"CloseContactorsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/bms:VerifyCloseContactors@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/bms:VerifyCloseContactors"
						}, {
							"inValue":	false,
							"outValue":	"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/bms:CloseContactors"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note":	"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm",
		"value":	false
	},
	"OpenContactorsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/bms:VerifyOpenContactors@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/bms:VerifyOpenContactors"
						}, {
							"inValue":	false,
							"outValue":	"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/bms:OpenContactors"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note":	"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm",
		"value":	false
	},
	"VerifyCloseContactorsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/bms:VerifyCloseContactors"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note":	"If the BMS failed to close contactors after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyOpenContactorsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/bms:VerifyOpenContactors"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note":	"If the BMS failed to open contactors after an elasped time, send an alarm",
		"value":	false
	}
}].
[3.83436s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:bms_control_alarms[0]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending clear faults command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"CloseContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:bms_control_alarms[1]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending close contactors command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"HeartbeatRead":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"type":	"alarm",
		"value":	"Normal"
	},
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"CellTempDelta_limit_max",
							"note":	"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[0]"
						}, {
							"inValue":	"CellVoltageDelta_limit_max",
							"note":	"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[1]"
						}, {
							"inValue":	"DCCurrent_limit_max",
							"note":	"Bit 2 - BMS DCCurrent - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[2]"
						}, {
							"inValue":	"DCCurrent_limit_min",
							"note":	"Bit 3 - BMS DCCurrent - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[3]"
						}, {
							"inValue":	"DCVoltage_limit_max",
							"note":	"Bit 4 - BMS DCVoltage - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[4]"
						}, {
							"inValue":	"DCVoltage_limit_min",
							"note":	"Bit 5 - BMS DCVoltage - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[5]"
						}, {
							"inValue":	"HeartbeatRead_state",
							"outValue":	"BMS Communication Failure",
							"uri":	"/alarms/bms:HeartbeatRead"
						}, {
							"inValue":	"MaxCellTemp_limit_max",
							"note":	"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[6]"
						}, {
							"inValue":	"MaxCellVoltage_limit_max",
							"note":	"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[7]"
						}, {
							"inValue":	"MinCellTemp_limit_min",
							"note":	"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[8]"
						}, {
							"inValue":	"MinCellVoltage_limit_min",
							"note":	"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[9]"
						}, {
							"inValue":	"NumRacksOnline_limit_min",
							"note":	"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[10]"
						}, {
							"inValue":	"SOC_limit_max",
							"note":	"Bit 11 - BMS SOC - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[11]"
						}, {
							"inValue":	"SOC_limit_min",
							"note":	"Bit 12 - BMS SOC - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[12]"
						}, {
							"inValue":	"SOH_limit_min",
							"note":	"Bit 13 - BMS SOH - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_alarms[13]"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"OpenContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:bms_control_alarms[2]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending open contactors command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyCloseContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:bms_control_alarms[3]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the BMS failed to close contactors",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyOpenContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:bms_control_alarms[4]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the BMS failed to open contactors",
		"type":	"alarm",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/bms) will be reset to the normal state (defined in /config/bms:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"numVars":	12,
		"type":	"alarm",
		"value":	"Normal",
		"variable1":	"CellTempDelta",
		"variable10":	"NumRacksOnline",
		"variable11":	"SOC",
		"variable12":	"SOH",
		"variable2":	"CellVoltageDelta",
		"variable3":	"DCCurrent",
		"variable4":	"DCVoltage",
		"variable5":	"HeartbeatRead",
		"variable6":	"MaxCellTemp",
		"variable7":	"MaxCellVoltage",
		"variable8":	"MinCellTemp",
		"variable9":	"MinCellVoltage"
	}
}].
[3.83494s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.83531s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.83568s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms:FaultDestination]
[3.83598s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms:FaultDestination]
[3.83625s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms:NoFaultMsg]
[3.83649s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms:NoFaultMsg]
[3.83672s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:FaultCnt]
[3.83693s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:FaultCnt]
[3.83716s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms:AlarmDestination]
[3.83738s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms:AlarmDestination]
[3.83773s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms:NoAlarmMsg]
[3.83796s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms:NoAlarmMsg]
[3.83854s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:AlarmCnt]
[3.83877s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:AlarmCnt]
[3.83921s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.83947s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.83984s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.84022s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.84108s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.84224s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.84293s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.84326s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.84376s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.8441s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.84449s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.84478s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.84524s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.84551s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.84783s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"HeartbeatRead":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"type":	"fault",
		"value":	"Normal"
	},
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"CellTempDelta_limit_max",
							"note":	"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[0]"
						}, {
							"inValue":	"CellVoltageDelta_limit_max",
							"note":	"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[1]"
						}, {
							"inValue":	"DCCurrent_limit_max",
							"note":	"Bit 2 - BMS DCCurrent - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[2]"
						}, {
							"inValue":	"DCCurrent_limit_min",
							"note":	"Bit 3 - BMS DCCurrent - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[3]"
						}, {
							"inValue":	"DCVoltage_limit_max",
							"note":	"Bit 4 - BMS DCVoltage - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[4]"
						}, {
							"inValue":	"DCVoltage_limit_min",
							"note":	"Bit 5 - BMS DCVoltage - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[5]"
						}, {
							"inValue":	"HeartbeatRead_state",
							"outValue":	"BMS Communication Failure",
							"uri":	"/faults/bms:HeartbeatRead"
						}, {
							"inValue":	"MaxCellTemp_limit_max",
							"note":	"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[6]"
						}, {
							"inValue":	"MaxCellVoltage_limit_max",
							"note":	"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[7]"
						}, {
							"inValue":	"MinCellTemp_limit_min",
							"note":	"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[8]"
						}, {
							"inValue":	"MinCellVoltage_limit_min",
							"note":	"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[9]"
						}, {
							"inValue":	"NumRacksOnline_limit_min",
							"note":	"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[10]"
						}, {
							"inValue":	"SOC_limit_max",
							"note":	"Bit 11 - BMS SOC - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[11]"
						}, {
							"inValue":	"SOC_limit_min",
							"note":	"Bit 12 - BMS SOC - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[12]"
						}, {
							"inValue":	"SOH_limit_min",
							"note":	"Bit 13 - BMS SOH - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_monitor_faults[13]"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/bms) will be reset to the normal state (defined in /config/bms:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"numVars":	12,
		"type":	"fault",
		"value":	"Normal",
		"variable1":	"CellTempDelta",
		"variable10":	"NumRacksOnline",
		"variable11":	"SOC",
		"variable12":	"SOH",
		"variable2":	"CellVoltageDelta",
		"variable3":	"DCCurrent",
		"variable4":	"DCVoltage",
		"variable5":	"HeartbeatRead",
		"variable6":	"MaxCellTemp",
		"variable7":	"MaxCellVoltage",
		"variable8":	"MinCellTemp",
		"variable9":	"MinCellVoltage"
	}
}].
[3.84893s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.84926s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.85028s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.85084s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.85147s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.85176s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.85225s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/bms:AnyFireFaultActive":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:CellTempDelta":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:CellVoltageDelta":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:CurrentBeforeStopIsOK":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:DCCurrent":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:DCVoltage":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:HeartbeatRead":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:IsAlarming":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:IsFaulted":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:MaxCellTemp":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:MaxCellVoltage":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:MinCellTemp":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:MinCellVoltage":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:NumRacksOnline":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:OverCurrentAlarm":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:OverCurrentFault":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:SOC":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:SOH":	{
		"amap":	"bms",
		"func":	"CheckMonitorVar"
	},
	"/status/bms:TotalAlarmCnt":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:TotalFaultCnt":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:UnderCurrentAlarm":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	},
	"/status/bms:UnderCurrentFault":	{
		"amap":	"bms",
		"func":	"CalculateVar"
	}
}].
[3.85378s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"enable":	"/config/bms:enable",
		"numVars":	2,
		"operation":	"or",
		"value":	false,
		"variable1":	"bms:AnyFireFaultActive",
		"variable2":	"/status/bms:FireFaultActive"
	},
	"CellTempDelta":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"MaxAlarmThreshold":	7,
		"MaxAlarmTimeout":	5.5,
		"MaxFaultThreshold":	10,
		"MaxFaultTimeout":	2.5,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	7,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions",
		"value":	0
	},
	"CellVoltageDelta":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"MaxAlarmThreshold":	1,
		"MaxAlarmTimeout":	5.5,
		"MaxFaultThreshold":	2,
		"MaxFaultTimeout":	2.5,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	1,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions",
		"value":	0
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	0,
							"uri":	"/site/ess:bms_monitor_alarms"
						}, {
							"outValue":	0,
							"uri":	"/site/ess:bms_monitor_faults"
						}, {
							"outValue":	0,
							"uri":	"/site/ess:bms_control_alarms"
						}]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"CurrentBeforeStopIsOK":	{
		"enable":	"/config/bms:enable",
		"note":	"Set to true if the BMS DC current(s) are within an acceptable level before stopping the PCS",
		"numVars":	1,
		"operation":	"and",
		"value":	false,
		"variable1":	"bms:CurrentBeforeStopIsOK"
	},
	"DCCurrent":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"EnableMinValCheck":	false,
		"MaxAlarmThreshold":	0,
		"MaxAlarmTimeout":	1,
		"MaxFaultThreshold":	0,
		"MaxFaultTimeout":	2.5,
		"MaxRecoverTimeout":	0,
		"MaxResetValue":	0,
		"MinAlarmThreshold":	0,
		"MinAlarmTimeout":	1,
		"MinFaultThreshold":	0,
		"MinFaultTimeout":	2.5,
		"MinRecoverTimeout":	0,
		"MinResetValue":	0,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over/under current conditions",
		"value":	0
	},
	"DCVoltage":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"EnableMinValCheck":	false,
		"MaxAlarmThreshold":	1450,
		"MaxAlarmTimeout":	0.5,
		"MaxFaultThreshold":	1500,
		"MaxFaultTimeout":	0.5,
		"MaxRecoverTimeout":	1.5,
		"MaxResetValue":	1400,
		"MinAlarmThreshold":	1000,
		"MinAlarmTimeout":	0.5,
		"MinFaultThreshold":	800,
		"MinFaultTimeout":	0.2,
		"MinRecoverTimeout":	1.5,
		"MinResetValue":	1300,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions",
		"value":	0
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ActivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ReactivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:Stop@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:Stop"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS",
		"value":	false
	},
	"FireFaultActive":	false,
	"HeartbeatRead":	{
		"AlarmTimeout":	10,
		"EnableAlert":	false,
		"EnableCommsCheck":	false,
		"EnableStateCheck":	false,
		"FaultTimeout":	15,
		"RecoverTimeout":	0.1,
		"Type":	"int",
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS",
		"value":	0
	},
	"IsAlarming":	{
		"enable":	"/config/bms:enable",
		"expression":	"{1} > 0",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:TotalAlarmCnt"
	},
	"IsFaulted":	{
		"enable":	"/config/bms:enable",
		"expression":	"{1} or {2} > 0",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms:SystemFault",
		"variable2":	"/status/bms:TotalFaultCnt"
	},
	"MaxCellTemp":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"MaxAlarmThreshold":	45,
		"MaxAlarmTimeout":	2.5,
		"MaxFaultThreshold":	52,
		"MaxFaultTimeout":	1,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	45,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions",
		"value":	0
	},
	"MaxCellVoltage":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"MaxAlarmThreshold":	3.58,
		"MaxAlarmTimeout":	2.5,
		"MaxFaultThreshold":	3.6,
		"MaxFaultTimeout":	0.2,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	3.5,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions",
		"value":	0
	},
	"MinCellTemp":	{
		"EnableFaultCheck":	true,
		"EnableMinValCheck":	false,
		"MinAlarmThreshold":	10,
		"MinAlarmTimeout":	2.5,
		"MinFaultThreshold":	0.1,
		"MinFaultTimeout":	0.5,
		"MinRecoverTimeout":	1.4,
		"MinResetValue":	10,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions",
		"value":	0
	},
	"MinCellVoltage":	{
		"EnableFaultCheck":	true,
		"EnableMinValCheck":	false,
		"MinAlarmThreshold":	2.85,
		"MinAlarmTimeout":	2.5,
		"MinFaultThreshold":	2.8,
		"MinFaultTimeout":	0,
		"MinRecoverTimeout":	1.4,
		"MinResetValue":	2.85,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions",
		"value":	0
	},
	"NumRacksOnline":	{
		"EnableFaultCheck":	true,
		"EnableMinValCheck":	false,
		"MinAlarmThreshold":	5,
		"MinAlarmTimeout":	5,
		"MinFaultThreshold":	2,
		"MinFaultTimeout":	10,
		"MinRecoverTimeout":	1,
		"MinResetValue":	5,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note1":	"Also a monitoring variable that reports an alarm/fault for under num instances condition",
		"note2":	"TODO: Update min alarm/fault/reset thresholds and timeouts",
		"note3":	"TODO: Decode or calculate num instances online and remap/link value to this variable",
		"value":	0
	},
	"OverCurrentAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:DCCurrent@MaxAlarmThreshold"
						}, {
							"uri":	"/status/bms:DCCurrent@MaxResetValue"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"expression":	"{1}",
		"note":	"Adjusts the max alarm and reset thresholds for BMS DC current monitoring variable depending on the discharge current limit",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/limits/bms:DischargeCurrentLimit"
	},
	"OverCurrentFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:DCCurrent@MaxFaultThreshold"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"expression":	"{1} * 1.05",
		"note":	"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/limits/bms:DischargeCurrentLimit"
	},
	"SOC":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"EnableMinValCheck":	false,
		"MaxAlarmThreshold":	99.9,
		"MaxAlarmTimeout":	5.5,
		"MaxFaultThreshold":	100,
		"MaxFaultTimeout":	2.5,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	99,
		"MinAlarmThreshold":	6,
		"MinAlarmTimeout":	5.5,
		"MinFaultThreshold":	1,
		"MinFaultTimeout":	2.5,
		"MinRecoverTimeout":	1.4,
		"MinResetValue":	8,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over/under soc conditions",
		"value":	0
	},
	"SOH":	{
		"EnableFaultCheck":	true,
		"EnableMinValCheck":	false,
		"MinAlarmThreshold":	30,
		"MinAlarmTimeout":	5.5,
		"MinFaultThreshold":	25,
		"MinFaultTimeout":	2.5,
		"MinRecoverTimeout":	1.4,
		"MinResetValue":	30,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for under soh conditions",
		"value":	0
	},
	"SystemFault":	false,
	"TotalAlarmCnt":	{
		"enable":	"/config/bms:enable",
		"numVars":	2,
		"operation":	"+",
		"value":	0,
		"variable1":	"bms:TotalAlarmCnt",
		"variable2":	"/status/bms:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"enable":	"/config/bms:enable",
		"numVars":	2,
		"operation":	"+",
		"value":	0,
		"variable1":	"bms:TotalFaultCnt",
		"variable2":	"/status/bms:FaultCnt"
	},
	"UnderCurrentAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:DCCurrent@MinAlarmThreshold"
						}, {
							"uri":	"/status/bms:DCCurrent@MinResetValue"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"expression":	"{1}",
		"note":	"Adjusts the min alarm and reset thresholds for BMS DC current monitoring variable depending on the charge current limit",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/limits/bms:ChargeCurrentLimit"
	},
	"UnderCurrentFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms:DCCurrent@MinFaultThreshold"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"expression":	"{1} * 1.05",
		"note":	"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/limits/bms:ChargeCurrentLimit"
	}
}].
[3.85516s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CellTempDelta_reload]
[3.85571s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CellTempDelta_reload]
[3.85618s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/alarms/bms:MonitorVarAlarm]
[3.85648s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/alarms/bms:MonitorVarAlarm]
[3.85684s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/faults/bms:MonitorVarFault]
[3.85713s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/faults/bms:MonitorVarFault]
[3.85739s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:CellTempDelta is /assets/bms/summary:faults
[3.85769s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:CellTempDelta is /assets/bms/summary:alarms
[3.85799s  ] [info    ] [CheckMonitorVar] Not set up for [CellTempDelta] reloadStr [CellTempDelta_reload]
[3.85861s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CellVoltageDelta_reload]
[3.85901s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CellVoltageDelta_reload]
[3.85956s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:CellVoltageDelta is /assets/bms/summary:faults
[3.86055s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:CellVoltageDelta is /assets/bms/summary:alarms
[3.86115s  ] [info    ] [CheckMonitorVar] Not set up for [CellVoltageDelta] reloadStr [CellVoltageDelta_reload]
[3.86209s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:DCCurrent_reload]
[3.8627s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:DCCurrent_reload]
[3.86317s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:DCCurrent is /assets/bms/summary:faults
[3.86346s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:DCCurrent is /assets/bms/summary:alarms
[3.86375s  ] [info    ] [CheckMonitorVar] Not set up for [DCCurrent] reloadStr [DCCurrent_reload]
[3.86492s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:DCVoltage_reload]
[3.86525s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:DCVoltage_reload]
[3.86556s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:DCVoltage is /assets/bms/summary:faults
[3.86578s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:DCVoltage is /assets/bms/summary:alarms
[3.866s    ] [info    ] [CheckMonitorVar] Not set up for [DCVoltage] reloadStr [DCVoltage_reload]
[3.8665s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:HeartbeatRead_reload]
[3.86675s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:HeartbeatRead_reload]
[3.86702s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:HeartbeatRead is /assets/bms/summary:faults
[3.8673s   ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:HeartbeatRead is /assets/bms/summary:alarms
[3.8675s   ] [info    ] [CheckMonitorVar] Not set up for [HeartbeatRead] reloadStr [HeartbeatRead_reload]
[3.86791s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:MaxCellTemp_reload]
[3.86858s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:MaxCellTemp_reload]
[3.86937s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:MaxCellTemp is /assets/bms/summary:faults
[3.86983s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:MaxCellTemp is /assets/bms/summary:alarms
[3.87053s  ] [info    ] [CheckMonitorVar] Not set up for [MaxCellTemp] reloadStr [MaxCellTemp_reload]
[3.87115s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:MaxCellVoltage_reload]
[3.87149s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:MaxCellVoltage_reload]
[3.87189s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:MaxCellVoltage is /assets/bms/summary:faults
[3.87216s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:MaxCellVoltage is /assets/bms/summary:alarms
[3.87254s  ] [info    ] [CheckMonitorVar] Not set up for [MaxCellVoltage] reloadStr [MaxCellVoltage_reload]
[3.87312s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:MinCellTemp_reload]
[3.87362s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:MinCellTemp_reload]
[3.87404s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:MinCellTemp is /assets/bms/summary:faults
[3.87434s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:MinCellTemp is /assets/bms/summary:alarms
[3.87465s  ] [info    ] [CheckMonitorVar] Not set up for [MinCellTemp] reloadStr [MinCellTemp_reload]
[3.87515s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:MinCellVoltage_reload]
[3.87658s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:MinCellVoltage_reload]
[3.8771s   ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:MinCellVoltage is /assets/bms/summary:faults
[3.87756s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:MinCellVoltage is /assets/bms/summary:alarms
[3.87787s  ] [info    ] [CheckMonitorVar] Not set up for [MinCellVoltage] reloadStr [MinCellVoltage_reload]
[3.87862s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:NumRacksOnline_reload]
[3.87893s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:NumRacksOnline_reload]
[3.87924s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:NumRacksOnline is /assets/bms/summary:faults
[3.87955s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:NumRacksOnline is /assets/bms/summary:alarms
[3.87984s  ] [info    ] [CheckMonitorVar] Not set up for [NumRacksOnline] reloadStr [NumRacksOnline_reload]
[3.88059s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:SOC_reload]
[3.88108s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:SOC_reload]
[3.88137s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:SOC is /assets/bms/summary:faults
[3.88159s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:SOC is /assets/bms/summary:alarms
[3.8819s   ] [info    ] [CheckMonitorVar] Not set up for [SOC] reloadStr [SOC_reload]
[3.88235s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:SOH_reload]
[3.8826s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:SOH_reload]
[3.88306s  ] [info    ] [CheckMonitorVar] Fault Destination for bms with assetVar /status/bms:SOH is /assets/bms/summary:faults
[3.8833s   ] [info    ] [CheckMonitorVar] Alarm Destination for bms with assetVar /status/bms:SOH is /assets/bms/summary:alarms
[3.88378s  ] [info    ] [CheckMonitorVar] Not set up for [SOH] reloadStr [SOH_reload]
[3.88473s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"fire_fault_active":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	false,
							"uri":	"/status/bms:FireFaultActive"
						}, {
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	true,
							"uri":	"/status/bms:FireFaultActive"
						}, {
							"enable":	"/config/bms:enum_opt",
							"outValue":	true,
							"uri":	"/components/bms:fire_fault_active@ifChanged",
							"useAv":	true
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note1":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[3.88528s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"checkInputs_bms":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	false,
							"uri":	"/components/bms:status@ifChanged"
						}, {
							"outValue":	false,
							"uri":	"/components/bms:fire_fault_active@ifChanged"
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"note":	"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change",
		"value":	0
	}
}].
[3.88572s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"heartbeat_read":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms:heartbeat_read",
		"vlink":	"/status/bms:HeartbeatRead"
	}
}].
[3.88614s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms:heartbeat_read]
[3.88642s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms:heartbeat_read]
[3.88717s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"bms_alarm_active":	{
		"name":	"BMS Alarm Active",
		"size":	1,
		"type":	"status",
		"value":	false
	},
	"bms_avg_cell_temp":	{
		"name":	"BMS Avg Cell Temperature",
		"scale":	100,
		"size":	1,
		"type":	"status",
		"units":	"°C",
		"value":	0
	},
	"bms_avg_cell_voltage":	{
		"name":	"BMS Avg Cell Voltage",
		"scale":	10000,
		"size":	1,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"bms_cell_temp_delta":	{
		"name":	"BMS Cell Temperature Delta",
		"scale":	100,
		"size":	1,
		"type":	"status",
		"units":	"°C",
		"value":	0
	},
	"bms_cell_voltage_delta":	{
		"name":	"BMS Cell Voltage Delta",
		"scale":	10000,
		"size":	1,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"bms_chargeable_energy":	{
		"name":	"BMS Chargeable Energy",
		"scale":	10,
		"size":	1,
		"type":	"status",
		"units":	"kWh",
		"value":	0
	},
	"bms_close_contactors_enabled":	{
		"excludeFromFile":	true,
		"name":	"BMS Close Contactors Enabled",
		"size":	1,
		"type":	"status",
		"value":	false
	},
	"bms_comms_ok":	{
		"name":	"BMS Comms OK",
		"size":	1,
		"type":	"status",
		"value":	false
	},
	"bms_control_alarms":	{
		"bit0":	"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit1":	"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit2":	"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit3":	"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout",
		"bit4":	"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout",
		"name":	"BMS Control Alarms",
		"type":	"bitfield",
		"value":	0
	},
	"bms_current_before_stop_is_ok":	{
		"excludeFromFile":	true,
		"name":	"BMS Current Before Stop is OK",
		"size":	1,
		"type":	"status",
		"value":	false
	},
	"bms_dc_charging":	{
		"name":	"BMS DC Charging",
		"size":	1,
		"type":	"status",
		"value":	false
	},
	"bms_dc_contactor_control":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched"
						}]
				}]
		},
		"aname":	"ess",
		"debug":	0,
		"enable":	"/config/ess:remote_control_enable",
		"every":	1,
		"ifChanged":	false,
		"name":	"BMS Contactor Control Command",
		"note1":	"Initiates BMS close and open contactors",
		"note2":	"2->close contactors | 3->open contactors",
		"offset":	0,
		"size":	1,
		"type":	"control",
		"uri":	"/sched/ess:SiteBMSContactorControl",
		"value":	0
	},
	"bms_dc_contactors_closed":	{
		"name":	"BMS DC Contactors Closed",
		"size":	1,
		"type":	"status",
		"value":	false
	},
	"bms_dc_current":	{
		"name":	"BMS DC Current",
		"scale":	10,
		"signed":	true,
		"size":	1,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"bms_dc_discharging":	{
		"name":	"BMS DC Discharging",
		"size":	1,
		"type":	"status",
		"value":	false
	},
	"bms_dc_power":	{
		"name":	"BMS DC Power",
		"scale":	10,
		"signed":	true,
		"size":	1,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"bms_dc_voltage":	{
		"name":	"BMS DC Voltage",
		"scale":	10,
		"signed":	true,
		"size":	1,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"bms_dischargeable_energy":	{
		"name":	"BMS Dischargeable Energy",
		"scale":	10,
		"size":	1,
		"type":	"status",
		"units":	"kWh",
		"value":	0
	},
	"bms_fault_active":	{
		"name":	"BMS Fault Active",
		"size":	1,
		"type":	"status",
		"value":	false
	},
	"bms_fire_fault_active":	{
		"name":	"BMS Fire Fault Active",
		"size":	1,
		"type":	"status",
		"value":	false
	},
	"bms_max_cell_temp":	{
		"name":	"BMS Max Cell Temperature",
		"scale":	100,
		"size":	1,
		"type":	"status",
		"units":	"°C",
		"value":	0
	},
	"bms_max_cell_voltage":	{
		"name":	"BMS Max Cell Voltage",
		"scale":	10000,
		"size":	1,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"bms_max_charge_current":	{
		"name":	"BMS Max Charge Current",
		"signed":	true,
		"size":	1,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"bms_max_charge_power":	{
		"name":	"BMS Max Charge Power",
		"signed":	true,
		"size":	1,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"bms_max_discharge_current":	{
		"name":	"BMS Max Discharge Current",
		"size":	1,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"bms_max_discharge_power":	{
		"name":	"BMS Max Discharge Power",
		"size":	1,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"bms_min_cell_temp":	{
		"name":	"BMS Min Cell Temperature",
		"scale":	100,
		"size":	1,
		"type":	"status",
		"units":	"°C",
		"value":	0
	},
	"bms_min_cell_voltage":	{
		"name":	"BMS Min Cell Voltage",
		"scale":	10000,
		"size":	1,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"bms_monitor_alarms":	{
		"bit0":	"BMS CellTempDelta - Max Threshold Exceeded",
		"bit1":	"BMS CellVoltageDelta - Max Threshold Exceeded",
		"bit10":	"BMS NumRacksOnline - Min Threshold Exceeded",
		"bit11":	"BMS SOC - Max Threshold Exceeded",
		"bit12":	"BMS SOC - Min Threshold Exceeded",
		"bit13":	"BMS SOH - Min Threshold Exceeded",
		"bit2":	"BMS DCCurrent - Max Threshold Exceeded",
		"bit3":	"BMS DCCurrent - Min Threshold Exceeded",
		"bit4":	"BMS DCVoltage - Max Threshold Exceeded",
		"bit5":	"BMS DCVoltage - Min Threshold Exceeded",
		"bit6":	"BMS MaxCellTemp - Max Threshold Exceeded",
		"bit7":	"BMS MaxCellVoltage - Max Threshold Exceeded",
		"bit8":	"BMS MinCellTemp - Min Threshold Exceeded",
		"bit9":	"BMS MinCellVoltage - Min Threshold Exceeded",
		"name":	"BMS Monitor Alarms",
		"type":	"bitfield",
		"value":	0
	},
	"bms_monitor_faults":	{
		"bit0":	"BMS CellTempDelta - Max Threshold Exceeded",
		"bit1":	"BMS CellVoltageDelta - Max Threshold Exceeded",
		"bit10":	"BMS NumRacksOnline - Min Threshold Exceeded",
		"bit11":	"BMS SOC - Max Threshold Exceeded",
		"bit12":	"BMS SOC - Min Threshold Exceeded",
		"bit13":	"BMS SOH - Min Threshold Exceeded",
		"bit2":	"BMS DCCurrent - Max Threshold Exceeded",
		"bit3":	"BMS DCCurrent - Min Threshold Exceeded",
		"bit4":	"BMS DCVoltage - Max Threshold Exceeded",
		"bit5":	"BMS DCVoltage - Min Threshold Exceeded",
		"bit6":	"BMS MaxCellTemp - Max Threshold Exceeded",
		"bit7":	"BMS MaxCellVoltage - Max Threshold Exceeded",
		"bit8":	"BMS MinCellTemp - Min Threshold Exceeded",
		"bit9":	"BMS MinCellVoltage - Min Threshold Exceeded",
		"name":	"BMS Monitor Faults",
		"type":	"bitfield",
		"value":	0
	},
	"bms_num_racks_online":	{
		"name":	"BMS Number of Racks Online",
		"size":	1,
		"type":	"status",
		"value":	0
	},
	"bms_num_racks_total":	{
		"name":	"BMS Number of Racks Total",
		"size":	1,
		"type":	"status",
		"value":	0
	},
	"bms_open_contactors_enabled":	{
		"excludeFromFile":	true,
		"name":	"BMS Open Contactors Enabled",
		"size":	1,
		"type":	"status",
		"value":	false
	},
	"bms_soc":	{
		"name":	"BMS State of Charge (SOC)",
		"scale":	10,
		"size":	1,
		"type":	"status",
		"units":	"%",
		"value":	0
	},
	"bms_soh":	{
		"name":	"BMS State of Health (SOH)",
		"scale":	10,
		"size":	1,
		"type":	"status",
		"units":	"%",
		"value":	0
	},
	"bms_status":	{
		"excludeFromFile":	true,
		"name":	"BMS Status",
		"size":	1,
		"type":	"status",
		"value":	"INIT"
	}
}].
[3.88883s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.8891s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.88962s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"site_bms_alarm_active":	{
		"default":	false,
		"value":	"/site/ess:bms_alarm_active",
		"vlink":	"/status/bms:IsAlarming"
	},
	"site_bms_avg_cell_temp":	{
		"default":	0,
		"value":	"/site/ess:bms_avg_cell_temp",
		"vlink":	"/status/bms:AvgCellTemp"
	},
	"site_bms_avg_cell_voltage":	{
		"default":	0,
		"value":	"/site/ess:bms_avg_cell_voltage",
		"vlink":	"/status/bms:AvgCellVoltage"
	},
	"site_bms_cell_temp_delta":	{
		"default":	0,
		"value":	"/site/ess:bms_cell_temp_delta",
		"vlink":	"/status/bms:CellTempDelta"
	},
	"site_bms_cell_voltage_delta":	{
		"default":	0,
		"value":	"/site/ess:bms_cell_voltage_delta",
		"vlink":	"/status/bms:CellVoltageDelta"
	},
	"site_bms_chargeable_energy":	{
		"default":	0,
		"value":	"/site/ess:bms_chargeable_energy",
		"vlink":	"/status/bms:ChargeableEnergy"
	},
	"site_bms_close_contactors_enabled":	{
		"default":	false,
		"value":	"/site/ess:bms_close_contactors_enabled",
		"vlink":	"/status/bms:CloseContactorsEnabled"
	},
	"site_bms_comms_ok":	{
		"default":	false,
		"value":	"/site/ess:bms_comms_ok",
		"vlink":	"/status/bms:CommsOK"
	},
	"site_bms_current_before_stop_is_ok":	{
		"default":	false,
		"value":	"/site/ess:bms_current_before_stop_is_ok",
		"vlink":	"/status/bms:CurrentBeforeStopIsOK"
	},
	"site_bms_dc_charging":	{
		"default":	false,
		"value":	"/site/ess:bms_dc_charging",
		"vlink":	"/status/bms:DCCharging"
	},
	"site_bms_dc_contactors_closed":	{
		"default":	false,
		"value":	"/site/ess:bms_dc_contactors_closed",
		"vlink":	"/status/bms:DCClosed"
	},
	"site_bms_dc_current":	{
		"default":	0,
		"value":	"/site/ess:bms_dc_current",
		"vlink":	"/status/bms:DCCurrent"
	},
	"site_bms_dc_discharging":	{
		"default":	false,
		"value":	"/site/ess:bms_dc_discharging",
		"vlink":	"/status/bms:DCDischarging"
	},
	"site_bms_dc_power":	{
		"default":	0,
		"value":	"/site/ess:bms_dc_power",
		"vlink":	"/status/bms:DCPower"
	},
	"site_bms_dc_voltage":	{
		"default":	0,
		"value":	"/site/ess:bms_dc_voltage",
		"vlink":	"/status/bms:DCVoltage"
	},
	"site_bms_dischargeable_energy":	{
		"default":	0,
		"value":	"/site/ess:bms_dischargeable_energy",
		"vlink":	"/status/bms:DischargeableEnergy"
	},
	"site_bms_fault_active":	{
		"default":	false,
		"value":	"/site/ess:bms_fault_active",
		"vlink":	"/status/bms:IsFaulted"
	},
	"site_bms_fire_fault_active":	{
		"default":	false,
		"value":	"/site/ess:bms_fire_fault_active",
		"vlink":	"/status/bms:AnyFireFaultActive"
	},
	"site_bms_max_cell_temp":	{
		"default":	0,
		"value":	"/site/ess:bms_max_cell_temp",
		"vlink":	"/status/bms:MaxCellTemp"
	},
	"site_bms_max_cell_voltage":	{
		"default":	0,
		"value":	"/site/ess:bms_max_cell_voltage",
		"vlink":	"/status/bms:MaxCellVoltage"
	},
	"site_bms_max_charge_current":	{
		"default":	0,
		"value":	"/site/ess:bms_max_charge_current",
		"vlink":	"/limits/bms:ChargeCurrentLimit"
	},
	"site_bms_max_charge_power":	{
		"default":	0,
		"value":	"/site/ess:bms_max_charge_power",
		"vlink":	"/limits/bms:ChargePowerLimit"
	},
	"site_bms_max_discharge_current":	{
		"default":	0,
		"value":	"/site/ess:bms_max_discharge_current",
		"vlink":	"/limits/bms:DischargeCurrentLimit"
	},
	"site_bms_max_discharge_power":	{
		"default":	0,
		"value":	"/site/ess:bms_max_discharge_power",
		"vlink":	"/limits/bms:DischargePowerLimit"
	},
	"site_bms_min_cell_temp":	{
		"default":	0,
		"value":	"/site/ess:bms_min_cell_temp",
		"vlink":	"/status/bms:MinCellTemp"
	},
	"site_bms_min_cell_voltage":	{
		"default":	0,
		"value":	"/site/ess:bms_min_cell_voltage",
		"vlink":	"/status/bms:MinCellVoltage"
	},
	"site_bms_num_racks_online":	{
		"default":	0,
		"value":	"/site/ess:bms_num_racks_online",
		"vlink":	"/status/bms:NumRacksOnline"
	},
	"site_bms_num_racks_total":	{
		"default":	0,
		"value":	"/site/ess:bms_num_racks_total",
		"vlink":	"/status/bms:NumRacksTotal"
	},
	"site_bms_open_contactors_enabled":	{
		"default":	false,
		"value":	"/site/ess:bms_open_contactors_enabled",
		"vlink":	"/status/bms:OpenContactorsEnabled"
	},
	"site_bms_soc":	{
		"default":	0,
		"value":	"/site/ess:bms_soc",
		"vlink":	"/status/bms:SOC"
	},
	"site_bms_soh":	{
		"default":	0,
		"value":	"/site/ess:bms_soh",
		"vlink":	"/status/bms:SOH"
	},
	"site_bms_status":	{
		"default":	"INIT",
		"value":	"/site/ess:bms_status",
		"vlink":	"/status/bms:Status"
	}
}].
[3.89101s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_alarm_active]
[3.89134s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_alarm_active]
[3.8916s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_avg_cell_temp]
[3.8919s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_avg_cell_temp]
[3.89222s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_avg_cell_voltage]
[3.89258s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_avg_cell_voltage]
[3.89303s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_cell_temp_delta]
[3.89336s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_cell_temp_delta]
[3.8937s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_cell_voltage_delta]
[3.89399s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_cell_voltage_delta]
[3.89434s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_chargeable_energy]
[3.89459s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_chargeable_energy]
[3.89485s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_close_contactors_enabled]
[3.89505s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_close_contactors_enabled]
[3.89528s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_comms_ok]
[3.89549s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_comms_ok]
[3.89571s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_current_before_stop_is_ok]
[3.89592s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_current_before_stop_is_ok]
[3.89612s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dc_charging]
[3.89644s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dc_charging]
[3.89685s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dc_contactors_closed]
[3.89716s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dc_contactors_closed]
[3.89786s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dc_current]
[3.89812s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dc_current]
[3.89852s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dc_discharging]
[3.89874s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dc_discharging]
[3.89902s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dc_power]
[3.89927s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dc_power]
[3.89984s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dc_voltage]
[3.90017s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dc_voltage]
[3.9005s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_dischargeable_energy]
[3.90094s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_dischargeable_energy]
[3.90124s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_fault_active]
[3.90145s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_fault_active]
[3.90169s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_fire_fault_active]
[3.90186s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_fire_fault_active]
[3.90209s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_max_cell_temp]
[3.90226s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_max_cell_temp]
[3.90257s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_max_cell_voltage]
[3.90285s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_max_cell_voltage]
[3.90309s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_max_charge_current]
[3.90327s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_max_charge_current]
[3.90347s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_max_charge_power]
[3.90364s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_max_charge_power]
[3.90385s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_max_discharge_current]
[3.90403s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_max_discharge_current]
[3.90422s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_max_discharge_power]
[3.90441s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_max_discharge_power]
[3.9046s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_min_cell_temp]
[3.9051s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_min_cell_temp]
[3.9054s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_min_cell_voltage]
[3.90572s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_min_cell_voltage]
[3.90599s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_num_racks_online]
[3.90617s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_num_racks_online]
[3.90642s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_num_racks_total]
[3.90662s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_num_racks_total]
[3.90709s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_open_contactors_enabled]
[3.90747s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_open_contactors_enabled]
[3.9078s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_soc]
[3.90807s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_soc]
[3.90846s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_soh]
[3.9087s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_soh]
[3.90901s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_status]
[3.90931s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_status]
[3.91002s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"chargeable_energy":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/bms:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/bms:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"close_contactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched",
							"inValue":	true
						}]
				}]
		},
		"aname":	"bms",
		"debug":	0,
		"enabled":	false,
		"every":	0.5,
		"name":	"Close DC Contactor",
		"note":	"Enabled conditions: ![/status/bms/DCClosed] && [/assets/bms/summary/maint_mode] && ![/status/bms/IsFaulted]",
		"offset":	0,
		"scaler":	0,
		"type":	"enum_button",
		"ui_type":	"control",
		"unit":	"",
		"uri":	"/sched/bms:LocalStartBMS",
		"value":	false
	},
	"comms_ok":	{
		"value":	false
	},
	"dc_charging":	{
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_discharging":	{
		"value":	false
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"dischargeable_energy":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/summary:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"num_racks_online":	{
		"value":	0
	},
	"num_racks_total":	{
		"value":	0
	},
	"open_contactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched",
							"inValue":	true
						}]
				}]
		},
		"aname":	"bms",
		"debug":	0,
		"enabled":	false,
		"every":	0.5,
		"name":	"Open DC Contactor",
		"note":	"Enabled conditions: [/status/bms/DCClosed] && ![/status/pcs/DCClosed] && [/assets/bms/summary/maint_mode]",
		"offset":	0,
		"scaler":	0,
		"type":	"enum_button",
		"ui_type":	"control",
		"unit":	"",
		"uri":	"/sched/bms:LocalStopBMS",
		"value":	false
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[3.91091s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"Failed Attempt to update [/assets/bms/summary:close_contactors] because [close_contactors@enabled:false] == true ---> Condition(s): [/status/bms:DCClosed:false] == false && [/assets/bms/summary:maint_mode:false] == true && [/status/bms:IsFaulted:false] == false","severity":1}]
[3.9114s   ] [info    ] [LogInfo        ] [/assets/bms/summary:maint_mode] received a value of [false]
[3.91257s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"Failed Attempt to update [/assets/bms/summary:open_contactors] because [open_contactors@enabled:false] == true ---> Condition(s): [/status/bms:DCClosed:false] == true && [/status/pcs:DCClosed:false] == false && [/assets/bms/summary:maint_mode:false] == true","severity":1}]
[3.9135s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.91435s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.9156s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"default":	0,
		"value":	"/assets/bms/summary:avg_cell_temp",
		"vlink":	"/status/bms:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"default":	0,
		"value":	"/assets/bms/summary:avg_cell_voltage",
		"vlink":	"/status/bms:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"default":	0,
		"value":	"/assets/bms/summary:cell_temp_delta",
		"vlink":	"/status/bms:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"default":	0,
		"value":	"/assets/bms/summary:cell_voltage_delta",
		"vlink":	"/status/bms:CellVoltageDelta"
	},
	"ui_chargeable_energy":	{
		"default":	0,
		"value":	"/assets/bms/summary:chargeable_energy",
		"vlink":	"/status/bms:ChargeableEnergy"
	},
	"ui_comms_ok":	{
		"default":	false,
		"value":	"/assets/bms/summary:comms_ok",
		"vlink":	"/status/bms:CommsOK"
	},
	"ui_dc_charging":	{
		"default":	false,
		"value":	"/assets/bms/summary:dc_charging",
		"vlink":	"/status/bms:DCCharging"
	},
	"ui_dc_contactors_closed":	{
		"default":	false,
		"value":	"/assets/bms/summary:dc_contactors_closed",
		"vlink":	"/status/bms:DCClosed"
	},
	"ui_dc_current":	{
		"default":	0,
		"value":	"/assets/bms/summary:dc_current",
		"vlink":	"/status/bms:DCCurrent"
	},
	"ui_dc_discharging":	{
		"default":	false,
		"value":	"/assets/bms/summary:dc_discharging",
		"vlink":	"/status/bms:DCDischarging"
	},
	"ui_dc_power":	{
		"default":	0,
		"value":	"/assets/bms/summary:dc_power",
		"vlink":	"/status/bms:DCPower"
	},
	"ui_dc_voltage":	{
		"default":	0,
		"value":	"/assets/bms/summary:dc_voltage",
		"vlink":	"/status/bms:DCVoltage"
	},
	"ui_dischargeable_energy":	{
		"default":	0,
		"value":	"/assets/bms/summary:dischargeable_energy",
		"vlink":	"/status/bms:DischargeableEnergy"
	},
	"ui_max_cell_temp":	{
		"default":	0,
		"value":	"/assets/bms/summary:max_cell_temp",
		"vlink":	"/status/bms:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"default":	0,
		"value":	"/assets/bms/summary:max_cell_voltage",
		"vlink":	"/status/bms:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"default":	0,
		"value":	"/assets/bms/summary:max_charge_current",
		"vlink":	"/limits/bms:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"default":	0,
		"value":	"/assets/bms/summary:max_charge_power",
		"vlink":	"/limits/bms:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"default":	0,
		"value":	"/assets/bms/summary:max_discharge_current",
		"vlink":	"/limits/bms:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"default":	0,
		"value":	"/assets/bms/summary:max_discharge_power",
		"vlink":	"/limits/bms:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"default":	0,
		"value":	"/assets/bms/summary:min_cell_temp",
		"vlink":	"/status/bms:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"default":	0,
		"value":	"/assets/bms/summary:min_cell_voltage",
		"vlink":	"/status/bms:MinCellVoltage"
	},
	"ui_num_racks_online":	{
		"default":	0,
		"value":	"/assets/bms/summary:num_racks_online",
		"vlink":	"/status/bms:NumRacksOnline"
	},
	"ui_num_racks_total":	{
		"default":	0,
		"value":	"/assets/bms/summary:num_racks_total",
		"vlink":	"/status/bms:NumRacksTotal"
	},
	"ui_soc":	{
		"default":	0,
		"value":	"/assets/bms/summary:soc",
		"vlink":	"/status/bms:SOC"
	},
	"ui_soh":	{
		"default":	0,
		"value":	"/assets/bms/summary:soh",
		"vlink":	"/status/bms:SOH"
	},
	"ui_status":	{
		"default":	"INIT",
		"value":	"/assets/bms/summary:status",
		"vlink":	"/status/bms:Status"
	}
}].
[3.91642s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:avg_cell_temp]
[3.91679s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:avg_cell_temp]
[3.91718s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:avg_cell_voltage]
[3.91751s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:avg_cell_voltage]
[3.91783s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:cell_temp_delta]
[3.9182s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:cell_temp_delta]
[3.9186s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:cell_voltage_delta]
[3.91898s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:cell_voltage_delta]
[3.91979s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:chargeable_energy]
[3.92029s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:chargeable_energy]
[3.92088s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:comms_ok]
[3.92129s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:comms_ok]
[3.9219s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dc_charging]
[3.92229s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dc_charging]
[3.92262s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dc_contactors_closed]
[3.92294s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dc_contactors_closed]
[3.92332s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dc_current]
[3.92401s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dc_current]
[3.92438s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dc_discharging]
[3.92461s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dc_discharging]
[3.92533s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dc_power]
[3.92565s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dc_power]
[3.92604s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dc_voltage]
[3.92636s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dc_voltage]
[3.92736s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:dischargeable_energy]
[3.9278s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:dischargeable_energy]
[3.9286s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:max_cell_temp]
[3.92911s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:max_cell_temp]
[3.92988s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:max_cell_voltage]
[3.93024s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:max_cell_voltage]
[3.93067s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:max_charge_current]
[3.93095s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:max_charge_current]
[3.93135s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:max_charge_power]
[3.93168s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:max_charge_power]
[3.93203s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:max_discharge_current]
[3.93231s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:max_discharge_current]
[3.93264s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:max_discharge_power]
[3.93289s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:max_discharge_power]
[3.93312s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:min_cell_temp]
[3.93333s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:min_cell_temp]
[3.93355s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:min_cell_voltage]
[3.9338s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:min_cell_voltage]
[3.93411s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:num_racks_online]
[3.93486s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:num_racks_online]
[3.93518s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:num_racks_total]
[3.93549s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:num_racks_total]
[3.93577s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:soc]
[3.93603s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:soc]
[3.9363s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:soh]
[3.93674s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:soh]
[3.93696s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/summary:status]
[3.93715s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/summary:status]
[3.93827s  ] [info    ] [setVecAmAi     ]  amname Setting am  [bms_1] parent am [bms] 
[3.93943s  ] [info    ] [configure_vmapS] process file seeking header stuff am [bms_1] ai [no ai]
[3.93969s  ] [info    ] [configure_vmapS] body: {"/config/bms_1":{"AlarmDestination":"/assets/bms/bms_1:alarms","CurrentBeforeStopThreshold":35,"FaultDestination":"/assets/bms/bms_1:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/bms_1":{"ChargeCurrentLimit":{"value":"/limits/bms_1:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms_1:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms_1:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms_1:DischargePowerLimit"}},"/sched/bms_1":{"pubAssets_bms_1":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"RunPub"}]}]},"enable":"/config/bms_1:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms/bms_1)","table":"/assets/bms/bms_1","value":1},"runMonitor_bms_1":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"RunMonitor"}]}]},"aname":"bms_1","enable":"/config/bms_1:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms_1","value":1},"updateHeartbeatWrite_bms_1":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"CalculateVar","inAv":"/status/bms_1:HeartbeatWrite"}]}]},"enable":"/config/bms_1:enable","note":"Periodically updates the heartbeat write variable defined in /status/bms_1:HeartbeatWrite","value":1}},"/schedule/wake_monitor/bms_1":{"/status/bms_1:CellTempDelta_Calculated":{"amap":"bms_1","func":"CalculateVar"},"/status/bms_1:CellVoltageDelta_Calculated":{"amap":"bms_1","func":"CalculateVar"},"/status/bms_1:DCCharging":{"amap":"bms_1","func":"CalculateVar"},"/status/bms_1:DCDischarging":{"amap":"bms_1","func":"CalculateVar"}},"/status/bms_1":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms_1:CellTempDelta"}]}]},"enable":"/config/bms_1:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms_1:MinCellTemp","variable2":"/status/bms_1:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms_1:CellVoltageDelta"}]}]},"enable":"/config/bms_1:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms_1:MinCellVoltage","variable2":"/status/bms_1:MaxCellVoltage"},"CommsOK":true,"DCCharging":{"enable":"/config/bms_1:enable","expression":"{1} \u003c 0","note":"Determines if the BMS is charging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms_1:DCCurrent"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms_1:CellTempDelta@EnableMaxValCheck"},{"uri":"/status/bms_1:CellVoltageDelta@EnableMaxValCheck"},{"uri":"/status/bms_1:DCCurrent@EnableMaxValCheck"},{"uri":"/status/bms_1:DCCurrent@EnableMinValCheck"},{"uri":"/status/bms_1:DCVoltage@EnableMaxValCheck"},{"uri":"/status/bms_1:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms_1:MaxCellTemp@EnableMaxValCheck"},{"uri":"/status/bms_1:MaxCellVoltage@EnableMaxValCheck"},{"uri":"/status/bms_1:MinCellTemp@EnableMinValCheck"},{"uri":"/status/bms_1:MinCellVoltage@EnableMinValCheck"},{"uri":"/status/bms_1:NumRacksOnline@EnableMinValCheck"},{"uri":"/status/bms_1:SOC@EnableMaxValCheck"},{"uri":"/status/bms_1:SOC@EnableMinValCheck"},{"uri":"/status/bms_1:SOH@EnableMinValCheck"}]}]},"enable":"/config/bms_1:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"DCDischarging":{"enable":"/config/bms_1:enable","expression":"{1} \u003e 0","note":"Determines if the BMS is discharging","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms_1:DCCurrent"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/bms_1:heartbeat_write"}]}]},"enable":"/config/bms_1:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms_1:HeartbeatWrite"},"NumRacksTotal":3,"Status":"INIT"},"/system/commands":{"runOpts_bms_1":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms_1) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms_1","every":1,"uri":"/sched/bms_1:pubAssets_bms_1","value":1},{"aname":"bms_1","every":0.1,"uri":"/sched/bms_1:runMonitor_bms_1","value":1},{"aname":"bms_1","every":1,"uri":"/sched/bms_1:checkInputs_bms_1","value":1},{"aname":"bms_1","every":1,"uri":"/sched/bms_1:updateHeartbeatWrite_bms_1","value":1}],"targav":"/system/commands:run","value":false}},"/controls/bms_1":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"not {1} and {2} == Stop and not {3}","note1":"Close DC contactors command to send to BMS if DC contactors are open, the PCS is in Stop, and the BMS does not have any faults","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/bms_1:DCClosed","variable2":"/status/pcs_1:SystemState","variable3":"/status/bms_1:IsFaulted"},"CloseContactorsEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/bms/bms_1:close_contactors@enabled"},{"uri":"/status/bms_1:CloseContactorsEnabled"}]}]},"enable":"/config/bms_1:enable","expression":"not {1} and {2} and not {3}","note":"Enable Close Contactors UI control if DC Contactors are opened, the BMS is not faulted, and the BMS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/bms_1:DCClosed","variable2":"/assets/bms/bms_1:maint_mode","variable3":"/status/bms_1:IsFaulted"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Stop or {2} == Fault)","note1":"Open DC contactors command to send to BMS if DC contactors are closed and the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/bms_1:DCClosed","variable2":"/status/pcs_1:SystemState"},"OpenContactorsEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/bms/bms_1:open_contactors@enabled"},{"uri":"/status/bms_1:OpenContactorsEnabled"}]}]},"enable":"/config/bms_1:enable","expression":"{1} and not {2} and {3}","note":"Enable Open Contactors UI control if DC Contactors are closed and the BMS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/bms_1:DCClosed","variable2":"/status/pcs_1:DCClosed","variable3":"/assets/bms/bms_1:maint_mode"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1}","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/bms_1:DCClosed"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"not {1}","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/bms_1:DCClosed"}},"/schedule/wake_monitor/bms_1":{"/controls/bms_1:ClearFaults":{"amap":"bms_1","func":"HandleCmd"},"/controls/bms_1:CloseContactors":{"amap":"bms_1","func":"HandleCmd"},"/controls/bms_1:CloseContactorsEnable":{"amap":"bms_1","func":"CalculateVar"},"/controls/bms_1:OpenContactors":{"amap":"bms_1","func":"HandleCmd"},"/controls/bms_1:OpenContactorsEnable":{"amap":"bms_1","func":"CalculateVar"},"/controls/bms_1:VerifyCloseContactors":{"amap":"bms_1","func":"HandleCmd"},"/controls/bms_1:VerifyOpenContactors":{"amap":"bms_1","func":"HandleCmd"}},"/status/bms_1":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms_1:ClearFaults"},{"outValue":"Clear","uri":"/faults/bms_1:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms_1:clear_alarms"}]}]},"enable":"/config/bms_1:enable","ifChanged":false,"note":"When this variable is set, /faults/bms_1:clear_faults and /alarms/bms_1:clear_alarms will be set to Clear","value":false},"CloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms_1:VerifyCloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms_1:VerifyCloseContactors"},{"inValue":false,"outValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms_1:CloseContactors"}]}]},"enable":"/config/bms_1:enable","ifChanged":false,"note":"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm","value":false},"OpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms_1:VerifyOpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms_1:VerifyOpenContactors"},{"inValue":false,"outValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/bms_1:OpenContactors"}]}]},"enable":"/config/bms_1:enable","ifChanged":false,"note":"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm","value":false},"VerifyCloseContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms_1:VerifyCloseContactors"}]}]},"enable":"/config/bms_1:enable","ifChanged":false,"note":"If the BMS failed to close contactors after an elasped time, send an alarm","value":false},"VerifyOpenContactorsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/bms_1:VerifyOpenContactors"}]}]},"enable":"/config/bms_1:enable","ifChanged":false,"note":"If the BMS failed to open contactors after an elasped time, send an alarm","value":false}},"/alarms/bms_1":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_bms_1_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"CloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_bms_1_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending close contactors command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_alarms[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_alarms[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_alarms[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_alarms[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_alarms[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_alarms[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/alarms/bms_1:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_alarms[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_alarms[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_alarms[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_alarms[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_alarms[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_alarms[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_alarms[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_alarms[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"OpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:bms_bms_1_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending open contactors command is unsuccessful","type":"alarm","value":"Normal"},"VerifyCloseContactors":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_bms_1_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to close contactors","type":"alarm","value":"Normal"},"VerifyOpenContactors":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","note":"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:bms_bms_1_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the BMS failed to open contactors","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms_1) will be reset to the normal state (defined in /config/bms_1:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"alarm","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/faults/bms_1":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"CellTempDelta_limit_max","note":"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_faults[0]"},{"inValue":"CellVoltageDelta_limit_max","note":"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_faults[1]"},{"inValue":"DCCurrent_limit_max","note":"Bit 2 - BMS DCCurrent - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_faults[2]"},{"inValue":"DCCurrent_limit_min","note":"Bit 3 - BMS DCCurrent - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_faults[3]"},{"inValue":"DCVoltage_limit_max","note":"Bit 4 - BMS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_faults[4]"},{"inValue":"DCVoltage_limit_min","note":"Bit 5 - BMS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_faults[5]"},{"inValue":"HeartbeatRead_state","outValue":"BMS Communication Failure","uri":"/faults/bms_1:HeartbeatRead"},{"inValue":"MaxCellTemp_limit_max","note":"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_faults[6]"},{"inValue":"MaxCellVoltage_limit_max","note":"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_faults[7]"},{"inValue":"MinCellTemp_limit_min","note":"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_faults[8]"},{"inValue":"MinCellVoltage_limit_min","note":"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_faults[9]"},{"inValue":"NumRacksOnline_limit_min","note":"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_faults[10]"},{"inValue":"SOC_limit_max","note":"Bit 11 - BMS SOC - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_faults[11]"},{"inValue":"SOC_limit_min","note":"Bit 12 - BMS SOC - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_faults[12]"},{"inValue":"SOH_limit_min","note":"Bit 13 - BMS SOH - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:bms_bms_1_monitor_faults[13]"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms_1) will be reset to the normal state (defined in /config/bms_1:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":12,"type":"fault","value":"Normal","variable1":"CellTempDelta","variable10":"NumRacksOnline","variable11":"SOC","variable12":"SOH","variable2":"CellVoltageDelta","variable3":"DCCurrent","variable4":"DCVoltage","variable5":"HeartbeatRead","variable6":"MaxCellTemp","variable7":"MaxCellVoltage","variable8":"MinCellTemp","variable9":"MinCellVoltage"}},"/schedule/wake_monitor/bms_1":{"/status/bms_1:AnyFireFaultActive":{"amap":"bms_1","func":"CalculateVar"},"/status/bms_1:CellTempDelta":{"amap":"bms_1","func":"CheckMonitorVar"},"/status/bms_1:CellVoltageDelta":{"amap":"bms_1","func":"CheckMonitorVar"},"/status/bms_1:CurrentBeforeStopIsOK":{"amap":"bms_1","func":"CalculateVar"},"/status/bms_1:DCCurrent":{"amap":"bms_1","func":"CheckMonitorVar"},"/status/bms_1:DCVoltage":{"amap":"bms_1","func":"CheckMonitorVar"},"/status/bms_1:HeartbeatRead":{"amap":"bms_1","func":"CheckMonitorVar"},"/status/bms_1:IsAlarming":{"amap":"bms_1","func":"CalculateVar"},"/status/bms_1:IsFaulted":{"amap":"bms_1","func":"CalculateVar"},"/status/bms_1:MaxCellTemp":{"amap":"bms_1","func":"CheckMonitorVar"},"/status/bms_1:MaxCellVoltage":{"amap":"bms_1","func":"CheckMonitorVar"},"/status/bms_1:MinCellTemp":{"amap":"bms_1","func":"CheckMonitorVar"},"/status/bms_1:MinCellVoltage":{"amap":"bms_1","func":"CheckMonitorVar"},"/status/bms_1:NumRacksOnline":{"amap":"bms_1","func":"CheckMonitorVar"},"/status/bms_1:OverCurrentAlarm":{"amap":"bms_1","func":"CalculateVar"},"/status/bms_1:OverCurrentFault":{"amap":"bms_1","func":"CalculateVar"},"/status/bms_1:SOC":{"amap":"bms_1","func":"CheckMonitorVar"},"/status/bms_1:SOH":{"amap":"bms_1","func":"CheckMonitorVar"},"/status/bms_1:TotalAlarmCnt":{"amap":"bms_1","func":"CalculateVar"},"/status/bms_1:TotalFaultCnt":{"amap":"bms_1","func":"CalculateVar"},"/status/bms_1:UnderCurrentAlarm":{"amap":"bms_1","func":"CalculateVar"},"/status/bms_1:UnderCurrentFault":{"amap":"bms_1","func":"CalculateVar"}},"/status/bms_1":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/bms_1:enable","numVars":2,"operation":"or","value":false,"variable1":"bms_1:AnyFireFaultActive","variable2":"/status/bms_1:FireFaultActive"},"CellTempDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":7,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":10,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":7,"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions","value":0},"CellVoltageDelta":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":1,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":2,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":1,"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions","value":0},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:bms_bms_1_monitor_alarms"},{"outValue":0,"uri":"/site/ess:bms_bms_1_monitor_faults"},{"outValue":0,"uri":"/site/ess:bms_bms_1_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"CurrentBeforeStopIsOK":{"enable":"/config/bms_1:enable","expression":"{1} \u003c= {2} and {1} \u003e= (-1 * {2})","note":"Set to true if the BMS DC current is within an acceptable level before stopping the PCS","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms_1:DCCurrent","variable2":"/config/bms_1:CurrentBeforeStopThreshold"},"DCCurrent":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":0,"MaxAlarmTimeout":1,"MaxFaultThreshold":0,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":0,"MaxResetValue":0,"MinAlarmThreshold":0,"MinAlarmTimeout":1,"MinFaultThreshold":0,"MinFaultTimeout":2.5,"MinRecoverTimeout":0,"MinResetValue":0,"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under current conditions","value":0},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":1450,"MaxAlarmTimeout":0.5,"MaxFaultThreshold":1500,"MaxFaultTimeout":0.5,"MaxRecoverTimeout":1.5,"MaxResetValue":1400,"MinAlarmThreshold":1000,"MinAlarmTimeout":0.5,"MinFaultThreshold":800,"MinFaultTimeout":0.2,"MinRecoverTimeout":1.5,"MinResetValue":1300,"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS instance faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"bms_1","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS","value":0},"IsAlarming":{"enable":"/config/bms_1:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms_1:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/bms_1:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/bms_1:SystemFault","variable2":"/status/bms_1:TotalFaultCnt"},"MaxCellTemp":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":45,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":52,"MaxFaultTimeout":1,"MaxRecoverTimeout":1.4,"MaxResetValue":45,"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions","value":0},"MaxCellVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"MaxAlarmThreshold":3.58,"MaxAlarmTimeout":2.5,"MaxFaultThreshold":3.6,"MaxFaultTimeout":0.2,"MaxRecoverTimeout":1.4,"MaxResetValue":3.5,"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions","value":0},"MinCellTemp":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":10,"MinAlarmTimeout":2.5,"MinFaultThreshold":0.1,"MinFaultTimeout":0.5,"MinRecoverTimeout":1.4,"MinResetValue":10,"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions","value":0},"MinCellVoltage":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":2.85,"MinAlarmTimeout":2.5,"MinFaultThreshold":2.8,"MinFaultTimeout":0,"MinRecoverTimeout":1.4,"MinResetValue":2.85,"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions","value":0},"NumRacksOnline":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":5,"MinAlarmTimeout":5,"MinFaultThreshold":2,"MinFaultTimeout":10,"MinRecoverTimeout":1,"MinResetValue":5,"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"CheckMonitorVar"}]}]},"note1":"Also a monitoring variable that reports an alarm/fault for under num instances condition","note2":"TODO: Update min alarm/fault/reset thresholds and timeouts","note3":"TODO: Decode or calculate num instances online and remap/link value to this variable","value":0},"OverCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms_1:DCCurrent@MaxAlarmThreshold"},{"uri":"/status/bms_1:DCCurrent@MaxResetValue"}]}]},"enable":"/config/bms_1:enable","expression":"{1}","note":"Adjusts the max alarm and reset thresholds for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms_1:DischargeCurrentLimit"},"OverCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms_1:DCCurrent@MaxFaultThreshold"}]}]},"enable":"/config/bms_1:enable","expression":"{1} * 1.05","note":"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms_1:DischargeCurrentLimit"},"SOC":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":99.9,"MaxAlarmTimeout":5.5,"MaxFaultThreshold":100,"MaxFaultTimeout":2.5,"MaxRecoverTimeout":1.4,"MaxResetValue":99,"MinAlarmThreshold":6,"MinAlarmTimeout":5.5,"MinFaultThreshold":1,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":8,"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under soc conditions","value":0},"SOH":{"EnableFaultCheck":true,"EnableMinValCheck":false,"MinAlarmThreshold":30,"MinAlarmTimeout":5.5,"MinFaultThreshold":25,"MinFaultTimeout":2.5,"MinRecoverTimeout":1.4,"MinResetValue":30,"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for under soh conditions","value":0},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/bms_1:enable","numVars":2,"operation":"+","value":0,"variable1":"bms_1:TotalAlarmCnt","variable2":"/status/bms_1:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/bms_1:enable","numVars":2,"operation":"+","value":0,"variable1":"bms_1:TotalFaultCnt","variable2":"/status/bms_1:FaultCnt"},"UnderCurrentAlarm":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms_1:DCCurrent@MinAlarmThreshold"},{"uri":"/status/bms_1:DCCurrent@MinResetValue"}]}]},"enable":"/config/bms_1:enable","expression":"{1}","note":"Adjusts the min alarm and reset thresholds for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms_1:ChargeCurrentLimit"},"UnderCurrentFault":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms_1:DCCurrent@MinFaultThreshold"}]}]},"enable":"/config/bms_1:enable","expression":"{1} * 1.05","note":"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit","numVars":1,"useExpr":true,"value":0,"variable1":"/limits/bms_1:ChargeCurrentLimit"}},"/components/bms_1":{"fire_fault_active":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":false,"uri":"/status/bms_1:FireFaultActive"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":true,"uri":"/status/bms_1:FireFaultActive"},{"enable":"/config/bms_1:enum_opt","outValue":true,"uri":"/components/bms_1:fire_fault_active@ifChanged","useAv":true}]}]},"enable":"/config/bms_1:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/components/catl_bms_ems_r":{"bms_poweron":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Normal","uri":"/status/bms_1:Status"},{"inValue":1,"outValue":"Normal","uri":"/status/bms_1:Status"},{"inValue":2,"outValue":"On Fault","uri":"/status/bms_1:Status"},{"inValue":3,"outValue":"Off Fault","uri":"/status/bms_1:Status"},{"inValue":0,"outValue":false,"uri":"/status/bms_1:DCClosed"},{"inValue":1,"outValue":true,"uri":"/status/bms_1:DCClosed"},{"inValue":2,"outValue":false,"uri":"/status/bms_1:DCClosed"},{"inValue":3,"outValue":true,"uri":"/status/bms_1:DCClosed"},{"enable":"/config/bms:enum_opt","outValue":true,"uri":"/components/bms:status@ifChanged","useAv":true}]}]},"enable":"/config/bms:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms_1":{"checkInputs_bms_1":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms_1:status@ifChanged"},{"outValue":false,"uri":"/components/bms_1:fire_fault_active@ifChanged"}]}]},"enable":"/config/bms_1:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms_1":{"avg_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:avg_cell_temp","vlink":"/status/bms_1:AvgCellTemp"},"avg_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:avg_cell_voltage","vlink":"/status/bms_1:AvgCellVoltage"},"chargeable_energy":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:chargeable_energy","vlink":"/status/bms_1:ChargeableEnergy"},"dc_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:dc_current","vlink":"/status/bms_1:DCCurrent"},"dc_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:dc_power","vlink":"/status/bms_1:DCPower"},"dc_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:dc_voltage","vlink":"/status/bms_1:DCVoltage"},"dischargeable_energy":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:dischargeable_energy","vlink":"/status/bms_1:DischargeableEnergy"},"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:heartbeat_read","vlink":"/status/bms_1:HeartbeatRead"},"max_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:max_cell_temp","vlink":"/status/bms_1:MaxCellTemp"},"max_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:max_cell_voltage","vlink":"/status/bms_1:MaxCellVoltage"},"max_charge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:max_charge_current","vlink":"/limits/bms_1:ChargeCurrentLimit"},"max_charge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:max_charge_power","vlink":"/limits/bms_1:ChargePowerLimit"},"max_discharge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:max_discharge_current","vlink":"/limits/bms_1:DischargeCurrentLimit"},"max_discharge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:max_discharge_power","vlink":"/limits/bms_1:DischargePowerLimit"},"min_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:min_cell_temp","vlink":"/status/bms_1:MinCellTemp"},"min_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:min_cell_voltage","vlink":"/status/bms_1:MinCellVoltage"},"num_racks_online":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:num_racks_online","vlink":"/status/bms_1:NumRacksOnline"},"soc":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:soc","vlink":"/status/bms_1:SOC"},"soh":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:soh","vlink":"/status/bms_1:SOH"}},"/site/ess":{"bms_bms_1_control_alarms":{"bit0":"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit2":"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout","bit4":"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout","name":"BMS Control Alarms","type":"bitfield","value":0},"bms_bms_1_monitor_alarms":{"bit0":"BMS CellTempDelta - Max Threshold Exceeded","bit1":"BMS CellVoltageDelta - Max Threshold Exceeded","bit10":"BMS NumRacksOnline - Min Threshold Exceeded","bit11":"BMS SOC - Max Threshold Exceeded","bit12":"BMS SOC - Min Threshold Exceeded","bit13":"BMS SOH - Min Threshold Exceeded","bit2":"BMS DCCurrent - Max Threshold Exceeded","bit3":"BMS DCCurrent - Min Threshold Exceeded","bit4":"BMS DCVoltage - Max Threshold Exceeded","bit5":"BMS DCVoltage - Min Threshold Exceeded","bit6":"BMS MaxCellTemp - Max Threshold Exceeded","bit7":"BMS MaxCellVoltage - Max Threshold Exceeded","bit8":"BMS MinCellTemp - Min Threshold Exceeded","bit9":"BMS MinCellVoltage - Min Threshold Exceeded","name":"BMS Monitor Alarms","type":"bitfield","value":0},"bms_bms_1_monitor_faults":{"bit0":"BMS CellTempDelta - Max Threshold Exceeded","bit1":"BMS CellVoltageDelta - Max Threshold Exceeded","bit10":"BMS NumRacksOnline - Min Threshold Exceeded","bit11":"BMS SOC - Max Threshold Exceeded","bit12":"BMS SOC - Min Threshold Exceeded","bit13":"BMS SOH - Min Threshold Exceeded","bit2":"BMS DCCurrent - Max Threshold Exceeded","bit3":"BMS DCCurrent - Min Threshold Exceeded","bit4":"BMS DCVoltage - Max Threshold Exceeded","bit5":"BMS DCVoltage - Min Threshold Exceeded","bit6":"BMS MaxCellTemp - Max Threshold Exceeded","bit7":"BMS MaxCellVoltage - Max Threshold Exceeded","bit8":"BMS MinCellTemp - Min Threshold Exceeded","bit9":"BMS MinCellVoltage - Min Threshold Exceeded","name":"BMS Monitor Faults","type":"bitfield","value":0},"bms_bms_1_num_racks_online":{"name":"BMS Number of Racks Online","size":1,"type":"status","value":0},"bms_bms_1_num_racks_total":{"name":"BMS Number of Racks Total","size":1,"type":"status","value":0}},"/vlinks/bms_1":{"site_bms_bms_1_num_racks_online":{"default":0,"value":"/site/ess:bms_bms_1_num_racks_online","vlink":"/status/bms_1:NumRacksOnline"},"site_bms_bms_1_num_racks_total":{"default":0,"value":"/site/ess:bms_bms_1_num_racks_total","vlink":"/status/bms_1:NumRacksTotal"}},"/assets/bms/bms_1":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"chargeable_energy":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms_1:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms_1:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"close_contactors":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms_1:CloseContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms_1:CloseContactors"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate close contactors command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"comms_ok":{"value":false},"dc_charging":{"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_discharging":{"value":false},"dc_power":{"value":0},"dc_voltage":{"value":0},"dischargeable_energy":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms/bms_1:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"num_racks_online":{"value":0},"num_racks_total":{"value":0},"open_contactors":{"actions":{"onSet":[{"func":[{"amap":"bms_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms_1:OpenContactors@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms_1:OpenContactors"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate open contactors command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/bms_1":{"ui_avg_cell_temp":{"default":0,"value":"/assets/bms/bms_1:avg_cell_temp","vlink":"/status/bms_1:AvgCellTemp"},"ui_avg_cell_voltage":{"default":0,"value":"/assets/bms/bms_1:avg_cell_voltage","vlink":"/status/bms_1:AvgCellVoltage"},"ui_cell_temp_delta":{"default":0,"value":"/assets/bms/bms_1:cell_temp_delta","vlink":"/status/bms_1:CellTempDelta"},"ui_cell_voltage_delta":{"default":0,"value":"/assets/bms/bms_1:cell_voltage_delta","vlink":"/status/bms_1:CellVoltageDelta"},"ui_chargeable_energy":{"default":0,"value":"/assets/bms/bms_1:chargeable_energy","vlink":"/status/bms_1:ChargeableEnergy"},"ui_comms_ok":{"default":false,"value":"/assets/bms/bms_1:comms_ok","vlink":"/status/bms_1:CommsOK"},"ui_dc_charging":{"default":false,"value":"/assets/bms/bms_1:dc_charging","vlink":"/status/bms_1:DCCharging"},"ui_dc_contactors_closed":{"default":false,"value":"/assets/bms/bms_1:dc_contactors_closed","vlink":"/status/bms_1:DCClosed"},"ui_dc_current":{"default":0,"value":"/assets/bms/bms_1:dc_current","vlink":"/status/bms_1:DCCurrent"},"ui_dc_discharging":{"default":false,"value":"/assets/bms/bms_1:dc_discharging","vlink":"/status/bms_1:DCDischarging"},"ui_dc_power":{"default":0,"value":"/assets/bms/bms_1:dc_power","vlink":"/status/bms_1:DCPower"},"ui_dc_voltage":{"default":0,"value":"/assets/bms/bms_1:dc_voltage","vlink":"/status/bms_1:DCVoltage"},"ui_dischargeable_energy":{"default":0,"value":"/assets/bms/bms_1:dischargeable_energy","vlink":"/status/bms_1:DischargeableEnergy"},"ui_max_cell_temp":{"default":0,"value":"/assets/bms/bms_1:max_cell_temp","vlink":"/status/bms_1:MaxCellTemp"},"ui_max_cell_voltage":{"default":0,"value":"/assets/bms/bms_1:max_cell_voltage","vlink":"/status/bms_1:MaxCellVoltage"},"ui_max_charge_current":{"default":0,"value":"/assets/bms/bms_1:max_charge_current","vlink":"/limits/bms_1:ChargeCurrentLimit"},"ui_max_charge_power":{"default":0,"value":"/assets/bms/bms_1:max_charge_power","vlink":"/limits/bms_1:ChargePowerLimit"},"ui_max_discharge_current":{"default":0,"value":"/assets/bms/bms_1:max_discharge_current","vlink":"/limits/bms_1:DischargeCurrentLimit"},"ui_max_discharge_power":{"default":0,"value":"/assets/bms/bms_1:max_discharge_power","vlink":"/limits/bms_1:DischargePowerLimit"},"ui_min_cell_temp":{"default":0,"value":"/assets/bms/bms_1:min_cell_temp","vlink":"/status/bms_1:MinCellTemp"},"ui_min_cell_voltage":{"default":0,"value":"/assets/bms/bms_1:min_cell_voltage","vlink":"/status/bms_1:MinCellVoltage"},"ui_num_racks_online":{"default":0,"value":"/assets/bms/bms_1:num_racks_online","vlink":"/status/bms_1:NumRacksOnline"},"ui_num_racks_total":{"default":0,"value":"/assets/bms/bms_1:num_racks_total","vlink":"/status/bms_1:NumRacksTotal"},"ui_soc":{"default":0,"value":"/assets/bms/bms_1:soc","vlink":"/status/bms_1:SOC"},"ui_soh":{"default":0,"value":"/assets/bms/bms_1:soh","vlink":"/status/bms_1:SOH"},"ui_status":{"default":"INIT","value":"/assets/bms/bms_1:status","vlink":"/status/bms_1:Status"}}}
[3.94082s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[3.94112s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms/bms_1:alarms",
	"CurrentBeforeStopThreshold":	35,
	"FaultDestination":	"/assets/bms/bms_1:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[3.94142s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:alarms]
[3.94178s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:alarms]
[3.94229s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:faults]
[3.94263s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:faults]
[3.94313s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.94353s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.94406s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.94455s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.94527s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/bms_1:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/bms_1:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/bms_1:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/bms_1:DischargePowerLimit"
	}
}].
[3.9457s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms_1:ChargeCurrentLimit]
[3.94723s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms_1:ChargeCurrentLimit]
[3.94765s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms_1:ChargePowerLimit]
[3.94816s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms_1:ChargePowerLimit]
[3.94848s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms_1:DischargeCurrentLimit]
[3.94872s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms_1:DischargeCurrentLimit]
[3.94903s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms_1:DischargePowerLimit]
[3.94983s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms_1:DischargePowerLimit]
[3.95071s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_bms_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms/bms_1)",
		"table":	"/assets/bms/bms_1",
		"value":	1
	},
	"runMonitor_bms_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"bms_1",
		"enable":	"/config/bms_1:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/bms_1",
		"value":	1
	},
	"updateHeartbeatWrite_bms_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"CalculateVar",
							"inAv":	"/status/bms_1:HeartbeatWrite"
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"note":	"Periodically updates the heartbeat write variable defined in /status/bms_1:HeartbeatWrite",
		"value":	1
	}
}].
[3.95149s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/bms_1:CellTempDelta_Calculated":	{
		"amap":	"bms_1",
		"func":	"CalculateVar"
	},
	"/status/bms_1:CellVoltageDelta_Calculated":	{
		"amap":	"bms_1",
		"func":	"CalculateVar"
	},
	"/status/bms_1:DCCharging":	{
		"amap":	"bms_1",
		"func":	"CalculateVar"
	},
	"/status/bms_1:DCDischarging":	{
		"amap":	"bms_1",
		"func":	"CalculateVar"
	}
}].
[3.95214s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms_1:CellTempDelta"
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1:MinCellTemp",
		"variable2":	"/status/bms_1:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms_1:CellVoltageDelta"
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1:MinCellVoltage",
		"variable2":	"/status/bms_1:MaxCellVoltage"
	},
	"CommsOK":	true,
	"DCCharging":	{
		"enable":	"/config/bms_1:enable",
		"expression":	"{1} < 0",
		"note":	"Determines if the BMS is charging",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms_1:DCCurrent"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms_1:CellTempDelta@EnableMaxValCheck"
						}, {
							"uri":	"/status/bms_1:CellVoltageDelta@EnableMaxValCheck"
						}, {
							"uri":	"/status/bms_1:DCCurrent@EnableMaxValCheck"
						}, {
							"uri":	"/status/bms_1:DCCurrent@EnableMinValCheck"
						}, {
							"uri":	"/status/bms_1:DCVoltage@EnableMaxValCheck"
						}, {
							"uri":	"/status/bms_1:DCVoltage@EnableMinValCheck"
						}, {
							"uri":	"/status/bms_1:MaxCellTemp@EnableMaxValCheck"
						}, {
							"uri":	"/status/bms_1:MaxCellVoltage@EnableMaxValCheck"
						}, {
							"uri":	"/status/bms_1:MinCellTemp@EnableMinValCheck"
						}, {
							"uri":	"/status/bms_1:MinCellVoltage@EnableMinValCheck"
						}, {
							"uri":	"/status/bms_1:NumRacksOnline@EnableMinValCheck"
						}, {
							"uri":	"/status/bms_1:SOC@EnableMaxValCheck"
						}, {
							"uri":	"/status/bms_1:SOC@EnableMinValCheck"
						}, {
							"uri":	"/status/bms_1:SOH@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"DCDischarging":	{
		"enable":	"/config/bms_1:enable",
		"expression":	"{1} > 0",
		"note":	"Determines if the BMS is discharging",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms_1:DCCurrent"
	},
	"HeartbeatWrite":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"fims":	"set",
							"uri":	"/components/bms_1:heartbeat_write"
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"excludeFromDefaultSched":	true,
		"expression":	"if (({1} >= 59), 0, ({1} + 1))",
		"note":	"Updates and then sends the heartbeat write value",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1:HeartbeatWrite"
	},
	"NumRacksTotal":	3,
	"Status":	"INIT"
}].
[3.95292s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[3.95324s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[3.95362s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_bms_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/bms_1) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"bms_1",
				"every":	1,
				"uri":	"/sched/bms_1:pubAssets_bms_1",
				"value":	1
			}, {
				"aname":	"bms_1",
				"every":	0.1,
				"uri":	"/sched/bms_1:runMonitor_bms_1",
				"value":	1
			}, {
				"aname":	"bms_1",
				"every":	1,
				"uri":	"/sched/bms_1:checkInputs_bms_1",
				"value":	1
			}, {
				"aname":	"bms_1",
				"every":	1,
				"uri":	"/sched/bms_1:updateHeartbeatWrite_bms_1",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[3.95424s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"useExpr":	false,
		"value":	0
	},
	"CloseContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"expression":	"not {1} and {2} == Stop and not {3}",
		"note1":	"Close DC contactors command to send to BMS if DC contactors are open, the PCS is in Stop, and the BMS does not have any faults",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	3,
		"sendCmdTimeout":	3,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1:DCClosed",
		"variable2":	"/status/pcs_1:SystemState",
		"variable3":	"/status/bms_1:IsFaulted"
	},
	"CloseContactorsEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/bms/bms_1:close_contactors@enabled"
						}, {
							"uri":	"/status/bms_1:CloseContactorsEnabled"
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"expression":	"not {1} and {2} and not {3}",
		"note":	"Enable Close Contactors UI control if DC Contactors are opened, the BMS is not faulted, and the BMS is in maintenance mode",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms_1:DCClosed",
		"variable2":	"/assets/bms/bms_1:maint_mode",
		"variable3":	"/status/bms_1:IsFaulted"
	},
	"OpenContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"expression":	"{1} and ({2} == Stop or {2} == Fault)",
		"note1":	"Open DC contactors command to send to BMS if DC contactors are closed and the PCS is in Stop or Fault",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	2,
		"sendCmdTimeout":	3,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1:DCClosed",
		"variable2":	"/status/pcs_1:SystemState"
	},
	"OpenContactorsEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/bms/bms_1:open_contactors@enabled"
						}, {
							"uri":	"/status/bms_1:OpenContactorsEnabled"
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"expression":	"{1} and not {2} and {3}",
		"note":	"Enable Open Contactors UI control if DC Contactors are closed and the BMS is in maintenance mode",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms_1:DCClosed",
		"variable2":	"/status/pcs_1:DCClosed",
		"variable3":	"/assets/bms/bms_1:maint_mode"
	},
	"VerifyCloseContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"{1}",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1:DCClosed"
	},
	"VerifyOpenContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"not {1}",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1:DCClosed"
	}
}].
[3.95572s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:HandleCmd_ClearFaults]
[3.95604s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:HandleCmd_ClearFaults]
[3.95627s  ] [info    ] [HandleCmd      ] reload first run [bms_1] [/controls/bms_1:ClearFaults]  reload 0
[3.9565s   ] [info    ] [setupCmdParams ] Setting up params for [/controls/bms_1:ClearFaults]
[3.95701s  ] [info    ] [HandleCmd      ] Adding [/controls/bms_1:ClearFaults] to amap in asset [bms_1]
[3.95739s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/bms_1:ClearFaults]
[3.95775s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/bms_1:ClearFaults]
[3.9581s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:HandleCmd_CloseContactors]
[3.95839s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:HandleCmd_CloseContactors]
[3.95865s  ] [info    ] [HandleCmd      ] reload first run [bms_1] [/controls/bms_1:CloseContactors]  reload 0
[3.95904s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/bms_1:CloseContactors]
[3.95939s  ] [info    ] [HandleCmd      ] Adding [/controls/bms_1:CloseContactors] to amap in asset [bms_1]
[3.95971s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/bms_1:CloseContactors]
[3.95996s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/bms_1:CloseContactors]
[3.96042s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:HandleCmd_OpenContactors]
[3.96076s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:HandleCmd_OpenContactors]
[3.96101s  ] [info    ] [HandleCmd      ] reload first run [bms_1] [/controls/bms_1:OpenContactors]  reload 0
[3.96123s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/bms_1:OpenContactors]
[3.96154s  ] [info    ] [HandleCmd      ] Adding [/controls/bms_1:OpenContactors] to amap in asset [bms_1]
[3.96181s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/bms_1:OpenContactors]
[3.96205s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/bms_1:OpenContactors]
[3.96254s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:HandleCmd_VerifyCloseContactors]
[3.96333s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:HandleCmd_VerifyCloseContactors]
[3.96369s  ] [info    ] [HandleCmd      ] reload first run [bms_1] [/controls/bms_1:VerifyCloseContactors]  reload 0
[3.96418s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/bms_1:VerifyCloseContactors]
[3.96449s  ] [info    ] [HandleCmd      ] Adding [/controls/bms_1:VerifyCloseContactors] to amap in asset [bms_1]
[3.96479s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/bms_1:VerifyCloseContactors]
[3.96525s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/bms_1:VerifyCloseContactors]
[3.96571s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:HandleCmd_VerifyOpenContactors]
[3.96597s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:HandleCmd_VerifyOpenContactors]
[3.96644s  ] [info    ] [HandleCmd      ] reload first run [bms_1] [/controls/bms_1:VerifyOpenContactors]  reload 0
[3.96669s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/bms_1:VerifyOpenContactors]
[3.96694s  ] [info    ] [HandleCmd      ] Adding [/controls/bms_1:VerifyOpenContactors] to amap in asset [bms_1]
[3.96728s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/bms_1:VerifyOpenContactors]
[3.96765s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/bms_1:VerifyOpenContactors]
[3.96811s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/bms_1:ClearFaults":	{
		"amap":	"bms_1",
		"func":	"HandleCmd"
	},
	"/controls/bms_1:CloseContactors":	{
		"amap":	"bms_1",
		"func":	"HandleCmd"
	},
	"/controls/bms_1:CloseContactorsEnable":	{
		"amap":	"bms_1",
		"func":	"CalculateVar"
	},
	"/controls/bms_1:OpenContactors":	{
		"amap":	"bms_1",
		"func":	"HandleCmd"
	},
	"/controls/bms_1:OpenContactorsEnable":	{
		"amap":	"bms_1",
		"func":	"CalculateVar"
	},
	"/controls/bms_1:VerifyCloseContactors":	{
		"amap":	"bms_1",
		"func":	"HandleCmd"
	},
	"/controls/bms_1:VerifyOpenContactors":	{
		"amap":	"bms_1",
		"func":	"HandleCmd"
	}
}].
[3.96881s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/bms_1:ClearFaults"
						}, {
							"outValue":	"Clear",
							"uri":	"/faults/bms_1:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/bms_1:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/bms_1:clear_faults and /alarms/bms_1:clear_alarms will be set to Clear",
		"value":	false
	},
	"CloseContactorsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/bms_1:VerifyCloseContactors@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/bms_1:VerifyCloseContactors"
						}, {
							"inValue":	false,
							"outValue":	"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/bms_1:CloseContactors"
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"ifChanged":	false,
		"note":	"If the close contactors command has been successfully sent to the BMS, verify that DC contactors are closed. Otherwise, send an alarm",
		"value":	false
	},
	"OpenContactorsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/bms_1:VerifyOpenContactors@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/bms_1:VerifyOpenContactors"
						}, {
							"inValue":	false,
							"outValue":	"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/bms_1:OpenContactors"
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"ifChanged":	false,
		"note":	"If the open contactors command has been successfully sent to the BMS, verify that DC contactors are opened. Otherwise, send an alarm",
		"value":	false
	},
	"VerifyCloseContactorsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/bms_1:VerifyCloseContactors"
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"ifChanged":	false,
		"note":	"If the BMS failed to close contactors after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyOpenContactorsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/bms_1:VerifyOpenContactors"
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"ifChanged":	false,
		"note":	"If the BMS failed to open contactors after an elasped time, send an alarm",
		"value":	false
	}
}].
[3.97009s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 0 - BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_control_alarms[0]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending clear faults command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"CloseContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 1 - BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_control_alarms[1]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending close contactors command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"HeartbeatRead":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"type":	"alarm",
		"value":	"Normal"
	},
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"CellTempDelta_limit_max",
							"note":	"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_alarms[0]"
						}, {
							"inValue":	"CellVoltageDelta_limit_max",
							"note":	"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_alarms[1]"
						}, {
							"inValue":	"DCCurrent_limit_max",
							"note":	"Bit 2 - BMS DCCurrent - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_alarms[2]"
						}, {
							"inValue":	"DCCurrent_limit_min",
							"note":	"Bit 3 - BMS DCCurrent - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_alarms[3]"
						}, {
							"inValue":	"DCVoltage_limit_max",
							"note":	"Bit 4 - BMS DCVoltage - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_alarms[4]"
						}, {
							"inValue":	"DCVoltage_limit_min",
							"note":	"Bit 5 - BMS DCVoltage - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_alarms[5]"
						}, {
							"inValue":	"HeartbeatRead_state",
							"outValue":	"BMS Communication Failure",
							"uri":	"/alarms/bms_1:HeartbeatRead"
						}, {
							"inValue":	"MaxCellTemp_limit_max",
							"note":	"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_alarms[6]"
						}, {
							"inValue":	"MaxCellVoltage_limit_max",
							"note":	"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_alarms[7]"
						}, {
							"inValue":	"MinCellTemp_limit_min",
							"note":	"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_alarms[8]"
						}, {
							"inValue":	"MinCellVoltage_limit_min",
							"note":	"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_alarms[9]"
						}, {
							"inValue":	"NumRacksOnline_limit_min",
							"note":	"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_alarms[10]"
						}, {
							"inValue":	"SOC_limit_max",
							"note":	"Bit 11 - BMS SOC - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_alarms[11]"
						}, {
							"inValue":	"SOC_limit_min",
							"note":	"Bit 12 - BMS SOC - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_alarms[12]"
						}, {
							"inValue":	"SOH_limit_min",
							"note":	"Bit 13 - BMS SOH - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_alarms[13]"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"OpenContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 2 - BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_control_alarms[2]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending open contactors command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyCloseContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 3 - BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_control_alarms[3]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the BMS failed to close contactors",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyOpenContactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 4 - BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_control_alarms[4]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the BMS failed to open contactors",
		"type":	"alarm",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/bms_1) will be reset to the normal state (defined in /config/bms_1:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"numVars":	12,
		"type":	"alarm",
		"value":	"Normal",
		"variable1":	"CellTempDelta",
		"variable10":	"NumRacksOnline",
		"variable11":	"SOC",
		"variable12":	"SOH",
		"variable2":	"CellVoltageDelta",
		"variable3":	"DCCurrent",
		"variable4":	"DCVoltage",
		"variable5":	"HeartbeatRead",
		"variable6":	"MaxCellTemp",
		"variable7":	"MaxCellVoltage",
		"variable8":	"MinCellTemp",
		"variable9":	"MinCellVoltage"
	}
}].
[3.97137s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.97164s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.97199s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms_1:FaultDestination]
[3.97258s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms_1:FaultDestination]
[3.9729s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms_1:NoFaultMsg]
[3.97323s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms_1:NoFaultMsg]
[3.974s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:FaultCnt]
[3.97428s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:FaultCnt]
[3.97455s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms_1:AlarmDestination]
[3.97478s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms_1:AlarmDestination]
[3.97514s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms_1:NoAlarmMsg]
[3.9754s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms_1:NoAlarmMsg]
[3.97579s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:AlarmCnt]
[3.97603s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:AlarmCnt]
[3.97635s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.97663s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.97693s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.97717s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.97753s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.97776s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.97815s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.97837s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.97868s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.97944s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.97986s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.98009s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.98046s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.98076s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.98227s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"HeartbeatRead":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"type":	"fault",
		"value":	"Normal"
	},
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"CellTempDelta_limit_max",
							"note":	"Bit 0 - BMS CellTempDelta - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_faults[0]"
						}, {
							"inValue":	"CellVoltageDelta_limit_max",
							"note":	"Bit 1 - BMS CellVoltageDelta - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_faults[1]"
						}, {
							"inValue":	"DCCurrent_limit_max",
							"note":	"Bit 2 - BMS DCCurrent - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_faults[2]"
						}, {
							"inValue":	"DCCurrent_limit_min",
							"note":	"Bit 3 - BMS DCCurrent - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_faults[3]"
						}, {
							"inValue":	"DCVoltage_limit_max",
							"note":	"Bit 4 - BMS DCVoltage - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_faults[4]"
						}, {
							"inValue":	"DCVoltage_limit_min",
							"note":	"Bit 5 - BMS DCVoltage - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_faults[5]"
						}, {
							"inValue":	"HeartbeatRead_state",
							"outValue":	"BMS Communication Failure",
							"uri":	"/faults/bms_1:HeartbeatRead"
						}, {
							"inValue":	"MaxCellTemp_limit_max",
							"note":	"Bit 6 - BMS MaxCellTemp - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_faults[6]"
						}, {
							"inValue":	"MaxCellVoltage_limit_max",
							"note":	"Bit 7 - BMS MaxCellVoltage - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_faults[7]"
						}, {
							"inValue":	"MinCellTemp_limit_min",
							"note":	"Bit 8 - BMS MinCellTemp - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_faults[8]"
						}, {
							"inValue":	"MinCellVoltage_limit_min",
							"note":	"Bit 9 - BMS MinCellVoltage - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_faults[9]"
						}, {
							"inValue":	"NumRacksOnline_limit_min",
							"note":	"Bit 10 - BMS NumRacksOnline - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_faults[10]"
						}, {
							"inValue":	"SOC_limit_max",
							"note":	"Bit 11 - BMS SOC - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_faults[11]"
						}, {
							"inValue":	"SOC_limit_min",
							"note":	"Bit 12 - BMS SOC - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_faults[12]"
						}, {
							"inValue":	"SOH_limit_min",
							"note":	"Bit 13 - BMS SOH - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:bms_bms_1_monitor_faults[13]"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/bms_1) will be reset to the normal state (defined in /config/bms_1:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"numVars":	12,
		"type":	"fault",
		"value":	"Normal",
		"variable1":	"CellTempDelta",
		"variable10":	"NumRacksOnline",
		"variable11":	"SOC",
		"variable12":	"SOH",
		"variable2":	"CellVoltageDelta",
		"variable3":	"DCCurrent",
		"variable4":	"DCVoltage",
		"variable5":	"HeartbeatRead",
		"variable6":	"MaxCellTemp",
		"variable7":	"MaxCellVoltage",
		"variable8":	"MinCellTemp",
		"variable9":	"MinCellVoltage"
	}
}].
[3.98296s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.98318s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.98353s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.98373s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.98425s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[3.98456s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[3.98502s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/bms_1:AnyFireFaultActive":	{
		"amap":	"bms_1",
		"func":	"CalculateVar"
	},
	"/status/bms_1:CellTempDelta":	{
		"amap":	"bms_1",
		"func":	"CheckMonitorVar"
	},
	"/status/bms_1:CellVoltageDelta":	{
		"amap":	"bms_1",
		"func":	"CheckMonitorVar"
	},
	"/status/bms_1:CurrentBeforeStopIsOK":	{
		"amap":	"bms_1",
		"func":	"CalculateVar"
	},
	"/status/bms_1:DCCurrent":	{
		"amap":	"bms_1",
		"func":	"CheckMonitorVar"
	},
	"/status/bms_1:DCVoltage":	{
		"amap":	"bms_1",
		"func":	"CheckMonitorVar"
	},
	"/status/bms_1:HeartbeatRead":	{
		"amap":	"bms_1",
		"func":	"CheckMonitorVar"
	},
	"/status/bms_1:IsAlarming":	{
		"amap":	"bms_1",
		"func":	"CalculateVar"
	},
	"/status/bms_1:IsFaulted":	{
		"amap":	"bms_1",
		"func":	"CalculateVar"
	},
	"/status/bms_1:MaxCellTemp":	{
		"amap":	"bms_1",
		"func":	"CheckMonitorVar"
	},
	"/status/bms_1:MaxCellVoltage":	{
		"amap":	"bms_1",
		"func":	"CheckMonitorVar"
	},
	"/status/bms_1:MinCellTemp":	{
		"amap":	"bms_1",
		"func":	"CheckMonitorVar"
	},
	"/status/bms_1:MinCellVoltage":	{
		"amap":	"bms_1",
		"func":	"CheckMonitorVar"
	},
	"/status/bms_1:NumRacksOnline":	{
		"amap":	"bms_1",
		"func":	"CheckMonitorVar"
	},
	"/status/bms_1:OverCurrentAlarm":	{
		"amap":	"bms_1",
		"func":	"CalculateVar"
	},
	"/status/bms_1:OverCurrentFault":	{
		"amap":	"bms_1",
		"func":	"CalculateVar"
	},
	"/status/bms_1:SOC":	{
		"amap":	"bms_1",
		"func":	"CheckMonitorVar"
	},
	"/status/bms_1:SOH":	{
		"amap":	"bms_1",
		"func":	"CheckMonitorVar"
	},
	"/status/bms_1:TotalAlarmCnt":	{
		"amap":	"bms_1",
		"func":	"CalculateVar"
	},
	"/status/bms_1:TotalFaultCnt":	{
		"amap":	"bms_1",
		"func":	"CalculateVar"
	},
	"/status/bms_1:UnderCurrentAlarm":	{
		"amap":	"bms_1",
		"func":	"CalculateVar"
	},
	"/status/bms_1:UnderCurrentFault":	{
		"amap":	"bms_1",
		"func":	"CalculateVar"
	}
}].
[3.98615s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"enable":	"/config/bms_1:enable",
		"numVars":	2,
		"operation":	"or",
		"value":	false,
		"variable1":	"bms_1:AnyFireFaultActive",
		"variable2":	"/status/bms_1:FireFaultActive"
	},
	"CellTempDelta":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"MaxAlarmThreshold":	7,
		"MaxAlarmTimeout":	5.5,
		"MaxFaultThreshold":	10,
		"MaxFaultTimeout":	2.5,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	7,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over cell temp delta conditions",
		"value":	0
	},
	"CellVoltageDelta":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"MaxAlarmThreshold":	1,
		"MaxAlarmTimeout":	5.5,
		"MaxFaultThreshold":	2,
		"MaxFaultTimeout":	2.5,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	1,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over cell voltage delta conditions",
		"value":	0
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	0,
							"uri":	"/site/ess:bms_bms_1_monitor_alarms"
						}, {
							"outValue":	0,
							"uri":	"/site/ess:bms_bms_1_monitor_faults"
						}, {
							"outValue":	0,
							"uri":	"/site/ess:bms_bms_1_control_alarms"
						}]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"CurrentBeforeStopIsOK":	{
		"enable":	"/config/bms_1:enable",
		"expression":	"{1} <= {2} and {1} >= (-1 * {2})",
		"note":	"Set to true if the BMS DC current is within an acceptable level before stopping the PCS",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms_1:DCCurrent",
		"variable2":	"/config/bms_1:CurrentBeforeStopThreshold"
	},
	"DCCurrent":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"EnableMinValCheck":	false,
		"MaxAlarmThreshold":	0,
		"MaxAlarmTimeout":	1,
		"MaxFaultThreshold":	0,
		"MaxFaultTimeout":	2.5,
		"MaxRecoverTimeout":	0,
		"MaxResetValue":	0,
		"MinAlarmThreshold":	0,
		"MinAlarmTimeout":	1,
		"MinFaultThreshold":	0,
		"MinFaultTimeout":	2.5,
		"MinRecoverTimeout":	0,
		"MinResetValue":	0,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over/under current conditions",
		"value":	0
	},
	"DCVoltage":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"EnableMinValCheck":	false,
		"MaxAlarmThreshold":	1450,
		"MaxAlarmTimeout":	0.5,
		"MaxFaultThreshold":	1500,
		"MaxFaultTimeout":	0.5,
		"MaxRecoverTimeout":	1.5,
		"MaxResetValue":	1400,
		"MinAlarmThreshold":	1000,
		"MinAlarmTimeout":	0.5,
		"MinFaultThreshold":	800,
		"MinFaultTimeout":	0.2,
		"MinRecoverTimeout":	1.5,
		"MinResetValue":	1300,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over/under voltage conditions",
		"value":	0
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS instance faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"HeartbeatRead":	{
		"AlarmTimeout":	10,
		"EnableAlert":	false,
		"EnableCommsCheck":	false,
		"EnableStateCheck":	false,
		"FaultTimeout":	15,
		"RecoverTimeout":	0.1,
		"Type":	"int",
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with BMS",
		"value":	0
	},
	"IsAlarming":	{
		"enable":	"/config/bms_1:enable",
		"expression":	"{1} > 0",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms_1:TotalAlarmCnt"
	},
	"IsFaulted":	{
		"enable":	"/config/bms_1:enable",
		"expression":	"{1} or {2} > 0",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms_1:SystemFault",
		"variable2":	"/status/bms_1:TotalFaultCnt"
	},
	"MaxCellTemp":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"MaxAlarmThreshold":	45,
		"MaxAlarmTimeout":	2.5,
		"MaxFaultThreshold":	52,
		"MaxFaultTimeout":	1,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	45,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over max cell temperature conditions",
		"value":	0
	},
	"MaxCellVoltage":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"MaxAlarmThreshold":	3.58,
		"MaxAlarmTimeout":	2.5,
		"MaxFaultThreshold":	3.6,
		"MaxFaultTimeout":	0.2,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	3.5,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over max cell voltage conditions",
		"value":	0
	},
	"MinCellTemp":	{
		"EnableFaultCheck":	true,
		"EnableMinValCheck":	false,
		"MinAlarmThreshold":	10,
		"MinAlarmTimeout":	2.5,
		"MinFaultThreshold":	0.1,
		"MinFaultTimeout":	0.5,
		"MinRecoverTimeout":	1.4,
		"MinResetValue":	10,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for under min cell temperature conditions",
		"value":	0
	},
	"MinCellVoltage":	{
		"EnableFaultCheck":	true,
		"EnableMinValCheck":	false,
		"MinAlarmThreshold":	2.85,
		"MinAlarmTimeout":	2.5,
		"MinFaultThreshold":	2.8,
		"MinFaultTimeout":	0,
		"MinRecoverTimeout":	1.4,
		"MinResetValue":	2.85,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for under min cell voltage conditions",
		"value":	0
	},
	"NumRacksOnline":	{
		"EnableFaultCheck":	true,
		"EnableMinValCheck":	false,
		"MinAlarmThreshold":	5,
		"MinAlarmTimeout":	5,
		"MinFaultThreshold":	2,
		"MinFaultTimeout":	10,
		"MinRecoverTimeout":	1,
		"MinResetValue":	5,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note1":	"Also a monitoring variable that reports an alarm/fault for under num instances condition",
		"note2":	"TODO: Update min alarm/fault/reset thresholds and timeouts",
		"note3":	"TODO: Decode or calculate num instances online and remap/link value to this variable",
		"value":	0
	},
	"OverCurrentAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms_1:DCCurrent@MaxAlarmThreshold"
						}, {
							"uri":	"/status/bms_1:DCCurrent@MaxResetValue"
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"expression":	"{1}",
		"note":	"Adjusts the max alarm and reset thresholds for BMS DC current monitoring variable depending on the discharge current limit",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/limits/bms_1:DischargeCurrentLimit"
	},
	"OverCurrentFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms_1:DCCurrent@MaxFaultThreshold"
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"expression":	"{1} * 1.05",
		"note":	"Adjusts the max fault threshold for BMS DC current monitoring variable depending on the discharge current limit",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/limits/bms_1:DischargeCurrentLimit"
	},
	"SOC":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"EnableMinValCheck":	false,
		"MaxAlarmThreshold":	99.9,
		"MaxAlarmTimeout":	5.5,
		"MaxFaultThreshold":	100,
		"MaxFaultTimeout":	2.5,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	99,
		"MinAlarmThreshold":	6,
		"MinAlarmTimeout":	5.5,
		"MinFaultThreshold":	1,
		"MinFaultTimeout":	2.5,
		"MinRecoverTimeout":	1.4,
		"MinResetValue":	8,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over/under soc conditions",
		"value":	0
	},
	"SOH":	{
		"EnableFaultCheck":	true,
		"EnableMinValCheck":	false,
		"MinAlarmThreshold":	30,
		"MinAlarmTimeout":	5.5,
		"MinFaultThreshold":	25,
		"MinFaultTimeout":	2.5,
		"MinRecoverTimeout":	1.4,
		"MinResetValue":	30,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for under soh conditions",
		"value":	0
	},
	"SystemFault":	false,
	"TotalAlarmCnt":	{
		"enable":	"/config/bms_1:enable",
		"numVars":	2,
		"operation":	"+",
		"value":	0,
		"variable1":	"bms_1:TotalAlarmCnt",
		"variable2":	"/status/bms_1:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"enable":	"/config/bms_1:enable",
		"numVars":	2,
		"operation":	"+",
		"value":	0,
		"variable1":	"bms_1:TotalFaultCnt",
		"variable2":	"/status/bms_1:FaultCnt"
	},
	"UnderCurrentAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms_1:DCCurrent@MinAlarmThreshold"
						}, {
							"uri":	"/status/bms_1:DCCurrent@MinResetValue"
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"expression":	"{1}",
		"note":	"Adjusts the min alarm and reset thresholds for BMS DC current monitoring variable depending on the charge current limit",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/limits/bms_1:ChargeCurrentLimit"
	},
	"UnderCurrentFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms_1:DCCurrent@MinFaultThreshold"
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"expression":	"{1} * 1.05",
		"note":	"Adjusts the min fault threshold for BMS DC current monitoring variable depending on the charge current limit",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/limits/bms_1:ChargeCurrentLimit"
	}
}].
[3.98749s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CellTempDelta_reload]
[3.98776s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CellTempDelta_reload]
[3.98804s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/alarms/bms_1:MonitorVarAlarm]
[3.98826s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/alarms/bms_1:MonitorVarAlarm]
[3.98857s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/faults/bms_1:MonitorVarFault]
[3.98878s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/faults/bms_1:MonitorVarFault]
[3.989s    ] [info    ] [CheckMonitorVar] Fault Destination for bms_1 with assetVar /status/bms_1:CellTempDelta is /assets/bms/bms_1:faults
[3.98921s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms_1 with assetVar /status/bms_1:CellTempDelta is /assets/bms/bms_1:alarms
[3.98941s  ] [info    ] [CheckMonitorVar] Not set up for [CellTempDelta] reloadStr [CellTempDelta_reload]
[3.98983s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CellVoltageDelta_reload]
[3.99065s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CellVoltageDelta_reload]
[3.99099s  ] [info    ] [CheckMonitorVar] Fault Destination for bms_1 with assetVar /status/bms_1:CellVoltageDelta is /assets/bms/bms_1:faults
[3.99121s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms_1 with assetVar /status/bms_1:CellVoltageDelta is /assets/bms/bms_1:alarms
[3.99142s  ] [info    ] [CheckMonitorVar] Not set up for [CellVoltageDelta] reloadStr [CellVoltageDelta_reload]
[3.99203s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:DCCurrent_reload]
[3.99228s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:DCCurrent_reload]
[3.99257s  ] [info    ] [CheckMonitorVar] Fault Destination for bms_1 with assetVar /status/bms_1:DCCurrent is /assets/bms/bms_1:faults
[3.99282s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms_1 with assetVar /status/bms_1:DCCurrent is /assets/bms/bms_1:alarms
[3.99317s  ] [info    ] [CheckMonitorVar] Not set up for [DCCurrent] reloadStr [DCCurrent_reload]
[3.99384s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:DCVoltage_reload]
[3.99413s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:DCVoltage_reload]
[3.99472s  ] [info    ] [CheckMonitorVar] Fault Destination for bms_1 with assetVar /status/bms_1:DCVoltage is /assets/bms/bms_1:faults
[3.99503s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms_1 with assetVar /status/bms_1:DCVoltage is /assets/bms/bms_1:alarms
[3.99524s  ] [info    ] [CheckMonitorVar] Not set up for [DCVoltage] reloadStr [DCVoltage_reload]
[3.99594s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:HeartbeatRead_reload]
[3.99623s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:HeartbeatRead_reload]
[3.99649s  ] [info    ] [CheckMonitorVar] Fault Destination for bms_1 with assetVar /status/bms_1:HeartbeatRead is /assets/bms/bms_1:faults
[3.99666s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms_1 with assetVar /status/bms_1:HeartbeatRead is /assets/bms/bms_1:alarms
[3.99681s  ] [info    ] [CheckMonitorVar] Not set up for [HeartbeatRead] reloadStr [HeartbeatRead_reload]
[3.99714s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:MaxCellTemp_reload]
[3.99732s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:MaxCellTemp_reload]
[3.99752s  ] [info    ] [CheckMonitorVar] Fault Destination for bms_1 with assetVar /status/bms_1:MaxCellTemp is /assets/bms/bms_1:faults
[3.9977s   ] [info    ] [CheckMonitorVar] Alarm Destination for bms_1 with assetVar /status/bms_1:MaxCellTemp is /assets/bms/bms_1:alarms
[3.99789s  ] [info    ] [CheckMonitorVar] Not set up for [MaxCellTemp] reloadStr [MaxCellTemp_reload]
[3.99823s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:MaxCellVoltage_reload]
[3.99842s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:MaxCellVoltage_reload]
[3.99865s  ] [info    ] [CheckMonitorVar] Fault Destination for bms_1 with assetVar /status/bms_1:MaxCellVoltage is /assets/bms/bms_1:faults
[3.99889s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms_1 with assetVar /status/bms_1:MaxCellVoltage is /assets/bms/bms_1:alarms
[3.99915s  ] [info    ] [CheckMonitorVar] Not set up for [MaxCellVoltage] reloadStr [MaxCellVoltage_reload]
[3.99959s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:MinCellTemp_reload]
[3.99994s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:MinCellTemp_reload]
[4.00047s  ] [info    ] [CheckMonitorVar] Fault Destination for bms_1 with assetVar /status/bms_1:MinCellTemp is /assets/bms/bms_1:faults
[4.00136s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms_1 with assetVar /status/bms_1:MinCellTemp is /assets/bms/bms_1:alarms
[4.00167s  ] [info    ] [CheckMonitorVar] Not set up for [MinCellTemp] reloadStr [MinCellTemp_reload]
[4.00213s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:MinCellVoltage_reload]
[4.00233s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:MinCellVoltage_reload]
[4.00261s  ] [info    ] [CheckMonitorVar] Fault Destination for bms_1 with assetVar /status/bms_1:MinCellVoltage is /assets/bms/bms_1:faults
[4.00284s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms_1 with assetVar /status/bms_1:MinCellVoltage is /assets/bms/bms_1:alarms
[4.00307s  ] [info    ] [CheckMonitorVar] Not set up for [MinCellVoltage] reloadStr [MinCellVoltage_reload]
[4.00362s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:NumRacksOnline_reload]
[4.00387s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:NumRacksOnline_reload]
[4.0042s   ] [info    ] [CheckMonitorVar] Fault Destination for bms_1 with assetVar /status/bms_1:NumRacksOnline is /assets/bms/bms_1:faults
[4.00443s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms_1 with assetVar /status/bms_1:NumRacksOnline is /assets/bms/bms_1:alarms
[4.00465s  ] [info    ] [CheckMonitorVar] Not set up for [NumRacksOnline] reloadStr [NumRacksOnline_reload]
[4.00509s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:SOC_reload]
[4.00535s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:SOC_reload]
[4.0056s   ] [info    ] [CheckMonitorVar] Fault Destination for bms_1 with assetVar /status/bms_1:SOC is /assets/bms/bms_1:faults
[4.00599s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms_1 with assetVar /status/bms_1:SOC is /assets/bms/bms_1:alarms
[4.00621s  ] [info    ] [CheckMonitorVar] Not set up for [SOC] reloadStr [SOC_reload]
[4.00672s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:SOH_reload]
[4.00693s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:SOH_reload]
[4.00717s  ] [info    ] [CheckMonitorVar] Fault Destination for bms_1 with assetVar /status/bms_1:SOH is /assets/bms/bms_1:faults
[4.00743s  ] [info    ] [CheckMonitorVar] Alarm Destination for bms_1 with assetVar /status/bms_1:SOH is /assets/bms/bms_1:alarms
[4.00766s  ] [info    ] [CheckMonitorVar] Not set up for [SOH] reloadStr [SOH_reload]
[4.00833s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"fire_fault_active":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	false,
							"uri":	"/status/bms_1:FireFaultActive"
						}, {
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	true,
							"uri":	"/status/bms_1:FireFaultActive"
						}, {
							"enable":	"/config/bms_1:enum_opt",
							"outValue":	true,
							"uri":	"/components/bms_1:fire_fault_active@ifChanged",
							"useAv":	true
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"ifChanged":	false,
		"note1":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[4.00907s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"bms_poweron":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	"Normal",
							"uri":	"/status/bms_1:Status"
						}, {
							"inValue":	1,
							"outValue":	"Normal",
							"uri":	"/status/bms_1:Status"
						}, {
							"inValue":	2,
							"outValue":	"On Fault",
							"uri":	"/status/bms_1:Status"
						}, {
							"inValue":	3,
							"outValue":	"Off Fault",
							"uri":	"/status/bms_1:Status"
						}, {
							"inValue":	0,
							"outValue":	false,
							"uri":	"/status/bms_1:DCClosed"
						}, {
							"inValue":	1,
							"outValue":	true,
							"uri":	"/status/bms_1:DCClosed"
						}, {
							"inValue":	2,
							"outValue":	false,
							"uri":	"/status/bms_1:DCClosed"
						}, {
							"inValue":	3,
							"outValue":	true,
							"uri":	"/status/bms_1:DCClosed"
						}, {
							"enable":	"/config/bms:enum_opt",
							"outValue":	true,
							"uri":	"/components/bms:status@ifChanged",
							"useAv":	true
						}]
				}]
		},
		"enable":	"/config/bms:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[4.00993s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"checkInputs_bms_1":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	false,
							"uri":	"/components/bms_1:status@ifChanged"
						}, {
							"outValue":	false,
							"uri":	"/components/bms_1:fire_fault_active@ifChanged"
						}]
				}]
		},
		"enable":	"/config/bms_1:enable",
		"note":	"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change",
		"value":	0
	}
}].
[4.01082s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:avg_cell_temp",
		"vlink":	"/status/bms_1:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:avg_cell_voltage",
		"vlink":	"/status/bms_1:AvgCellVoltage"
	},
	"chargeable_energy":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:chargeable_energy",
		"vlink":	"/status/bms_1:ChargeableEnergy"
	},
	"dc_current":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:dc_current",
		"vlink":	"/status/bms_1:DCCurrent"
	},
	"dc_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:dc_power",
		"vlink":	"/status/bms_1:DCPower"
	},
	"dc_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:dc_voltage",
		"vlink":	"/status/bms_1:DCVoltage"
	},
	"dischargeable_energy":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:dischargeable_energy",
		"vlink":	"/status/bms_1:DischargeableEnergy"
	},
	"heartbeat_read":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:heartbeat_read",
		"vlink":	"/status/bms_1:HeartbeatRead"
	},
	"max_cell_temp":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:max_cell_temp",
		"vlink":	"/status/bms_1:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:max_cell_voltage",
		"vlink":	"/status/bms_1:MaxCellVoltage"
	},
	"max_charge_current":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:max_charge_current",
		"vlink":	"/limits/bms_1:ChargeCurrentLimit"
	},
	"max_charge_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:max_charge_power",
		"vlink":	"/limits/bms_1:ChargePowerLimit"
	},
	"max_discharge_current":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:max_discharge_current",
		"vlink":	"/limits/bms_1:DischargeCurrentLimit"
	},
	"max_discharge_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:max_discharge_power",
		"vlink":	"/limits/bms_1:DischargePowerLimit"
	},
	"min_cell_temp":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:min_cell_temp",
		"vlink":	"/status/bms_1:MinCellTemp"
	},
	"min_cell_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:min_cell_voltage",
		"vlink":	"/status/bms_1:MinCellVoltage"
	},
	"num_racks_online":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:num_racks_online",
		"vlink":	"/status/bms_1:NumRacksOnline"
	},
	"soc":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:soc",
		"vlink":	"/status/bms_1:SOC"
	},
	"soh":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:soh",
		"vlink":	"/status/bms_1:SOH"
	}
}].
[4.01169s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:avg_cell_temp]
[4.01194s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:avg_cell_temp]
[4.01218s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:avg_cell_voltage]
[4.0124s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:avg_cell_voltage]
[4.01301s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:chargeable_energy]
[4.0133s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:chargeable_energy]
[4.01358s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:dc_current]
[4.01379s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:dc_current]
[4.01403s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:dc_power]
[4.01424s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:dc_power]
[4.01449s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:dc_voltage]
[4.01473s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:dc_voltage]
[4.01494s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:dischargeable_energy]
[4.01514s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:dischargeable_energy]
[4.01543s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:heartbeat_read]
[4.01559s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:heartbeat_read]
[4.01594s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:max_cell_temp]
[4.01621s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:max_cell_temp]
[4.01652s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:max_cell_voltage]
[4.01699s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:max_cell_voltage]
[4.01732s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:max_charge_current]
[4.01759s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:max_charge_current]
[4.01785s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:max_charge_power]
[4.01813s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:max_charge_power]
[4.01844s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:max_discharge_current]
[4.01868s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:max_discharge_current]
[4.01894s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:max_discharge_power]
[4.01916s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:max_discharge_power]
[4.01942s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:min_cell_temp]
[4.01969s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:min_cell_temp]
[4.01995s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:min_cell_voltage]
[4.02019s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:min_cell_voltage]
[4.02046s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:num_racks_online]
[4.02084s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:num_racks_online]
[4.02107s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:soc]
[4.02127s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:soc]
[4.02156s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:soh]
[4.0218s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:soh]
[4.02216s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"bms_bms_1_control_alarms":	{
		"bit0":	"BMS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit1":	"BMS CloseContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit2":	"BMS OpenContactors - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit3":	"BMS VerifyCloseContactors - Command was sent, but the expected result was not observed before timeout",
		"bit4":	"BMS VerifyOpenContactors - Command was sent, but the expected result was not observed before timeout",
		"name":	"BMS Control Alarms",
		"type":	"bitfield",
		"value":	0
	},
	"bms_bms_1_monitor_alarms":	{
		"bit0":	"BMS CellTempDelta - Max Threshold Exceeded",
		"bit1":	"BMS CellVoltageDelta - Max Threshold Exceeded",
		"bit10":	"BMS NumRacksOnline - Min Threshold Exceeded",
		"bit11":	"BMS SOC - Max Threshold Exceeded",
		"bit12":	"BMS SOC - Min Threshold Exceeded",
		"bit13":	"BMS SOH - Min Threshold Exceeded",
		"bit2":	"BMS DCCurrent - Max Threshold Exceeded",
		"bit3":	"BMS DCCurrent - Min Threshold Exceeded",
		"bit4":	"BMS DCVoltage - Max Threshold Exceeded",
		"bit5":	"BMS DCVoltage - Min Threshold Exceeded",
		"bit6":	"BMS MaxCellTemp - Max Threshold Exceeded",
		"bit7":	"BMS MaxCellVoltage - Max Threshold Exceeded",
		"bit8":	"BMS MinCellTemp - Min Threshold Exceeded",
		"bit9":	"BMS MinCellVoltage - Min Threshold Exceeded",
		"name":	"BMS Monitor Alarms",
		"type":	"bitfield",
		"value":	0
	},
	"bms_bms_1_monitor_faults":	{
		"bit0":	"BMS CellTempDelta - Max Threshold Exceeded",
		"bit1":	"BMS CellVoltageDelta - Max Threshold Exceeded",
		"bit10":	"BMS NumRacksOnline - Min Threshold Exceeded",
		"bit11":	"BMS SOC - Max Threshold Exceeded",
		"bit12":	"BMS SOC - Min Threshold Exceeded",
		"bit13":	"BMS SOH - Min Threshold Exceeded",
		"bit2":	"BMS DCCurrent - Max Threshold Exceeded",
		"bit3":	"BMS DCCurrent - Min Threshold Exceeded",
		"bit4":	"BMS DCVoltage - Max Threshold Exceeded",
		"bit5":	"BMS DCVoltage - Min Threshold Exceeded",
		"bit6":	"BMS MaxCellTemp - Max Threshold Exceeded",
		"bit7":	"BMS MaxCellVoltage - Max Threshold Exceeded",
		"bit8":	"BMS MinCellTemp - Min Threshold Exceeded",
		"bit9":	"BMS MinCellVoltage - Min Threshold Exceeded",
		"name":	"BMS Monitor Faults",
		"type":	"bitfield",
		"value":	0
	},
	"bms_bms_1_num_racks_online":	{
		"name":	"BMS Number of Racks Online",
		"size":	1,
		"type":	"status",
		"value":	0
	},
	"bms_bms_1_num_racks_total":	{
		"name":	"BMS Number of Racks Total",
		"size":	1,
		"type":	"status",
		"value":	0
	}
}].
[4.02254s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"site_bms_bms_1_num_racks_online":	{
		"default":	0,
		"value":	"/site/ess:bms_bms_1_num_racks_online",
		"vlink":	"/status/bms_1:NumRacksOnline"
	},
	"site_bms_bms_1_num_racks_total":	{
		"default":	0,
		"value":	"/site/ess:bms_bms_1_num_racks_total",
		"vlink":	"/status/bms_1:NumRacksTotal"
	}
}].
[4.02279s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_bms_1_num_racks_online]
[4.02351s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_bms_1_num_racks_online]
[4.02378s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:bms_bms_1_num_racks_total]
[4.024s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:bms_bms_1_num_racks_total]
[4.02444s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"chargeable_energy":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/bms_1:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/bms_1:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"close_contactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/bms_1:CloseContactors@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/bms_1:CloseContactors"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate close contactors command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"comms_ok":	{
		"value":	false
	},
	"dc_charging":	{
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_discharging":	{
		"value":	false
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"dischargeable_energy":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms/bms_1:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"num_racks_online":	{
		"value":	0
	},
	"num_racks_total":	{
		"value":	0
	},
	"open_contactors":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/bms_1:OpenContactors@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/bms_1:OpenContactors"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate open contactors command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[4.02494s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"Failed Attempt to update [/assets/bms/bms_1:close_contactors] because [close_contactors@enabled:false] == true ---> Condition(s): [/status/bms:DCClosed:false] == false && [/assets/bms/summary:maint_mode:false] == true && [/status/bms:IsFaulted:false] == false","severity":1}]
[4.02569s  ] [info    ] [LogInfo        ] [/assets/bms/bms_1:maint_mode] received a value of [false]
[4.02621s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"Failed Attempt to update [/assets/bms/bms_1:open_contactors] because [open_contactors@enabled:false] == true ---> Condition(s): [/status/bms:DCClosed:false] == true && [/status/pcs:DCClosed:false] == false && [/assets/bms/summary:maint_mode:false] == true","severity":1}]
[4.02656s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.02787s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.03575s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:avg_cell_temp",
		"vlink":	"/status/bms_1:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:avg_cell_voltage",
		"vlink":	"/status/bms_1:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:cell_temp_delta",
		"vlink":	"/status/bms_1:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:cell_voltage_delta",
		"vlink":	"/status/bms_1:CellVoltageDelta"
	},
	"ui_chargeable_energy":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:chargeable_energy",
		"vlink":	"/status/bms_1:ChargeableEnergy"
	},
	"ui_comms_ok":	{
		"default":	false,
		"value":	"/assets/bms/bms_1:comms_ok",
		"vlink":	"/status/bms_1:CommsOK"
	},
	"ui_dc_charging":	{
		"default":	false,
		"value":	"/assets/bms/bms_1:dc_charging",
		"vlink":	"/status/bms_1:DCCharging"
	},
	"ui_dc_contactors_closed":	{
		"default":	false,
		"value":	"/assets/bms/bms_1:dc_contactors_closed",
		"vlink":	"/status/bms_1:DCClosed"
	},
	"ui_dc_current":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:dc_current",
		"vlink":	"/status/bms_1:DCCurrent"
	},
	"ui_dc_discharging":	{
		"default":	false,
		"value":	"/assets/bms/bms_1:dc_discharging",
		"vlink":	"/status/bms_1:DCDischarging"
	},
	"ui_dc_power":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:dc_power",
		"vlink":	"/status/bms_1:DCPower"
	},
	"ui_dc_voltage":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:dc_voltage",
		"vlink":	"/status/bms_1:DCVoltage"
	},
	"ui_dischargeable_energy":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:dischargeable_energy",
		"vlink":	"/status/bms_1:DischargeableEnergy"
	},
	"ui_max_cell_temp":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:max_cell_temp",
		"vlink":	"/status/bms_1:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:max_cell_voltage",
		"vlink":	"/status/bms_1:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:max_charge_current",
		"vlink":	"/limits/bms_1:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:max_charge_power",
		"vlink":	"/limits/bms_1:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:max_discharge_current",
		"vlink":	"/limits/bms_1:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:max_discharge_power",
		"vlink":	"/limits/bms_1:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:min_cell_temp",
		"vlink":	"/status/bms_1:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:min_cell_voltage",
		"vlink":	"/status/bms_1:MinCellVoltage"
	},
	"ui_num_racks_online":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:num_racks_online",
		"vlink":	"/status/bms_1:NumRacksOnline"
	},
	"ui_num_racks_total":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:num_racks_total",
		"vlink":	"/status/bms_1:NumRacksTotal"
	},
	"ui_soc":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:soc",
		"vlink":	"/status/bms_1:SOC"
	},
	"ui_soh":	{
		"default":	0,
		"value":	"/assets/bms/bms_1:soh",
		"vlink":	"/status/bms_1:SOH"
	},
	"ui_status":	{
		"default":	"INIT",
		"value":	"/assets/bms/bms_1:status",
		"vlink":	"/status/bms_1:Status"
	}
}].
[4.03746s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:avg_cell_temp]
[4.03786s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:avg_cell_temp]
[4.03943s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:avg_cell_voltage]
[4.03972s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:avg_cell_voltage]
[4.04025s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:cell_temp_delta]
[4.04184s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:cell_temp_delta]
[4.04241s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:cell_voltage_delta]
[4.04273s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:cell_voltage_delta]
[4.04311s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:chargeable_energy]
[4.04335s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:chargeable_energy]
[4.04369s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:comms_ok]
[4.04403s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:comms_ok]
[4.04444s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:dc_charging]
[4.04655s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:dc_charging]
[4.04705s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:dc_contactors_closed]
[4.04735s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:dc_contactors_closed]
[4.04765s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:dc_current]
[4.04787s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:dc_current]
[4.04815s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:dc_discharging]
[4.04847s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:dc_discharging]
[4.04877s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:dc_power]
[4.04901s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:dc_power]
[4.0493s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:dc_voltage]
[4.04957s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:dc_voltage]
[4.04986s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:dischargeable_energy]
[4.05019s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:dischargeable_energy]
[4.05049s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:max_cell_temp]
[4.0507s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:max_cell_temp]
[4.05096s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:max_cell_voltage]
[4.05117s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:max_cell_voltage]
[4.05138s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:max_charge_current]
[4.05166s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:max_charge_current]
[4.05195s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:max_charge_power]
[4.05221s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:max_charge_power]
[4.05249s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:max_discharge_current]
[4.05326s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:max_discharge_current]
[4.05367s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:max_discharge_power]
[4.05397s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:max_discharge_power]
[4.05428s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:min_cell_temp]
[4.05458s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:min_cell_temp]
[4.05487s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:min_cell_voltage]
[4.05525s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:min_cell_voltage]
[4.05554s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:num_racks_online]
[4.05579s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:num_racks_online]
[4.05617s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:num_racks_total]
[4.05656s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:num_racks_total]
[4.05719s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:soc]
[4.05749s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:soc]
[4.05788s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:soh]
[4.05815s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:soh]
[4.05842s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms/bms_1:status]
[4.0587s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms/bms_1:status]
[4.05971s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [bms_1_rack_1]
[4.06009s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [bms_1_rack_1] parent am [bms_1] 
[4.06091s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [bms_1_rack_1]
[4.06138s  ] [info    ] [configure_vmapS] body: {"/config/bms_1_rack_1":{"AlarmDestination":"/assets/bms_1/rack_1:alarms","FaultDestination":"/assets/bms_1/rack_1:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/bms_1_rack_1":{"ChargeCurrentLimit":{"value":"/limits/bms_1_rack_1:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms_1_rack_1:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms_1_rack_1:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms_1_rack_1:DischargePowerLimit"}},"/sched/bms_1_rack_1":{"pubAssets_bms_1_rack_1":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_1","func":"RunPub"}]}]},"enable":"/config/bms_1_rack_1:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms_1/rack_1)","table":"/assets/bms_1/rack_1","value":1},"runMonitor_bms_1_rack_1":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_1","func":"RunMonitor"}]}]},"aname":"bms_1_rack_1","enable":"/config/bms_1_rack_1:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms_1_rack_1","value":1}},"/schedule/wake_monitor/bms_1_rack_1":{"/status/bms_1_rack_1:CellTempDelta_Calculated":{"amap":"bms_1_rack_1","func":"CalculateVar"},"/status/bms_1_rack_1:CellVoltageDelta_Calculated":{"amap":"bms_1_rack_1","func":"CalculateVar"}},"/status/bms_1_rack_1":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms_1_rack_1:CellTempDelta"}]}]},"enable":"/config/bms_1_rack_1:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms_1_rack_1:MinCellTemp","variable2":"/status/bms_1_rack_1:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms_1_rack_1:CellVoltageDelta"}]}]},"enable":"/config/bms_1_rack_1:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms_1_rack_1:MinCellVoltage","variable2":"/status/bms_1_rack_1:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[]}]},"enable":"/config/bms_1_rack_1:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_1","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms_1_rack_1) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms_1_rack_1","every":1,"uri":"/sched/bms_1_rack_1:pubAssets_bms_1_rack_1","value":1},{"aname":"bms_1_rack_1","every":0.1,"uri":"/sched/bms_1_rack_1:runMonitor_bms_1_rack_1","value":1},{"aname":"bms_1_rack_1","every":1,"uri":"/sched/bms_1_rack_1:checkInputs_bms_1_rack_1","value":1}],"targav":"/system/commands:run","value":false}},"/controls/bms_1_rack_1":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_1","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0}},"/schedule/wake_monitor/bms_1_rack_1":{"/controls/bms_1_rack_1:ClearFaults":{"amap":"bms_1_rack_1","func":"HandleCmd"}},"/status/bms_1_rack_1":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/bms_1_rack_1:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms_1_rack_1:clear_alarms"}]}]},"enable":"/config/bms_1_rack_1:enable","ifChanged":false,"note":"When this variable is set, /faults/bms_1_rack_1:clear_faults and /alarms/bms_1_rack_1:clear_alarms will be set to Clear","value":false}},"/alarms/bms_1_rack_1":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_1","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms_1_rack_1) will be reset to the normal state (defined in /config/bms_1_rack_1:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/bms_1_rack_1":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_1","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms_1_rack_1) will be reset to the normal state (defined in /config/bms_1_rack_1:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/bms_1_rack_1":{"/status/bms_1_rack_1:AnyFireFaultActive":{"amap":"bms_1_rack_1","func":"CalculateVar"},"/status/bms_1_rack_1:TotalAlarmCnt":{"amap":"bms_1_rack_1","func":"CalculateVar"},"/status/bms_1_rack_1:TotalFaultCnt":{"amap":"bms_1_rack_1","func":"CalculateVar"}},"/status/bms_1_rack_1":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/bms_1_rack_1:enable","expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms_1_rack_1:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms_1:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"enable":"/config/bms_1_rack_1:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms_1_rack_1:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/bms_1_rack_1:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms_1_rack_1:FaultCnt"}},"/components/bms_1":{"rack_1_fire_fault_active":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":false,"uri":"/status/bms_1_rack_1:FireFaultActive"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":true,"uri":"/status/bms_1_rack_1:FireFaultActive"},{"enable":"/config/bms_1_rack_1:enum_opt","outValue":true,"uri":"/components/bms_1:rack_1_fire_fault_active@ifChanged","useAv":true}]}]},"enable":"/config/bms_1_rack_1:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0},"rack_1_status":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"TODO: add output value to set to uri","uri":"/status/bms_1_rack_1:Status"},{"enable":"/config/bms_1_rack_1:enum_opt","outValue":true,"uri":"/components/bms_1:rack_1_status@ifChanged","useAv":true}]}]},"enable":"/config/bms_1_rack_1:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms_1_rack_1":{"checkInputs_bms_1_rack_1":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms_1:rack_1_status@ifChanged"},{"outValue":false,"uri":"/components/bms_1:rack_1_fire_fault_active@ifChanged"}]}]},"enable":"/config/bms_1_rack_1:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms_1_rack_1":{"avg_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_1_avg_cell_temp","vlink":"/status/bms_1_rack_1:AvgCellTemp"},"avg_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_1_avg_cell_voltage","vlink":"/status/bms_1_rack_1:AvgCellVoltage"},"dc_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_1_dc_current","vlink":"/status/bms_1_rack_1:DCCurrent"},"dc_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_1_dc_power","vlink":"/status/bms_1_rack_1:DCPower"},"dc_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_1_dc_voltage","vlink":"/status/bms_1_rack_1:DCVoltage"},"max_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_1_max_cell_temp","vlink":"/status/bms_1_rack_1:MaxCellTemp"},"max_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_1_max_cell_voltage","vlink":"/status/bms_1_rack_1:MaxCellVoltage"},"max_charge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_1_max_charge_current","vlink":"/limits/bms_1_rack_1:ChargeCurrentLimit"},"max_charge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_1_max_charge_power","vlink":"/limits/bms_1_rack_1:ChargePowerLimit"},"max_discharge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_1_max_discharge_current","vlink":"/limits/bms_1_rack_1:DischargeCurrentLimit"},"max_discharge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_1_max_discharge_power","vlink":"/limits/bms_1_rack_1:DischargePowerLimit"},"min_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_1_min_cell_temp","vlink":"/status/bms_1_rack_1:MinCellTemp"},"min_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_1_min_cell_voltage","vlink":"/status/bms_1_rack_1:MinCellVoltage"},"soc":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_1_soc","vlink":"/status/bms_1_rack_1:SOC"},"soh":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_1_soh","vlink":"/status/bms_1_rack_1:SOH"}},"/assets/bms_1/rack_1":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms_1_rack_1:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms_1_rack_1:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_1","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms_1/rack_1:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/bms_1_rack_1":{"ui_avg_cell_temp":{"default":0,"value":"/assets/bms_1/rack_1:avg_cell_temp","vlink":"/status/bms_1_rack_1:AvgCellTemp"},"ui_avg_cell_voltage":{"default":0,"value":"/assets/bms_1/rack_1:avg_cell_voltage","vlink":"/status/bms_1_rack_1:AvgCellVoltage"},"ui_cell_temp_delta":{"default":0,"value":"/assets/bms_1/rack_1:cell_temp_delta","vlink":"/status/bms_1_rack_1:CellTempDelta"},"ui_cell_voltage_delta":{"default":0,"value":"/assets/bms_1/rack_1:cell_voltage_delta","vlink":"/status/bms_1_rack_1:CellVoltageDelta"},"ui_dc_contactors_closed":{"default":false,"value":"/assets/bms_1/rack_1:dc_contactors_closed","vlink":"/status/bms_1_rack_1:DCClosed"},"ui_dc_current":{"default":0,"value":"/assets/bms_1/rack_1:dc_current","vlink":"/status/bms_1_rack_1:DCCurrent"},"ui_dc_power":{"default":0,"value":"/assets/bms_1/rack_1:dc_power","vlink":"/status/bms_1_rack_1:DCPower"},"ui_dc_voltage":{"default":0,"value":"/assets/bms_1/rack_1:dc_voltage","vlink":"/status/bms_1_rack_1:DCVoltage"},"ui_max_cell_temp":{"default":0,"value":"/assets/bms_1/rack_1:max_cell_temp","vlink":"/status/bms_1_rack_1:MaxCellTemp"},"ui_max_cell_voltage":{"default":0,"value":"/assets/bms_1/rack_1:max_cell_voltage","vlink":"/status/bms_1_rack_1:MaxCellVoltage"},"ui_max_charge_current":{"default":0,"value":"/assets/bms_1/rack_1:max_charge_current","vlink":"/limits/bms_1_rack_1:ChargeCurrentLimit"},"ui_max_charge_power":{"default":0,"value":"/assets/bms_1/rack_1:max_charge_power","vlink":"/limits/bms_1_rack_1:ChargePowerLimit"},"ui_max_discharge_current":{"default":0,"value":"/assets/bms_1/rack_1:max_discharge_current","vlink":"/limits/bms_1_rack_1:DischargeCurrentLimit"},"ui_max_discharge_power":{"default":0,"value":"/assets/bms_1/rack_1:max_discharge_power","vlink":"/limits/bms_1_rack_1:DischargePowerLimit"},"ui_min_cell_temp":{"default":0,"value":"/assets/bms_1/rack_1:min_cell_temp","vlink":"/status/bms_1_rack_1:MinCellTemp"},"ui_min_cell_voltage":{"default":0,"value":"/assets/bms_1/rack_1:min_cell_voltage","vlink":"/status/bms_1_rack_1:MinCellVoltage"},"ui_soc":{"default":0,"value":"/assets/bms_1/rack_1:soc","vlink":"/status/bms_1_rack_1:SOC"},"ui_soh":{"default":0,"value":"/assets/bms_1/rack_1:soh","vlink":"/status/bms_1_rack_1:SOH"},"ui_status":{"default":"INIT","value":"/assets/bms_1/rack_1:status","vlink":"/status/bms_1_rack_1:Status"}}}
[4.06244s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[4.06268s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms_1/rack_1:alarms",
	"FaultDestination":	"/assets/bms_1/rack_1:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[4.06298s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:alarms]
[4.0632s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:alarms]
[4.06348s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:faults]
[4.06381s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:faults]
[4.06407s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.06434s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.06466s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.06503s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.06539s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/bms_1_rack_1:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/bms_1_rack_1:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/bms_1_rack_1:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/bms_1_rack_1:DischargePowerLimit"
	}
}].
[4.06569s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms_1_rack_1:ChargeCurrentLimit]
[4.06621s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms_1_rack_1:ChargeCurrentLimit]
[4.06658s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms_1_rack_1:ChargePowerLimit]
[4.06695s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms_1_rack_1:ChargePowerLimit]
[4.06738s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms_1_rack_1:DischargeCurrentLimit]
[4.06786s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms_1_rack_1:DischargeCurrentLimit]
[4.0681s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms_1_rack_1:DischargePowerLimit]
[4.0683s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms_1_rack_1:DischargePowerLimit]
[4.06878s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_bms_1_rack_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_1",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_1:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms_1/rack_1)",
		"table":	"/assets/bms_1/rack_1",
		"value":	1
	},
	"runMonitor_bms_1_rack_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_1",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"bms_1_rack_1",
		"enable":	"/config/bms_1_rack_1:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/bms_1_rack_1",
		"value":	1
	}
}].
[4.06922s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/bms_1_rack_1:CellTempDelta_Calculated":	{
		"amap":	"bms_1_rack_1",
		"func":	"CalculateVar"
	},
	"/status/bms_1_rack_1:CellVoltageDelta_Calculated":	{
		"amap":	"bms_1_rack_1",
		"func":	"CalculateVar"
	}
}].
[4.06965s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms_1_rack_1:CellTempDelta"
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_1:enable",
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1_rack_1:MinCellTemp",
		"variable2":	"/status/bms_1_rack_1:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms_1_rack_1:CellVoltageDelta"
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_1:enable",
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1_rack_1:MinCellVoltage",
		"variable2":	"/status/bms_1_rack_1:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enable":	"/config/bms_1_rack_1:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[4.07038s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.07135s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.07186s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_1",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/bms_1_rack_1) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"bms_1_rack_1",
				"every":	1,
				"uri":	"/sched/bms_1_rack_1:pubAssets_bms_1_rack_1",
				"value":	1
			}, {
				"aname":	"bms_1_rack_1",
				"every":	0.1,
				"uri":	"/sched/bms_1_rack_1:runMonitor_bms_1_rack_1",
				"value":	1
			}, {
				"aname":	"bms_1_rack_1",
				"every":	1,
				"uri":	"/sched/bms_1_rack_1:checkInputs_bms_1_rack_1",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[4.07264s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"useExpr":	false,
		"value":	0
	}
}].
[4.07322s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1_rack_1:HandleCmd_ClearFaults]
[4.07413s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1_rack_1:HandleCmd_ClearFaults]
[4.07512s  ] [info    ] [HandleCmd      ] reload first run [bms_1_rack_1] [/controls/bms_1_rack_1:ClearFaults]  reload 0
[4.07637s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/bms_1_rack_1:ClearFaults]
[4.07688s  ] [info    ] [HandleCmd      ] Adding [/controls/bms_1_rack_1:ClearFaults] to amap in asset [bms_1_rack_1]
[4.07768s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/bms_1_rack_1:ClearFaults]
[4.07802s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/bms_1_rack_1:ClearFaults]
[4.07871s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/bms_1_rack_1:ClearFaults":	{
		"amap":	"bms_1_rack_1",
		"func":	"HandleCmd"
	}
}].
[4.07942s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/bms_1_rack_1:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/bms_1_rack_1:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_1:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/bms_1_rack_1:clear_faults and /alarms/bms_1_rack_1:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[4.081s    ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_1",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/bms_1_rack_1) will be reset to the normal state (defined in /config/bms_1_rack_1:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[4.08153s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.08185s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.08241s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.08271s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.0835s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms_1_rack_1:FaultDestination]
[4.08387s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms_1_rack_1:FaultDestination]
[4.0842s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms_1_rack_1:NoFaultMsg]
[4.08473s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms_1_rack_1:NoFaultMsg]
[4.08511s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_1:FaultCnt]
[4.08545s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_1:FaultCnt]
[4.08583s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms_1_rack_1:AlarmDestination]
[4.0861s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms_1_rack_1:AlarmDestination]
[4.0863s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms_1_rack_1:NoAlarmMsg]
[4.08669s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms_1_rack_1:NoAlarmMsg]
[4.08692s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_1:AlarmCnt]
[4.08728s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_1:AlarmCnt]
[4.08772s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_1",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/bms_1_rack_1) will be reset to the normal state (defined in /config/bms_1_rack_1:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[4.0882s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.08853s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.08883s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.08906s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.08941s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/bms_1_rack_1:AnyFireFaultActive":	{
		"amap":	"bms_1_rack_1",
		"func":	"CalculateVar"
	},
	"/status/bms_1_rack_1:TotalAlarmCnt":	{
		"amap":	"bms_1_rack_1",
		"func":	"CalculateVar"
	},
	"/status/bms_1_rack_1:TotalFaultCnt":	{
		"amap":	"bms_1_rack_1",
		"func":	"CalculateVar"
	}
}].
[4.09106s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"enable":	"/config/bms_1_rack_1:enable",
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms_1_rack_1:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms_1:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"enable":	"/config/bms_1_rack_1:enable",
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1_rack_1:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"enable":	"/config/bms_1_rack_1:enable",
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1_rack_1:FaultCnt"
	}
}].
[4.0916s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"rack_1_fire_fault_active":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	false,
							"uri":	"/status/bms_1_rack_1:FireFaultActive"
						}, {
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	true,
							"uri":	"/status/bms_1_rack_1:FireFaultActive"
						}, {
							"enable":	"/config/bms_1_rack_1:enum_opt",
							"outValue":	true,
							"uri":	"/components/bms_1:rack_1_fire_fault_active@ifChanged",
							"useAv":	true
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_1:enable",
		"ifChanged":	false,
		"note1":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	},
	"rack_1_status":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	"TODO: add output value to set to uri",
							"uri":	"/status/bms_1_rack_1:Status"
						}, {
							"enable":	"/config/bms_1_rack_1:enum_opt",
							"outValue":	true,
							"uri":	"/components/bms_1:rack_1_status@ifChanged",
							"useAv":	true
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_1:enable",
		"ifChanged":	false,
		"note1":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[4.09244s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"checkInputs_bms_1_rack_1":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	false,
							"uri":	"/components/bms_1:rack_1_status@ifChanged"
						}, {
							"outValue":	false,
							"uri":	"/components/bms_1:rack_1_fire_fault_active@ifChanged"
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_1:enable",
		"note":	"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change",
		"value":	0
	}
}].
[4.09291s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_1_avg_cell_temp",
		"vlink":	"/status/bms_1_rack_1:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_1_avg_cell_voltage",
		"vlink":	"/status/bms_1_rack_1:AvgCellVoltage"
	},
	"dc_current":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_1_dc_current",
		"vlink":	"/status/bms_1_rack_1:DCCurrent"
	},
	"dc_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_1_dc_power",
		"vlink":	"/status/bms_1_rack_1:DCPower"
	},
	"dc_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_1_dc_voltage",
		"vlink":	"/status/bms_1_rack_1:DCVoltage"
	},
	"max_cell_temp":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_1_max_cell_temp",
		"vlink":	"/status/bms_1_rack_1:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_1_max_cell_voltage",
		"vlink":	"/status/bms_1_rack_1:MaxCellVoltage"
	},
	"max_charge_current":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_1_max_charge_current",
		"vlink":	"/limits/bms_1_rack_1:ChargeCurrentLimit"
	},
	"max_charge_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_1_max_charge_power",
		"vlink":	"/limits/bms_1_rack_1:ChargePowerLimit"
	},
	"max_discharge_current":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_1_max_discharge_current",
		"vlink":	"/limits/bms_1_rack_1:DischargeCurrentLimit"
	},
	"max_discharge_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_1_max_discharge_power",
		"vlink":	"/limits/bms_1_rack_1:DischargePowerLimit"
	},
	"min_cell_temp":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_1_min_cell_temp",
		"vlink":	"/status/bms_1_rack_1:MinCellTemp"
	},
	"min_cell_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_1_min_cell_voltage",
		"vlink":	"/status/bms_1_rack_1:MinCellVoltage"
	},
	"soc":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_1_soc",
		"vlink":	"/status/bms_1_rack_1:SOC"
	},
	"soh":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_1_soh",
		"vlink":	"/status/bms_1_rack_1:SOH"
	}
}].
[4.09323s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_1_avg_cell_temp]
[4.09349s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_1_avg_cell_temp]
[4.09377s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_1_avg_cell_voltage]
[4.09397s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_1_avg_cell_voltage]
[4.09418s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_1_dc_current]
[4.09436s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_1_dc_current]
[4.09457s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_1_dc_power]
[4.09475s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_1_dc_power]
[4.09497s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_1_dc_voltage]
[4.09515s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_1_dc_voltage]
[4.09535s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_1_max_cell_temp]
[4.09553s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_1_max_cell_temp]
[4.09575s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_1_max_cell_voltage]
[4.09592s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_1_max_cell_voltage]
[4.09613s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_1_max_charge_current]
[4.09628s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_1_max_charge_current]
[4.09647s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_1_max_charge_power]
[4.09662s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_1_max_charge_power]
[4.09684s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_1_max_discharge_current]
[4.09724s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_1_max_discharge_current]
[4.09744s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_1_max_discharge_power]
[4.09762s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_1_max_discharge_power]
[4.09799s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_1_min_cell_temp]
[4.09838s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_1_min_cell_temp]
[4.09871s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_1_min_cell_voltage]
[4.09892s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_1_min_cell_voltage]
[4.09934s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_1_soc]
[4.09956s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_1_soc]
[4.09984s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_1_soh]
[4.10008s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_1_soh]
[4.1005s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/bms_1_rack_1:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/bms_1_rack_1:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms_1/rack_1:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[4.10119s  ] [info    ] [LogInfo        ] [/assets/bms_1/rack_1:maint_mode] received a value of [false]
[4.10161s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.10182s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.10219s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_1:avg_cell_temp",
		"vlink":	"/status/bms_1_rack_1:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_1:avg_cell_voltage",
		"vlink":	"/status/bms_1_rack_1:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_1:cell_temp_delta",
		"vlink":	"/status/bms_1_rack_1:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_1:cell_voltage_delta",
		"vlink":	"/status/bms_1_rack_1:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"default":	false,
		"value":	"/assets/bms_1/rack_1:dc_contactors_closed",
		"vlink":	"/status/bms_1_rack_1:DCClosed"
	},
	"ui_dc_current":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_1:dc_current",
		"vlink":	"/status/bms_1_rack_1:DCCurrent"
	},
	"ui_dc_power":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_1:dc_power",
		"vlink":	"/status/bms_1_rack_1:DCPower"
	},
	"ui_dc_voltage":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_1:dc_voltage",
		"vlink":	"/status/bms_1_rack_1:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_1:max_cell_temp",
		"vlink":	"/status/bms_1_rack_1:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_1:max_cell_voltage",
		"vlink":	"/status/bms_1_rack_1:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_1:max_charge_current",
		"vlink":	"/limits/bms_1_rack_1:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_1:max_charge_power",
		"vlink":	"/limits/bms_1_rack_1:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_1:max_discharge_current",
		"vlink":	"/limits/bms_1_rack_1:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_1:max_discharge_power",
		"vlink":	"/limits/bms_1_rack_1:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_1:min_cell_temp",
		"vlink":	"/status/bms_1_rack_1:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_1:min_cell_voltage",
		"vlink":	"/status/bms_1_rack_1:MinCellVoltage"
	},
	"ui_soc":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_1:soc",
		"vlink":	"/status/bms_1_rack_1:SOC"
	},
	"ui_soh":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_1:soh",
		"vlink":	"/status/bms_1_rack_1:SOH"
	},
	"ui_status":	{
		"default":	"INIT",
		"value":	"/assets/bms_1/rack_1:status",
		"vlink":	"/status/bms_1_rack_1:Status"
	}
}].
[4.10248s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:avg_cell_temp]
[4.10268s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:avg_cell_temp]
[4.10288s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:avg_cell_voltage]
[4.10307s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:avg_cell_voltage]
[4.10332s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:cell_temp_delta]
[4.10351s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:cell_temp_delta]
[4.1037s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:cell_voltage_delta]
[4.10384s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:cell_voltage_delta]
[4.104s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:dc_contactors_closed]
[4.10446s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:dc_contactors_closed]
[4.10467s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:dc_current]
[4.10483s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:dc_current]
[4.1051s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:dc_power]
[4.10542s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:dc_power]
[4.1057s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:dc_voltage]
[4.10587s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:dc_voltage]
[4.10606s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:max_cell_temp]
[4.10622s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:max_cell_temp]
[4.10643s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:max_cell_voltage]
[4.10667s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:max_cell_voltage]
[4.10691s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:max_charge_current]
[4.10709s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:max_charge_current]
[4.10737s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:max_charge_power]
[4.10759s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:max_charge_power]
[4.1078s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:max_discharge_current]
[4.10797s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:max_discharge_current]
[4.1082s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:max_discharge_power]
[4.10838s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:max_discharge_power]
[4.10865s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:min_cell_temp]
[4.10892s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:min_cell_temp]
[4.10919s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:min_cell_voltage]
[4.10945s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:min_cell_voltage]
[4.10976s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:soc]
[4.11009s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:soc]
[4.11042s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:soh]
[4.11071s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:soh]
[4.11102s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_1:status]
[4.11132s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_1:status]
[4.11281s  ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [bms_1_rack_2]
[4.1135s   ] [info    ] [setVecAmAi     ]  ainame Setting ai  [bms_1_rack_2] parent am [bms_1] 
[4.11622s  ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [bms_1_rack_2]
[4.11692s  ] [info    ] [configure_vmapS] body: {"/config/bms_1_rack_2":{"AlarmDestination":"/assets/bms_1/rack_2:alarms","FaultDestination":"/assets/bms_1/rack_2:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/bms_1_rack_2":{"ChargeCurrentLimit":{"value":"/limits/bms_1_rack_2:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms_1_rack_2:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms_1_rack_2:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms_1_rack_2:DischargePowerLimit"}},"/sched/bms_1_rack_2":{"pubAssets_bms_1_rack_2":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_2","func":"RunPub"}]}]},"enable":"/config/bms_1_rack_2:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms_1/rack_2)","table":"/assets/bms_1/rack_2","value":1},"runMonitor_bms_1_rack_2":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_2","func":"RunMonitor"}]}]},"aname":"bms_1_rack_2","enable":"/config/bms_1_rack_2:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms_1_rack_2","value":1}},"/schedule/wake_monitor/bms_1_rack_2":{"/status/bms_1_rack_2:CellTempDelta_Calculated":{"amap":"bms_1_rack_2","func":"CalculateVar"},"/status/bms_1_rack_2:CellVoltageDelta_Calculated":{"amap":"bms_1_rack_2","func":"CalculateVar"}},"/status/bms_1_rack_2":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms_1_rack_2:CellTempDelta"}]}]},"enable":"/config/bms_1_rack_2:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms_1_rack_2:MinCellTemp","variable2":"/status/bms_1_rack_2:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms_1_rack_2:CellVoltageDelta"}]}]},"enable":"/config/bms_1_rack_2:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms_1_rack_2:MinCellVoltage","variable2":"/status/bms_1_rack_2:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[]}]},"enable":"/config/bms_1_rack_2:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_2","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms_1_rack_2) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms_1_rack_2","every":1,"uri":"/sched/bms_1_rack_2:pubAssets_bms_1_rack_2","value":1},{"aname":"bms_1_rack_2","every":0.1,"uri":"/sched/bms_1_rack_2:runMonitor_bms_1_rack_2","value":1},{"aname":"bms_1_rack_2","every":1,"uri":"/sched/bms_1_rack_2:checkInputs_bms_1_rack_2","value":1}],"targav":"/system/commands:run","value":false}},"/controls/bms_1_rack_2":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_2","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0}},"/schedule/wake_monitor/bms_1_rack_2":{"/controls/bms_1_rack_2:ClearFaults":{"amap":"bms_1_rack_2","func":"HandleCmd"}},"/status/bms_1_rack_2":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/bms_1_rack_2:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms_1_rack_2:clear_alarms"}]}]},"enable":"/config/bms_1_rack_2:enable","ifChanged":false,"note":"When this variable is set, /faults/bms_1_rack_2:clear_faults and /alarms/bms_1_rack_2:clear_alarms will be set to Clear","value":false}},"/alarms/bms_1_rack_2":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_2","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms_1_rack_2) will be reset to the normal state (defined in /config/bms_1_rack_2:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/bms_1_rack_2":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_2","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms_1_rack_2) will be reset to the normal state (defined in /config/bms_1_rack_2:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/bms_1_rack_2":{"/status/bms_1_rack_2:AnyFireFaultActive":{"amap":"bms_1_rack_2","func":"CalculateVar"},"/status/bms_1_rack_2:TotalAlarmCnt":{"amap":"bms_1_rack_2","func":"CalculateVar"},"/status/bms_1_rack_2:TotalFaultCnt":{"amap":"bms_1_rack_2","func":"CalculateVar"}},"/status/bms_1_rack_2":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/bms_1_rack_2:enable","expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms_1_rack_2:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_2","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms_1:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"enable":"/config/bms_1_rack_2:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms_1_rack_2:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/bms_1_rack_2:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms_1_rack_2:FaultCnt"}},"/components/bms_1":{"rack_2_fire_fault_active":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":false,"uri":"/status/bms_1_rack_2:FireFaultActive"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":true,"uri":"/status/bms_1_rack_2:FireFaultActive"},{"enable":"/config/bms_1_rack_2:enum_opt","outValue":true,"uri":"/components/bms_1:rack_2_fire_fault_active@ifChanged","useAv":true}]}]},"enable":"/config/bms_1_rack_2:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0},"rack_2_status":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"TODO: add output value to set to uri","uri":"/status/bms_1_rack_2:Status"},{"enable":"/config/bms_1_rack_2:enum_opt","outValue":true,"uri":"/components/bms_1:rack_2_status@ifChanged","useAv":true}]}]},"enable":"/config/bms_1_rack_2:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms_1_rack_2":{"checkInputs_bms_1_rack_2":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms_1:rack_2_status@ifChanged"},{"outValue":false,"uri":"/components/bms_1:rack_2_fire_fault_active@ifChanged"}]}]},"enable":"/config/bms_1_rack_2:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms_1_rack_2":{"avg_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_2_avg_cell_temp","vlink":"/status/bms_1_rack_2:AvgCellTemp"},"avg_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_2_avg_cell_voltage","vlink":"/status/bms_1_rack_2:AvgCellVoltage"},"dc_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_2_dc_current","vlink":"/status/bms_1_rack_2:DCCurrent"},"dc_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_2_dc_power","vlink":"/status/bms_1_rack_2:DCPower"},"dc_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_2_dc_voltage","vlink":"/status/bms_1_rack_2:DCVoltage"},"max_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_2_max_cell_temp","vlink":"/status/bms_1_rack_2:MaxCellTemp"},"max_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_2_max_cell_voltage","vlink":"/status/bms_1_rack_2:MaxCellVoltage"},"max_charge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_2_max_charge_current","vlink":"/limits/bms_1_rack_2:ChargeCurrentLimit"},"max_charge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_2_max_charge_power","vlink":"/limits/bms_1_rack_2:ChargePowerLimit"},"max_discharge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_2_max_discharge_current","vlink":"/limits/bms_1_rack_2:DischargeCurrentLimit"},"max_discharge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_2_max_discharge_power","vlink":"/limits/bms_1_rack_2:DischargePowerLimit"},"min_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_2_min_cell_temp","vlink":"/status/bms_1_rack_2:MinCellTemp"},"min_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_2_min_cell_voltage","vlink":"/status/bms_1_rack_2:MinCellVoltage"},"soc":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_2_soc","vlink":"/status/bms_1_rack_2:SOC"},"soh":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_2_soh","vlink":"/status/bms_1_rack_2:SOH"}},"/assets/bms_1/rack_2":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_2","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms_1_rack_2:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms_1_rack_2:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_2","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms_1/rack_2:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/bms_1_rack_2":{"ui_avg_cell_temp":{"default":0,"value":"/assets/bms_1/rack_2:avg_cell_temp","vlink":"/status/bms_1_rack_2:AvgCellTemp"},"ui_avg_cell_voltage":{"default":0,"value":"/assets/bms_1/rack_2:avg_cell_voltage","vlink":"/status/bms_1_rack_2:AvgCellVoltage"},"ui_cell_temp_delta":{"default":0,"value":"/assets/bms_1/rack_2:cell_temp_delta","vlink":"/status/bms_1_rack_2:CellTempDelta"},"ui_cell_voltage_delta":{"default":0,"value":"/assets/bms_1/rack_2:cell_voltage_delta","vlink":"/status/bms_1_rack_2:CellVoltageDelta"},"ui_dc_contactors_closed":{"default":false,"value":"/assets/bms_1/rack_2:dc_contactors_closed","vlink":"/status/bms_1_rack_2:DCClosed"},"ui_dc_current":{"default":0,"value":"/assets/bms_1/rack_2:dc_current","vlink":"/status/bms_1_rack_2:DCCurrent"},"ui_dc_power":{"default":0,"value":"/assets/bms_1/rack_2:dc_power","vlink":"/status/bms_1_rack_2:DCPower"},"ui_dc_voltage":{"default":0,"value":"/assets/bms_1/rack_2:dc_voltage","vlink":"/status/bms_1_rack_2:DCVoltage"},"ui_max_cell_temp":{"default":0,"value":"/assets/bms_1/rack_2:max_cell_temp","vlink":"/status/bms_1_rack_2:MaxCellTemp"},"ui_max_cell_voltage":{"default":0,"value":"/assets/bms_1/rack_2:max_cell_voltage","vlink":"/status/bms_1_rack_2:MaxCellVoltage"},"ui_max_charge_current":{"default":0,"value":"/assets/bms_1/rack_2:max_charge_current","vlink":"/limits/bms_1_rack_2:ChargeCurrentLimit"},"ui_max_charge_power":{"default":0,"value":"/assets/bms_1/rack_2:max_charge_power","vlink":"/limits/bms_1_rack_2:ChargePowerLimit"},"ui_max_discharge_current":{"default":0,"value":"/assets/bms_1/rack_2:max_discharge_current","vlink":"/limits/bms_1_rack_2:DischargeCurrentLimit"},"ui_max_discharge_power":{"default":0,"value":"/assets/bms_1/rack_2:max_discharge_power","vlink":"/limits/bms_1_rack_2:DischargePowerLimit"},"ui_min_cell_temp":{"default":0,"value":"/assets/bms_1/rack_2:min_cell_temp","vlink":"/status/bms_1_rack_2:MinCellTemp"},"ui_min_cell_voltage":{"default":0,"value":"/assets/bms_1/rack_2:min_cell_voltage","vlink":"/status/bms_1_rack_2:MinCellVoltage"},"ui_soc":{"default":0,"value":"/assets/bms_1/rack_2:soc","vlink":"/status/bms_1_rack_2:SOC"},"ui_soh":{"default":0,"value":"/assets/bms_1/rack_2:soh","vlink":"/status/bms_1_rack_2:SOH"},"ui_status":{"default":"INIT","value":"/assets/bms_1/rack_2:status","vlink":"/status/bms_1_rack_2:Status"}}}
[4.11823s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[4.11964s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms_1/rack_2:alarms",
	"FaultDestination":	"/assets/bms_1/rack_2:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[4.12044s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:alarms]
[4.12141s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:alarms]
[4.12198s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:faults]
[4.12232s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:faults]
[4.12266s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.12299s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.12333s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.12415s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.12459s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/bms_1_rack_2:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/bms_1_rack_2:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/bms_1_rack_2:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/bms_1_rack_2:DischargePowerLimit"
	}
}].
[4.12496s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms_1_rack_2:ChargeCurrentLimit]
[4.12532s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms_1_rack_2:ChargeCurrentLimit]
[4.12566s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms_1_rack_2:ChargePowerLimit]
[4.12599s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms_1_rack_2:ChargePowerLimit]
[4.12631s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms_1_rack_2:DischargeCurrentLimit]
[4.12688s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms_1_rack_2:DischargeCurrentLimit]
[4.12745s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms_1_rack_2:DischargePowerLimit]
[4.12806s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms_1_rack_2:DischargePowerLimit]
[4.12856s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_bms_1_rack_2":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_2",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_2:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms_1/rack_2)",
		"table":	"/assets/bms_1/rack_2",
		"value":	1
	},
	"runMonitor_bms_1_rack_2":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_2",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"bms_1_rack_2",
		"enable":	"/config/bms_1_rack_2:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/bms_1_rack_2",
		"value":	1
	}
}].
[4.12926s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/bms_1_rack_2:CellTempDelta_Calculated":	{
		"amap":	"bms_1_rack_2",
		"func":	"CalculateVar"
	},
	"/status/bms_1_rack_2:CellVoltageDelta_Calculated":	{
		"amap":	"bms_1_rack_2",
		"func":	"CalculateVar"
	}
}].
[4.12978s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms_1_rack_2:CellTempDelta"
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_2:enable",
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1_rack_2:MinCellTemp",
		"variable2":	"/status/bms_1_rack_2:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms_1_rack_2:CellVoltageDelta"
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_2:enable",
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1_rack_2:MinCellVoltage",
		"variable2":	"/status/bms_1_rack_2:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enable":	"/config/bms_1_rack_2:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[4.13077s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.13111s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.13156s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_2",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/bms_1_rack_2) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"bms_1_rack_2",
				"every":	1,
				"uri":	"/sched/bms_1_rack_2:pubAssets_bms_1_rack_2",
				"value":	1
			}, {
				"aname":	"bms_1_rack_2",
				"every":	0.1,
				"uri":	"/sched/bms_1_rack_2:runMonitor_bms_1_rack_2",
				"value":	1
			}, {
				"aname":	"bms_1_rack_2",
				"every":	1,
				"uri":	"/sched/bms_1_rack_2:checkInputs_bms_1_rack_2",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[4.13204s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_2",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"useExpr":	false,
		"value":	0
	}
}].
[4.13253s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1_rack_2:HandleCmd_ClearFaults]
[4.13278s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1_rack_2:HandleCmd_ClearFaults]
[4.13315s  ] [info    ] [HandleCmd      ] reload first run [bms_1_rack_2] [/controls/bms_1_rack_2:ClearFaults]  reload 0
[4.13347s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/bms_1_rack_2:ClearFaults]
[4.13378s  ] [info    ] [HandleCmd      ] Adding [/controls/bms_1_rack_2:ClearFaults] to amap in asset [bms_1_rack_2]
[4.1344s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/bms_1_rack_2:ClearFaults]
[4.13461s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/bms_1_rack_2:ClearFaults]
[4.13493s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/bms_1_rack_2:ClearFaults":	{
		"amap":	"bms_1_rack_2",
		"func":	"HandleCmd"
	}
}].
[4.13522s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/bms_1_rack_2:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/bms_1_rack_2:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_2:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/bms_1_rack_2:clear_faults and /alarms/bms_1_rack_2:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[4.13557s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_2",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/bms_1_rack_2) will be reset to the normal state (defined in /config/bms_1_rack_2:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[4.13587s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.13624s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.13654s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.13678s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.1371s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms_1_rack_2:FaultDestination]
[4.13737s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms_1_rack_2:FaultDestination]
[4.13758s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms_1_rack_2:NoFaultMsg]
[4.13785s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms_1_rack_2:NoFaultMsg]
[4.13811s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_2:FaultCnt]
[4.13833s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_2:FaultCnt]
[4.1386s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms_1_rack_2:AlarmDestination]
[4.13888s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms_1_rack_2:AlarmDestination]
[4.13913s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms_1_rack_2:NoAlarmMsg]
[4.13936s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms_1_rack_2:NoAlarmMsg]
[4.13964s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_2:AlarmCnt]
[4.13987s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_2:AlarmCnt]
[4.14022s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_2",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/bms_1_rack_2) will be reset to the normal state (defined in /config/bms_1_rack_2:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[4.14053s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.1408s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.1411s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.14161s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.14192s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/bms_1_rack_2:AnyFireFaultActive":	{
		"amap":	"bms_1_rack_2",
		"func":	"CalculateVar"
	},
	"/status/bms_1_rack_2:TotalAlarmCnt":	{
		"amap":	"bms_1_rack_2",
		"func":	"CalculateVar"
	},
	"/status/bms_1_rack_2:TotalFaultCnt":	{
		"amap":	"bms_1_rack_2",
		"func":	"CalculateVar"
	}
}].
[4.14237s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"enable":	"/config/bms_1_rack_2:enable",
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms_1_rack_2:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_2",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms_1:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"enable":	"/config/bms_1_rack_2:enable",
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1_rack_2:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"enable":	"/config/bms_1_rack_2:enable",
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1_rack_2:FaultCnt"
	}
}].
[4.14301s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"rack_2_fire_fault_active":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	false,
							"uri":	"/status/bms_1_rack_2:FireFaultActive"
						}, {
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	true,
							"uri":	"/status/bms_1_rack_2:FireFaultActive"
						}, {
							"enable":	"/config/bms_1_rack_2:enum_opt",
							"outValue":	true,
							"uri":	"/components/bms_1:rack_2_fire_fault_active@ifChanged",
							"useAv":	true
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_2:enable",
		"ifChanged":	false,
		"note1":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	},
	"rack_2_status":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	"TODO: add output value to set to uri",
							"uri":	"/status/bms_1_rack_2:Status"
						}, {
							"enable":	"/config/bms_1_rack_2:enum_opt",
							"outValue":	true,
							"uri":	"/components/bms_1:rack_2_status@ifChanged",
							"useAv":	true
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_2:enable",
		"ifChanged":	false,
		"note1":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[4.14368s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"checkInputs_bms_1_rack_2":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	false,
							"uri":	"/components/bms_1:rack_2_status@ifChanged"
						}, {
							"outValue":	false,
							"uri":	"/components/bms_1:rack_2_fire_fault_active@ifChanged"
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_2:enable",
		"note":	"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change",
		"value":	0
	}
}].
[4.14424s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_2_avg_cell_temp",
		"vlink":	"/status/bms_1_rack_2:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_2_avg_cell_voltage",
		"vlink":	"/status/bms_1_rack_2:AvgCellVoltage"
	},
	"dc_current":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_2_dc_current",
		"vlink":	"/status/bms_1_rack_2:DCCurrent"
	},
	"dc_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_2_dc_power",
		"vlink":	"/status/bms_1_rack_2:DCPower"
	},
	"dc_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_2_dc_voltage",
		"vlink":	"/status/bms_1_rack_2:DCVoltage"
	},
	"max_cell_temp":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_2_max_cell_temp",
		"vlink":	"/status/bms_1_rack_2:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_2_max_cell_voltage",
		"vlink":	"/status/bms_1_rack_2:MaxCellVoltage"
	},
	"max_charge_current":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_2_max_charge_current",
		"vlink":	"/limits/bms_1_rack_2:ChargeCurrentLimit"
	},
	"max_charge_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_2_max_charge_power",
		"vlink":	"/limits/bms_1_rack_2:ChargePowerLimit"
	},
	"max_discharge_current":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_2_max_discharge_current",
		"vlink":	"/limits/bms_1_rack_2:DischargeCurrentLimit"
	},
	"max_discharge_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_2_max_discharge_power",
		"vlink":	"/limits/bms_1_rack_2:DischargePowerLimit"
	},
	"min_cell_temp":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_2_min_cell_temp",
		"vlink":	"/status/bms_1_rack_2:MinCellTemp"
	},
	"min_cell_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_2_min_cell_voltage",
		"vlink":	"/status/bms_1_rack_2:MinCellVoltage"
	},
	"soc":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_2_soc",
		"vlink":	"/status/bms_1_rack_2:SOC"
	},
	"soh":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_2_soh",
		"vlink":	"/status/bms_1_rack_2:SOH"
	}
}].
[4.14495s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_2_avg_cell_temp]
[4.14544s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_2_avg_cell_temp]
[4.14716s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_2_avg_cell_voltage]
[4.14785s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_2_avg_cell_voltage]
[4.14825s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_2_dc_current]
[4.14859s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_2_dc_current]
[4.14911s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_2_dc_power]
[4.14939s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_2_dc_power]
[4.14977s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_2_dc_voltage]
[4.15005s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_2_dc_voltage]
[4.15041s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_2_max_cell_temp]
[4.15087s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_2_max_cell_temp]
[4.15128s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_2_max_cell_voltage]
[4.15156s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_2_max_cell_voltage]
[4.15193s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_2_max_charge_current]
[4.15224s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_2_max_charge_current]
[4.15252s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_2_max_charge_power]
[4.15287s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_2_max_charge_power]
[4.15317s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_2_max_discharge_current]
[4.15344s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_2_max_discharge_current]
[4.15372s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_2_max_discharge_power]
[4.154s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_2_max_discharge_power]
[4.15437s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_2_min_cell_temp]
[4.15464s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_2_min_cell_temp]
[4.15495s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_2_min_cell_voltage]
[4.15521s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_2_min_cell_voltage]
[4.15551s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_2_soc]
[4.15616s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_2_soc]
[4.1564s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_2_soh]
[4.15663s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_2_soh]
[4.15736s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_2",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/bms_1_rack_2:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/bms_1_rack_2:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_2",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms_1/rack_2:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[4.1582s   ] [info    ] [LogInfo        ] [/assets/bms_1/rack_2:maint_mode] received a value of [false]
[4.15936s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.16152s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.1623s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_2:avg_cell_temp",
		"vlink":	"/status/bms_1_rack_2:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_2:avg_cell_voltage",
		"vlink":	"/status/bms_1_rack_2:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_2:cell_temp_delta",
		"vlink":	"/status/bms_1_rack_2:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_2:cell_voltage_delta",
		"vlink":	"/status/bms_1_rack_2:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"default":	false,
		"value":	"/assets/bms_1/rack_2:dc_contactors_closed",
		"vlink":	"/status/bms_1_rack_2:DCClosed"
	},
	"ui_dc_current":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_2:dc_current",
		"vlink":	"/status/bms_1_rack_2:DCCurrent"
	},
	"ui_dc_power":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_2:dc_power",
		"vlink":	"/status/bms_1_rack_2:DCPower"
	},
	"ui_dc_voltage":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_2:dc_voltage",
		"vlink":	"/status/bms_1_rack_2:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_2:max_cell_temp",
		"vlink":	"/status/bms_1_rack_2:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_2:max_cell_voltage",
		"vlink":	"/status/bms_1_rack_2:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_2:max_charge_current",
		"vlink":	"/limits/bms_1_rack_2:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_2:max_charge_power",
		"vlink":	"/limits/bms_1_rack_2:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_2:max_discharge_current",
		"vlink":	"/limits/bms_1_rack_2:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_2:max_discharge_power",
		"vlink":	"/limits/bms_1_rack_2:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_2:min_cell_temp",
		"vlink":	"/status/bms_1_rack_2:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_2:min_cell_voltage",
		"vlink":	"/status/bms_1_rack_2:MinCellVoltage"
	},
	"ui_soc":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_2:soc",
		"vlink":	"/status/bms_1_rack_2:SOC"
	},
	"ui_soh":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_2:soh",
		"vlink":	"/status/bms_1_rack_2:SOH"
	},
	"ui_status":	{
		"default":	"INIT",
		"value":	"/assets/bms_1/rack_2:status",
		"vlink":	"/status/bms_1_rack_2:Status"
	}
}].
[4.1628s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:avg_cell_temp]
[4.16315s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:avg_cell_temp]
[4.16354s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:avg_cell_voltage]
[4.16407s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:avg_cell_voltage]
[4.16472s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:cell_temp_delta]
[4.16547s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:cell_temp_delta]
[4.16597s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:cell_voltage_delta]
[4.16634s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:cell_voltage_delta]
[4.16674s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:dc_contactors_closed]
[4.16706s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:dc_contactors_closed]
[4.16737s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:dc_current]
[4.16768s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:dc_current]
[4.16799s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:dc_power]
[4.16828s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:dc_power]
[4.16861s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:dc_voltage]
[4.16889s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:dc_voltage]
[4.16927s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:max_cell_temp]
[4.16951s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:max_cell_temp]
[4.16991s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:max_cell_voltage]
[4.17032s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:max_cell_voltage]
[4.17061s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:max_charge_current]
[4.17119s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:max_charge_current]
[4.17163s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:max_charge_power]
[4.17196s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:max_charge_power]
[4.17229s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:max_discharge_current]
[4.17258s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:max_discharge_current]
[4.1728s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:max_discharge_power]
[4.17325s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:max_discharge_power]
[4.17359s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:min_cell_temp]
[4.17383s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:min_cell_temp]
[4.17408s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:min_cell_voltage]
[4.17427s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:min_cell_voltage]
[4.17448s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:soc]
[4.17467s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:soc]
[4.17487s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:soh]
[4.17507s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:soh]
[4.17551s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_2:status]
[4.17583s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_2:status]
[4.1772s   ] [info    ] [setVecAmAi     ]  ainame Setting piVec  AI [bms_1_rack_3]
[4.17755s  ] [info    ] [setVecAmAi     ]  ainame Setting ai  [bms_1_rack_3] parent am [bms_1] 
[4.1783s   ] [info    ] [configure_vmapS] process file seeking header stuff am [no am] ai [bms_1_rack_3]
[4.17921s  ] [info    ] [configure_vmapS] body: {"/config/bms_1_rack_3":{"AlarmDestination":"/assets/bms_1/rack_3:alarms","FaultDestination":"/assets/bms_1/rack_3:faults","NoAlarmMsg":"Normal","NoFaultMsg":"Normal","enable":false,"enum_opt":false},"/links/bms_1_rack_3":{"ChargeCurrentLimit":{"value":"/limits/bms_1_rack_3:ChargeCurrentLimit"},"ChargePowerLimit":{"value":"/limits/bms_1_rack_3:ChargePowerLimit"},"DischargeCurrentLimit":{"value":"/limits/bms_1_rack_3:DischargeCurrentLimit"},"DischargePowerLimit":{"value":"/limits/bms_1_rack_3:DischargePowerLimit"}},"/sched/bms_1_rack_3":{"pubAssets_bms_1_rack_3":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_3","func":"RunPub"}]}]},"enable":"/config/bms_1_rack_3:enable","mode":"ui","note":"Publishes UI asset data (/assets/bms_1/rack_3)","table":"/assets/bms_1/rack_3","value":1},"runMonitor_bms_1_rack_3":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_3","func":"RunMonitor"}]}]},"aname":"bms_1_rack_3","enable":"/config/bms_1_rack_3:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/bms_1_rack_3","value":1}},"/schedule/wake_monitor/bms_1_rack_3":{"/status/bms_1_rack_3:CellTempDelta_Calculated":{"amap":"bms_1_rack_3","func":"CalculateVar"},"/status/bms_1_rack_3:CellVoltageDelta_Calculated":{"amap":"bms_1_rack_3","func":"CalculateVar"}},"/status/bms_1_rack_3":{"CellTempDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms_1_rack_3:CellTempDelta"}]}]},"enable":"/config/bms_1_rack_3:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell temperatures","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms_1_rack_3:MinCellTemp","variable2":"/status/bms_1_rack_3:MaxCellTemp"},"CellVoltageDelta_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/bms_1_rack_3:CellVoltageDelta"}]}]},"enable":"/config/bms_1_rack_3:enable","expression":"{2} - {1}","note":"Calculates the difference between the max and min cell voltages","numVars":2,"useExpr":true,"value":0,"variable1":"/status/bms_1_rack_3:MinCellVoltage","variable2":"/status/bms_1_rack_3:MaxCellVoltage"},"DCClosed":{"actions":{"onSet":[{"remap":[]}]},"enable":"/config/bms_1_rack_3:enable","note1":"Enables/disables monitoring variables if BMS DC contactors are closed/opened","note2":"Also reports the BMS DC contactor status to the UI","note3":"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable","value":false},"Status":"INIT"},"/system/commands":{"runOpts_rack":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_3","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/bms_1_rack_3) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"bms_1_rack_3","every":1,"uri":"/sched/bms_1_rack_3:pubAssets_bms_1_rack_3","value":1},{"aname":"bms_1_rack_3","every":0.1,"uri":"/sched/bms_1_rack_3:runMonitor_bms_1_rack_3","value":1},{"aname":"bms_1_rack_3","every":1,"uri":"/sched/bms_1_rack_3:checkInputs_bms_1_rack_3","value":1}],"targav":"/system/commands:run","value":false}},"/controls/bms_1_rack_3":{"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_3","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0}},"/schedule/wake_monitor/bms_1_rack_3":{"/controls/bms_1_rack_3:ClearFaults":{"amap":"bms_1_rack_3","func":"HandleCmd"}},"/status/bms_1_rack_3":{"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"outValue":"Clear","uri":"/faults/bms_1_rack_3:clear_faults"},{"outValue":"Clear","uri":"/alarms/bms_1_rack_3:clear_alarms"}]}]},"enable":"/config/bms_1_rack_3:enable","ifChanged":false,"note":"When this variable is set, /faults/bms_1_rack_3:clear_faults and /alarms/bms_1_rack_3:clear_alarms will be set to Clear","value":false}},"/alarms/bms_1_rack_3":{"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_3","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/bms_1_rack_3) will be reset to the normal state (defined in /config/bms_1_rack_3:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"alarm","value":"Normal"}},"/faults/bms_1_rack_3":{"MonitorVarFault":{"actions":{"onSet":[{"remap":[]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_3","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/bms_1_rack_3) will be reset to the normal state (defined in /config/bms_1_rack_3:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","type":"fault","value":"Normal"}},"/schedule/wake_monitor/bms_1_rack_3":{"/status/bms_1_rack_3:AnyFireFaultActive":{"amap":"bms_1_rack_3","func":"CalculateVar"},"/status/bms_1_rack_3:TotalAlarmCnt":{"amap":"bms_1_rack_3","func":"CalculateVar"},"/status/bms_1_rack_3:TotalFaultCnt":{"amap":"bms_1_rack_3","func":"CalculateVar"}},"/status/bms_1_rack_3":{"AlarmCnt":0,"AnyFireFaultActive":{"enable":"/config/bms_1_rack_3:enable","expression":"{1}","numVars":1,"useExpr":true,"value":false,"variable1":"/status/bms_1_rack_3:FireFaultActive"},"ClearFaultsDone":{"actions":{"onSet":[{"remap":[]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_3","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/bms_1:FaultShutdown"}]}]},"ifChanged":true,"note":"When the BMS Rack faults, the fault shutdown event will be propagated to its parent","value":false},"FireFaultActive":false,"TotalAlarmCnt":{"enable":"/config/bms_1_rack_3:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms_1_rack_3:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/bms_1_rack_3:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/bms_1_rack_3:FaultCnt"}},"/components/bms_1":{"rack_3_fire_fault_active":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":false,"uri":"/status/bms_1_rack_3:FireFaultActive"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":true,"uri":"/status/bms_1_rack_3:FireFaultActive"},{"enable":"/config/bms_1_rack_3:enum_opt","outValue":true,"uri":"/components/bms_1:rack_3_fire_fault_active@ifChanged","useAv":true}]}]},"enable":"/config/bms_1_rack_3:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0},"rack_3_status":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"TODO: add output value to set to uri","uri":"/status/bms_1_rack_3:Status"},{"enable":"/config/bms_1_rack_3:enum_opt","outValue":true,"uri":"/components/bms_1:rack_3_status@ifChanged","useAv":true}]}]},"enable":"/config/bms_1_rack_3:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/bms_1_rack_3":{"checkInputs_bms_1_rack_3":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/bms_1:rack_3_status@ifChanged"},{"outValue":false,"uri":"/components/bms_1:rack_3_fire_fault_active@ifChanged"}]}]},"enable":"/config/bms_1_rack_3:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/bms_1_rack_3":{"avg_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_3_avg_cell_temp","vlink":"/status/bms_1_rack_3:AvgCellTemp"},"avg_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_3_avg_cell_voltage","vlink":"/status/bms_1_rack_3:AvgCellVoltage"},"dc_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_3_dc_current","vlink":"/status/bms_1_rack_3:DCCurrent"},"dc_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_3_dc_power","vlink":"/status/bms_1_rack_3:DCPower"},"dc_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_3_dc_voltage","vlink":"/status/bms_1_rack_3:DCVoltage"},"max_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_3_max_cell_temp","vlink":"/status/bms_1_rack_3:MaxCellTemp"},"max_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_3_max_cell_voltage","vlink":"/status/bms_1_rack_3:MaxCellVoltage"},"max_charge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_3_max_charge_current","vlink":"/limits/bms_1_rack_3:ChargeCurrentLimit"},"max_charge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_3_max_charge_power","vlink":"/limits/bms_1_rack_3:ChargePowerLimit"},"max_discharge_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_3_max_discharge_current","vlink":"/limits/bms_1_rack_3:DischargeCurrentLimit"},"max_discharge_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_3_max_discharge_power","vlink":"/limits/bms_1_rack_3:DischargePowerLimit"},"min_cell_temp":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_3_min_cell_temp","vlink":"/status/bms_1_rack_3:MinCellTemp"},"min_cell_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_3_min_cell_voltage","vlink":"/status/bms_1_rack_3:MinCellVoltage"},"soc":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_3_soc","vlink":"/status/bms_1_rack_3:SOC"},"soh":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/bms_1:rack_3_soh","vlink":"/status/bms_1_rack_3:SOH"}},"/assets/bms_1/rack_3":{"alarms":{"options":[],"value":0},"avg_cell_temp":{"value":0},"avg_cell_voltage":{"value":0},"cell_temp_delta":{"value":0},"cell_voltage_delta":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_3","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/bms_1_rack_3:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/bms_1_rack_3:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"dc_contactors_closed":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"bms_1_rack_3","func":"LogInfo"}]},{"remap":[{"uri":"/assets/bms_1/rack_3:clear_faults@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_cell_temp":{"value":0},"max_cell_voltage":{"value":0},"max_charge_current":{"value":0},"max_charge_power":{"value":0},"max_discharge_current":{"value":0},"max_discharge_power":{"value":0},"min_cell_temp":{"value":0},"min_cell_voltage":{"value":0},"soc":{"value":0},"soh":{"value":0},"status":{"value":"INIT"}},"/vlinks/bms_1_rack_3":{"ui_avg_cell_temp":{"default":0,"value":"/assets/bms_1/rack_3:avg_cell_temp","vlink":"/status/bms_1_rack_3:AvgCellTemp"},"ui_avg_cell_voltage":{"default":0,"value":"/assets/bms_1/rack_3:avg_cell_voltage","vlink":"/status/bms_1_rack_3:AvgCellVoltage"},"ui_cell_temp_delta":{"default":0,"value":"/assets/bms_1/rack_3:cell_temp_delta","vlink":"/status/bms_1_rack_3:CellTempDelta"},"ui_cell_voltage_delta":{"default":0,"value":"/assets/bms_1/rack_3:cell_voltage_delta","vlink":"/status/bms_1_rack_3:CellVoltageDelta"},"ui_dc_contactors_closed":{"default":false,"value":"/assets/bms_1/rack_3:dc_contactors_closed","vlink":"/status/bms_1_rack_3:DCClosed"},"ui_dc_current":{"default":0,"value":"/assets/bms_1/rack_3:dc_current","vlink":"/status/bms_1_rack_3:DCCurrent"},"ui_dc_power":{"default":0,"value":"/assets/bms_1/rack_3:dc_power","vlink":"/status/bms_1_rack_3:DCPower"},"ui_dc_voltage":{"default":0,"value":"/assets/bms_1/rack_3:dc_voltage","vlink":"/status/bms_1_rack_3:DCVoltage"},"ui_max_cell_temp":{"default":0,"value":"/assets/bms_1/rack_3:max_cell_temp","vlink":"/status/bms_1_rack_3:MaxCellTemp"},"ui_max_cell_voltage":{"default":0,"value":"/assets/bms_1/rack_3:max_cell_voltage","vlink":"/status/bms_1_rack_3:MaxCellVoltage"},"ui_max_charge_current":{"default":0,"value":"/assets/bms_1/rack_3:max_charge_current","vlink":"/limits/bms_1_rack_3:ChargeCurrentLimit"},"ui_max_charge_power":{"default":0,"value":"/assets/bms_1/rack_3:max_charge_power","vlink":"/limits/bms_1_rack_3:ChargePowerLimit"},"ui_max_discharge_current":{"default":0,"value":"/assets/bms_1/rack_3:max_discharge_current","vlink":"/limits/bms_1_rack_3:DischargeCurrentLimit"},"ui_max_discharge_power":{"default":0,"value":"/assets/bms_1/rack_3:max_discharge_power","vlink":"/limits/bms_1_rack_3:DischargePowerLimit"},"ui_min_cell_temp":{"default":0,"value":"/assets/bms_1/rack_3:min_cell_temp","vlink":"/status/bms_1_rack_3:MinCellTemp"},"ui_min_cell_voltage":{"default":0,"value":"/assets/bms_1/rack_3:min_cell_voltage","vlink":"/status/bms_1_rack_3:MinCellVoltage"},"ui_soc":{"default":0,"value":"/assets/bms_1/rack_3:soc","vlink":"/status/bms_1_rack_3:SOC"},"ui_soh":{"default":0,"value":"/assets/bms_1/rack_3:soh","vlink":"/status/bms_1_rack_3:SOH"},"ui_status":{"default":"INIT","value":"/assets/bms_1/rack_3:status","vlink":"/status/bms_1_rack_3:Status"}}}
[4.1824s   ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[4.18282s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/bms_1/rack_3:alarms",
	"FaultDestination":	"/assets/bms_1/rack_3:faults",
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"enable":	false,
	"enum_opt":	false
}].
[4.18319s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:alarms]
[4.18348s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:alarms]
[4.18377s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:faults]
[4.18401s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:faults]
[4.18427s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.18452s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.18478s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.18501s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.18534s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ChargeCurrentLimit":	{
		"value":	"/limits/bms_1_rack_3:ChargeCurrentLimit"
	},
	"ChargePowerLimit":	{
		"value":	"/limits/bms_1_rack_3:ChargePowerLimit"
	},
	"DischargeCurrentLimit":	{
		"value":	"/limits/bms_1_rack_3:DischargeCurrentLimit"
	},
	"DischargePowerLimit":	{
		"value":	"/limits/bms_1_rack_3:DischargePowerLimit"
	}
}].
[4.18574s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms_1_rack_3:ChargeCurrentLimit]
[4.18615s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms_1_rack_3:ChargeCurrentLimit]
[4.18641s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms_1_rack_3:ChargePowerLimit]
[4.18667s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms_1_rack_3:ChargePowerLimit]
[4.18705s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms_1_rack_3:DischargeCurrentLimit]
[4.18731s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms_1_rack_3:DischargeCurrentLimit]
[4.1876s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/bms_1_rack_3:DischargePowerLimit]
[4.18804s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/bms_1_rack_3:DischargePowerLimit]
[4.18841s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pubAssets_bms_1_rack_3":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_3",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_3:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/bms_1/rack_3)",
		"table":	"/assets/bms_1/rack_3",
		"value":	1
	},
	"runMonitor_bms_1_rack_3":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_3",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"bms_1_rack_3",
		"enable":	"/config/bms_1_rack_3:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/bms_1_rack_3",
		"value":	1
	}
}].
[4.18882s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/bms_1_rack_3:CellTempDelta_Calculated":	{
		"amap":	"bms_1_rack_3",
		"func":	"CalculateVar"
	},
	"/status/bms_1_rack_3:CellVoltageDelta_Calculated":	{
		"amap":	"bms_1_rack_3",
		"func":	"CalculateVar"
	}
}].
[4.18923s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CellTempDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms_1_rack_3:CellTempDelta"
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_3:enable",
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell temperatures",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1_rack_3:MinCellTemp",
		"variable2":	"/status/bms_1_rack_3:MaxCellTemp"
	},
	"CellVoltageDelta_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/bms_1_rack_3:CellVoltageDelta"
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_3:enable",
		"expression":	"{2} - {1}",
		"note":	"Calculates the difference between the max and min cell voltages",
		"numVars":	2,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1_rack_3:MinCellVoltage",
		"variable2":	"/status/bms_1_rack_3:MaxCellVoltage"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enable":	"/config/bms_1_rack_3:enable",
		"note1":	"Enables/disables monitoring variables if BMS DC contactors are closed/opened",
		"note2":	"Also reports the BMS DC contactor status to the UI",
		"note3":	"TODO: Decode or calculate DC contactors closed status and remap/link value to this variable",
		"value":	false
	},
	"Status":	"INIT"
}].
[4.18968s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.18994s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.19067s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_rack":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_3",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/bms_1_rack_3) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"bms_1_rack_3",
				"every":	1,
				"uri":	"/sched/bms_1_rack_3:pubAssets_bms_1_rack_3",
				"value":	1
			}, {
				"aname":	"bms_1_rack_3",
				"every":	0.1,
				"uri":	"/sched/bms_1_rack_3:runMonitor_bms_1_rack_3",
				"value":	1
			}, {
				"aname":	"bms_1_rack_3",
				"every":	1,
				"uri":	"/sched/bms_1_rack_3:checkInputs_bms_1_rack_3",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[4.19128s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_3",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"useExpr":	false,
		"value":	0
	}
}].
[4.1917s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1_rack_3:HandleCmd_ClearFaults]
[4.19197s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1_rack_3:HandleCmd_ClearFaults]
[4.19225s  ] [info    ] [HandleCmd      ] reload first run [bms_1_rack_3] [/controls/bms_1_rack_3:ClearFaults]  reload 0
[4.19253s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/bms_1_rack_3:ClearFaults]
[4.1928s   ] [info    ] [HandleCmd      ] Adding [/controls/bms_1_rack_3:ClearFaults] to amap in asset [bms_1_rack_3]
[4.19347s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/bms_1_rack_3:ClearFaults]
[4.1938s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/bms_1_rack_3:ClearFaults]
[4.19433s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/bms_1_rack_3:ClearFaults":	{
		"amap":	"bms_1_rack_3",
		"func":	"HandleCmd"
	}
}].
[4.19474s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	"Clear",
							"uri":	"/faults/bms_1_rack_3:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/bms_1_rack_3:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_3:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/bms_1_rack_3:clear_faults and /alarms/bms_1_rack_3:clear_alarms will be set to Clear",
		"value":	false
	}
}].
[4.19519s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_3",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/bms_1_rack_3) will be reset to the normal state (defined in /config/bms_1_rack_3:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"alarm",
		"value":	"Normal"
	}
}].
[4.1955s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.19578s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.19604s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.19625s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.19668s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms_1_rack_3:FaultDestination]
[4.197s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms_1_rack_3:FaultDestination]
[4.1973s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms_1_rack_3:NoFaultMsg]
[4.19754s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms_1_rack_3:NoFaultMsg]
[4.19788s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_3:FaultCnt]
[4.1982s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_3:FaultCnt]
[4.19852s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms_1_rack_3:AlarmDestination]
[4.19882s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms_1_rack_3:AlarmDestination]
[4.19944s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/bms_1_rack_3:NoAlarmMsg]
[4.20035s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/bms_1_rack_3:NoAlarmMsg]
[4.20109s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_3:AlarmCnt]
[4.20152s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_3:AlarmCnt]
[4.20208s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_3",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/bms_1_rack_3) will be reset to the normal state (defined in /config/bms_1_rack_3:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"type":	"fault",
		"value":	"Normal"
	}
}].
[4.20249s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.20276s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.20338s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.2037s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.20407s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/bms_1_rack_3:AnyFireFaultActive":	{
		"amap":	"bms_1_rack_3",
		"func":	"CalculateVar"
	},
	"/status/bms_1_rack_3:TotalAlarmCnt":	{
		"amap":	"bms_1_rack_3",
		"func":	"CalculateVar"
	},
	"/status/bms_1_rack_3:TotalFaultCnt":	{
		"amap":	"bms_1_rack_3",
		"func":	"CalculateVar"
	}
}].
[4.20449s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmCnt":	0,
	"AnyFireFaultActive":	{
		"enable":	"/config/bms_1_rack_3:enable",
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms_1_rack_3:FireFaultActive"
	},
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_3",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/bms_1:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the BMS Rack faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"FireFaultActive":	false,
	"TotalAlarmCnt":	{
		"enable":	"/config/bms_1_rack_3:enable",
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1_rack_3:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"enable":	"/config/bms_1_rack_3:enable",
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1_rack_3:FaultCnt"
	}
}].
[4.20523s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"rack_3_fire_fault_active":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	false,
							"uri":	"/status/bms_1_rack_3:FireFaultActive"
						}, {
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	true,
							"uri":	"/status/bms_1_rack_3:FireFaultActive"
						}, {
							"enable":	"/config/bms_1_rack_3:enum_opt",
							"outValue":	true,
							"uri":	"/components/bms_1:rack_3_fire_fault_active@ifChanged",
							"useAv":	true
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_3:enable",
		"ifChanged":	false,
		"note1":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	},
	"rack_3_status":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	"TODO: add output value to set to uri",
							"uri":	"/status/bms_1_rack_3:Status"
						}, {
							"enable":	"/config/bms_1_rack_3:enum_opt",
							"outValue":	true,
							"uri":	"/components/bms_1:rack_3_status@ifChanged",
							"useAv":	true
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_3:enable",
		"ifChanged":	false,
		"note1":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[4.20576s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"checkInputs_bms_1_rack_3":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	false,
							"uri":	"/components/bms_1:rack_3_status@ifChanged"
						}, {
							"outValue":	false,
							"uri":	"/components/bms_1:rack_3_fire_fault_active@ifChanged"
						}]
				}]
		},
		"enable":	"/config/bms_1_rack_3:enable",
		"note":	"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change",
		"value":	0
	}
}].
[4.20645s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"avg_cell_temp":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_3_avg_cell_temp",
		"vlink":	"/status/bms_1_rack_3:AvgCellTemp"
	},
	"avg_cell_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_3_avg_cell_voltage",
		"vlink":	"/status/bms_1_rack_3:AvgCellVoltage"
	},
	"dc_current":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_3_dc_current",
		"vlink":	"/status/bms_1_rack_3:DCCurrent"
	},
	"dc_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_3_dc_power",
		"vlink":	"/status/bms_1_rack_3:DCPower"
	},
	"dc_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_3_dc_voltage",
		"vlink":	"/status/bms_1_rack_3:DCVoltage"
	},
	"max_cell_temp":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_3_max_cell_temp",
		"vlink":	"/status/bms_1_rack_3:MaxCellTemp"
	},
	"max_cell_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_3_max_cell_voltage",
		"vlink":	"/status/bms_1_rack_3:MaxCellVoltage"
	},
	"max_charge_current":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_3_max_charge_current",
		"vlink":	"/limits/bms_1_rack_3:ChargeCurrentLimit"
	},
	"max_charge_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_3_max_charge_power",
		"vlink":	"/limits/bms_1_rack_3:ChargePowerLimit"
	},
	"max_discharge_current":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_3_max_discharge_current",
		"vlink":	"/limits/bms_1_rack_3:DischargeCurrentLimit"
	},
	"max_discharge_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_3_max_discharge_power",
		"vlink":	"/limits/bms_1_rack_3:DischargePowerLimit"
	},
	"min_cell_temp":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_3_min_cell_temp",
		"vlink":	"/status/bms_1_rack_3:MinCellTemp"
	},
	"min_cell_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_3_min_cell_voltage",
		"vlink":	"/status/bms_1_rack_3:MinCellVoltage"
	},
	"soc":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_3_soc",
		"vlink":	"/status/bms_1_rack_3:SOC"
	},
	"soh":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/bms_1:rack_3_soh",
		"vlink":	"/status/bms_1_rack_3:SOH"
	}
}].
[4.20691s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_3_avg_cell_temp]
[4.20717s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_3_avg_cell_temp]
[4.20745s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_3_avg_cell_voltage]
[4.20773s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_3_avg_cell_voltage]
[4.20845s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_3_dc_current]
[4.20879s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_3_dc_current]
[4.20923s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_3_dc_power]
[4.20949s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_3_dc_power]
[4.20977s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_3_dc_voltage]
[4.21008s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_3_dc_voltage]
[4.2105s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_3_max_cell_temp]
[4.21081s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_3_max_cell_temp]
[4.21108s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_3_max_cell_voltage]
[4.21132s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_3_max_cell_voltage]
[4.21158s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_3_max_charge_current]
[4.21182s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_3_max_charge_current]
[4.21208s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_3_max_charge_power]
[4.21231s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_3_max_charge_power]
[4.21254s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_3_max_discharge_current]
[4.21277s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_3_max_discharge_current]
[4.21331s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_3_max_discharge_power]
[4.2137s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_3_max_discharge_power]
[4.21412s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_3_min_cell_temp]
[4.21444s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_3_min_cell_temp]
[4.21512s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_3_min_cell_voltage]
[4.21625s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_3_min_cell_voltage]
[4.21669s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_3_soc]
[4.21704s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_3_soc]
[4.21775s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/bms_1:rack_3_soh]
[4.21807s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/bms_1:rack_3_soh]
[4.21851s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"avg_cell_temp":	{
		"value":	0
	},
	"avg_cell_voltage":	{
		"value":	0
	},
	"cell_temp_delta":	{
		"value":	0
	},
	"cell_voltage_delta":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_3",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/bms_1_rack_3:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/bms_1_rack_3:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"dc_contactors_closed":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"bms_1_rack_3",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/bms_1/rack_3:clear_faults@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_cell_temp":	{
		"value":	0
	},
	"max_cell_voltage":	{
		"value":	0
	},
	"max_charge_current":	{
		"value":	0
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_current":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"min_cell_temp":	{
		"value":	0
	},
	"min_cell_voltage":	{
		"value":	0
	},
	"soc":	{
		"value":	0
	},
	"soh":	{
		"value":	0
	},
	"status":	{
		"value":	"INIT"
	}
}].
[4.21906s  ] [info    ] [LogInfo        ] [/assets/bms_1/rack_3:maint_mode] received a value of [false]
[4.21949s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.21972s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.22026s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_avg_cell_temp":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_3:avg_cell_temp",
		"vlink":	"/status/bms_1_rack_3:AvgCellTemp"
	},
	"ui_avg_cell_voltage":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_3:avg_cell_voltage",
		"vlink":	"/status/bms_1_rack_3:AvgCellVoltage"
	},
	"ui_cell_temp_delta":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_3:cell_temp_delta",
		"vlink":	"/status/bms_1_rack_3:CellTempDelta"
	},
	"ui_cell_voltage_delta":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_3:cell_voltage_delta",
		"vlink":	"/status/bms_1_rack_3:CellVoltageDelta"
	},
	"ui_dc_contactors_closed":	{
		"default":	false,
		"value":	"/assets/bms_1/rack_3:dc_contactors_closed",
		"vlink":	"/status/bms_1_rack_3:DCClosed"
	},
	"ui_dc_current":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_3:dc_current",
		"vlink":	"/status/bms_1_rack_3:DCCurrent"
	},
	"ui_dc_power":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_3:dc_power",
		"vlink":	"/status/bms_1_rack_3:DCPower"
	},
	"ui_dc_voltage":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_3:dc_voltage",
		"vlink":	"/status/bms_1_rack_3:DCVoltage"
	},
	"ui_max_cell_temp":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_3:max_cell_temp",
		"vlink":	"/status/bms_1_rack_3:MaxCellTemp"
	},
	"ui_max_cell_voltage":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_3:max_cell_voltage",
		"vlink":	"/status/bms_1_rack_3:MaxCellVoltage"
	},
	"ui_max_charge_current":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_3:max_charge_current",
		"vlink":	"/limits/bms_1_rack_3:ChargeCurrentLimit"
	},
	"ui_max_charge_power":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_3:max_charge_power",
		"vlink":	"/limits/bms_1_rack_3:ChargePowerLimit"
	},
	"ui_max_discharge_current":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_3:max_discharge_current",
		"vlink":	"/limits/bms_1_rack_3:DischargeCurrentLimit"
	},
	"ui_max_discharge_power":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_3:max_discharge_power",
		"vlink":	"/limits/bms_1_rack_3:DischargePowerLimit"
	},
	"ui_min_cell_temp":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_3:min_cell_temp",
		"vlink":	"/status/bms_1_rack_3:MinCellTemp"
	},
	"ui_min_cell_voltage":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_3:min_cell_voltage",
		"vlink":	"/status/bms_1_rack_3:MinCellVoltage"
	},
	"ui_soc":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_3:soc",
		"vlink":	"/status/bms_1_rack_3:SOC"
	},
	"ui_soh":	{
		"default":	0,
		"value":	"/assets/bms_1/rack_3:soh",
		"vlink":	"/status/bms_1_rack_3:SOH"
	},
	"ui_status":	{
		"default":	"INIT",
		"value":	"/assets/bms_1/rack_3:status",
		"vlink":	"/status/bms_1_rack_3:Status"
	}
}].
[4.22062s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:avg_cell_temp]
[4.22091s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:avg_cell_temp]
[4.22118s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:avg_cell_voltage]
[4.2215s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:avg_cell_voltage]
[4.22204s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:cell_temp_delta]
[4.22235s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:cell_temp_delta]
[4.22303s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:cell_voltage_delta]
[4.2233s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:cell_voltage_delta]
[4.22397s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:dc_contactors_closed]
[4.22422s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:dc_contactors_closed]
[4.22451s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:dc_current]
[4.22478s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:dc_current]
[4.22535s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:dc_power]
[4.22565s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:dc_power]
[4.22625s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:dc_voltage]
[4.22653s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:dc_voltage]
[4.22685s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:max_cell_temp]
[4.22713s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:max_cell_temp]
[4.22739s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:max_cell_voltage]
[4.22765s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:max_cell_voltage]
[4.22795s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:max_charge_current]
[4.22822s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:max_charge_current]
[4.2285s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:max_charge_power]
[4.22875s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:max_charge_power]
[4.22906s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:max_discharge_current]
[4.2293s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:max_discharge_current]
[4.22957s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:max_discharge_power]
[4.23s     ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:max_discharge_power]
[4.23062s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:min_cell_temp]
[4.23087s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:min_cell_temp]
[4.23126s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:min_cell_voltage]
[4.23151s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:min_cell_voltage]
[4.23183s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:soc]
[4.23211s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:soc]
[4.23248s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:soh]
[4.23277s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:soh]
[4.23303s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/bms_1/rack_3:status]
[4.23329s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/bms_1/rack_3:status]
[4.2354s   ] [info    ] [runConfig      ]  requesting cfile [sungrow_pcs_init] 
[4.23571s  ] [info    ] [requestCfile   ] Getting from DBI sungrow_pcs_init
[4.25113s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:sungrow_pcs_init]  am at start [no Am]
[4.25228s  ] [info    ] [configure_vmapS] process file seeking header stuff am [pcs] ai [no ai]
[4.25294s  ] [info    ] [configure_vmapS] body: {"/config/load":{"sungrow_pcs_init":{"aname":"pcs","file":"sungrow_pcs_init","new_options":[{"amname":"pcs","from":1,"pname":"ess","tmpls":["sungrow_pcs_virtual_manager","sungrow_pcs_virtual_manager_controls","sungrow_pcs_virtual_manager_faults","sungrow_pcs_virtual_manager_client_interface","sungrow_pcs_virtual_manager_server_interface","sungrow_pcs_virtual_manager_ui"],"to":1},{"amname":"##PCS_ID##","from":1,"pname":"pcs","reps":[{"replace":"##PCS_ID##","with":"pcs_{:01d}"},{"replace":"##PCS_NUM##","with":"{:01d}"},{"replace":"##BMS_ID##","with":"bms_{:01d}"},{"replace":"##ESS_ID##","with":"ess_{:01d}"}],"tmpls":["sungrow_pcs_manager","sungrow_pcs_manager_controls","sungrow_pcs_manager_faults","sungrow_pcs_manager_client_interface","sungrow_pcs_manager_server_interface","sungrow_pcs_manager_ui"],"to":1}],"note":"Loads sungrow_pcs_init first. Then, configs defined in new_options, if any, are loaded next","pname":"ess","value":false}}}
[4.25329s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[4.25382s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"sungrow_pcs_init":	{
		"aname":	"pcs",
		"file":	"sungrow_pcs_init",
		"new_options":	[{
				"amname":	"pcs",
				"from":	1,
				"pname":	"ess",
				"tmpls":	["sungrow_pcs_virtual_manager", "sungrow_pcs_virtual_manager_controls", "sungrow_pcs_virtual_manager_faults", "sungrow_pcs_virtual_manager_client_interface", "sungrow_pcs_virtual_manager_server_interface", "sungrow_pcs_virtual_manager_ui"],
				"to":	1
			}, {
				"amname":	"##PCS_ID##",
				"from":	1,
				"pname":	"pcs",
				"reps":	[{
						"replace":	"##PCS_ID##",
						"with":	"pcs_{:01d}"
					}, {
						"replace":	"##PCS_NUM##",
						"with":	"{:01d}"
					}, {
						"replace":	"##BMS_ID##",
						"with":	"bms_{:01d}"
					}, {
						"replace":	"##ESS_ID##",
						"with":	"ess_{:01d}"
					}],
				"tmpls":	["sungrow_pcs_manager", "sungrow_pcs_manager_controls", "sungrow_pcs_manager_faults", "sungrow_pcs_manager_client_interface", "sungrow_pcs_manager_server_interface", "sungrow_pcs_manager_ui"],
				"to":	1
			}],
		"note":	"Loads sungrow_pcs_init first. Then, configs defined in new_options, if any, are loaded next",
		"pname":	"ess",
		"value":	false
	}
}].
[4.44505s  ] [info    ] [runConfig      ]  requesting ctmpl [sungrow_pcs_virtual_manager] try number [1] 
[4.44644s  ] [info    ] [runConfig      ]  requesting ctmpl [sungrow_pcs_virtual_manager_client_interface] try number [1] 
[4.44861s  ] [info    ] [runConfig      ]  requesting ctmpl [sungrow_pcs_virtual_manager_controls] try number [1] 
[4.44936s  ] [info    ] [runConfig      ]  requesting ctmpl [sungrow_pcs_virtual_manager_faults] try number [1] 
[4.45311s  ] [info    ] [runConfig      ]  requesting ctmpl [sungrow_pcs_virtual_manager_server_interface] try number [1] 
[4.4535s   ] [info    ] [runConfig      ]  requesting ctmpl [sungrow_pcs_virtual_manager_ui] try number [1] 
[4.64509s  ] [info    ] [runConfig      ]  requesting ctmpl [sungrow_pcs_manager] try number [1] 
[4.64608s  ] [info    ] [runConfig      ]  requesting ctmpl [sungrow_pcs_manager_client_interface] try number [1] 
[4.6477s   ] [info    ] [runConfig      ]  requesting ctmpl [sungrow_pcs_manager_controls] try number [1] 
[4.64894s  ] [info    ] [runConfig      ]  requesting ctmpl [sungrow_pcs_manager_faults] try number [1] 
[4.65341s  ] [info    ] [runConfig      ]  requesting ctmpl [sungrow_pcs_manager_server_interface] try number [1] 
[4.65402s  ] [info    ] [runConfig      ]  requesting ctmpl [sungrow_pcs_manager_ui] try number [1] 
[4.74536s  ] [info    ] [runConfig      ]  All files loaded for loader [sungrow_pcs_init] ready to run av [/config/load:sungrow_pcs_init] load
[4.74725s  ] [info    ] [configLoad     ] tmpls field is found in av [/config/load:sungrow_pcs_init]. We'll perform template expansions with tmpls instead of tmpl
[4.74849s  ] [info    ] [configLoad     ] tbody before: {"/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":1200,"RatedApparentPower":1350,"RatedPowerFactor":0.8,"RatedReactivePower":1100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/controls/pcs":{"ActivePowerCmdReal":{"enable":"/config/pcs:enable","note":"Calculates the total active power command reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs_1:ActivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","note":"Used to forward value to children setpoint variables","value":0},"ReactivePowerCmdReal":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power command reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs_1:ReactivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","note":"Used to forward value to children setpoint variables","value":0}},"/limits/pcs":{"MaxPCSChargePower":{"enable":"/config/pcs:enable","note":"Calculates the total max charge power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"enable":"/config/pcs:enable","note":"Calculates the total max discharge power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:MaxPCSDischargePower"},"RatedActivePower":{"enable":"/config/pcs:enable","note":"Calculates the total rated active power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedActivePower"},"RatedApparentPower":{"enable":"/config/pcs:enable","note":"Calculates the total rated apparent power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedApparentPower"},"RatedReactivePower":{"enable":"/config/pcs:enable","note":"Calculates the total rated reactive power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedReactivePower"}},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmdReal":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmdReal":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:MaxPCSChargePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:MaxPCSDischargePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedActivePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedApparentPower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedReactivePower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePowerRampRateFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePowerSetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePower_Calculated":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ApparentPower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:CommsOK":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCClosed":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCCurrent":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCPower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCVoltage_Calculated":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:Frequency":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:FrequencySetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L1Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L1L2Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L2Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L2L3Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L3Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L3L1Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:MaxIGBTTemperature":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:PowerFactor":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePowerRampRateFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePowerSetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:VoltageSetpointFeedback":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerRampRateFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total active power ramp rate feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerRampRateFeedback"},"ActivePowerSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total active power setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerSetpointFeedback"},"ActivePower_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:ActivePower"}]}]},"enable":"/config/pcs:enable","note":"Calculates the total active power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePower"},"ApparentPower":{"enable":"/config/pcs:enable","note":"Calculates the total apparent power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ApparentPower"},"AvgLineVoltage":{"enable":"/config/pcs:enable","expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"enable":"/config/pcs:enable","note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","numVars":1,"operation":"and","value":true,"variable1":"pcs:CommsOK"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","numVars":1,"operation":"and","value":false,"variable1":"pcs:DCClosed"},"DCCurrent":{"enable":"/config/pcs:enable","note":"Calculates the average DC current reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCCurrent"},"DCPower":{"enable":"/config/pcs:enable","note":"Calculates the average DC power reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCPower"},"DCVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage"}]}]},"enable":"/config/pcs:enable","note":"Calculates the average DC voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCVoltage"},"Frequency":{"enable":"/config/pcs:enable","note":"Calculates the average frequency reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:Frequency"},"FrequencySetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total frequency setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:FrequencySetpointFeedback"},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"L1Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L1 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L1Current"},"L1L2Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L1-L2 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L1L2Voltage"},"L2Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L2 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L2Current"},"L2L3Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L2-L3 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L2L3Voltage"},"L3Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L3 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L3Current"},"L3L1Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L3-L1 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L3L1Voltage"},"MaxIGBTTemperature":{"enable":"/config/pcs:enable","note":"Calculates the max IGBT temperature reported by all PCS instances","numVars":1,"operation":"max","value":0,"variable1":"pcs:MaxIGBTTemperature"},"PowerFactor":{"enable":"/config/pcs:enable","note":"Calculates the average power factor reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:PowerFactor"},"ReactivePower":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePower"},"ReactivePowerRampRateFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power ramp rate feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerRampRateFeedback"},"ReactivePowerSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerSetpointFeedback"},"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"},"VoltageSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total voltage setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:VoltageSetpointFeedback"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}}}
[4.75024s  ] [info    ] [configLoad     ] tbody now: "/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":1200,"RatedApparentPower":1350,"RatedPowerFactor":0.8,"RatedReactivePower":1100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/controls/pcs":{"ActivePowerCmdReal":{"enable":"/config/pcs:enable","note":"Calculates the total active power command reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs_1:ActivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","note":"Used to forward value to children setpoint variables","value":0},"ReactivePowerCmdReal":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power command reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs_1:ReactivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","note":"Used to forward value to children setpoint variables","value":0}},"/limits/pcs":{"MaxPCSChargePower":{"enable":"/config/pcs:enable","note":"Calculates the total max charge power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"enable":"/config/pcs:enable","note":"Calculates the total max discharge power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:MaxPCSDischargePower"},"RatedActivePower":{"enable":"/config/pcs:enable","note":"Calculates the total rated active power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedActivePower"},"RatedApparentPower":{"enable":"/config/pcs:enable","note":"Calculates the total rated apparent power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedApparentPower"},"RatedReactivePower":{"enable":"/config/pcs:enable","note":"Calculates the total rated reactive power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedReactivePower"}},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmdReal":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmdReal":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:MaxPCSChargePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:MaxPCSDischargePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedActivePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedApparentPower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedReactivePower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePowerRampRateFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePowerSetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePower_Calculated":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ApparentPower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:CommsOK":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCClosed":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCCurrent":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCPower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCVoltage_Calculated":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:Frequency":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:FrequencySetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L1Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L1L2Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L2Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L2L3Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L3Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L3L1Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:MaxIGBTTemperature":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:PowerFactor":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePowerRampRateFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePowerSetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:VoltageSetpointFeedback":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerRampRateFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total active power ramp rate feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerRampRateFeedback"},"ActivePowerSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total active power setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerSetpointFeedback"},"ActivePower_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:ActivePower"}]}]},"enable":"/config/pcs:enable","note":"Calculates the total active power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePower"},"ApparentPower":{"enable":"/config/pcs:enable","note":"Calculates the total apparent power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ApparentPower"},"AvgLineVoltage":{"enable":"/config/pcs:enable","expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"enable":"/config/pcs:enable","note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","numVars":1,"operation":"and","value":true,"variable1":"pcs:CommsOK"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","numVars":1,"operation":"and","value":false,"variable1":"pcs:DCClosed"},"DCCurrent":{"enable":"/config/pcs:enable","note":"Calculates the average DC current reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCCurrent"},"DCPower":{"enable":"/config/pcs:enable","note":"Calculates the average DC power reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCPower"},"DCVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage"}]}]},"enable":"/config/pcs:enable","note":"Calculates the average DC voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCVoltage"},"Frequency":{"enable":"/config/pcs:enable","note":"Calculates the average frequency reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:Frequency"},"FrequencySetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total frequency setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:FrequencySetpointFeedback"},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"L1Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L1 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L1Current"},"L1L2Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L1-L2 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L1L2Voltage"},"L2Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L2 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L2Current"},"L2L3Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L2-L3 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L2L3Voltage"},"L3Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L3 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L3Current"},"L3L1Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L3-L1 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L3L1Voltage"},"MaxIGBTTemperature":{"enable":"/config/pcs:enable","note":"Calculates the max IGBT temperature reported by all PCS instances","numVars":1,"operation":"max","value":0,"variable1":"pcs:MaxIGBTTemperature"},"PowerFactor":{"enable":"/config/pcs:enable","note":"Calculates the average power factor reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:PowerFactor"},"ReactivePower":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePower"},"ReactivePowerRampRateFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power ramp rate feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerRampRateFeedback"},"ReactivePowerSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerSetpointFeedback"},"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"},"VoltageSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total voltage setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:VoltageSetpointFeedback"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}}
[4.75182s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":1200,"RatedApparentPower":1350,"RatedPowerFactor":0.8,"RatedReactivePower":1100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/controls/pcs":{"ActivePowerCmdReal":{"enable":"/config/pcs:enable","note":"Calculates the total active power command reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs_1:ActivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","note":"Used to forward value to children setpoint variables","value":0},"ReactivePowerCmdReal":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power command reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs_1:ReactivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","note":"Used to forward value to children setpoint variables","value":0}},"/limits/pcs":{"MaxPCSChargePower":{"enable":"/config/pcs:enable","note":"Calculates the total max charge power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"enable":"/config/pcs:enable","note":"Calculates the total max discharge power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:MaxPCSDischargePower"},"RatedActivePower":{"enable":"/config/pcs:enable","note":"Calculates the total rated active power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedActivePower"},"RatedApparentPower":{"enable":"/config/pcs:enable","note":"Calculates the total rated apparent power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedApparentPower"},"RatedReactivePower":{"enable":"/config/pcs:enable","note":"Calculates the total rated reactive power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedReactivePower"}},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmdReal":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmdReal":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:MaxPCSChargePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:MaxPCSDischargePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedActivePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedApparentPower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedReactivePower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePowerRampRateFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePowerSetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePower_Calculated":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ApparentPower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:CommsOK":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCClosed":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCCurrent":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCPower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCVoltage_Calculated":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:Frequency":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:FrequencySetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L1Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L1L2Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L2Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L2L3Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L3Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L3L1Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:MaxIGBTTemperature":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:PowerFactor":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePowerRampRateFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePowerSetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:VoltageSetpointFeedback":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerRampRateFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total active power ramp rate feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerRampRateFeedback"},"ActivePowerSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total active power setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerSetpointFeedback"},"ActivePower_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:ActivePower"}]}]},"enable":"/config/pcs:enable","note":"Calculates the total active power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePower"},"ApparentPower":{"enable":"/config/pcs:enable","note":"Calculates the total apparent power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ApparentPower"},"AvgLineVoltage":{"enable":"/config/pcs:enable","expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"enable":"/config/pcs:enable","note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","numVars":1,"operation":"and","value":true,"variable1":"pcs:CommsOK"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","numVars":1,"operation":"and","value":false,"variable1":"pcs:DCClosed"},"DCCurrent":{"enable":"/config/pcs:enable","note":"Calculates the average DC current reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCCurrent"},"DCPower":{"enable":"/config/pcs:enable","note":"Calculates the average DC power reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCPower"},"DCVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage"}]}]},"enable":"/config/pcs:enable","note":"Calculates the average DC voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCVoltage"},"Frequency":{"enable":"/config/pcs:enable","note":"Calculates the average frequency reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:Frequency"},"FrequencySetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total frequency setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:FrequencySetpointFeedback"},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"L1Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L1 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L1Current"},"L1L2Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L1-L2 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L1L2Voltage"},"L2Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L2 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L2Current"},"L2L3Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L2-L3 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L2L3Voltage"},"L3Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L3 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L3Current"},"L3L1Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L3-L1 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L3L1Voltage"},"MaxIGBTTemperature":{"enable":"/config/pcs:enable","note":"Calculates the max IGBT temperature reported by all PCS instances","numVars":1,"operation":"max","value":0,"variable1":"pcs:MaxIGBTTemperature"},"PowerFactor":{"enable":"/config/pcs:enable","note":"Calculates the average power factor reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:PowerFactor"},"ReactivePower":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePower"},"ReactivePowerRampRateFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power ramp rate feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerRampRateFeedback"},"ReactivePowerSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerSetpointFeedback"},"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"},"VoltageSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total voltage setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:VoltageSetpointFeedback"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}}
[4.75353s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":1200,"RatedApparentPower":1350,"RatedPowerFactor":0.8,"RatedReactivePower":1100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/controls/pcs":{"ActivePowerCmdReal":{"enable":"/config/pcs:enable","note":"Calculates the total active power command reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs_1:ActivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","note":"Used to forward value to children setpoint variables","value":0},"ReactivePowerCmdReal":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power command reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs_1:ReactivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","note":"Used to forward value to children setpoint variables","value":0}},"/limits/pcs":{"MaxPCSChargePower":{"enable":"/config/pcs:enable","note":"Calculates the total max charge power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"enable":"/config/pcs:enable","note":"Calculates the total max discharge power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:MaxPCSDischargePower"},"RatedActivePower":{"enable":"/config/pcs:enable","note":"Calculates the total rated active power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedActivePower"},"RatedApparentPower":{"enable":"/config/pcs:enable","note":"Calculates the total rated apparent power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedApparentPower"},"RatedReactivePower":{"enable":"/config/pcs:enable","note":"Calculates the total rated reactive power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedReactivePower"}},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmdReal":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmdReal":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:MaxPCSChargePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:MaxPCSDischargePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedActivePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedApparentPower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedReactivePower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePowerRampRateFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePowerSetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePower_Calculated":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ApparentPower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:CommsOK":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCClosed":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCCurrent":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCPower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCVoltage_Calculated":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:Frequency":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:FrequencySetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L1Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L1L2Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L2Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L2L3Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L3Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L3L1Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:MaxIGBTTemperature":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:PowerFactor":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePowerRampRateFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePowerSetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:VoltageSetpointFeedback":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerRampRateFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total active power ramp rate feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerRampRateFeedback"},"ActivePowerSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total active power setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerSetpointFeedback"},"ActivePower_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:ActivePower"}]}]},"enable":"/config/pcs:enable","note":"Calculates the total active power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePower"},"ApparentPower":{"enable":"/config/pcs:enable","note":"Calculates the total apparent power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ApparentPower"},"AvgLineVoltage":{"enable":"/config/pcs:enable","expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"enable":"/config/pcs:enable","note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","numVars":1,"operation":"and","value":true,"variable1":"pcs:CommsOK"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","numVars":1,"operation":"and","value":false,"variable1":"pcs:DCClosed"},"DCCurrent":{"enable":"/config/pcs:enable","note":"Calculates the average DC current reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCCurrent"},"DCPower":{"enable":"/config/pcs:enable","note":"Calculates the average DC power reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCPower"},"DCVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage"}]}]},"enable":"/config/pcs:enable","note":"Calculates the average DC voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCVoltage"},"Frequency":{"enable":"/config/pcs:enable","note":"Calculates the average frequency reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:Frequency"},"FrequencySetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total frequency setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:FrequencySetpointFeedback"},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"L1Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L1 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L1Current"},"L1L2Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L1-L2 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L1L2Voltage"},"L2Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L2 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L2Current"},"L2L3Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L2-L3 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L2L3Voltage"},"L3Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L3 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L3Current"},"L3L1Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L3-L1 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L3L1Voltage"},"MaxIGBTTemperature":{"enable":"/config/pcs:enable","note":"Calculates the max IGBT temperature reported by all PCS instances","numVars":1,"operation":"max","value":0,"variable1":"pcs:MaxIGBTTemperature"},"PowerFactor":{"enable":"/config/pcs:enable","note":"Calculates the average power factor reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:PowerFactor"},"ReactivePower":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePower"},"ReactivePowerRampRateFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power ramp rate feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerRampRateFeedback"},"ReactivePowerSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerSetpointFeedback"},"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"},"VoltageSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total voltage setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:VoltageSetpointFeedback"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}},"/alarms/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"alarm","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/faults/pcs":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"fault","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/schedule/wake_monitor/pcs":{"/status/pcs:ActivePower":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:DCVoltage":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:HeartbeatRead":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:IsAlarming":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:IsFaulted":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalAlarmCnt":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalFaultCnt":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":3510,"MaxAlarmTimeout":1,"MaxFaultThreshold":3525,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"enable":"/config/pcs:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/pcs:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs:SystemFault","variable2":"/status/pcs:TotalFaultCnt"},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/pcs:enable","numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalAlarmCnt","variable2":"/status/pcs:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/pcs:enable","numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalFaultCnt","variable2":"/status/pcs:FaultCnt"}}
[4.75532s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":1200,"RatedApparentPower":1350,"RatedPowerFactor":0.8,"RatedReactivePower":1100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/controls/pcs":{"ActivePowerCmdReal":{"enable":"/config/pcs:enable","note":"Calculates the total active power command reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs_1:ActivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","note":"Used to forward value to children setpoint variables","value":0},"ReactivePowerCmdReal":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power command reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs_1:ReactivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","note":"Used to forward value to children setpoint variables","value":0}},"/limits/pcs":{"MaxPCSChargePower":{"enable":"/config/pcs:enable","note":"Calculates the total max charge power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"enable":"/config/pcs:enable","note":"Calculates the total max discharge power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:MaxPCSDischargePower"},"RatedActivePower":{"enable":"/config/pcs:enable","note":"Calculates the total rated active power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedActivePower"},"RatedApparentPower":{"enable":"/config/pcs:enable","note":"Calculates the total rated apparent power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedApparentPower"},"RatedReactivePower":{"enable":"/config/pcs:enable","note":"Calculates the total rated reactive power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedReactivePower"}},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmdReal":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmdReal":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:MaxPCSChargePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:MaxPCSDischargePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedActivePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedApparentPower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedReactivePower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePowerRampRateFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePowerSetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePower_Calculated":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ApparentPower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:CommsOK":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCClosed":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCCurrent":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCPower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCVoltage_Calculated":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:Frequency":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:FrequencySetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L1Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L1L2Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L2Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L2L3Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L3Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L3L1Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:MaxIGBTTemperature":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:PowerFactor":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePowerRampRateFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePowerSetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:VoltageSetpointFeedback":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerRampRateFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total active power ramp rate feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerRampRateFeedback"},"ActivePowerSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total active power setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerSetpointFeedback"},"ActivePower_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:ActivePower"}]}]},"enable":"/config/pcs:enable","note":"Calculates the total active power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePower"},"ApparentPower":{"enable":"/config/pcs:enable","note":"Calculates the total apparent power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ApparentPower"},"AvgLineVoltage":{"enable":"/config/pcs:enable","expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"enable":"/config/pcs:enable","note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","numVars":1,"operation":"and","value":true,"variable1":"pcs:CommsOK"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","numVars":1,"operation":"and","value":false,"variable1":"pcs:DCClosed"},"DCCurrent":{"enable":"/config/pcs:enable","note":"Calculates the average DC current reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCCurrent"},"DCPower":{"enable":"/config/pcs:enable","note":"Calculates the average DC power reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCPower"},"DCVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage"}]}]},"enable":"/config/pcs:enable","note":"Calculates the average DC voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCVoltage"},"Frequency":{"enable":"/config/pcs:enable","note":"Calculates the average frequency reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:Frequency"},"FrequencySetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total frequency setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:FrequencySetpointFeedback"},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"L1Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L1 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L1Current"},"L1L2Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L1-L2 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L1L2Voltage"},"L2Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L2 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L2Current"},"L2L3Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L2-L3 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L2L3Voltage"},"L3Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L3 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L3Current"},"L3L1Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L3-L1 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L3L1Voltage"},"MaxIGBTTemperature":{"enable":"/config/pcs:enable","note":"Calculates the max IGBT temperature reported by all PCS instances","numVars":1,"operation":"max","value":0,"variable1":"pcs:MaxIGBTTemperature"},"PowerFactor":{"enable":"/config/pcs:enable","note":"Calculates the average power factor reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:PowerFactor"},"ReactivePower":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePower"},"ReactivePowerRampRateFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power ramp rate feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerRampRateFeedback"},"ReactivePowerSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerSetpointFeedback"},"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"},"VoltageSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total voltage setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:VoltageSetpointFeedback"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}},"/alarms/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"alarm","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/faults/pcs":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"fault","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/schedule/wake_monitor/pcs":{"/status/pcs:ActivePower":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:DCVoltage":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:HeartbeatRead":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:IsAlarming":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:IsFaulted":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalAlarmCnt":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalFaultCnt":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":3510,"MaxAlarmTimeout":1,"MaxFaultThreshold":3525,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"enable":"/config/pcs:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/pcs:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs:SystemFault","variable2":"/status/pcs:TotalFaultCnt"},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/pcs:enable","numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalAlarmCnt","variable2":"/status/pcs:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/pcs:enable","numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalFaultCnt","variable2":"/status/pcs:FaultCnt"}},"/components/pcs":{"grid_mode":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FollowPQ","uri":"/status/pcs:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVF","uri":"/status/pcs:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVSG","uri":"/status/pcs:GridMode"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs:grid_mode@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/components/pcs_registers_fast":{"current_status":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":1,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":2,"outValue":"Run","uri":"/status/pcs:SystemState"},{"inValue":3,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":4,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":5,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":6,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":8,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":9,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":10,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":11,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":12,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":13,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":14,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":15,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":17,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":18,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":19,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":20,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":21,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":22,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":24,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":0,"outValue":"Power up","uri":"/status/pcs:Status"},{"inValue":1,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":2,"outValue":"On","uri":"/status/pcs:Status"},{"inValue":3,"outValue":"Precharge","uri":"/status/pcs:Status"},{"inValue":4,"outValue":"Ready","uri":"/status/pcs:Status"},{"inValue":5,"outValue":"Wait","uri":"/status/pcs:Status"},{"inValue":6,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:Status"},{"inValue":8,"outValue":"Discharge","uri":"/status/pcs:Status"},{"inValue":9,"outValue":"Fault","uri":"/status/pcs:Status"},{"inValue":10,"outValue":"LVRT","uri":"/status/pcs:Status"},{"inValue":11,"outValue":"OVRT","uri":"/status/pcs:Status"},{"inValue":12,"outValue":"Night","uri":"/status/pcs:Status"},{"inValue":13,"outValue":"Night DC off","uri":"/status/pcs:Status"},{"inValue":14,"outValue":"Standby","uri":"/status/pcs:Status"},{"inValue":15,"outValue":"HVPL","uri":"/status/pcs:Status"},{"inValue":17,"outValue":"Pre-on","uri":"/status/pcs:Status"},{"inValue":18,"outValue":"Self-diagnosis","uri":"/status/pcs:Status"},{"inValue":19,"outValue":"Filter contactors","uri":"/status/pcs:Status"},{"inValue":20,"outValue":"Premagnetization","uri":"/status/pcs:Status"},{"inValue":21,"outValue":"Bank balancing","uri":"/status/pcs:Status"},{"inValue":22,"outValue":"CV stand by","uri":"/status/pcs:Status"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs_registers_fast:current_status@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/pcs":{"checkInputs_pcs":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/pcs:status@ifChanged"},{"outValue":false,"uri":"/components/pcs:grid_mode@ifChanged"}]}]},"enable":"/config/pcs:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/pcs":{"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs:heartbeat_read","vlink":"/status/pcs:HeartbeatRead"}}
[4.75764s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":1200,"RatedApparentPower":1350,"RatedPowerFactor":0.8,"RatedReactivePower":1100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/controls/pcs":{"ActivePowerCmdReal":{"enable":"/config/pcs:enable","note":"Calculates the total active power command reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs_1:ActivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","note":"Used to forward value to children setpoint variables","value":0},"ReactivePowerCmdReal":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power command reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs_1:ReactivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","note":"Used to forward value to children setpoint variables","value":0}},"/limits/pcs":{"MaxPCSChargePower":{"enable":"/config/pcs:enable","note":"Calculates the total max charge power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"enable":"/config/pcs:enable","note":"Calculates the total max discharge power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:MaxPCSDischargePower"},"RatedActivePower":{"enable":"/config/pcs:enable","note":"Calculates the total rated active power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedActivePower"},"RatedApparentPower":{"enable":"/config/pcs:enable","note":"Calculates the total rated apparent power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedApparentPower"},"RatedReactivePower":{"enable":"/config/pcs:enable","note":"Calculates the total rated reactive power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedReactivePower"}},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmdReal":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmdReal":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:MaxPCSChargePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:MaxPCSDischargePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedActivePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedApparentPower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedReactivePower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePowerRampRateFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePowerSetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePower_Calculated":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ApparentPower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:CommsOK":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCClosed":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCCurrent":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCPower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCVoltage_Calculated":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:Frequency":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:FrequencySetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L1Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L1L2Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L2Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L2L3Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L3Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L3L1Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:MaxIGBTTemperature":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:PowerFactor":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePowerRampRateFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePowerSetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:VoltageSetpointFeedback":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerRampRateFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total active power ramp rate feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerRampRateFeedback"},"ActivePowerSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total active power setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerSetpointFeedback"},"ActivePower_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:ActivePower"}]}]},"enable":"/config/pcs:enable","note":"Calculates the total active power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePower"},"ApparentPower":{"enable":"/config/pcs:enable","note":"Calculates the total apparent power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ApparentPower"},"AvgLineVoltage":{"enable":"/config/pcs:enable","expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"enable":"/config/pcs:enable","note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","numVars":1,"operation":"and","value":true,"variable1":"pcs:CommsOK"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","numVars":1,"operation":"and","value":false,"variable1":"pcs:DCClosed"},"DCCurrent":{"enable":"/config/pcs:enable","note":"Calculates the average DC current reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCCurrent"},"DCPower":{"enable":"/config/pcs:enable","note":"Calculates the average DC power reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCPower"},"DCVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage"}]}]},"enable":"/config/pcs:enable","note":"Calculates the average DC voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCVoltage"},"Frequency":{"enable":"/config/pcs:enable","note":"Calculates the average frequency reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:Frequency"},"FrequencySetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total frequency setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:FrequencySetpointFeedback"},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"L1Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L1 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L1Current"},"L1L2Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L1-L2 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L1L2Voltage"},"L2Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L2 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L2Current"},"L2L3Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L2-L3 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L2L3Voltage"},"L3Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L3 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L3Current"},"L3L1Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L3-L1 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L3L1Voltage"},"MaxIGBTTemperature":{"enable":"/config/pcs:enable","note":"Calculates the max IGBT temperature reported by all PCS instances","numVars":1,"operation":"max","value":0,"variable1":"pcs:MaxIGBTTemperature"},"PowerFactor":{"enable":"/config/pcs:enable","note":"Calculates the average power factor reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:PowerFactor"},"ReactivePower":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePower"},"ReactivePowerRampRateFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power ramp rate feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerRampRateFeedback"},"ReactivePowerSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerSetpointFeedback"},"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"},"VoltageSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total voltage setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:VoltageSetpointFeedback"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}},"/alarms/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"alarm","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/faults/pcs":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"fault","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/schedule/wake_monitor/pcs":{"/status/pcs:ActivePower":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:DCVoltage":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:HeartbeatRead":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:IsAlarming":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:IsFaulted":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalAlarmCnt":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalFaultCnt":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":3510,"MaxAlarmTimeout":1,"MaxFaultThreshold":3525,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"enable":"/config/pcs:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/pcs:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs:SystemFault","variable2":"/status/pcs:TotalFaultCnt"},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/pcs:enable","numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalAlarmCnt","variable2":"/status/pcs:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/pcs:enable","numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalFaultCnt","variable2":"/status/pcs:FaultCnt"}},"/components/pcs":{"grid_mode":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FollowPQ","uri":"/status/pcs:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVF","uri":"/status/pcs:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVSG","uri":"/status/pcs:GridMode"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs:grid_mode@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/components/pcs_registers_fast":{"current_status":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":1,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":2,"outValue":"Run","uri":"/status/pcs:SystemState"},{"inValue":3,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":4,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":5,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":6,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":8,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":9,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":10,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":11,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":12,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":13,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":14,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":15,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":17,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":18,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":19,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":20,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":21,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":22,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":24,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":0,"outValue":"Power up","uri":"/status/pcs:Status"},{"inValue":1,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":2,"outValue":"On","uri":"/status/pcs:Status"},{"inValue":3,"outValue":"Precharge","uri":"/status/pcs:Status"},{"inValue":4,"outValue":"Ready","uri":"/status/pcs:Status"},{"inValue":5,"outValue":"Wait","uri":"/status/pcs:Status"},{"inValue":6,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:Status"},{"inValue":8,"outValue":"Discharge","uri":"/status/pcs:Status"},{"inValue":9,"outValue":"Fault","uri":"/status/pcs:Status"},{"inValue":10,"outValue":"LVRT","uri":"/status/pcs:Status"},{"inValue":11,"outValue":"OVRT","uri":"/status/pcs:Status"},{"inValue":12,"outValue":"Night","uri":"/status/pcs:Status"},{"inValue":13,"outValue":"Night DC off","uri":"/status/pcs:Status"},{"inValue":14,"outValue":"Standby","uri":"/status/pcs:Status"},{"inValue":15,"outValue":"HVPL","uri":"/status/pcs:Status"},{"inValue":17,"outValue":"Pre-on","uri":"/status/pcs:Status"},{"inValue":18,"outValue":"Self-diagnosis","uri":"/status/pcs:Status"},{"inValue":19,"outValue":"Filter contactors","uri":"/status/pcs:Status"},{"inValue":20,"outValue":"Premagnetization","uri":"/status/pcs:Status"},{"inValue":21,"outValue":"Bank balancing","uri":"/status/pcs:Status"},{"inValue":22,"outValue":"CV stand by","uri":"/status/pcs:Status"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs_registers_fast:current_status@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/pcs":{"checkInputs_pcs":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/pcs:status@ifChanged"},{"outValue":false,"uri":"/components/pcs:grid_mode@ifChanged"}]}]},"enable":"/config/pcs:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/pcs":{"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs:heartbeat_read","vlink":"/status/pcs:HeartbeatRead"}},"/site/ess":{"active_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Active Power Ramp Rate","note":"Sets the active power ramp rate","size":1,"type":"control","units":"kW/s","value":0},"active_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Active Power Setpoint","note":"Sets the active power setpoint","signed":true,"size":1,"type":"control","units":"kW","value":0},"frequency_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Frequency Setpoint","note":"Sets the frequency setpoint","size":1,"type":"control","units":"Hz","value":0},"on_off_grid_mode_setting":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":1,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":1,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"},{"inValue":2,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":2,"outValue":2,"uri":"/controls/pcs:GridFormVF"},{"inValue":3,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":3,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Grid-following/forming Mode Command","note":"Initiates PCS grid-following/forming command routines","size":1,"type":"control","value":0},"pcs_active_power":{"name":"PCS Active Power","signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_active_power_ramp_rate_feedback":{"name":"PCS Active Power Ramp Rate Feedback","size":1,"type":"status","units":"kW/s","value":0},"pcs_active_power_setpoint_feedback":{"name":"PCS Active Power Setpoint Feedback","signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_alarm_active":{"name":"PCS Alarm Active","size":1,"type":"status","value":false},"pcs_apparent_power":{"name":"PCS Apparent Power","signed":true,"size":1,"type":"status","units":"kVA","value":0},"pcs_avg_line_voltage":{"name":"PCS Average Line Voltage","size":1,"type":"status","units":"V","value":0},"pcs_comms_ok":{"name":"PCS Comms OK","size":1,"type":"status","value":false},"pcs_control_alarms":{"bit0":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit10":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit11":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit12":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit13":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit14":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","bit15":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","bit16":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","bit17":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","bit18":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit19":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit2":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit20":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","bit21":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","bit22":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","bit23":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","bit24":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit4":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit5":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit6":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit7":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit8":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit9":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","name":"PCS Control Alarms","type":"bitfield","value":0},"pcs_dc_current":{"name":"PCS DC Current","scale":10,"signed":true,"size":1,"type":"status","units":"A","value":0},"pcs_dc_power":{"name":"PCS DC Power","scale":10,"signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_dc_voltage":{"name":"PCS DC Voltage","scale":10,"signed":true,"size":1,"type":"status","units":"V","value":0},"pcs_fault_active":{"name":"PCS Fault Active","size":1,"type":"status","value":false},"pcs_frequency":{"name":"PCS Grid Frequency","scale":100,"size":1,"type":"status","units":"Hz","value":0},"pcs_frequency_setpoint_feedback":{"name":"PCS Frequency Setpoint Feedback","size":1,"type":"status","units":"Hz","value":0},"pcs_grid_mode":{"bit0":"FollowPQ","bit1":"FormVF","bit2":"FormVSG","name":"PCS Grid Mode","type":"bitfield","value":0},"pcs_is_running":{"name":"PCS is Running","size":1,"type":"status","value":false},"pcs_l1_current":{"name":"PCS Grid Current 1","scale":10,"size":1,"type":"status","units":"A","value":0},"pcs_l1_l2_voltage":{"name":"PCS Grid Voltage L1-L2","size":1,"type":"status","units":"V","value":0},"pcs_l2_current":{"name":"PCS Grid Current 2","scale":10,"size":1,"type":"status","units":"A","value":0},"pcs_l2_l3_voltage":{"name":"PCS Grid Voltage L2-L3","size":1,"type":"status","units":"V","value":0},"pcs_l3_current":{"name":"PCS Grid Current 3","scale":10,"size":1,"type":"status","units":"A","value":0},"pcs_l3_l1_voltage":{"name":"PCS Grid Voltage L3-L1","size":1,"type":"status","units":"V","value":0},"pcs_max_charge_power":{"name":"PCS Max Charge Power","signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_max_discharge_power":{"name":"PCS Max Discharge Power","size":1,"type":"status","units":"kW","value":0},"pcs_max_igbt_temperature":{"name":"PCS Max IGBT Temperature","scale":100,"size":1,"type":"status","units":"°C","value":0},"pcs_monitor_alarms":{"bit0":"PCS ActivePower - Max Threshold Exceeded","bit1":"PCS DCVoltage - Max Threshold Exceeded","bit2":"PCS DCVoltage - Min Threshold Exceeded","name":"PCS Monitor Alarms","type":"bitfield","value":0},"pcs_monitor_faults":{"bit0":"PCS ActivePower - Max Threshold Exceeded","bit1":"PCS DCVoltage - Max Threshold Exceeded","bit2":"PCS DCVoltage - Min Threshold Exceeded","name":"PCS Monitor Faults","type":"bitfield","value":0},"pcs_power_factor":{"name":"PCS Power Factor","scale":1000,"signed":true,"size":1,"type":"status","value":0},"pcs_rated_active_power":{"name":"PCS Rated Active Power","signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_rated_apparent_power":{"name":"PCS Rated Apparent Power","signed":true,"size":1,"type":"status","units":"kVA","value":0},"pcs_rated_reactive_power":{"name":"PCS Rated Reactive Power","signed":true,"size":1,"type":"status","units":"kVAR","value":0},"pcs_reactive_power":{"name":"PCS Reactive Power","signed":true,"size":1,"type":"status","units":"kVAR","value":0},"pcs_reactive_power_ramp_rate_feedback":{"name":"PCS Reactive Power Ramp Rate Feedback","size":1,"type":"status","units":"kVAR/s","value":0},"pcs_reactive_power_setpoint_feedback":{"name":"PCS Reactive Power Setpoint Feedback","signed":true,"size":1,"type":"status","units":"kVAR","value":0},"pcs_standby_enabled":{"excludeFromFile":true,"name":"PCS Standby Enabled","size":1,"type":"status","value":false},"pcs_start_enabled":{"excludeFromFile":true,"name":"PCS Start Enabled","size":1,"type":"status","value":false},"pcs_status":{"excludeFromFile":true,"name":"PCS Status","size":1,"type":"status","value":"INIT"},"pcs_stop_enabled":{"excludeFromFile":true,"name":"PCS Stop Enabled","size":1,"type":"status","value":false},"pcs_system_state":{"bit0":"Stop","bit1":"Run","bit2":"Fault","bit3":"Standby","name":"PCS System State","type":"bitfield","value":0},"pcs_voltage_setpoint_feedback":{"name":"PCS Voltage Setpoint Feedback","size":1,"type":"status","units":"V","value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Reactive Power Ramp Rate","note":"Sets the reactive power ramp rate","size":1,"type":"control","units":"kVAR/s","value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Reactive Power Setpoint","note":"Sets the reactive power setpoint","signed":true,"size":1,"type":"control","units":"kVAR","value":0},"start_stop_standby_command":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/ess:remote_control_enable","every":0.5,"ifChanged":false,"name":"Start/Stop/Standby Command","note1":"Initiates PCS start, standby, or stop command routines","note2":"0-\u003estop | 1-\u003estart | 2-\u003estandby","offset":0,"size":1,"type":"control","uri":"/sched/ess:SitePCSStatusControl","value":-1},"voltage_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Voltage Setpoint","note":"Sets the voltage setpoint","size":1,"type":"control","units":"V","value":0}},"/vlinks/pcs":{"site_pcs_active_power":{"default":0,"value":"/site/ess:pcs_active_power","vlink":"/status/pcs:ActivePower"},"site_pcs_active_power_ramp_rate_feedback":{"default":0,"value":"/site/ess:pcs_active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"site_pcs_active_power_setpoint_feedback":{"default":0,"value":"/site/ess:pcs_active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"site_pcs_alarm_active":{"default":false,"value":"/site/ess:pcs_alarm_active","vlink":"/status/pcs:IsAlarming"},"site_pcs_apparent_power":{"default":0,"value":"/site/ess:pcs_apparent_power","vlink":"/status/pcs:ApparentPower"},"site_pcs_avg_line_voltage":{"default":0,"value":"/site/ess:pcs_avg_line_voltage","vlink":"/status/pcs:AvgLineVoltage"},"site_pcs_comms_ok":{"default":false,"value":"/site/ess:pcs_comms_ok","vlink":"/status/pcs:CommsOK"},"site_pcs_dc_current":{"default":0,"value":"/site/ess:pcs_dc_current","vlink":"/status/pcs:DCCurrent"},"site_pcs_dc_power":{"default":0,"value":"/site/ess:pcs_dc_power","vlink":"/status/pcs:DCPower"},"site_pcs_dc_voltage":{"default":0,"value":"/site/ess:pcs_dc_voltage","vlink":"/status/pcs:DCVoltage"},"site_pcs_fault_active":{"default":false,"value":"/site/ess:pcs_fault_active","vlink":"/status/pcs:IsFaulted"},"site_pcs_frequency":{"default":0,"value":"/site/ess:pcs_frequency","vlink":"/status/pcs:Frequency"},"site_pcs_frequency_setpoint_feedback":{"default":0,"value":"/site/ess:pcs_frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"site_pcs_is_running":{"default":false,"value":"/site/ess:pcs_is_running","vlink":"/status/pcs:IsRunning"},"site_pcs_l1_current":{"default":0,"value":"/site/ess:pcs_l1_current","vlink":"/status/pcs:L1Current"},"site_pcs_l1_l2_voltage":{"default":0,"value":"/site/ess:pcs_l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"site_pcs_l2_current":{"default":0,"value":"/site/ess:pcs_l2_current","vlink":"/status/pcs:L2Current"},"site_pcs_l2_l3_voltage":{"default":0,"value":"/site/ess:pcs_l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"site_pcs_l3_current":{"default":0,"value":"/site/ess:pcs_l3_current","vlink":"/status/pcs:L3Current"},"site_pcs_l3_l1_voltage":{"default":0,"value":"/site/ess:pcs_l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"site_pcs_max_charge_power":{"default":0,"value":"/site/ess:pcs_max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"site_pcs_max_discharge_power":{"default":0,"value":"/site/ess:pcs_max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"site_pcs_max_igbt_temperature":{"default":0,"value":"/site/ess:pcs_max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"site_pcs_power_factor":{"default":0,"value":"/site/ess:pcs_power_factor","vlink":"/status/pcs:PowerFactor"},"site_pcs_rated_active_power":{"default":0,"value":"/site/ess:pcs_rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"site_pcs_rated_apparent_power":{"default":0,"value":"/site/ess:pcs_rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"site_pcs_rated_reactive_power":{"default":0,"value":"/site/ess:pcs_rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"site_pcs_reactive_power":{"default":0,"value":"/site/ess:pcs_reactive_power","vlink":"/status/pcs:ReactivePower"},"site_pcs_reactive_power_ramp_rate_feedback":{"default":0,"value":"/site/ess:pcs_reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"site_pcs_reactive_power_setpoint_feedback":{"default":0,"value":"/site/ess:pcs_reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"site_pcs_standby_enabled":{"default":false,"value":"/site/ess:pcs_standby_enabled","vlink":"/status/pcs:StandbyEnabled"},"site_pcs_start_enabled":{"default":false,"value":"/site/ess:pcs_start_enabled","vlink":"/status/pcs:StartEnabled"},"site_pcs_status":{"default":"INIT","value":"/site/ess:pcs_status","vlink":"/status/pcs:Status"},"site_pcs_stop_enabled":{"default":false,"value":"/site/ess:pcs_stop_enabled","vlink":"/status/pcs:StopEnabled"},"site_pcs_voltage_setpoint_feedback":{"default":0,"value":"/site/ess:pcs_voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}}
[4.76066s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":1200,"RatedApparentPower":1350,"RatedPowerFactor":0.8,"RatedReactivePower":1100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/controls/pcs":{"ActivePowerCmdReal":{"enable":"/config/pcs:enable","note":"Calculates the total active power command reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs_1:ActivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","note":"Used to forward value to children setpoint variables","value":0},"ReactivePowerCmdReal":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power command reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs_1:ReactivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","note":"Used to forward value to children setpoint variables","value":0}},"/limits/pcs":{"MaxPCSChargePower":{"enable":"/config/pcs:enable","note":"Calculates the total max charge power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"enable":"/config/pcs:enable","note":"Calculates the total max discharge power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:MaxPCSDischargePower"},"RatedActivePower":{"enable":"/config/pcs:enable","note":"Calculates the total rated active power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedActivePower"},"RatedApparentPower":{"enable":"/config/pcs:enable","note":"Calculates the total rated apparent power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedApparentPower"},"RatedReactivePower":{"enable":"/config/pcs:enable","note":"Calculates the total rated reactive power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedReactivePower"}},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmdReal":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmdReal":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:MaxPCSChargePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:MaxPCSDischargePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedActivePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedApparentPower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedReactivePower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePowerRampRateFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePowerSetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePower_Calculated":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ApparentPower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:CommsOK":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCClosed":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCCurrent":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCPower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCVoltage_Calculated":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:Frequency":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:FrequencySetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L1Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L1L2Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L2Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L2L3Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L3Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L3L1Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:MaxIGBTTemperature":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:PowerFactor":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePowerRampRateFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePowerSetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:VoltageSetpointFeedback":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerRampRateFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total active power ramp rate feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerRampRateFeedback"},"ActivePowerSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total active power setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerSetpointFeedback"},"ActivePower_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:ActivePower"}]}]},"enable":"/config/pcs:enable","note":"Calculates the total active power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePower"},"ApparentPower":{"enable":"/config/pcs:enable","note":"Calculates the total apparent power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ApparentPower"},"AvgLineVoltage":{"enable":"/config/pcs:enable","expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"enable":"/config/pcs:enable","note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","numVars":1,"operation":"and","value":true,"variable1":"pcs:CommsOK"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","numVars":1,"operation":"and","value":false,"variable1":"pcs:DCClosed"},"DCCurrent":{"enable":"/config/pcs:enable","note":"Calculates the average DC current reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCCurrent"},"DCPower":{"enable":"/config/pcs:enable","note":"Calculates the average DC power reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCPower"},"DCVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage"}]}]},"enable":"/config/pcs:enable","note":"Calculates the average DC voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCVoltage"},"Frequency":{"enable":"/config/pcs:enable","note":"Calculates the average frequency reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:Frequency"},"FrequencySetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total frequency setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:FrequencySetpointFeedback"},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"L1Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L1 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L1Current"},"L1L2Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L1-L2 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L1L2Voltage"},"L2Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L2 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L2Current"},"L2L3Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L2-L3 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L2L3Voltage"},"L3Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L3 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L3Current"},"L3L1Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L3-L1 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L3L1Voltage"},"MaxIGBTTemperature":{"enable":"/config/pcs:enable","note":"Calculates the max IGBT temperature reported by all PCS instances","numVars":1,"operation":"max","value":0,"variable1":"pcs:MaxIGBTTemperature"},"PowerFactor":{"enable":"/config/pcs:enable","note":"Calculates the average power factor reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:PowerFactor"},"ReactivePower":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePower"},"ReactivePowerRampRateFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power ramp rate feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerRampRateFeedback"},"ReactivePowerSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerSetpointFeedback"},"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"},"VoltageSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total voltage setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:VoltageSetpointFeedback"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}},"/alarms/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"alarm","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/faults/pcs":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"fault","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/schedule/wake_monitor/pcs":{"/status/pcs:ActivePower":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:DCVoltage":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:HeartbeatRead":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:IsAlarming":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:IsFaulted":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalAlarmCnt":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalFaultCnt":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":3510,"MaxAlarmTimeout":1,"MaxFaultThreshold":3525,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"enable":"/config/pcs:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/pcs:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs:SystemFault","variable2":"/status/pcs:TotalFaultCnt"},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/pcs:enable","numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalAlarmCnt","variable2":"/status/pcs:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/pcs:enable","numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalFaultCnt","variable2":"/status/pcs:FaultCnt"}},"/components/pcs":{"grid_mode":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FollowPQ","uri":"/status/pcs:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVF","uri":"/status/pcs:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVSG","uri":"/status/pcs:GridMode"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs:grid_mode@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/components/pcs_registers_fast":{"current_status":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":1,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":2,"outValue":"Run","uri":"/status/pcs:SystemState"},{"inValue":3,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":4,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":5,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":6,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":8,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":9,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":10,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":11,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":12,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":13,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":14,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":15,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":17,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":18,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":19,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":20,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":21,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":22,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":24,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":0,"outValue":"Power up","uri":"/status/pcs:Status"},{"inValue":1,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":2,"outValue":"On","uri":"/status/pcs:Status"},{"inValue":3,"outValue":"Precharge","uri":"/status/pcs:Status"},{"inValue":4,"outValue":"Ready","uri":"/status/pcs:Status"},{"inValue":5,"outValue":"Wait","uri":"/status/pcs:Status"},{"inValue":6,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:Status"},{"inValue":8,"outValue":"Discharge","uri":"/status/pcs:Status"},{"inValue":9,"outValue":"Fault","uri":"/status/pcs:Status"},{"inValue":10,"outValue":"LVRT","uri":"/status/pcs:Status"},{"inValue":11,"outValue":"OVRT","uri":"/status/pcs:Status"},{"inValue":12,"outValue":"Night","uri":"/status/pcs:Status"},{"inValue":13,"outValue":"Night DC off","uri":"/status/pcs:Status"},{"inValue":14,"outValue":"Standby","uri":"/status/pcs:Status"},{"inValue":15,"outValue":"HVPL","uri":"/status/pcs:Status"},{"inValue":17,"outValue":"Pre-on","uri":"/status/pcs:Status"},{"inValue":18,"outValue":"Self-diagnosis","uri":"/status/pcs:Status"},{"inValue":19,"outValue":"Filter contactors","uri":"/status/pcs:Status"},{"inValue":20,"outValue":"Premagnetization","uri":"/status/pcs:Status"},{"inValue":21,"outValue":"Bank balancing","uri":"/status/pcs:Status"},{"inValue":22,"outValue":"CV stand by","uri":"/status/pcs:Status"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs_registers_fast:current_status@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/pcs":{"checkInputs_pcs":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/pcs:status@ifChanged"},{"outValue":false,"uri":"/components/pcs:grid_mode@ifChanged"}]}]},"enable":"/config/pcs:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/pcs":{"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs:heartbeat_read","vlink":"/status/pcs:HeartbeatRead"}},"/site/ess":{"active_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Active Power Ramp Rate","note":"Sets the active power ramp rate","size":1,"type":"control","units":"kW/s","value":0},"active_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Active Power Setpoint","note":"Sets the active power setpoint","signed":true,"size":1,"type":"control","units":"kW","value":0},"frequency_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Frequency Setpoint","note":"Sets the frequency setpoint","size":1,"type":"control","units":"Hz","value":0},"on_off_grid_mode_setting":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":1,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":1,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"},{"inValue":2,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":2,"outValue":2,"uri":"/controls/pcs:GridFormVF"},{"inValue":3,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":3,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Grid-following/forming Mode Command","note":"Initiates PCS grid-following/forming command routines","size":1,"type":"control","value":0},"pcs_active_power":{"name":"PCS Active Power","signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_active_power_ramp_rate_feedback":{"name":"PCS Active Power Ramp Rate Feedback","size":1,"type":"status","units":"kW/s","value":0},"pcs_active_power_setpoint_feedback":{"name":"PCS Active Power Setpoint Feedback","signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_alarm_active":{"name":"PCS Alarm Active","size":1,"type":"status","value":false},"pcs_apparent_power":{"name":"PCS Apparent Power","signed":true,"size":1,"type":"status","units":"kVA","value":0},"pcs_avg_line_voltage":{"name":"PCS Average Line Voltage","size":1,"type":"status","units":"V","value":0},"pcs_comms_ok":{"name":"PCS Comms OK","size":1,"type":"status","value":false},"pcs_control_alarms":{"bit0":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit10":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit11":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit12":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit13":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit14":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","bit15":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","bit16":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","bit17":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","bit18":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit19":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit2":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit20":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","bit21":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","bit22":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","bit23":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","bit24":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit4":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit5":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit6":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit7":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit8":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit9":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","name":"PCS Control Alarms","type":"bitfield","value":0},"pcs_dc_current":{"name":"PCS DC Current","scale":10,"signed":true,"size":1,"type":"status","units":"A","value":0},"pcs_dc_power":{"name":"PCS DC Power","scale":10,"signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_dc_voltage":{"name":"PCS DC Voltage","scale":10,"signed":true,"size":1,"type":"status","units":"V","value":0},"pcs_fault_active":{"name":"PCS Fault Active","size":1,"type":"status","value":false},"pcs_frequency":{"name":"PCS Grid Frequency","scale":100,"size":1,"type":"status","units":"Hz","value":0},"pcs_frequency_setpoint_feedback":{"name":"PCS Frequency Setpoint Feedback","size":1,"type":"status","units":"Hz","value":0},"pcs_grid_mode":{"bit0":"FollowPQ","bit1":"FormVF","bit2":"FormVSG","name":"PCS Grid Mode","type":"bitfield","value":0},"pcs_is_running":{"name":"PCS is Running","size":1,"type":"status","value":false},"pcs_l1_current":{"name":"PCS Grid Current 1","scale":10,"size":1,"type":"status","units":"A","value":0},"pcs_l1_l2_voltage":{"name":"PCS Grid Voltage L1-L2","size":1,"type":"status","units":"V","value":0},"pcs_l2_current":{"name":"PCS Grid Current 2","scale":10,"size":1,"type":"status","units":"A","value":0},"pcs_l2_l3_voltage":{"name":"PCS Grid Voltage L2-L3","size":1,"type":"status","units":"V","value":0},"pcs_l3_current":{"name":"PCS Grid Current 3","scale":10,"size":1,"type":"status","units":"A","value":0},"pcs_l3_l1_voltage":{"name":"PCS Grid Voltage L3-L1","size":1,"type":"status","units":"V","value":0},"pcs_max_charge_power":{"name":"PCS Max Charge Power","signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_max_discharge_power":{"name":"PCS Max Discharge Power","size":1,"type":"status","units":"kW","value":0},"pcs_max_igbt_temperature":{"name":"PCS Max IGBT Temperature","scale":100,"size":1,"type":"status","units":"°C","value":0},"pcs_monitor_alarms":{"bit0":"PCS ActivePower - Max Threshold Exceeded","bit1":"PCS DCVoltage - Max Threshold Exceeded","bit2":"PCS DCVoltage - Min Threshold Exceeded","name":"PCS Monitor Alarms","type":"bitfield","value":0},"pcs_monitor_faults":{"bit0":"PCS ActivePower - Max Threshold Exceeded","bit1":"PCS DCVoltage - Max Threshold Exceeded","bit2":"PCS DCVoltage - Min Threshold Exceeded","name":"PCS Monitor Faults","type":"bitfield","value":0},"pcs_power_factor":{"name":"PCS Power Factor","scale":1000,"signed":true,"size":1,"type":"status","value":0},"pcs_rated_active_power":{"name":"PCS Rated Active Power","signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_rated_apparent_power":{"name":"PCS Rated Apparent Power","signed":true,"size":1,"type":"status","units":"kVA","value":0},"pcs_rated_reactive_power":{"name":"PCS Rated Reactive Power","signed":true,"size":1,"type":"status","units":"kVAR","value":0},"pcs_reactive_power":{"name":"PCS Reactive Power","signed":true,"size":1,"type":"status","units":"kVAR","value":0},"pcs_reactive_power_ramp_rate_feedback":{"name":"PCS Reactive Power Ramp Rate Feedback","size":1,"type":"status","units":"kVAR/s","value":0},"pcs_reactive_power_setpoint_feedback":{"name":"PCS Reactive Power Setpoint Feedback","signed":true,"size":1,"type":"status","units":"kVAR","value":0},"pcs_standby_enabled":{"excludeFromFile":true,"name":"PCS Standby Enabled","size":1,"type":"status","value":false},"pcs_start_enabled":{"excludeFromFile":true,"name":"PCS Start Enabled","size":1,"type":"status","value":false},"pcs_status":{"excludeFromFile":true,"name":"PCS Status","size":1,"type":"status","value":"INIT"},"pcs_stop_enabled":{"excludeFromFile":true,"name":"PCS Stop Enabled","size":1,"type":"status","value":false},"pcs_system_state":{"bit0":"Stop","bit1":"Run","bit2":"Fault","bit3":"Standby","name":"PCS System State","type":"bitfield","value":0},"pcs_voltage_setpoint_feedback":{"name":"PCS Voltage Setpoint Feedback","size":1,"type":"status","units":"V","value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Reactive Power Ramp Rate","note":"Sets the reactive power ramp rate","size":1,"type":"control","units":"kVAR/s","value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Reactive Power Setpoint","note":"Sets the reactive power setpoint","signed":true,"size":1,"type":"control","units":"kVAR","value":0},"start_stop_standby_command":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/ess:remote_control_enable","every":0.5,"ifChanged":false,"name":"Start/Stop/Standby Command","note1":"Initiates PCS start, standby, or stop command routines","note2":"0-\u003estop | 1-\u003estart | 2-\u003estandby","offset":0,"size":1,"type":"control","uri":"/sched/ess:SitePCSStatusControl","value":-1},"voltage_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Voltage Setpoint","note":"Sets the voltage setpoint","size":1,"type":"control","units":"V","value":0}},"/vlinks/pcs":{"site_pcs_active_power":{"default":0,"value":"/site/ess:pcs_active_power","vlink":"/status/pcs:ActivePower"},"site_pcs_active_power_ramp_rate_feedback":{"default":0,"value":"/site/ess:pcs_active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"site_pcs_active_power_setpoint_feedback":{"default":0,"value":"/site/ess:pcs_active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"site_pcs_alarm_active":{"default":false,"value":"/site/ess:pcs_alarm_active","vlink":"/status/pcs:IsAlarming"},"site_pcs_apparent_power":{"default":0,"value":"/site/ess:pcs_apparent_power","vlink":"/status/pcs:ApparentPower"},"site_pcs_avg_line_voltage":{"default":0,"value":"/site/ess:pcs_avg_line_voltage","vlink":"/status/pcs:AvgLineVoltage"},"site_pcs_comms_ok":{"default":false,"value":"/site/ess:pcs_comms_ok","vlink":"/status/pcs:CommsOK"},"site_pcs_dc_current":{"default":0,"value":"/site/ess:pcs_dc_current","vlink":"/status/pcs:DCCurrent"},"site_pcs_dc_power":{"default":0,"value":"/site/ess:pcs_dc_power","vlink":"/status/pcs:DCPower"},"site_pcs_dc_voltage":{"default":0,"value":"/site/ess:pcs_dc_voltage","vlink":"/status/pcs:DCVoltage"},"site_pcs_fault_active":{"default":false,"value":"/site/ess:pcs_fault_active","vlink":"/status/pcs:IsFaulted"},"site_pcs_frequency":{"default":0,"value":"/site/ess:pcs_frequency","vlink":"/status/pcs:Frequency"},"site_pcs_frequency_setpoint_feedback":{"default":0,"value":"/site/ess:pcs_frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"site_pcs_is_running":{"default":false,"value":"/site/ess:pcs_is_running","vlink":"/status/pcs:IsRunning"},"site_pcs_l1_current":{"default":0,"value":"/site/ess:pcs_l1_current","vlink":"/status/pcs:L1Current"},"site_pcs_l1_l2_voltage":{"default":0,"value":"/site/ess:pcs_l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"site_pcs_l2_current":{"default":0,"value":"/site/ess:pcs_l2_current","vlink":"/status/pcs:L2Current"},"site_pcs_l2_l3_voltage":{"default":0,"value":"/site/ess:pcs_l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"site_pcs_l3_current":{"default":0,"value":"/site/ess:pcs_l3_current","vlink":"/status/pcs:L3Current"},"site_pcs_l3_l1_voltage":{"default":0,"value":"/site/ess:pcs_l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"site_pcs_max_charge_power":{"default":0,"value":"/site/ess:pcs_max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"site_pcs_max_discharge_power":{"default":0,"value":"/site/ess:pcs_max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"site_pcs_max_igbt_temperature":{"default":0,"value":"/site/ess:pcs_max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"site_pcs_power_factor":{"default":0,"value":"/site/ess:pcs_power_factor","vlink":"/status/pcs:PowerFactor"},"site_pcs_rated_active_power":{"default":0,"value":"/site/ess:pcs_rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"site_pcs_rated_apparent_power":{"default":0,"value":"/site/ess:pcs_rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"site_pcs_rated_reactive_power":{"default":0,"value":"/site/ess:pcs_rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"site_pcs_reactive_power":{"default":0,"value":"/site/ess:pcs_reactive_power","vlink":"/status/pcs:ReactivePower"},"site_pcs_reactive_power_ramp_rate_feedback":{"default":0,"value":"/site/ess:pcs_reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"site_pcs_reactive_power_setpoint_feedback":{"default":0,"value":"/site/ess:pcs_reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"site_pcs_standby_enabled":{"default":false,"value":"/site/ess:pcs_standby_enabled","vlink":"/status/pcs:StandbyEnabled"},"site_pcs_start_enabled":{"default":false,"value":"/site/ess:pcs_start_enabled","vlink":"/status/pcs:StartEnabled"},"site_pcs_status":{"default":"INIT","value":"/site/ess:pcs_status","vlink":"/status/pcs:Status"},"site_pcs_stop_enabled":{"default":false,"value":"/site/ess:pcs_stop_enabled","vlink":"/status/pcs:StopEnabled"},"site_pcs_voltage_setpoint_feedback":{"default":0,"value":"/site/ess:pcs_voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}},"/assets/pcs/summary":{"active_power":{"value":0},"active_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power ramp rate","value":0},"active_power_ramp_rate_feedback":{"value":0},"active_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power setpoint","value":0},"active_power_setpoint_feedback":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"comms_ok":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"frequency":{"value":0},"frequency_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the frequency setpoint while the PCS is in grid-forming (VF)","value":0},"frequency_setpoint_feedback":{"value":0},"grid_follow_pq":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":true,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-following","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vf":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":true,"outValue":2,"uri":"/controls/pcs:GridFormVF"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (voltage and frequency)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vsg":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":true,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (virtual synchronous generator)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_mode":{"value":"INIT"},"l1_current":{"value":0},"l1_l2_voltage":{"value":0},"l2_current":{"value":0},"l2_l3_voltage":{"value":0},"l3_current":{"value":0},"l3_l1_voltage":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/summary:clear_faults@enabled"},{"uri":"/assets/pcs/summary:active_power_ramp_rate@enabled"},{"uri":"/assets/pcs/summary:reactive_power_ramp_rate@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_charge_power":{"value":0},"max_discharge_power":{"value":0},"max_igbt_temperature":{"value":0},"power_factor":{"value":0},"rated_active_power":{"value":0},"rated_apparent_power":{"value":0},"rated_power_factor":{"value":0},"rated_reactive_power":{"value":0},"reactive_power":{"value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power ramp rate","value":0},"reactive_power_ramp_rate_feedback":{"value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power setpoint","value":0},"reactive_power_setpoint_feedback":{"value":0},"standby":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Standby PCS","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 [/assets/pcs/summary/maint_mode] \u0026\u0026 [/status/pcs/SystemState == (Stop || Run)]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStandbyPCS","value":false},"start":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Start PCS","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 [/assets/pcs/summary/maint_mode] \u0026\u0026 ![/status/pcs/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStartPCS","value":false},"status":{"value":"INIT"},"stop":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Stop PCS","note":"Enabled conditions: [/assets/pcs/summary/maint_mode] \u0026\u0026 [/status/pcs/SystemState != Stop]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStopPCS","value":false},"system_state":{"value":"INIT"},"voltage_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the voltage setpoint while the PCS is in grid-forming (VF)","value":0},"voltage_setpoint_feedback":{"value":0}},"/vlinks/pcs":{"ui_active_power":{"default":0,"value":"/assets/pcs/summary:active_power","vlink":"/status/pcs:ActivePower"},"ui_active_power_ramp_rate_feedback":{"default":0,"value":"/assets/pcs/summary:active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"ui_active_power_setpoint_feedback":{"default":0,"value":"/assets/pcs/summary:active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"ui_apparent_power":{"default":0,"value":"/assets/pcs/summary:apparent_power","vlink":"/status/pcs:ApparentPower"},"ui_comms_ok":{"default":false,"value":"/assets/pcs/summary:comms_ok","vlink":"/status/pcs:CommsOK"},"ui_dc_current":{"default":0,"value":"/assets/pcs/summary:dc_current","vlink":"/status/pcs:DCCurrent"},"ui_dc_power":{"default":0,"value":"/assets/pcs/summary:dc_power","vlink":"/status/pcs:DCPower"},"ui_dc_voltage":{"default":0,"value":"/assets/pcs/summary:dc_voltage","vlink":"/status/pcs:DCVoltage"},"ui_frequency":{"default":0,"value":"/assets/pcs/summary:frequency","vlink":"/status/pcs:Frequency"},"ui_frequency_setpoint_feedback":{"default":0,"value":"/assets/pcs/summary:frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"ui_grid_mode":{"default":"INIT","value":"/assets/pcs/summary:grid_mode","vlink":"/status/pcs:GridMode"},"ui_l1_current":{"default":0,"value":"/assets/pcs/summary:l1_current","vlink":"/status/pcs:L1Current"},"ui_l1_l2_voltage":{"default":0,"value":"/assets/pcs/summary:l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"ui_l2_current":{"default":0,"value":"/assets/pcs/summary:l2_current","vlink":"/status/pcs:L2Current"},"ui_l2_l3_voltage":{"default":0,"value":"/assets/pcs/summary:l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"ui_l3_current":{"default":0,"value":"/assets/pcs/summary:l3_current","vlink":"/status/pcs:L3Current"},"ui_l3_l1_voltage":{"default":0,"value":"/assets/pcs/summary:l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"ui_max_charge_power":{"default":0,"value":"/assets/pcs/summary:max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"ui_max_discharge_power":{"default":0,"value":"/assets/pcs/summary:max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"ui_max_igbt_temperature":{"default":0,"value":"/assets/pcs/summary:max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"ui_power_factor":{"default":0,"value":"/assets/pcs/summary:power_factor","vlink":"/status/pcs:PowerFactor"},"ui_rated_active_power":{"default":0,"value":"/assets/pcs/summary:rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"ui_rated_apparent_power":{"default":0,"value":"/assets/pcs/summary:rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"ui_rated_power_factor":{"default":0,"value":"/assets/pcs/summary:rated_power_factor","vlink":"/config/pcs:RatedPowerFactor"},"ui_rated_reactive_power":{"default":0,"value":"/assets/pcs/summary:rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"ui_reactive_power":{"default":0,"value":"/assets/pcs/summary:reactive_power","vlink":"/status/pcs:ReactivePower"},"ui_reactive_power_ramp_rate_feedback":{"default":0,"value":"/assets/pcs/summary:reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"ui_reactive_power_setpoint_feedback":{"default":0,"value":"/assets/pcs/summary:reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"ui_status":{"default":"INIT","value":"/assets/pcs/summary:status","vlink":"/status/pcs:Status"},"ui_system_state":{"default":"INIT","value":"/assets/pcs/summary:system_state","vlink":"/status/pcs:SystemState"},"ui_voltage_setpoint_feedback":{"default":0,"value":"/assets/pcs/summary:voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}}
[4.76441s  ] [info    ] [configLoad     ] Final tbody: {"/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":1200,"RatedApparentPower":1350,"RatedPowerFactor":0.8,"RatedReactivePower":1100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/controls/pcs":{"ActivePowerCmdReal":{"enable":"/config/pcs:enable","note":"Calculates the total active power command reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs_1:ActivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","note":"Used to forward value to children setpoint variables","value":0},"ReactivePowerCmdReal":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power command reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs_1:ReactivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","note":"Used to forward value to children setpoint variables","value":0}},"/limits/pcs":{"MaxPCSChargePower":{"enable":"/config/pcs:enable","note":"Calculates the total max charge power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"enable":"/config/pcs:enable","note":"Calculates the total max discharge power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:MaxPCSDischargePower"},"RatedActivePower":{"enable":"/config/pcs:enable","note":"Calculates the total rated active power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedActivePower"},"RatedApparentPower":{"enable":"/config/pcs:enable","note":"Calculates the total rated apparent power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedApparentPower"},"RatedReactivePower":{"enable":"/config/pcs:enable","note":"Calculates the total rated reactive power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedReactivePower"}},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmdReal":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmdReal":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:MaxPCSChargePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:MaxPCSDischargePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedActivePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedApparentPower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedReactivePower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePowerRampRateFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePowerSetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePower_Calculated":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ApparentPower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:CommsOK":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCClosed":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCCurrent":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCPower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCVoltage_Calculated":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:Frequency":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:FrequencySetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L1Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L1L2Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L2Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L2L3Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L3Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L3L1Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:MaxIGBTTemperature":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:PowerFactor":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePowerRampRateFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePowerSetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:VoltageSetpointFeedback":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerRampRateFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total active power ramp rate feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerRampRateFeedback"},"ActivePowerSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total active power setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerSetpointFeedback"},"ActivePower_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:ActivePower"}]}]},"enable":"/config/pcs:enable","note":"Calculates the total active power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePower"},"ApparentPower":{"enable":"/config/pcs:enable","note":"Calculates the total apparent power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ApparentPower"},"AvgLineVoltage":{"enable":"/config/pcs:enable","expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"enable":"/config/pcs:enable","note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","numVars":1,"operation":"and","value":true,"variable1":"pcs:CommsOK"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","numVars":1,"operation":"and","value":false,"variable1":"pcs:DCClosed"},"DCCurrent":{"enable":"/config/pcs:enable","note":"Calculates the average DC current reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCCurrent"},"DCPower":{"enable":"/config/pcs:enable","note":"Calculates the average DC power reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCPower"},"DCVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage"}]}]},"enable":"/config/pcs:enable","note":"Calculates the average DC voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCVoltage"},"Frequency":{"enable":"/config/pcs:enable","note":"Calculates the average frequency reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:Frequency"},"FrequencySetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total frequency setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:FrequencySetpointFeedback"},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"L1Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L1 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L1Current"},"L1L2Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L1-L2 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L1L2Voltage"},"L2Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L2 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L2Current"},"L2L3Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L2-L3 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L2L3Voltage"},"L3Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L3 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L3Current"},"L3L1Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L3-L1 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L3L1Voltage"},"MaxIGBTTemperature":{"enable":"/config/pcs:enable","note":"Calculates the max IGBT temperature reported by all PCS instances","numVars":1,"operation":"max","value":0,"variable1":"pcs:MaxIGBTTemperature"},"PowerFactor":{"enable":"/config/pcs:enable","note":"Calculates the average power factor reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:PowerFactor"},"ReactivePower":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePower"},"ReactivePowerRampRateFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power ramp rate feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerRampRateFeedback"},"ReactivePowerSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerSetpointFeedback"},"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"},"VoltageSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total voltage setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:VoltageSetpointFeedback"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}},"/alarms/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"alarm","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/faults/pcs":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"fault","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/schedule/wake_monitor/pcs":{"/status/pcs:ActivePower":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:DCVoltage":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:HeartbeatRead":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:IsAlarming":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:IsFaulted":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalAlarmCnt":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalFaultCnt":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":3510,"MaxAlarmTimeout":1,"MaxFaultThreshold":3525,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"enable":"/config/pcs:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/pcs:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs:SystemFault","variable2":"/status/pcs:TotalFaultCnt"},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/pcs:enable","numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalAlarmCnt","variable2":"/status/pcs:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/pcs:enable","numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalFaultCnt","variable2":"/status/pcs:FaultCnt"}},"/components/pcs":{"grid_mode":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FollowPQ","uri":"/status/pcs:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVF","uri":"/status/pcs:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVSG","uri":"/status/pcs:GridMode"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs:grid_mode@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/components/pcs_registers_fast":{"current_status":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":1,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":2,"outValue":"Run","uri":"/status/pcs:SystemState"},{"inValue":3,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":4,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":5,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":6,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":8,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":9,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":10,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":11,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":12,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":13,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":14,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":15,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":17,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":18,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":19,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":20,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":21,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":22,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":24,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":0,"outValue":"Power up","uri":"/status/pcs:Status"},{"inValue":1,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":2,"outValue":"On","uri":"/status/pcs:Status"},{"inValue":3,"outValue":"Precharge","uri":"/status/pcs:Status"},{"inValue":4,"outValue":"Ready","uri":"/status/pcs:Status"},{"inValue":5,"outValue":"Wait","uri":"/status/pcs:Status"},{"inValue":6,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:Status"},{"inValue":8,"outValue":"Discharge","uri":"/status/pcs:Status"},{"inValue":9,"outValue":"Fault","uri":"/status/pcs:Status"},{"inValue":10,"outValue":"LVRT","uri":"/status/pcs:Status"},{"inValue":11,"outValue":"OVRT","uri":"/status/pcs:Status"},{"inValue":12,"outValue":"Night","uri":"/status/pcs:Status"},{"inValue":13,"outValue":"Night DC off","uri":"/status/pcs:Status"},{"inValue":14,"outValue":"Standby","uri":"/status/pcs:Status"},{"inValue":15,"outValue":"HVPL","uri":"/status/pcs:Status"},{"inValue":17,"outValue":"Pre-on","uri":"/status/pcs:Status"},{"inValue":18,"outValue":"Self-diagnosis","uri":"/status/pcs:Status"},{"inValue":19,"outValue":"Filter contactors","uri":"/status/pcs:Status"},{"inValue":20,"outValue":"Premagnetization","uri":"/status/pcs:Status"},{"inValue":21,"outValue":"Bank balancing","uri":"/status/pcs:Status"},{"inValue":22,"outValue":"CV stand by","uri":"/status/pcs:Status"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs_registers_fast:current_status@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/pcs":{"checkInputs_pcs":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/pcs:status@ifChanged"},{"outValue":false,"uri":"/components/pcs:grid_mode@ifChanged"}]}]},"enable":"/config/pcs:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/pcs":{"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs:heartbeat_read","vlink":"/status/pcs:HeartbeatRead"}},"/site/ess":{"active_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Active Power Ramp Rate","note":"Sets the active power ramp rate","size":1,"type":"control","units":"kW/s","value":0},"active_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Active Power Setpoint","note":"Sets the active power setpoint","signed":true,"size":1,"type":"control","units":"kW","value":0},"frequency_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Frequency Setpoint","note":"Sets the frequency setpoint","size":1,"type":"control","units":"Hz","value":0},"on_off_grid_mode_setting":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":1,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":1,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"},{"inValue":2,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":2,"outValue":2,"uri":"/controls/pcs:GridFormVF"},{"inValue":3,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":3,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Grid-following/forming Mode Command","note":"Initiates PCS grid-following/forming command routines","size":1,"type":"control","value":0},"pcs_active_power":{"name":"PCS Active Power","signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_active_power_ramp_rate_feedback":{"name":"PCS Active Power Ramp Rate Feedback","size":1,"type":"status","units":"kW/s","value":0},"pcs_active_power_setpoint_feedback":{"name":"PCS Active Power Setpoint Feedback","signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_alarm_active":{"name":"PCS Alarm Active","size":1,"type":"status","value":false},"pcs_apparent_power":{"name":"PCS Apparent Power","signed":true,"size":1,"type":"status","units":"kVA","value":0},"pcs_avg_line_voltage":{"name":"PCS Average Line Voltage","size":1,"type":"status","units":"V","value":0},"pcs_comms_ok":{"name":"PCS Comms OK","size":1,"type":"status","value":false},"pcs_control_alarms":{"bit0":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit10":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit11":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit12":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit13":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit14":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","bit15":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","bit16":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","bit17":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","bit18":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit19":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit2":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit20":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","bit21":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","bit22":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","bit23":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","bit24":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit4":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit5":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit6":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit7":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit8":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit9":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","name":"PCS Control Alarms","type":"bitfield","value":0},"pcs_dc_current":{"name":"PCS DC Current","scale":10,"signed":true,"size":1,"type":"status","units":"A","value":0},"pcs_dc_power":{"name":"PCS DC Power","scale":10,"signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_dc_voltage":{"name":"PCS DC Voltage","scale":10,"signed":true,"size":1,"type":"status","units":"V","value":0},"pcs_fault_active":{"name":"PCS Fault Active","size":1,"type":"status","value":false},"pcs_frequency":{"name":"PCS Grid Frequency","scale":100,"size":1,"type":"status","units":"Hz","value":0},"pcs_frequency_setpoint_feedback":{"name":"PCS Frequency Setpoint Feedback","size":1,"type":"status","units":"Hz","value":0},"pcs_grid_mode":{"bit0":"FollowPQ","bit1":"FormVF","bit2":"FormVSG","name":"PCS Grid Mode","type":"bitfield","value":0},"pcs_is_running":{"name":"PCS is Running","size":1,"type":"status","value":false},"pcs_l1_current":{"name":"PCS Grid Current 1","scale":10,"size":1,"type":"status","units":"A","value":0},"pcs_l1_l2_voltage":{"name":"PCS Grid Voltage L1-L2","size":1,"type":"status","units":"V","value":0},"pcs_l2_current":{"name":"PCS Grid Current 2","scale":10,"size":1,"type":"status","units":"A","value":0},"pcs_l2_l3_voltage":{"name":"PCS Grid Voltage L2-L3","size":1,"type":"status","units":"V","value":0},"pcs_l3_current":{"name":"PCS Grid Current 3","scale":10,"size":1,"type":"status","units":"A","value":0},"pcs_l3_l1_voltage":{"name":"PCS Grid Voltage L3-L1","size":1,"type":"status","units":"V","value":0},"pcs_max_charge_power":{"name":"PCS Max Charge Power","signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_max_discharge_power":{"name":"PCS Max Discharge Power","size":1,"type":"status","units":"kW","value":0},"pcs_max_igbt_temperature":{"name":"PCS Max IGBT Temperature","scale":100,"size":1,"type":"status","units":"°C","value":0},"pcs_monitor_alarms":{"bit0":"PCS ActivePower - Max Threshold Exceeded","bit1":"PCS DCVoltage - Max Threshold Exceeded","bit2":"PCS DCVoltage - Min Threshold Exceeded","name":"PCS Monitor Alarms","type":"bitfield","value":0},"pcs_monitor_faults":{"bit0":"PCS ActivePower - Max Threshold Exceeded","bit1":"PCS DCVoltage - Max Threshold Exceeded","bit2":"PCS DCVoltage - Min Threshold Exceeded","name":"PCS Monitor Faults","type":"bitfield","value":0},"pcs_power_factor":{"name":"PCS Power Factor","scale":1000,"signed":true,"size":1,"type":"status","value":0},"pcs_rated_active_power":{"name":"PCS Rated Active Power","signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_rated_apparent_power":{"name":"PCS Rated Apparent Power","signed":true,"size":1,"type":"status","units":"kVA","value":0},"pcs_rated_reactive_power":{"name":"PCS Rated Reactive Power","signed":true,"size":1,"type":"status","units":"kVAR","value":0},"pcs_reactive_power":{"name":"PCS Reactive Power","signed":true,"size":1,"type":"status","units":"kVAR","value":0},"pcs_reactive_power_ramp_rate_feedback":{"name":"PCS Reactive Power Ramp Rate Feedback","size":1,"type":"status","units":"kVAR/s","value":0},"pcs_reactive_power_setpoint_feedback":{"name":"PCS Reactive Power Setpoint Feedback","signed":true,"size":1,"type":"status","units":"kVAR","value":0},"pcs_standby_enabled":{"excludeFromFile":true,"name":"PCS Standby Enabled","size":1,"type":"status","value":false},"pcs_start_enabled":{"excludeFromFile":true,"name":"PCS Start Enabled","size":1,"type":"status","value":false},"pcs_status":{"excludeFromFile":true,"name":"PCS Status","size":1,"type":"status","value":"INIT"},"pcs_stop_enabled":{"excludeFromFile":true,"name":"PCS Stop Enabled","size":1,"type":"status","value":false},"pcs_system_state":{"bit0":"Stop","bit1":"Run","bit2":"Fault","bit3":"Standby","name":"PCS System State","type":"bitfield","value":0},"pcs_voltage_setpoint_feedback":{"name":"PCS Voltage Setpoint Feedback","size":1,"type":"status","units":"V","value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Reactive Power Ramp Rate","note":"Sets the reactive power ramp rate","size":1,"type":"control","units":"kVAR/s","value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Reactive Power Setpoint","note":"Sets the reactive power setpoint","signed":true,"size":1,"type":"control","units":"kVAR","value":0},"start_stop_standby_command":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/ess:remote_control_enable","every":0.5,"ifChanged":false,"name":"Start/Stop/Standby Command","note1":"Initiates PCS start, standby, or stop command routines","note2":"0-\u003estop | 1-\u003estart | 2-\u003estandby","offset":0,"size":1,"type":"control","uri":"/sched/ess:SitePCSStatusControl","value":-1},"voltage_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Voltage Setpoint","note":"Sets the voltage setpoint","size":1,"type":"control","units":"V","value":0}},"/vlinks/pcs":{"site_pcs_active_power":{"default":0,"value":"/site/ess:pcs_active_power","vlink":"/status/pcs:ActivePower"},"site_pcs_active_power_ramp_rate_feedback":{"default":0,"value":"/site/ess:pcs_active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"site_pcs_active_power_setpoint_feedback":{"default":0,"value":"/site/ess:pcs_active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"site_pcs_alarm_active":{"default":false,"value":"/site/ess:pcs_alarm_active","vlink":"/status/pcs:IsAlarming"},"site_pcs_apparent_power":{"default":0,"value":"/site/ess:pcs_apparent_power","vlink":"/status/pcs:ApparentPower"},"site_pcs_avg_line_voltage":{"default":0,"value":"/site/ess:pcs_avg_line_voltage","vlink":"/status/pcs:AvgLineVoltage"},"site_pcs_comms_ok":{"default":false,"value":"/site/ess:pcs_comms_ok","vlink":"/status/pcs:CommsOK"},"site_pcs_dc_current":{"default":0,"value":"/site/ess:pcs_dc_current","vlink":"/status/pcs:DCCurrent"},"site_pcs_dc_power":{"default":0,"value":"/site/ess:pcs_dc_power","vlink":"/status/pcs:DCPower"},"site_pcs_dc_voltage":{"default":0,"value":"/site/ess:pcs_dc_voltage","vlink":"/status/pcs:DCVoltage"},"site_pcs_fault_active":{"default":false,"value":"/site/ess:pcs_fault_active","vlink":"/status/pcs:IsFaulted"},"site_pcs_frequency":{"default":0,"value":"/site/ess:pcs_frequency","vlink":"/status/pcs:Frequency"},"site_pcs_frequency_setpoint_feedback":{"default":0,"value":"/site/ess:pcs_frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"site_pcs_is_running":{"default":false,"value":"/site/ess:pcs_is_running","vlink":"/status/pcs:IsRunning"},"site_pcs_l1_current":{"default":0,"value":"/site/ess:pcs_l1_current","vlink":"/status/pcs:L1Current"},"site_pcs_l1_l2_voltage":{"default":0,"value":"/site/ess:pcs_l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"site_pcs_l2_current":{"default":0,"value":"/site/ess:pcs_l2_current","vlink":"/status/pcs:L2Current"},"site_pcs_l2_l3_voltage":{"default":0,"value":"/site/ess:pcs_l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"site_pcs_l3_current":{"default":0,"value":"/site/ess:pcs_l3_current","vlink":"/status/pcs:L3Current"},"site_pcs_l3_l1_voltage":{"default":0,"value":"/site/ess:pcs_l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"site_pcs_max_charge_power":{"default":0,"value":"/site/ess:pcs_max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"site_pcs_max_discharge_power":{"default":0,"value":"/site/ess:pcs_max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"site_pcs_max_igbt_temperature":{"default":0,"value":"/site/ess:pcs_max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"site_pcs_power_factor":{"default":0,"value":"/site/ess:pcs_power_factor","vlink":"/status/pcs:PowerFactor"},"site_pcs_rated_active_power":{"default":0,"value":"/site/ess:pcs_rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"site_pcs_rated_apparent_power":{"default":0,"value":"/site/ess:pcs_rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"site_pcs_rated_reactive_power":{"default":0,"value":"/site/ess:pcs_rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"site_pcs_reactive_power":{"default":0,"value":"/site/ess:pcs_reactive_power","vlink":"/status/pcs:ReactivePower"},"site_pcs_reactive_power_ramp_rate_feedback":{"default":0,"value":"/site/ess:pcs_reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"site_pcs_reactive_power_setpoint_feedback":{"default":0,"value":"/site/ess:pcs_reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"site_pcs_standby_enabled":{"default":false,"value":"/site/ess:pcs_standby_enabled","vlink":"/status/pcs:StandbyEnabled"},"site_pcs_start_enabled":{"default":false,"value":"/site/ess:pcs_start_enabled","vlink":"/status/pcs:StartEnabled"},"site_pcs_status":{"default":"INIT","value":"/site/ess:pcs_status","vlink":"/status/pcs:Status"},"site_pcs_stop_enabled":{"default":false,"value":"/site/ess:pcs_stop_enabled","vlink":"/status/pcs:StopEnabled"},"site_pcs_voltage_setpoint_feedback":{"default":0,"value":"/site/ess:pcs_voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}},"/assets/pcs/summary":{"active_power":{"value":0},"active_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power ramp rate","value":0},"active_power_ramp_rate_feedback":{"value":0},"active_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power setpoint","value":0},"active_power_setpoint_feedback":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"comms_ok":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"frequency":{"value":0},"frequency_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the frequency setpoint while the PCS is in grid-forming (VF)","value":0},"frequency_setpoint_feedback":{"value":0},"grid_follow_pq":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":true,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-following","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vf":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":true,"outValue":2,"uri":"/controls/pcs:GridFormVF"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (voltage and frequency)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vsg":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":true,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (virtual synchronous generator)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_mode":{"value":"INIT"},"l1_current":{"value":0},"l1_l2_voltage":{"value":0},"l2_current":{"value":0},"l2_l3_voltage":{"value":0},"l3_current":{"value":0},"l3_l1_voltage":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/summary:clear_faults@enabled"},{"uri":"/assets/pcs/summary:active_power_ramp_rate@enabled"},{"uri":"/assets/pcs/summary:reactive_power_ramp_rate@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_charge_power":{"value":0},"max_discharge_power":{"value":0},"max_igbt_temperature":{"value":0},"power_factor":{"value":0},"rated_active_power":{"value":0},"rated_apparent_power":{"value":0},"rated_power_factor":{"value":0},"rated_reactive_power":{"value":0},"reactive_power":{"value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power ramp rate","value":0},"reactive_power_ramp_rate_feedback":{"value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power setpoint","value":0},"reactive_power_setpoint_feedback":{"value":0},"standby":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Standby PCS","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 [/assets/pcs/summary/maint_mode] \u0026\u0026 [/status/pcs/SystemState == (Stop || Run)]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStandbyPCS","value":false},"start":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Start PCS","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 [/assets/pcs/summary/maint_mode] \u0026\u0026 ![/status/pcs/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStartPCS","value":false},"status":{"value":"INIT"},"stop":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Stop PCS","note":"Enabled conditions: [/assets/pcs/summary/maint_mode] \u0026\u0026 [/status/pcs/SystemState != Stop]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStopPCS","value":false},"system_state":{"value":"INIT"},"voltage_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the voltage setpoint while the PCS is in grid-forming (VF)","value":0},"voltage_setpoint_feedback":{"value":0}},"/vlinks/pcs":{"ui_active_power":{"default":0,"value":"/assets/pcs/summary:active_power","vlink":"/status/pcs:ActivePower"},"ui_active_power_ramp_rate_feedback":{"default":0,"value":"/assets/pcs/summary:active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"ui_active_power_setpoint_feedback":{"default":0,"value":"/assets/pcs/summary:active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"ui_apparent_power":{"default":0,"value":"/assets/pcs/summary:apparent_power","vlink":"/status/pcs:ApparentPower"},"ui_comms_ok":{"default":false,"value":"/assets/pcs/summary:comms_ok","vlink":"/status/pcs:CommsOK"},"ui_dc_current":{"default":0,"value":"/assets/pcs/summary:dc_current","vlink":"/status/pcs:DCCurrent"},"ui_dc_power":{"default":0,"value":"/assets/pcs/summary:dc_power","vlink":"/status/pcs:DCPower"},"ui_dc_voltage":{"default":0,"value":"/assets/pcs/summary:dc_voltage","vlink":"/status/pcs:DCVoltage"},"ui_frequency":{"default":0,"value":"/assets/pcs/summary:frequency","vlink":"/status/pcs:Frequency"},"ui_frequency_setpoint_feedback":{"default":0,"value":"/assets/pcs/summary:frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"ui_grid_mode":{"default":"INIT","value":"/assets/pcs/summary:grid_mode","vlink":"/status/pcs:GridMode"},"ui_l1_current":{"default":0,"value":"/assets/pcs/summary:l1_current","vlink":"/status/pcs:L1Current"},"ui_l1_l2_voltage":{"default":0,"value":"/assets/pcs/summary:l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"ui_l2_current":{"default":0,"value":"/assets/pcs/summary:l2_current","vlink":"/status/pcs:L2Current"},"ui_l2_l3_voltage":{"default":0,"value":"/assets/pcs/summary:l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"ui_l3_current":{"default":0,"value":"/assets/pcs/summary:l3_current","vlink":"/status/pcs:L3Current"},"ui_l3_l1_voltage":{"default":0,"value":"/assets/pcs/summary:l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"ui_max_charge_power":{"default":0,"value":"/assets/pcs/summary:max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"ui_max_discharge_power":{"default":0,"value":"/assets/pcs/summary:max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"ui_max_igbt_temperature":{"default":0,"value":"/assets/pcs/summary:max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"ui_power_factor":{"default":0,"value":"/assets/pcs/summary:power_factor","vlink":"/status/pcs:PowerFactor"},"ui_rated_active_power":{"default":0,"value":"/assets/pcs/summary:rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"ui_rated_apparent_power":{"default":0,"value":"/assets/pcs/summary:rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"ui_rated_power_factor":{"default":0,"value":"/assets/pcs/summary:rated_power_factor","vlink":"/config/pcs:RatedPowerFactor"},"ui_rated_reactive_power":{"default":0,"value":"/assets/pcs/summary:rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"ui_reactive_power":{"default":0,"value":"/assets/pcs/summary:reactive_power","vlink":"/status/pcs:ReactivePower"},"ui_reactive_power_ramp_rate_feedback":{"default":0,"value":"/assets/pcs/summary:reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"ui_reactive_power_setpoint_feedback":{"default":0,"value":"/assets/pcs/summary:reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"ui_status":{"default":"INIT","value":"/assets/pcs/summary:status","vlink":"/status/pcs:Status"},"ui_system_state":{"default":"INIT","value":"/assets/pcs/summary:system_state","vlink":"/status/pcs:SystemState"},"ui_voltage_setpoint_feedback":{"default":0,"value":"/assets/pcs/summary:voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}}}
[4.76695s  ] [info    ] [configLoad     ] tmpls field is found in av [/config/load:sungrow_pcs_init]. We'll perform template expansions with tmpls instead of tmpl
[4.7673s   ] [info    ] [configLoad     ] tbody before: {"/config/##PCS_ID##":{"AlarmDestination":"/assets/pcs/##PCS_ID##:alarms","FaultDestination":"/assets/pcs/##PCS_ID##:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":1200,"RatedApparentPower":1350,"RatedPowerFactor":0.8,"RatedReactivePower":1100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/controls/##PCS_ID##":{"ActivePowerSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd","inAv":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##"},{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/controls/##PCS_ID##:ActivePowerCmdConvert"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Used to trigger power command handling function on a value set","value":0},"ReactivePowerSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd","inAv":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##"},{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/controls/##PCS_ID##:ReactivePowerCmdConvert"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Used to trigger power command handling function on a value set","value":0}},"/links/##PCS_ID##":{"ActivePowerCmdReal":{"value":"/controls/##PCS_ID##:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/##PCS_ID##:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/##PCS_ID##:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/##PCS_ID##:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/##PCS_ID##:RatedActivePower"},"RatedApparentPower":{"value":"/limits/##PCS_ID##:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/##PCS_ID##:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/##PCS_ID##:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/##PCS_ID##:ReactivePowerSetpoint"}},"/sched/##PCS_ID##":{"handlePowerCmd_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd"}]}]},"bms":"##BMS_ID##","ess":"##ESS_ID##","note":"Processes active and reactive power commands before they are sent","pcs":"##PCS_ID##","value":1},"pubAssets_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"RunPub"}]}]},"enable":"/config/##PCS_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##PCS_ID##)","table":"/assets/pcs/##PCS_ID##","value":1},"runMonitor_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"RunMonitor"}]}]},"aname":"##PCS_ID##","enable":"/config/##PCS_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##PCS_ID##","value":1},"updateHeartbeatWrite_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/status/##PCS_ID##:HeartbeatWrite"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Periodically updates the heartbeat write variable defined in /status/##PCS_ID##:HeartbeatWrite","value":1}},"/status/##PCS_ID##":{"CommsOK":true,"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##PCS_ID##:DCVoltage@EnableMaxValCheck"},{"uri":"/status/##PCS_ID##:DCVoltage@EnableMinValCheck"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/##PCS_ID##:heartbeat_write"}]}]},"enable":"/config/##PCS_ID##:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:HeartbeatWrite"},"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##PCS_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:pubAssets_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":0.1,"uri":"/sched/##PCS_ID##:runMonitor_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:checkInputs_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:updateHeartbeatWrite_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":0.1,"uri":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##","value":1}],"targav":"/system/commands:run","value":false}}}
[4.7682s   ] [info    ] [configLoad     ] tbody now: "/config/##PCS_ID##":{"AlarmDestination":"/assets/pcs/##PCS_ID##:alarms","FaultDestination":"/assets/pcs/##PCS_ID##:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":1200,"RatedApparentPower":1350,"RatedPowerFactor":0.8,"RatedReactivePower":1100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/controls/##PCS_ID##":{"ActivePowerSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd","inAv":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##"},{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/controls/##PCS_ID##:ActivePowerCmdConvert"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Used to trigger power command handling function on a value set","value":0},"ReactivePowerSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd","inAv":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##"},{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/controls/##PCS_ID##:ReactivePowerCmdConvert"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Used to trigger power command handling function on a value set","value":0}},"/links/##PCS_ID##":{"ActivePowerCmdReal":{"value":"/controls/##PCS_ID##:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/##PCS_ID##:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/##PCS_ID##:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/##PCS_ID##:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/##PCS_ID##:RatedActivePower"},"RatedApparentPower":{"value":"/limits/##PCS_ID##:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/##PCS_ID##:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/##PCS_ID##:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/##PCS_ID##:ReactivePowerSetpoint"}},"/sched/##PCS_ID##":{"handlePowerCmd_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd"}]}]},"bms":"##BMS_ID##","ess":"##ESS_ID##","note":"Processes active and reactive power commands before they are sent","pcs":"##PCS_ID##","value":1},"pubAssets_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"RunPub"}]}]},"enable":"/config/##PCS_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##PCS_ID##)","table":"/assets/pcs/##PCS_ID##","value":1},"runMonitor_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"RunMonitor"}]}]},"aname":"##PCS_ID##","enable":"/config/##PCS_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##PCS_ID##","value":1},"updateHeartbeatWrite_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/status/##PCS_ID##:HeartbeatWrite"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Periodically updates the heartbeat write variable defined in /status/##PCS_ID##:HeartbeatWrite","value":1}},"/status/##PCS_ID##":{"CommsOK":true,"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##PCS_ID##:DCVoltage@EnableMaxValCheck"},{"uri":"/status/##PCS_ID##:DCVoltage@EnableMinValCheck"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/##PCS_ID##:heartbeat_write"}]}]},"enable":"/config/##PCS_ID##:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:HeartbeatWrite"},"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##PCS_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:pubAssets_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":0.1,"uri":"/sched/##PCS_ID##:runMonitor_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:checkInputs_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:updateHeartbeatWrite_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":0.1,"uri":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##","value":1}],"targav":"/system/commands:run","value":false}}
[4.76897s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##PCS_ID##":{"AlarmDestination":"/assets/pcs/##PCS_ID##:alarms","FaultDestination":"/assets/pcs/##PCS_ID##:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":1200,"RatedApparentPower":1350,"RatedPowerFactor":0.8,"RatedReactivePower":1100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/controls/##PCS_ID##":{"ActivePowerSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd","inAv":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##"},{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/controls/##PCS_ID##:ActivePowerCmdConvert"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Used to trigger power command handling function on a value set","value":0},"ReactivePowerSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd","inAv":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##"},{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/controls/##PCS_ID##:ReactivePowerCmdConvert"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Used to trigger power command handling function on a value set","value":0}},"/links/##PCS_ID##":{"ActivePowerCmdReal":{"value":"/controls/##PCS_ID##:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/##PCS_ID##:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/##PCS_ID##:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/##PCS_ID##:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/##PCS_ID##:RatedActivePower"},"RatedApparentPower":{"value":"/limits/##PCS_ID##:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/##PCS_ID##:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/##PCS_ID##:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/##PCS_ID##:ReactivePowerSetpoint"}},"/sched/##PCS_ID##":{"handlePowerCmd_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd"}]}]},"bms":"##BMS_ID##","ess":"##ESS_ID##","note":"Processes active and reactive power commands before they are sent","pcs":"##PCS_ID##","value":1},"pubAssets_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"RunPub"}]}]},"enable":"/config/##PCS_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##PCS_ID##)","table":"/assets/pcs/##PCS_ID##","value":1},"runMonitor_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"RunMonitor"}]}]},"aname":"##PCS_ID##","enable":"/config/##PCS_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##PCS_ID##","value":1},"updateHeartbeatWrite_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/status/##PCS_ID##:HeartbeatWrite"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Periodically updates the heartbeat write variable defined in /status/##PCS_ID##:HeartbeatWrite","value":1}},"/status/##PCS_ID##":{"CommsOK":true,"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##PCS_ID##:DCVoltage@EnableMaxValCheck"},{"uri":"/status/##PCS_ID##:DCVoltage@EnableMinValCheck"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/##PCS_ID##:heartbeat_write"}]}]},"enable":"/config/##PCS_ID##:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:HeartbeatWrite"},"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##PCS_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:pubAssets_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":0.1,"uri":"/sched/##PCS_ID##:runMonitor_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:checkInputs_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:updateHeartbeatWrite_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":0.1,"uri":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##PCS_ID##":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ActivePowerCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ActivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ActivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:active_power_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/##PCS_ID##:FrequencySetpoint","variable2":"/status/##PCS_ID##:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:frequency_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/##PCS_ID##:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:grid_follow_pq@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##PCS_ID##:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/##PCS_ID##:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:grid_form_vf@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##PCS_ID##:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/##PCS_ID##:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:grid_form_vsg@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##PCS_ID##:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ReactivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ReactivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:reactive_power_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Stop or {2} == Run) and {3}","note1":"Standby command to send to PCS if the PCS is in Stop or Run, the BMS DC contactors are closed, and the BMS current is within an acceptable level","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:CurrentBeforeStopIsOK","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##BMS_ID##:DCClosed"},"StandbyEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:standby@enabled"},{"uri":"/status/##PCS_ID##:StandbyEnabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} and ({3} == Stop or {3} == Run)","note":"Enable Standby UI control if BMS DC Contactors are closed, the PCS is in Stop or Run, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/assets/pcs/##PCS_ID##:maint_mode","variable3":"/status/##PCS_ID##:SystemState"},"Start":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"({1} == Stop or {1} == Standby) and {2} and not {3}","note1":"Start command to send to PCS if the PCS is in Stop or Standby, the BMS DC contactors are closed, and the PCS is not faulted","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState","variable2":"/status/##BMS_ID##:DCClosed","variable3":"/status/##PCS_ID##:IsFaulted"},"StartEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:start@enabled"},{"uri":"/status/##PCS_ID##:StartEnabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} and ({3} == Stop or {3} == Standby) and not {4}","note":"Enable Start UI control if BMS DC Contactors are closed, the PCS is in Stop or Standby, the PCS is not faulted, and the PCS is in maintenance mode","numVars":4,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/assets/pcs/##PCS_ID##:maint_mode","variable3":"/status/##PCS_ID##:SystemState","variable4":"/status/##PCS_ID##:IsFaulted"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Standby or {2} == Run) and {3}","note1":"Stop command to send to PCS if the PCS is in Standby or Run, the BMS DC contactors are closed, and the BMS current is within an acceptable level","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:CurrentBeforeStopIsOK","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##BMS_ID##:DCClosed"},"StopEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:stop@enabled"},{"uri":"/status/##PCS_ID##:StopEnabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} != Stop","note":"Enable Stop UI control if the PCS is not in Stop and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerCmd","variable2":"/status/##PCS_ID##:ActivePowerSetpointFeedback","variable3":"/config/##PCS_ID##:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerRampRateCmd","variable2":"/status/##PCS_ID##:ActivePowerRampRateFeedback","variable3":"/config/##PCS_ID##:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:FrequencySetpoint","variable2":"/status/##PCS_ID##:FrequencySetpointFeedback","variable3":"/config/##PCS_ID##:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerCmd","variable2":"/status/##PCS_ID##:ReactivePowerSetpointFeedback","variable3":"/config/##PCS_ID##:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerRampRateCmd","variable2":"/status/##PCS_ID##:ReactivePowerRampRateFeedback","variable3":"/config/##PCS_ID##:RampRateMargin"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Stop or {1} == Fault","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:VoltageSetpoint","variable2":"/status/##PCS_ID##:VoltageSetpointFeedback","variable3":"/config/##PCS_ID##:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/##PCS_ID##:VoltageSetpoint","variable2":"/status/##PCS_ID##:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:voltage_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:GridMode"}},"/schedule/wake_monitor/##PCS_ID##":{"/controls/##PCS_ID##:ActivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ActivePowerCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ActivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ActivePowerRampRateCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ActivePowerSetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ClearFaults":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:FrequencySetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:FrequencySetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:GridFollowPQ":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:GridFollowPQEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:GridFormVF":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:GridFormVFEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:GridFormVSG":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:GridFormVSGEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ReactivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ReactivePowerCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ReactivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ReactivePowerRampRateCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ReactivePowerSetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:Standby":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:StandbyEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:Start":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:StartEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:Stop":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:StopEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:VerifyActivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyActivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyFrequencySetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyGridFollowPQ":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyGridFormVF":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyGridFormVSG":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyReactivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyReactivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyStandby":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyStart":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyStop":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyVoltageSetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VoltageSetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VoltageSetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"}},"/status/##PCS_ID##":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ActivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ActivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ClearFaults"},{"outValue":"Clear","uri":"/faults/##PCS_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##PCS_ID##:clear_alarms"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##PCS_ID##:clear_faults and /alarms/##PCS_ID##:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:FrequencySetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:GridFollowPQ"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:GridFormVF"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:GridFormVSG"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ReactivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ReactivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:Standby"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:Start"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:Stop"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyActivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyFrequencySetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyGridFollowPQ"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyGridFormVF"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyGridFormVSG"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyReactivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyStandby"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyStart"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyStop"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyVoltageSetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:VoltageSetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:VoltageSetpoint","value":false}}
[4.7709s   ] [info    ] [configLoad     ] pi's av tbody now: "/config/##PCS_ID##":{"AlarmDestination":"/assets/pcs/##PCS_ID##:alarms","FaultDestination":"/assets/pcs/##PCS_ID##:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":1200,"RatedApparentPower":1350,"RatedPowerFactor":0.8,"RatedReactivePower":1100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/controls/##PCS_ID##":{"ActivePowerSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd","inAv":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##"},{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/controls/##PCS_ID##:ActivePowerCmdConvert"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Used to trigger power command handling function on a value set","value":0},"ReactivePowerSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd","inAv":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##"},{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/controls/##PCS_ID##:ReactivePowerCmdConvert"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Used to trigger power command handling function on a value set","value":0}},"/links/##PCS_ID##":{"ActivePowerCmdReal":{"value":"/controls/##PCS_ID##:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/##PCS_ID##:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/##PCS_ID##:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/##PCS_ID##:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/##PCS_ID##:RatedActivePower"},"RatedApparentPower":{"value":"/limits/##PCS_ID##:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/##PCS_ID##:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/##PCS_ID##:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/##PCS_ID##:ReactivePowerSetpoint"}},"/sched/##PCS_ID##":{"handlePowerCmd_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd"}]}]},"bms":"##BMS_ID##","ess":"##ESS_ID##","note":"Processes active and reactive power commands before they are sent","pcs":"##PCS_ID##","value":1},"pubAssets_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"RunPub"}]}]},"enable":"/config/##PCS_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##PCS_ID##)","table":"/assets/pcs/##PCS_ID##","value":1},"runMonitor_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"RunMonitor"}]}]},"aname":"##PCS_ID##","enable":"/config/##PCS_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##PCS_ID##","value":1},"updateHeartbeatWrite_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/status/##PCS_ID##:HeartbeatWrite"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Periodically updates the heartbeat write variable defined in /status/##PCS_ID##:HeartbeatWrite","value":1}},"/status/##PCS_ID##":{"CommsOK":true,"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##PCS_ID##:DCVoltage@EnableMaxValCheck"},{"uri":"/status/##PCS_ID##:DCVoltage@EnableMinValCheck"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/##PCS_ID##:heartbeat_write"}]}]},"enable":"/config/##PCS_ID##:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:HeartbeatWrite"},"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##PCS_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:pubAssets_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":0.1,"uri":"/sched/##PCS_ID##:runMonitor_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:checkInputs_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:updateHeartbeatWrite_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":0.1,"uri":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##PCS_ID##":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ActivePowerCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ActivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ActivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:active_power_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/##PCS_ID##:FrequencySetpoint","variable2":"/status/##PCS_ID##:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:frequency_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/##PCS_ID##:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:grid_follow_pq@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##PCS_ID##:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/##PCS_ID##:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:grid_form_vf@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##PCS_ID##:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/##PCS_ID##:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:grid_form_vsg@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##PCS_ID##:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ReactivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ReactivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:reactive_power_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Stop or {2} == Run) and {3}","note1":"Standby command to send to PCS if the PCS is in Stop or Run, the BMS DC contactors are closed, and the BMS current is within an acceptable level","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:CurrentBeforeStopIsOK","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##BMS_ID##:DCClosed"},"StandbyEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:standby@enabled"},{"uri":"/status/##PCS_ID##:StandbyEnabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} and ({3} == Stop or {3} == Run)","note":"Enable Standby UI control if BMS DC Contactors are closed, the PCS is in Stop or Run, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/assets/pcs/##PCS_ID##:maint_mode","variable3":"/status/##PCS_ID##:SystemState"},"Start":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"({1} == Stop or {1} == Standby) and {2} and not {3}","note1":"Start command to send to PCS if the PCS is in Stop or Standby, the BMS DC contactors are closed, and the PCS is not faulted","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState","variable2":"/status/##BMS_ID##:DCClosed","variable3":"/status/##PCS_ID##:IsFaulted"},"StartEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:start@enabled"},{"uri":"/status/##PCS_ID##:StartEnabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} and ({3} == Stop or {3} == Standby) and not {4}","note":"Enable Start UI control if BMS DC Contactors are closed, the PCS is in Stop or Standby, the PCS is not faulted, and the PCS is in maintenance mode","numVars":4,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/assets/pcs/##PCS_ID##:maint_mode","variable3":"/status/##PCS_ID##:SystemState","variable4":"/status/##PCS_ID##:IsFaulted"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Standby or {2} == Run) and {3}","note1":"Stop command to send to PCS if the PCS is in Standby or Run, the BMS DC contactors are closed, and the BMS current is within an acceptable level","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:CurrentBeforeStopIsOK","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##BMS_ID##:DCClosed"},"StopEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:stop@enabled"},{"uri":"/status/##PCS_ID##:StopEnabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} != Stop","note":"Enable Stop UI control if the PCS is not in Stop and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerCmd","variable2":"/status/##PCS_ID##:ActivePowerSetpointFeedback","variable3":"/config/##PCS_ID##:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerRampRateCmd","variable2":"/status/##PCS_ID##:ActivePowerRampRateFeedback","variable3":"/config/##PCS_ID##:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:FrequencySetpoint","variable2":"/status/##PCS_ID##:FrequencySetpointFeedback","variable3":"/config/##PCS_ID##:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerCmd","variable2":"/status/##PCS_ID##:ReactivePowerSetpointFeedback","variable3":"/config/##PCS_ID##:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerRampRateCmd","variable2":"/status/##PCS_ID##:ReactivePowerRampRateFeedback","variable3":"/config/##PCS_ID##:RampRateMargin"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Stop or {1} == Fault","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:VoltageSetpoint","variable2":"/status/##PCS_ID##:VoltageSetpointFeedback","variable3":"/config/##PCS_ID##:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/##PCS_ID##:VoltageSetpoint","variable2":"/status/##PCS_ID##:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:voltage_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:GridMode"}},"/schedule/wake_monitor/##PCS_ID##":{"/controls/##PCS_ID##:ActivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ActivePowerCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ActivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ActivePowerRampRateCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ActivePowerSetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ClearFaults":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:FrequencySetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:FrequencySetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:GridFollowPQ":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:GridFollowPQEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:GridFormVF":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:GridFormVFEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:GridFormVSG":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:GridFormVSGEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ReactivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ReactivePowerCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ReactivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ReactivePowerRampRateCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ReactivePowerSetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:Standby":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:StandbyEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:Start":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:StartEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:Stop":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:StopEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:VerifyActivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyActivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyFrequencySetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyGridFollowPQ":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyGridFormVF":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyGridFormVSG":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyReactivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyReactivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyStandby":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyStart":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyStop":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyVoltageSetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VoltageSetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VoltageSetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"}},"/status/##PCS_ID##":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ActivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ActivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ClearFaults"},{"outValue":"Clear","uri":"/faults/##PCS_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##PCS_ID##:clear_alarms"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##PCS_ID##:clear_faults and /alarms/##PCS_ID##:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:FrequencySetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:GridFollowPQ"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:GridFormVF"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:GridFormVSG"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ReactivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ReactivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:Standby"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:Start"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:Stop"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyActivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyFrequencySetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyGridFollowPQ"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyGridFormVF"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyGridFormVSG"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyReactivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyStandby"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyStart"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyStop"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyVoltageSetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:VoltageSetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:VoltageSetpoint","value":false}},"/alarms/##PCS_ID##":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/##PCS_ID##:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##PCS_ID##) will be reset to the normal state (defined in /config/##PCS_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"alarm","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/faults/##PCS_ID##":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/##PCS_ID##:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##PCS_ID##) will be reset to the normal state (defined in /config/##PCS_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"fault","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/schedule/wake_monitor/##PCS_ID##":{"/status/##PCS_ID##:ActivePower":{"amap":"##PCS_ID##","func":"CheckMonitorVar"},"/status/##PCS_ID##:DCVoltage":{"amap":"##PCS_ID##","func":"CheckMonitorVar"},"/status/##PCS_ID##:HeartbeatRead":{"amap":"##PCS_ID##","func":"CheckMonitorVar"},"/status/##PCS_ID##:IsAlarming":{"amap":"##PCS_ID##","func":"CalculateVar"},"/status/##PCS_ID##:IsFaulted":{"amap":"##PCS_ID##","func":"CalculateVar"},"/status/##PCS_ID##:TotalAlarmCnt":{"amap":"##PCS_ID##","func":"CalculateVar"},"/status/##PCS_ID##:TotalFaultCnt":{"amap":"##PCS_ID##","func":"CalculateVar"}},"/status/##PCS_ID##":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":3510,"MaxAlarmTimeout":1,"MaxFaultThreshold":3525,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS instance faults, the fault shutdown event will be propagated to its parent","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"enable":"/config/##PCS_ID##:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##PCS_ID##:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/##PCS_ID##:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/##PCS_ID##:SystemFault","variable2":"/status/##PCS_ID##:TotalFaultCnt"},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/##PCS_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/##PCS_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:FaultCnt"}}
[4.77258s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##PCS_ID##":{"AlarmDestination":"/assets/pcs/##PCS_ID##:alarms","FaultDestination":"/assets/pcs/##PCS_ID##:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":1200,"RatedApparentPower":1350,"RatedPowerFactor":0.8,"RatedReactivePower":1100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/controls/##PCS_ID##":{"ActivePowerSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd","inAv":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##"},{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/controls/##PCS_ID##:ActivePowerCmdConvert"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Used to trigger power command handling function on a value set","value":0},"ReactivePowerSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd","inAv":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##"},{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/controls/##PCS_ID##:ReactivePowerCmdConvert"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Used to trigger power command handling function on a value set","value":0}},"/links/##PCS_ID##":{"ActivePowerCmdReal":{"value":"/controls/##PCS_ID##:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/##PCS_ID##:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/##PCS_ID##:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/##PCS_ID##:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/##PCS_ID##:RatedActivePower"},"RatedApparentPower":{"value":"/limits/##PCS_ID##:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/##PCS_ID##:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/##PCS_ID##:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/##PCS_ID##:ReactivePowerSetpoint"}},"/sched/##PCS_ID##":{"handlePowerCmd_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd"}]}]},"bms":"##BMS_ID##","ess":"##ESS_ID##","note":"Processes active and reactive power commands before they are sent","pcs":"##PCS_ID##","value":1},"pubAssets_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"RunPub"}]}]},"enable":"/config/##PCS_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##PCS_ID##)","table":"/assets/pcs/##PCS_ID##","value":1},"runMonitor_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"RunMonitor"}]}]},"aname":"##PCS_ID##","enable":"/config/##PCS_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##PCS_ID##","value":1},"updateHeartbeatWrite_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/status/##PCS_ID##:HeartbeatWrite"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Periodically updates the heartbeat write variable defined in /status/##PCS_ID##:HeartbeatWrite","value":1}},"/status/##PCS_ID##":{"CommsOK":true,"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##PCS_ID##:DCVoltage@EnableMaxValCheck"},{"uri":"/status/##PCS_ID##:DCVoltage@EnableMinValCheck"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/##PCS_ID##:heartbeat_write"}]}]},"enable":"/config/##PCS_ID##:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:HeartbeatWrite"},"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##PCS_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:pubAssets_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":0.1,"uri":"/sched/##PCS_ID##:runMonitor_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:checkInputs_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:updateHeartbeatWrite_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":0.1,"uri":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##PCS_ID##":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ActivePowerCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ActivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ActivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:active_power_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/##PCS_ID##:FrequencySetpoint","variable2":"/status/##PCS_ID##:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:frequency_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/##PCS_ID##:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:grid_follow_pq@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##PCS_ID##:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/##PCS_ID##:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:grid_form_vf@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##PCS_ID##:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/##PCS_ID##:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:grid_form_vsg@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##PCS_ID##:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ReactivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ReactivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:reactive_power_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Stop or {2} == Run) and {3}","note1":"Standby command to send to PCS if the PCS is in Stop or Run, the BMS DC contactors are closed, and the BMS current is within an acceptable level","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:CurrentBeforeStopIsOK","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##BMS_ID##:DCClosed"},"StandbyEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:standby@enabled"},{"uri":"/status/##PCS_ID##:StandbyEnabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} and ({3} == Stop or {3} == Run)","note":"Enable Standby UI control if BMS DC Contactors are closed, the PCS is in Stop or Run, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/assets/pcs/##PCS_ID##:maint_mode","variable3":"/status/##PCS_ID##:SystemState"},"Start":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"({1} == Stop or {1} == Standby) and {2} and not {3}","note1":"Start command to send to PCS if the PCS is in Stop or Standby, the BMS DC contactors are closed, and the PCS is not faulted","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState","variable2":"/status/##BMS_ID##:DCClosed","variable3":"/status/##PCS_ID##:IsFaulted"},"StartEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:start@enabled"},{"uri":"/status/##PCS_ID##:StartEnabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} and ({3} == Stop or {3} == Standby) and not {4}","note":"Enable Start UI control if BMS DC Contactors are closed, the PCS is in Stop or Standby, the PCS is not faulted, and the PCS is in maintenance mode","numVars":4,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/assets/pcs/##PCS_ID##:maint_mode","variable3":"/status/##PCS_ID##:SystemState","variable4":"/status/##PCS_ID##:IsFaulted"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Standby or {2} == Run) and {3}","note1":"Stop command to send to PCS if the PCS is in Standby or Run, the BMS DC contactors are closed, and the BMS current is within an acceptable level","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:CurrentBeforeStopIsOK","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##BMS_ID##:DCClosed"},"StopEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:stop@enabled"},{"uri":"/status/##PCS_ID##:StopEnabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} != Stop","note":"Enable Stop UI control if the PCS is not in Stop and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerCmd","variable2":"/status/##PCS_ID##:ActivePowerSetpointFeedback","variable3":"/config/##PCS_ID##:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerRampRateCmd","variable2":"/status/##PCS_ID##:ActivePowerRampRateFeedback","variable3":"/config/##PCS_ID##:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:FrequencySetpoint","variable2":"/status/##PCS_ID##:FrequencySetpointFeedback","variable3":"/config/##PCS_ID##:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerCmd","variable2":"/status/##PCS_ID##:ReactivePowerSetpointFeedback","variable3":"/config/##PCS_ID##:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerRampRateCmd","variable2":"/status/##PCS_ID##:ReactivePowerRampRateFeedback","variable3":"/config/##PCS_ID##:RampRateMargin"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Stop or {1} == Fault","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:VoltageSetpoint","variable2":"/status/##PCS_ID##:VoltageSetpointFeedback","variable3":"/config/##PCS_ID##:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/##PCS_ID##:VoltageSetpoint","variable2":"/status/##PCS_ID##:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:voltage_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:GridMode"}},"/schedule/wake_monitor/##PCS_ID##":{"/controls/##PCS_ID##:ActivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ActivePowerCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ActivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ActivePowerRampRateCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ActivePowerSetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ClearFaults":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:FrequencySetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:FrequencySetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:GridFollowPQ":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:GridFollowPQEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:GridFormVF":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:GridFormVFEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:GridFormVSG":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:GridFormVSGEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ReactivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ReactivePowerCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ReactivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ReactivePowerRampRateCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ReactivePowerSetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:Standby":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:StandbyEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:Start":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:StartEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:Stop":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:StopEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:VerifyActivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyActivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyFrequencySetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyGridFollowPQ":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyGridFormVF":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyGridFormVSG":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyReactivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyReactivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyStandby":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyStart":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyStop":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyVoltageSetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VoltageSetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VoltageSetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"}},"/status/##PCS_ID##":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ActivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ActivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ClearFaults"},{"outValue":"Clear","uri":"/faults/##PCS_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##PCS_ID##:clear_alarms"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##PCS_ID##:clear_faults and /alarms/##PCS_ID##:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:FrequencySetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:GridFollowPQ"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:GridFormVF"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:GridFormVSG"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ReactivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ReactivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:Standby"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:Start"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:Stop"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyActivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyFrequencySetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyGridFollowPQ"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyGridFormVF"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyGridFormVSG"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyReactivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyStandby"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyStart"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyStop"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyVoltageSetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:VoltageSetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:VoltageSetpoint","value":false}},"/alarms/##PCS_ID##":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/##PCS_ID##:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##PCS_ID##) will be reset to the normal state (defined in /config/##PCS_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"alarm","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/faults/##PCS_ID##":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/##PCS_ID##:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##PCS_ID##) will be reset to the normal state (defined in /config/##PCS_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"fault","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/schedule/wake_monitor/##PCS_ID##":{"/status/##PCS_ID##:ActivePower":{"amap":"##PCS_ID##","func":"CheckMonitorVar"},"/status/##PCS_ID##:DCVoltage":{"amap":"##PCS_ID##","func":"CheckMonitorVar"},"/status/##PCS_ID##:HeartbeatRead":{"amap":"##PCS_ID##","func":"CheckMonitorVar"},"/status/##PCS_ID##:IsAlarming":{"amap":"##PCS_ID##","func":"CalculateVar"},"/status/##PCS_ID##:IsFaulted":{"amap":"##PCS_ID##","func":"CalculateVar"},"/status/##PCS_ID##:TotalAlarmCnt":{"amap":"##PCS_ID##","func":"CalculateVar"},"/status/##PCS_ID##:TotalFaultCnt":{"amap":"##PCS_ID##","func":"CalculateVar"}},"/status/##PCS_ID##":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":3510,"MaxAlarmTimeout":1,"MaxFaultThreshold":3525,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS instance faults, the fault shutdown event will be propagated to its parent","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"enable":"/config/##PCS_ID##:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##PCS_ID##:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/##PCS_ID##:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/##PCS_ID##:SystemFault","variable2":"/status/##PCS_ID##:TotalFaultCnt"},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/##PCS_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/##PCS_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:FaultCnt"}},"/components/##PCS_ID##":{"grid_mode":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FollowPQ","uri":"/status/##PCS_ID##:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVF","uri":"/status/##PCS_ID##:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVSG","uri":"/status/##PCS_ID##:GridMode"},{"enable":"/config/##PCS_ID##:enum_opt","outValue":true,"uri":"/components/##PCS_ID##:grid_mode@ifChanged","useAv":true}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0},"status":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"TODO: add output value to set to uri","uri":"/status/##PCS_ID##:Status"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Stop","uri":"/status/##PCS_ID##:SystemState"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Standby","uri":"/status/##PCS_ID##:SystemState"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Run","uri":"/status/##PCS_ID##:SystemState"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Fault","uri":"/status/##PCS_ID##:SystemState"},{"enable":"/config/##PCS_ID##:enum_opt","outValue":true,"uri":"/components/##PCS_ID##:status@ifChanged","useAv":true}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/##PCS_ID##":{"checkInputs_##PCS_ID##":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/##PCS_ID##:status@ifChanged"},{"outValue":false,"uri":"/components/##PCS_ID##:grid_mode@ifChanged"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/##PCS_ID##":{"active_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:active_power","vlink":"/status/##PCS_ID##:ActivePower"},"active_power_ramp_rate_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:active_power_ramp_rate_feedback","vlink":"/status/##PCS_ID##:ActivePowerRampRateFeedback"},"active_power_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:active_power_setpoint_feedback","vlink":"/status/##PCS_ID##:ActivePowerSetpointFeedback"},"apparent_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:apparent_power","vlink":"/status/##PCS_ID##:ApparentPower"},"dc_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:dc_current","vlink":"/status/##PCS_ID##:DCCurrent"},"dc_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:dc_power","vlink":"/status/##PCS_ID##:DCPower"},"dc_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:dc_voltage","vlink":"/status/##PCS_ID##:DCVoltage"},"frequency":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:frequency","vlink":"/status/##PCS_ID##:Frequency"},"frequency_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:frequency_setpoint_feedback","vlink":"/status/##PCS_ID##:FrequencySetpointFeedback"},"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:heartbeat_read","vlink":"/status/##PCS_ID##:HeartbeatRead"},"l1_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l1_current","vlink":"/status/##PCS_ID##:L1Current"},"l1_l2_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l1_l2_voltage","vlink":"/status/##PCS_ID##:L1L2Voltage"},"l2_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l2_current","vlink":"/status/##PCS_ID##:L2Current"},"l2_l3_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l2_l3_voltage","vlink":"/status/##PCS_ID##:L2L3Voltage"},"l3_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l3_current","vlink":"/status/##PCS_ID##:L3Current"},"l3_l1_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l3_l1_voltage","vlink":"/status/##PCS_ID##:L3L1Voltage"},"power_factor":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:power_factor","vlink":"/status/##PCS_ID##:PowerFactor"},"rated_active_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:rated_active_power","vlink":"/limits/##PCS_ID##:RatedActivePower"},"rated_apparent_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:rated_apparent_power","vlink":"/limits/##PCS_ID##:RatedApparentPower"},"rated_reactive_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:rated_reactive_power","vlink":"/limits/##PCS_ID##:RatedReactivePower"},"reactive_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:reactive_power","vlink":"/status/##PCS_ID##:ReactivePower"},"reactive_power_ramp_rate_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:reactive_power_ramp_rate_feedback","vlink":"/status/##PCS_ID##:ReactivePowerRampRateFeedback"},"reactive_power_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:reactive_power_setpoint_feedback","vlink":"/status/##PCS_ID##:ReactivePowerSetpointFeedback"},"voltage_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:voltage_setpoint_feedback","vlink":"/status/##PCS_ID##:VoltageSetpointFeedback"}}
[4.77449s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##PCS_ID##":{"AlarmDestination":"/assets/pcs/##PCS_ID##:alarms","FaultDestination":"/assets/pcs/##PCS_ID##:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":1200,"RatedApparentPower":1350,"RatedPowerFactor":0.8,"RatedReactivePower":1100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/controls/##PCS_ID##":{"ActivePowerSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd","inAv":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##"},{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/controls/##PCS_ID##:ActivePowerCmdConvert"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Used to trigger power command handling function on a value set","value":0},"ReactivePowerSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd","inAv":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##"},{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/controls/##PCS_ID##:ReactivePowerCmdConvert"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Used to trigger power command handling function on a value set","value":0}},"/links/##PCS_ID##":{"ActivePowerCmdReal":{"value":"/controls/##PCS_ID##:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/##PCS_ID##:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/##PCS_ID##:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/##PCS_ID##:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/##PCS_ID##:RatedActivePower"},"RatedApparentPower":{"value":"/limits/##PCS_ID##:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/##PCS_ID##:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/##PCS_ID##:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/##PCS_ID##:ReactivePowerSetpoint"}},"/sched/##PCS_ID##":{"handlePowerCmd_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd"}]}]},"bms":"##BMS_ID##","ess":"##ESS_ID##","note":"Processes active and reactive power commands before they are sent","pcs":"##PCS_ID##","value":1},"pubAssets_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"RunPub"}]}]},"enable":"/config/##PCS_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##PCS_ID##)","table":"/assets/pcs/##PCS_ID##","value":1},"runMonitor_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"RunMonitor"}]}]},"aname":"##PCS_ID##","enable":"/config/##PCS_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##PCS_ID##","value":1},"updateHeartbeatWrite_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/status/##PCS_ID##:HeartbeatWrite"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Periodically updates the heartbeat write variable defined in /status/##PCS_ID##:HeartbeatWrite","value":1}},"/status/##PCS_ID##":{"CommsOK":true,"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##PCS_ID##:DCVoltage@EnableMaxValCheck"},{"uri":"/status/##PCS_ID##:DCVoltage@EnableMinValCheck"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/##PCS_ID##:heartbeat_write"}]}]},"enable":"/config/##PCS_ID##:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:HeartbeatWrite"},"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##PCS_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:pubAssets_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":0.1,"uri":"/sched/##PCS_ID##:runMonitor_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:checkInputs_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:updateHeartbeatWrite_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":0.1,"uri":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##PCS_ID##":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ActivePowerCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ActivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ActivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:active_power_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/##PCS_ID##:FrequencySetpoint","variable2":"/status/##PCS_ID##:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:frequency_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/##PCS_ID##:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:grid_follow_pq@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##PCS_ID##:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/##PCS_ID##:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:grid_form_vf@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##PCS_ID##:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/##PCS_ID##:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:grid_form_vsg@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##PCS_ID##:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ReactivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ReactivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:reactive_power_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Stop or {2} == Run) and {3}","note1":"Standby command to send to PCS if the PCS is in Stop or Run, the BMS DC contactors are closed, and the BMS current is within an acceptable level","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:CurrentBeforeStopIsOK","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##BMS_ID##:DCClosed"},"StandbyEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:standby@enabled"},{"uri":"/status/##PCS_ID##:StandbyEnabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} and ({3} == Stop or {3} == Run)","note":"Enable Standby UI control if BMS DC Contactors are closed, the PCS is in Stop or Run, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/assets/pcs/##PCS_ID##:maint_mode","variable3":"/status/##PCS_ID##:SystemState"},"Start":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"({1} == Stop or {1} == Standby) and {2} and not {3}","note1":"Start command to send to PCS if the PCS is in Stop or Standby, the BMS DC contactors are closed, and the PCS is not faulted","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState","variable2":"/status/##BMS_ID##:DCClosed","variable3":"/status/##PCS_ID##:IsFaulted"},"StartEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:start@enabled"},{"uri":"/status/##PCS_ID##:StartEnabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} and ({3} == Stop or {3} == Standby) and not {4}","note":"Enable Start UI control if BMS DC Contactors are closed, the PCS is in Stop or Standby, the PCS is not faulted, and the PCS is in maintenance mode","numVars":4,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/assets/pcs/##PCS_ID##:maint_mode","variable3":"/status/##PCS_ID##:SystemState","variable4":"/status/##PCS_ID##:IsFaulted"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Standby or {2} == Run) and {3}","note1":"Stop command to send to PCS if the PCS is in Standby or Run, the BMS DC contactors are closed, and the BMS current is within an acceptable level","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:CurrentBeforeStopIsOK","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##BMS_ID##:DCClosed"},"StopEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:stop@enabled"},{"uri":"/status/##PCS_ID##:StopEnabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} != Stop","note":"Enable Stop UI control if the PCS is not in Stop and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerCmd","variable2":"/status/##PCS_ID##:ActivePowerSetpointFeedback","variable3":"/config/##PCS_ID##:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerRampRateCmd","variable2":"/status/##PCS_ID##:ActivePowerRampRateFeedback","variable3":"/config/##PCS_ID##:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:FrequencySetpoint","variable2":"/status/##PCS_ID##:FrequencySetpointFeedback","variable3":"/config/##PCS_ID##:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerCmd","variable2":"/status/##PCS_ID##:ReactivePowerSetpointFeedback","variable3":"/config/##PCS_ID##:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerRampRateCmd","variable2":"/status/##PCS_ID##:ReactivePowerRampRateFeedback","variable3":"/config/##PCS_ID##:RampRateMargin"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Stop or {1} == Fault","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:VoltageSetpoint","variable2":"/status/##PCS_ID##:VoltageSetpointFeedback","variable3":"/config/##PCS_ID##:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/##PCS_ID##:VoltageSetpoint","variable2":"/status/##PCS_ID##:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:voltage_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:GridMode"}},"/schedule/wake_monitor/##PCS_ID##":{"/controls/##PCS_ID##:ActivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ActivePowerCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ActivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ActivePowerRampRateCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ActivePowerSetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ClearFaults":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:FrequencySetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:FrequencySetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:GridFollowPQ":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:GridFollowPQEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:GridFormVF":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:GridFormVFEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:GridFormVSG":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:GridFormVSGEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ReactivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ReactivePowerCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ReactivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ReactivePowerRampRateCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ReactivePowerSetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:Standby":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:StandbyEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:Start":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:StartEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:Stop":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:StopEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:VerifyActivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyActivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyFrequencySetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyGridFollowPQ":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyGridFormVF":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyGridFormVSG":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyReactivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyReactivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyStandby":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyStart":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyStop":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyVoltageSetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VoltageSetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VoltageSetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"}},"/status/##PCS_ID##":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ActivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ActivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ClearFaults"},{"outValue":"Clear","uri":"/faults/##PCS_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##PCS_ID##:clear_alarms"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##PCS_ID##:clear_faults and /alarms/##PCS_ID##:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:FrequencySetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:GridFollowPQ"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:GridFormVF"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:GridFormVSG"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ReactivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ReactivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:Standby"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:Start"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:Stop"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyActivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyFrequencySetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyGridFollowPQ"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyGridFormVF"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyGridFormVSG"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyReactivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyStandby"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyStart"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyStop"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyVoltageSetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:VoltageSetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:VoltageSetpoint","value":false}},"/alarms/##PCS_ID##":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/##PCS_ID##:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##PCS_ID##) will be reset to the normal state (defined in /config/##PCS_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"alarm","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/faults/##PCS_ID##":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/##PCS_ID##:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##PCS_ID##) will be reset to the normal state (defined in /config/##PCS_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"fault","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/schedule/wake_monitor/##PCS_ID##":{"/status/##PCS_ID##:ActivePower":{"amap":"##PCS_ID##","func":"CheckMonitorVar"},"/status/##PCS_ID##:DCVoltage":{"amap":"##PCS_ID##","func":"CheckMonitorVar"},"/status/##PCS_ID##:HeartbeatRead":{"amap":"##PCS_ID##","func":"CheckMonitorVar"},"/status/##PCS_ID##:IsAlarming":{"amap":"##PCS_ID##","func":"CalculateVar"},"/status/##PCS_ID##:IsFaulted":{"amap":"##PCS_ID##","func":"CalculateVar"},"/status/##PCS_ID##:TotalAlarmCnt":{"amap":"##PCS_ID##","func":"CalculateVar"},"/status/##PCS_ID##:TotalFaultCnt":{"amap":"##PCS_ID##","func":"CalculateVar"}},"/status/##PCS_ID##":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":3510,"MaxAlarmTimeout":1,"MaxFaultThreshold":3525,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS instance faults, the fault shutdown event will be propagated to its parent","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"enable":"/config/##PCS_ID##:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##PCS_ID##:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/##PCS_ID##:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/##PCS_ID##:SystemFault","variable2":"/status/##PCS_ID##:TotalFaultCnt"},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/##PCS_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/##PCS_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:FaultCnt"}},"/components/##PCS_ID##":{"grid_mode":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FollowPQ","uri":"/status/##PCS_ID##:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVF","uri":"/status/##PCS_ID##:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVSG","uri":"/status/##PCS_ID##:GridMode"},{"enable":"/config/##PCS_ID##:enum_opt","outValue":true,"uri":"/components/##PCS_ID##:grid_mode@ifChanged","useAv":true}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0},"status":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"TODO: add output value to set to uri","uri":"/status/##PCS_ID##:Status"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Stop","uri":"/status/##PCS_ID##:SystemState"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Standby","uri":"/status/##PCS_ID##:SystemState"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Run","uri":"/status/##PCS_ID##:SystemState"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Fault","uri":"/status/##PCS_ID##:SystemState"},{"enable":"/config/##PCS_ID##:enum_opt","outValue":true,"uri":"/components/##PCS_ID##:status@ifChanged","useAv":true}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/##PCS_ID##":{"checkInputs_##PCS_ID##":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/##PCS_ID##:status@ifChanged"},{"outValue":false,"uri":"/components/##PCS_ID##:grid_mode@ifChanged"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/##PCS_ID##":{"active_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:active_power","vlink":"/status/##PCS_ID##:ActivePower"},"active_power_ramp_rate_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:active_power_ramp_rate_feedback","vlink":"/status/##PCS_ID##:ActivePowerRampRateFeedback"},"active_power_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:active_power_setpoint_feedback","vlink":"/status/##PCS_ID##:ActivePowerSetpointFeedback"},"apparent_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:apparent_power","vlink":"/status/##PCS_ID##:ApparentPower"},"dc_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:dc_current","vlink":"/status/##PCS_ID##:DCCurrent"},"dc_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:dc_power","vlink":"/status/##PCS_ID##:DCPower"},"dc_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:dc_voltage","vlink":"/status/##PCS_ID##:DCVoltage"},"frequency":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:frequency","vlink":"/status/##PCS_ID##:Frequency"},"frequency_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:frequency_setpoint_feedback","vlink":"/status/##PCS_ID##:FrequencySetpointFeedback"},"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:heartbeat_read","vlink":"/status/##PCS_ID##:HeartbeatRead"},"l1_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l1_current","vlink":"/status/##PCS_ID##:L1Current"},"l1_l2_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l1_l2_voltage","vlink":"/status/##PCS_ID##:L1L2Voltage"},"l2_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l2_current","vlink":"/status/##PCS_ID##:L2Current"},"l2_l3_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l2_l3_voltage","vlink":"/status/##PCS_ID##:L2L3Voltage"},"l3_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l3_current","vlink":"/status/##PCS_ID##:L3Current"},"l3_l1_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l3_l1_voltage","vlink":"/status/##PCS_ID##:L3L1Voltage"},"power_factor":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:power_factor","vlink":"/status/##PCS_ID##:PowerFactor"},"rated_active_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:rated_active_power","vlink":"/limits/##PCS_ID##:RatedActivePower"},"rated_apparent_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:rated_apparent_power","vlink":"/limits/##PCS_ID##:RatedApparentPower"},"rated_reactive_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:rated_reactive_power","vlink":"/limits/##PCS_ID##:RatedReactivePower"},"reactive_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:reactive_power","vlink":"/status/##PCS_ID##:ReactivePower"},"reactive_power_ramp_rate_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:reactive_power_ramp_rate_feedback","vlink":"/status/##PCS_ID##:ReactivePowerRampRateFeedback"},"reactive_power_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:reactive_power_setpoint_feedback","vlink":"/status/##PCS_ID##:ReactivePowerSetpointFeedback"},"voltage_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:voltage_setpoint_feedback","vlink":"/status/##PCS_ID##:VoltageSetpointFeedback"}},"/site/ess":{"pcs_##PCS_ID##_control_alarms":{"bit0":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit10":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit11":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit12":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit13":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit14":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","bit15":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","bit16":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","bit17":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","bit18":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit19":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit2":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit20":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","bit21":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","bit22":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","bit23":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","bit24":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit4":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit5":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit6":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit7":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit8":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit9":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","name":"PCS Control Alarms","type":"bitfield","value":0},"pcs_##PCS_ID##_monitor_alarms":{"bit0":"PCS ActivePower - Max Threshold Exceeded","bit1":"PCS DCVoltage - Max Threshold Exceeded","bit2":"PCS DCVoltage - Min Threshold Exceeded","name":"PCS Monitor Alarms","type":"bitfield","value":0},"pcs_##PCS_ID##_monitor_faults":{"bit0":"PCS ActivePower - Max Threshold Exceeded","bit1":"PCS DCVoltage - Max Threshold Exceeded","bit2":"PCS DCVoltage - Min Threshold Exceeded","name":"PCS Monitor Faults","type":"bitfield","value":0}}
[4.77728s  ] [info    ] [configLoad     ] pi's av tbody now: "/config/##PCS_ID##":{"AlarmDestination":"/assets/pcs/##PCS_ID##:alarms","FaultDestination":"/assets/pcs/##PCS_ID##:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":1200,"RatedApparentPower":1350,"RatedPowerFactor":0.8,"RatedReactivePower":1100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/controls/##PCS_ID##":{"ActivePowerSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd","inAv":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##"},{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/controls/##PCS_ID##:ActivePowerCmdConvert"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Used to trigger power command handling function on a value set","value":0},"ReactivePowerSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd","inAv":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##"},{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/controls/##PCS_ID##:ReactivePowerCmdConvert"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Used to trigger power command handling function on a value set","value":0}},"/links/##PCS_ID##":{"ActivePowerCmdReal":{"value":"/controls/##PCS_ID##:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/##PCS_ID##:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/##PCS_ID##:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/##PCS_ID##:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/##PCS_ID##:RatedActivePower"},"RatedApparentPower":{"value":"/limits/##PCS_ID##:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/##PCS_ID##:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/##PCS_ID##:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/##PCS_ID##:ReactivePowerSetpoint"}},"/sched/##PCS_ID##":{"handlePowerCmd_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd"}]}]},"bms":"##BMS_ID##","ess":"##ESS_ID##","note":"Processes active and reactive power commands before they are sent","pcs":"##PCS_ID##","value":1},"pubAssets_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"RunPub"}]}]},"enable":"/config/##PCS_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##PCS_ID##)","table":"/assets/pcs/##PCS_ID##","value":1},"runMonitor_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"RunMonitor"}]}]},"aname":"##PCS_ID##","enable":"/config/##PCS_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##PCS_ID##","value":1},"updateHeartbeatWrite_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/status/##PCS_ID##:HeartbeatWrite"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Periodically updates the heartbeat write variable defined in /status/##PCS_ID##:HeartbeatWrite","value":1}},"/status/##PCS_ID##":{"CommsOK":true,"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##PCS_ID##:DCVoltage@EnableMaxValCheck"},{"uri":"/status/##PCS_ID##:DCVoltage@EnableMinValCheck"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/##PCS_ID##:heartbeat_write"}]}]},"enable":"/config/##PCS_ID##:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:HeartbeatWrite"},"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##PCS_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:pubAssets_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":0.1,"uri":"/sched/##PCS_ID##:runMonitor_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:checkInputs_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:updateHeartbeatWrite_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":0.1,"uri":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##PCS_ID##":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ActivePowerCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ActivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ActivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:active_power_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/##PCS_ID##:FrequencySetpoint","variable2":"/status/##PCS_ID##:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:frequency_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/##PCS_ID##:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:grid_follow_pq@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##PCS_ID##:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/##PCS_ID##:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:grid_form_vf@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##PCS_ID##:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/##PCS_ID##:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:grid_form_vsg@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##PCS_ID##:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ReactivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ReactivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:reactive_power_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Stop or {2} == Run) and {3}","note1":"Standby command to send to PCS if the PCS is in Stop or Run, the BMS DC contactors are closed, and the BMS current is within an acceptable level","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:CurrentBeforeStopIsOK","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##BMS_ID##:DCClosed"},"StandbyEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:standby@enabled"},{"uri":"/status/##PCS_ID##:StandbyEnabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} and ({3} == Stop or {3} == Run)","note":"Enable Standby UI control if BMS DC Contactors are closed, the PCS is in Stop or Run, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/assets/pcs/##PCS_ID##:maint_mode","variable3":"/status/##PCS_ID##:SystemState"},"Start":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"({1} == Stop or {1} == Standby) and {2} and not {3}","note1":"Start command to send to PCS if the PCS is in Stop or Standby, the BMS DC contactors are closed, and the PCS is not faulted","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState","variable2":"/status/##BMS_ID##:DCClosed","variable3":"/status/##PCS_ID##:IsFaulted"},"StartEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:start@enabled"},{"uri":"/status/##PCS_ID##:StartEnabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} and ({3} == Stop or {3} == Standby) and not {4}","note":"Enable Start UI control if BMS DC Contactors are closed, the PCS is in Stop or Standby, the PCS is not faulted, and the PCS is in maintenance mode","numVars":4,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/assets/pcs/##PCS_ID##:maint_mode","variable3":"/status/##PCS_ID##:SystemState","variable4":"/status/##PCS_ID##:IsFaulted"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Standby or {2} == Run) and {3}","note1":"Stop command to send to PCS if the PCS is in Standby or Run, the BMS DC contactors are closed, and the BMS current is within an acceptable level","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:CurrentBeforeStopIsOK","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##BMS_ID##:DCClosed"},"StopEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:stop@enabled"},{"uri":"/status/##PCS_ID##:StopEnabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} != Stop","note":"Enable Stop UI control if the PCS is not in Stop and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerCmd","variable2":"/status/##PCS_ID##:ActivePowerSetpointFeedback","variable3":"/config/##PCS_ID##:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerRampRateCmd","variable2":"/status/##PCS_ID##:ActivePowerRampRateFeedback","variable3":"/config/##PCS_ID##:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:FrequencySetpoint","variable2":"/status/##PCS_ID##:FrequencySetpointFeedback","variable3":"/config/##PCS_ID##:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerCmd","variable2":"/status/##PCS_ID##:ReactivePowerSetpointFeedback","variable3":"/config/##PCS_ID##:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerRampRateCmd","variable2":"/status/##PCS_ID##:ReactivePowerRampRateFeedback","variable3":"/config/##PCS_ID##:RampRateMargin"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Stop or {1} == Fault","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:VoltageSetpoint","variable2":"/status/##PCS_ID##:VoltageSetpointFeedback","variable3":"/config/##PCS_ID##:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/##PCS_ID##:VoltageSetpoint","variable2":"/status/##PCS_ID##:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:voltage_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:GridMode"}},"/schedule/wake_monitor/##PCS_ID##":{"/controls/##PCS_ID##:ActivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ActivePowerCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ActivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ActivePowerRampRateCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ActivePowerSetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ClearFaults":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:FrequencySetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:FrequencySetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:GridFollowPQ":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:GridFollowPQEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:GridFormVF":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:GridFormVFEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:GridFormVSG":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:GridFormVSGEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ReactivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ReactivePowerCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ReactivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ReactivePowerRampRateCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ReactivePowerSetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:Standby":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:StandbyEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:Start":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:StartEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:Stop":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:StopEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:VerifyActivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyActivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyFrequencySetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyGridFollowPQ":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyGridFormVF":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyGridFormVSG":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyReactivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyReactivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyStandby":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyStart":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyStop":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyVoltageSetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VoltageSetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VoltageSetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"}},"/status/##PCS_ID##":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ActivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ActivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ClearFaults"},{"outValue":"Clear","uri":"/faults/##PCS_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##PCS_ID##:clear_alarms"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##PCS_ID##:clear_faults and /alarms/##PCS_ID##:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:FrequencySetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:GridFollowPQ"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:GridFormVF"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:GridFormVSG"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ReactivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ReactivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:Standby"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:Start"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:Stop"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyActivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyFrequencySetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyGridFollowPQ"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyGridFormVF"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyGridFormVSG"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyReactivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyStandby"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyStart"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyStop"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyVoltageSetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:VoltageSetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:VoltageSetpoint","value":false}},"/alarms/##PCS_ID##":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/##PCS_ID##:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##PCS_ID##) will be reset to the normal state (defined in /config/##PCS_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"alarm","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/faults/##PCS_ID##":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/##PCS_ID##:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##PCS_ID##) will be reset to the normal state (defined in /config/##PCS_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"fault","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/schedule/wake_monitor/##PCS_ID##":{"/status/##PCS_ID##:ActivePower":{"amap":"##PCS_ID##","func":"CheckMonitorVar"},"/status/##PCS_ID##:DCVoltage":{"amap":"##PCS_ID##","func":"CheckMonitorVar"},"/status/##PCS_ID##:HeartbeatRead":{"amap":"##PCS_ID##","func":"CheckMonitorVar"},"/status/##PCS_ID##:IsAlarming":{"amap":"##PCS_ID##","func":"CalculateVar"},"/status/##PCS_ID##:IsFaulted":{"amap":"##PCS_ID##","func":"CalculateVar"},"/status/##PCS_ID##:TotalAlarmCnt":{"amap":"##PCS_ID##","func":"CalculateVar"},"/status/##PCS_ID##:TotalFaultCnt":{"amap":"##PCS_ID##","func":"CalculateVar"}},"/status/##PCS_ID##":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":3510,"MaxAlarmTimeout":1,"MaxFaultThreshold":3525,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS instance faults, the fault shutdown event will be propagated to its parent","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"enable":"/config/##PCS_ID##:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##PCS_ID##:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/##PCS_ID##:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/##PCS_ID##:SystemFault","variable2":"/status/##PCS_ID##:TotalFaultCnt"},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/##PCS_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/##PCS_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:FaultCnt"}},"/components/##PCS_ID##":{"grid_mode":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FollowPQ","uri":"/status/##PCS_ID##:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVF","uri":"/status/##PCS_ID##:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVSG","uri":"/status/##PCS_ID##:GridMode"},{"enable":"/config/##PCS_ID##:enum_opt","outValue":true,"uri":"/components/##PCS_ID##:grid_mode@ifChanged","useAv":true}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0},"status":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"TODO: add output value to set to uri","uri":"/status/##PCS_ID##:Status"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Stop","uri":"/status/##PCS_ID##:SystemState"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Standby","uri":"/status/##PCS_ID##:SystemState"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Run","uri":"/status/##PCS_ID##:SystemState"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Fault","uri":"/status/##PCS_ID##:SystemState"},{"enable":"/config/##PCS_ID##:enum_opt","outValue":true,"uri":"/components/##PCS_ID##:status@ifChanged","useAv":true}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/##PCS_ID##":{"checkInputs_##PCS_ID##":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/##PCS_ID##:status@ifChanged"},{"outValue":false,"uri":"/components/##PCS_ID##:grid_mode@ifChanged"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/##PCS_ID##":{"active_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:active_power","vlink":"/status/##PCS_ID##:ActivePower"},"active_power_ramp_rate_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:active_power_ramp_rate_feedback","vlink":"/status/##PCS_ID##:ActivePowerRampRateFeedback"},"active_power_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:active_power_setpoint_feedback","vlink":"/status/##PCS_ID##:ActivePowerSetpointFeedback"},"apparent_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:apparent_power","vlink":"/status/##PCS_ID##:ApparentPower"},"dc_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:dc_current","vlink":"/status/##PCS_ID##:DCCurrent"},"dc_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:dc_power","vlink":"/status/##PCS_ID##:DCPower"},"dc_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:dc_voltage","vlink":"/status/##PCS_ID##:DCVoltage"},"frequency":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:frequency","vlink":"/status/##PCS_ID##:Frequency"},"frequency_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:frequency_setpoint_feedback","vlink":"/status/##PCS_ID##:FrequencySetpointFeedback"},"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:heartbeat_read","vlink":"/status/##PCS_ID##:HeartbeatRead"},"l1_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l1_current","vlink":"/status/##PCS_ID##:L1Current"},"l1_l2_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l1_l2_voltage","vlink":"/status/##PCS_ID##:L1L2Voltage"},"l2_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l2_current","vlink":"/status/##PCS_ID##:L2Current"},"l2_l3_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l2_l3_voltage","vlink":"/status/##PCS_ID##:L2L3Voltage"},"l3_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l3_current","vlink":"/status/##PCS_ID##:L3Current"},"l3_l1_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l3_l1_voltage","vlink":"/status/##PCS_ID##:L3L1Voltage"},"power_factor":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:power_factor","vlink":"/status/##PCS_ID##:PowerFactor"},"rated_active_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:rated_active_power","vlink":"/limits/##PCS_ID##:RatedActivePower"},"rated_apparent_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:rated_apparent_power","vlink":"/limits/##PCS_ID##:RatedApparentPower"},"rated_reactive_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:rated_reactive_power","vlink":"/limits/##PCS_ID##:RatedReactivePower"},"reactive_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:reactive_power","vlink":"/status/##PCS_ID##:ReactivePower"},"reactive_power_ramp_rate_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:reactive_power_ramp_rate_feedback","vlink":"/status/##PCS_ID##:ReactivePowerRampRateFeedback"},"reactive_power_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:reactive_power_setpoint_feedback","vlink":"/status/##PCS_ID##:ReactivePowerSetpointFeedback"},"voltage_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:voltage_setpoint_feedback","vlink":"/status/##PCS_ID##:VoltageSetpointFeedback"}},"/site/ess":{"pcs_##PCS_ID##_control_alarms":{"bit0":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit10":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit11":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit12":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit13":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit14":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","bit15":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","bit16":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","bit17":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","bit18":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit19":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit2":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit20":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","bit21":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","bit22":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","bit23":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","bit24":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit4":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit5":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit6":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit7":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit8":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit9":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","name":"PCS Control Alarms","type":"bitfield","value":0},"pcs_##PCS_ID##_monitor_alarms":{"bit0":"PCS ActivePower - Max Threshold Exceeded","bit1":"PCS DCVoltage - Max Threshold Exceeded","bit2":"PCS DCVoltage - Min Threshold Exceeded","name":"PCS Monitor Alarms","type":"bitfield","value":0},"pcs_##PCS_ID##_monitor_faults":{"bit0":"PCS ActivePower - Max Threshold Exceeded","bit1":"PCS DCVoltage - Max Threshold Exceeded","bit2":"PCS DCVoltage - Min Threshold Exceeded","name":"PCS Monitor Faults","type":"bitfield","value":0}},"/assets/pcs/##PCS_ID##":{"active_power":{"value":0},"active_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/controls/##PCS_ID##:ActivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power ramp rate","value":0},"active_power_ramp_rate_feedback":{"value":0},"active_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/controls/##PCS_ID##:ActivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power setpoint","value":0},"active_power_setpoint_feedback":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"comms_ok":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"frequency":{"value":0},"frequency_setpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:FrequencySetpoint@triggerCmd"},{"uri":"/controls/##PCS_ID##:FrequencySetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the frequency setpoint while the PCS is in grid-forming (VF)","value":0},"frequency_setpoint_feedback":{"value":0},"grid_follow_pq":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:GridFollowPQ@triggerCmd"},{"inValue":true,"outValue":1,"uri":"/controls/##PCS_ID##:GridFollowPQ"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-following","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vf":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:GridFormVF@triggerCmd"},{"inValue":true,"outValue":2,"uri":"/controls/##PCS_ID##:GridFormVF"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (voltage and frequency)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vsg":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:GridFormVSG@triggerCmd"},{"inValue":true,"outValue":3,"uri":"/controls/##PCS_ID##:GridFormVSG"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (virtual synchronous generator)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_mode":{"value":"INIT"},"l1_current":{"value":0},"l1_l2_voltage":{"value":0},"l2_current":{"value":0},"l2_l3_voltage":{"value":0},"l3_current":{"value":0},"l3_l1_voltage":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/##PCS_ID##:clear_faults@enabled"},{"uri":"/assets/pcs/##PCS_ID##:active_power_ramp_rate@enabled"},{"uri":"/assets/pcs/##PCS_ID##:reactive_power_ramp_rate@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_charge_power":{"value":0},"max_discharge_power":{"value":0},"max_igbt_temperature":{"value":0},"power_factor":{"value":0},"rated_active_power":{"value":0},"rated_apparent_power":{"value":0},"rated_power_factor":{"value":0},"rated_reactive_power":{"value":0},"reactive_power":{"value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/controls/##PCS_ID##:ReactivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power ramp rate","value":0},"reactive_power_ramp_rate_feedback":{"value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/controls/##PCS_ID##:ReactivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power setpoint","value":0},"reactive_power_setpoint_feedback":{"value":0},"standby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:Standby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:Standby"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate the standby command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"start":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:Start@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:Start"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate the start command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"status":{"value":"INIT"},"stop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:Stop"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate the stop command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"system_state":{"value":"INIT"},"voltage_setpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:VoltageSetpoint@triggerCmd"},{"uri":"/controls/##PCS_ID##:VoltageSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the voltage setpoint while the PCS is in grid-forming (VF)","value":0},"voltage_setpoint_feedback":{"value":0}},"/vlinks/##PCS_ID##":{"ui_active_power":{"default":0,"value":"/assets/pcs/##PCS_ID##:active_power","vlink":"/status/##PCS_ID##:ActivePower"},"ui_active_power_ramp_rate_feedback":{"default":0,"value":"/assets/pcs/##PCS_ID##:active_power_ramp_rate_feedback","vlink":"/status/##PCS_ID##:ActivePowerRampRateFeedback"},"ui_active_power_setpoint_feedback":{"default":0,"value":"/assets/pcs/##PCS_ID##:active_power_setpoint_feedback","vlink":"/status/##PCS_ID##:ActivePowerSetpointFeedback"},"ui_apparent_power":{"default":0,"value":"/assets/pcs/##PCS_ID##:apparent_power","vlink":"/status/##PCS_ID##:ApparentPower"},"ui_comms_ok":{"default":false,"value":"/assets/pcs/##PCS_ID##:comms_ok","vlink":"/status/##PCS_ID##:CommsOK"},"ui_dc_current":{"default":0,"value":"/assets/pcs/##PCS_ID##:dc_current","vlink":"/status/##PCS_ID##:DCCurrent"},"ui_dc_power":{"default":0,"value":"/assets/pcs/##PCS_ID##:dc_power","vlink":"/status/##PCS_ID##:DCPower"},"ui_dc_voltage":{"default":0,"value":"/assets/pcs/##PCS_ID##:dc_voltage","vlink":"/status/##PCS_ID##:DCVoltage"},"ui_frequency":{"default":0,"value":"/assets/pcs/##PCS_ID##:frequency","vlink":"/status/##PCS_ID##:Frequency"},"ui_frequency_setpoint_feedback":{"default":0,"value":"/assets/pcs/##PCS_ID##:frequency_setpoint_feedback","vlink":"/status/##PCS_ID##:FrequencySetpointFeedback"},"ui_grid_mode":{"default":"INIT","value":"/assets/pcs/##PCS_ID##:grid_mode","vlink":"/status/##PCS_ID##:GridMode"},"ui_l1_current":{"default":0,"value":"/assets/pcs/##PCS_ID##:l1_current","vlink":"/status/##PCS_ID##:L1Current"},"ui_l1_l2_voltage":{"default":0,"value":"/assets/pcs/##PCS_ID##:l1_l2_voltage","vlink":"/status/##PCS_ID##:L1L2Voltage"},"ui_l2_current":{"default":0,"value":"/assets/pcs/##PCS_ID##:l2_current","vlink":"/status/##PCS_ID##:L2Current"},"ui_l2_l3_voltage":{"default":0,"value":"/assets/pcs/##PCS_ID##:l2_l3_voltage","vlink":"/status/##PCS_ID##:L2L3Voltage"},"ui_l3_current":{"default":0,"value":"/assets/pcs/##PCS_ID##:l3_current","vlink":"/status/##PCS_ID##:L3Current"},"ui_l3_l1_voltage":{"default":0,"value":"/assets/pcs/##PCS_ID##:l3_l1_voltage","vlink":"/status/##PCS_ID##:L3L1Voltage"},"ui_max_charge_power":{"default":0,"value":"/assets/pcs/##PCS_ID##:max_charge_power","vlink":"/limits/##PCS_ID##:MaxPCSChargePower"},"ui_max_discharge_power":{"default":0,"value":"/assets/pcs/##PCS_ID##:max_discharge_power","vlink":"/limits/##PCS_ID##:MaxPCSDischargePower"},"ui_max_igbt_temperature":{"default":0,"value":"/assets/pcs/##PCS_ID##:max_igbt_temperature","vlink":"/status/##PCS_ID##:MaxIGBTTemperature"},"ui_power_factor":{"default":0,"value":"/assets/pcs/##PCS_ID##:power_factor","vlink":"/status/##PCS_ID##:PowerFactor"},"ui_rated_active_power":{"default":0,"value":"/assets/pcs/##PCS_ID##:rated_active_power","vlink":"/limits/##PCS_ID##:RatedActivePower"},"ui_rated_apparent_power":{"default":0,"value":"/assets/pcs/##PCS_ID##:rated_apparent_power","vlink":"/limits/##PCS_ID##:RatedApparentPower"},"ui_rated_power_factor":{"default":0,"value":"/assets/pcs/##PCS_ID##:rated_power_factor","vlink":"/config/##PCS_ID##:RatedPowerFactor"},"ui_rated_reactive_power":{"default":0,"value":"/assets/pcs/##PCS_ID##:rated_reactive_power","vlink":"/limits/##PCS_ID##:RatedReactivePower"},"ui_reactive_power":{"default":0,"value":"/assets/pcs/##PCS_ID##:reactive_power","vlink":"/status/##PCS_ID##:ReactivePower"},"ui_reactive_power_ramp_rate_feedback":{"default":0,"value":"/assets/pcs/##PCS_ID##:reactive_power_ramp_rate_feedback","vlink":"/status/##PCS_ID##:ReactivePowerRampRateFeedback"},"ui_reactive_power_setpoint_feedback":{"default":0,"value":"/assets/pcs/##PCS_ID##:reactive_power_setpoint_feedback","vlink":"/status/##PCS_ID##:ReactivePowerSetpointFeedback"},"ui_status":{"default":"INIT","value":"/assets/pcs/##PCS_ID##:status","vlink":"/status/##PCS_ID##:Status"},"ui_system_state":{"default":"INIT","value":"/assets/pcs/##PCS_ID##:system_state","vlink":"/status/##PCS_ID##:SystemState"},"ui_voltage_setpoint_feedback":{"default":0,"value":"/assets/pcs/##PCS_ID##:voltage_setpoint_feedback","vlink":"/status/##PCS_ID##:VoltageSetpointFeedback"}}
[4.78056s  ] [info    ] [configLoad     ] Final tbody: {"/config/##PCS_ID##":{"AlarmDestination":"/assets/pcs/##PCS_ID##:alarms","FaultDestination":"/assets/pcs/##PCS_ID##:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":1200,"RatedApparentPower":1350,"RatedPowerFactor":0.8,"RatedReactivePower":1100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/controls/##PCS_ID##":{"ActivePowerSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd","inAv":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##"},{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/controls/##PCS_ID##:ActivePowerCmdConvert"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Used to trigger power command handling function on a value set","value":0},"ReactivePowerSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd","inAv":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##"},{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/controls/##PCS_ID##:ReactivePowerCmdConvert"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Used to trigger power command handling function on a value set","value":0}},"/links/##PCS_ID##":{"ActivePowerCmdReal":{"value":"/controls/##PCS_ID##:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/##PCS_ID##:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/##PCS_ID##:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/##PCS_ID##:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/##PCS_ID##:RatedActivePower"},"RatedApparentPower":{"value":"/limits/##PCS_ID##:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/##PCS_ID##:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/##PCS_ID##:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/##PCS_ID##:ReactivePowerSetpoint"}},"/sched/##PCS_ID##":{"handlePowerCmd_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandlePowerCmd"}]}]},"bms":"##BMS_ID##","ess":"##ESS_ID##","note":"Processes active and reactive power commands before they are sent","pcs":"##PCS_ID##","value":1},"pubAssets_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"RunPub"}]}]},"enable":"/config/##PCS_ID##:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/##PCS_ID##)","table":"/assets/pcs/##PCS_ID##","value":1},"runMonitor_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"RunMonitor"}]}]},"aname":"##PCS_ID##","enable":"/config/##PCS_ID##:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/##PCS_ID##","value":1},"updateHeartbeatWrite_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CalculateVar","inAv":"/status/##PCS_ID##:HeartbeatWrite"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Periodically updates the heartbeat write variable defined in /status/##PCS_ID##:HeartbeatWrite","value":1}},"/status/##PCS_ID##":{"CommsOK":true,"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/##PCS_ID##:DCVoltage@EnableMaxValCheck"},{"uri":"/status/##PCS_ID##:DCVoltage@EnableMinValCheck"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/##PCS_ID##:heartbeat_write"}]}]},"enable":"/config/##PCS_ID##:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:HeartbeatWrite"},"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/##PCS_ID##:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/##PCS_ID##:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/##PCS_ID##:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/##PCS_ID##:SystemFault"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_##PCS_ID##":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/##PCS_ID##) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:pubAssets_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":0.1,"uri":"/sched/##PCS_ID##:runMonitor_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:checkInputs_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":1,"uri":"/sched/##PCS_ID##:updateHeartbeatWrite_##PCS_ID##","value":1},{"aname":"##PCS_ID##","every":0.1,"uri":"/sched/##PCS_ID##:handlePowerCmd_##PCS_ID##","value":1}],"targav":"/system/commands:run","value":false}},"/controls/##PCS_ID##":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ActivePowerCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ActivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ActivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:active_power_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/##PCS_ID##:FrequencySetpoint","variable2":"/status/##PCS_ID##:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:frequency_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/##PCS_ID##:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:grid_follow_pq@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##PCS_ID##:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/##PCS_ID##:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:grid_form_vf@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##PCS_ID##:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/##PCS_ID##:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:grid_form_vsg@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##PCS_ID##:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ReactivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/##PCS_ID##:ReactivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:reactive_power_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Stop or {2} == Run) and {3}","note1":"Standby command to send to PCS if the PCS is in Stop or Run, the BMS DC contactors are closed, and the BMS current is within an acceptable level","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:CurrentBeforeStopIsOK","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##BMS_ID##:DCClosed"},"StandbyEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:standby@enabled"},{"uri":"/status/##PCS_ID##:StandbyEnabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} and ({3} == Stop or {3} == Run)","note":"Enable Standby UI control if BMS DC Contactors are closed, the PCS is in Stop or Run, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/assets/pcs/##PCS_ID##:maint_mode","variable3":"/status/##PCS_ID##:SystemState"},"Start":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"({1} == Stop or {1} == Standby) and {2} and not {3}","note1":"Start command to send to PCS if the PCS is in Stop or Standby, the BMS DC contactors are closed, and the PCS is not faulted","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState","variable2":"/status/##BMS_ID##:DCClosed","variable3":"/status/##PCS_ID##:IsFaulted"},"StartEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:start@enabled"},{"uri":"/status/##PCS_ID##:StartEnabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} and ({3} == Stop or {3} == Standby) and not {4}","note":"Enable Start UI control if BMS DC Contactors are closed, the PCS is in Stop or Standby, the PCS is not faulted, and the PCS is in maintenance mode","numVars":4,"useExpr":true,"value":false,"variable1":"/status/##BMS_ID##:DCClosed","variable2":"/assets/pcs/##PCS_ID##:maint_mode","variable3":"/status/##PCS_ID##:SystemState","variable4":"/status/##PCS_ID##:IsFaulted"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Standby or {2} == Run) and {3}","note1":"Stop command to send to PCS if the PCS is in Standby or Run, the BMS DC contactors are closed, and the BMS current is within an acceptable level","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/##BMS_ID##:CurrentBeforeStopIsOK","variable2":"/status/##PCS_ID##:SystemState","variable3":"/status/##BMS_ID##:DCClosed"},"StopEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:stop@enabled"},{"uri":"/status/##PCS_ID##:StopEnabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} != Stop","note":"Enable Stop UI control if the PCS is not in Stop and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:SystemState"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerCmd","variable2":"/status/##PCS_ID##:ActivePowerSetpointFeedback","variable3":"/config/##PCS_ID##:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ActivePowerRampRateCmd","variable2":"/status/##PCS_ID##:ActivePowerRampRateFeedback","variable3":"/config/##PCS_ID##:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:FrequencySetpoint","variable2":"/status/##PCS_ID##:FrequencySetpointFeedback","variable3":"/config/##PCS_ID##:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerCmd","variable2":"/status/##PCS_ID##:ReactivePowerSetpointFeedback","variable3":"/config/##PCS_ID##:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:ReactivePowerRampRateCmd","variable2":"/status/##PCS_ID##:ReactivePowerRampRateFeedback","variable3":"/config/##PCS_ID##:RampRateMargin"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Stop or {1} == Fault","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/##PCS_ID##:VoltageSetpoint","variable2":"/status/##PCS_ID##:VoltageSetpointFeedback","variable3":"/config/##PCS_ID##:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/##PCS_ID##:VoltageSetpoint","variable2":"/status/##PCS_ID##:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/##PCS_ID##:voltage_setpoint@enabled"}]}]},"enable":"/config/##PCS_ID##:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/##PCS_ID##:maint_mode","variable2":"/status/##PCS_ID##:GridMode"}},"/schedule/wake_monitor/##PCS_ID##":{"/controls/##PCS_ID##:ActivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ActivePowerCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ActivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ActivePowerRampRateCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ActivePowerSetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ClearFaults":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:FrequencySetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:FrequencySetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:GridFollowPQ":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:GridFollowPQEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:GridFormVF":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:GridFormVFEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:GridFormVSG":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:GridFormVSGEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ReactivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ReactivePowerCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ReactivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:ReactivePowerRampRateCmdConvert":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:ReactivePowerSetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:Standby":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:StandbyEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:Start":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:StartEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:Stop":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:StopEnable":{"amap":"##PCS_ID##","func":"CalculateVar"},"/controls/##PCS_ID##:VerifyActivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyActivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyFrequencySetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyGridFollowPQ":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyGridFormVF":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyGridFormVSG":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyReactivePowerCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyReactivePowerRampRateCmd":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyStandby":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyStart":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyStop":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VerifyVoltageSetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VoltageSetpoint":{"amap":"##PCS_ID##","func":"HandleCmd"},"/controls/##PCS_ID##:VoltageSetpointEnable":{"amap":"##PCS_ID##","func":"CalculateVar"}},"/status/##PCS_ID##":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ActivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ActivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ClearFaults"},{"outValue":"Clear","uri":"/faults/##PCS_ID##:clear_faults"},{"outValue":"Clear","uri":"/alarms/##PCS_ID##:clear_alarms"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"When this variable is set, /faults/##PCS_ID##:clear_faults and /alarms/##PCS_ID##:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:FrequencySetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:GridFollowPQ"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:GridFormVF"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:GridFormVSG"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ReactivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:ReactivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:Standby"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:Start"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:Stop"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyActivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyFrequencySetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyGridFollowPQ"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyGridFormVF"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyGridFormVSG"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyReactivePowerCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyStandby"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyStart"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyStop"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/##PCS_ID##:VerifyVoltageSetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/##PCS_ID##:VoltageSetpoint"}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note":"Used to validate /controls/##PCS_ID##:VoltageSetpoint","value":false}},"/alarms/##PCS_ID##":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/##PCS_ID##:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/##PCS_ID##) will be reset to the normal state (defined in /config/##PCS_ID##:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"alarm","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/faults/##PCS_ID##":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/##PCS_ID##:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/##PCS_ID##) will be reset to the normal state (defined in /config/##PCS_ID##:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"fault","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/schedule/wake_monitor/##PCS_ID##":{"/status/##PCS_ID##:ActivePower":{"amap":"##PCS_ID##","func":"CheckMonitorVar"},"/status/##PCS_ID##:DCVoltage":{"amap":"##PCS_ID##","func":"CheckMonitorVar"},"/status/##PCS_ID##:HeartbeatRead":{"amap":"##PCS_ID##","func":"CheckMonitorVar"},"/status/##PCS_ID##:IsAlarming":{"amap":"##PCS_ID##","func":"CalculateVar"},"/status/##PCS_ID##:IsFaulted":{"amap":"##PCS_ID##","func":"CalculateVar"},"/status/##PCS_ID##:TotalAlarmCnt":{"amap":"##PCS_ID##","func":"CalculateVar"},"/status/##PCS_ID##:TotalFaultCnt":{"amap":"##PCS_ID##","func":"CalculateVar"}},"/status/##PCS_ID##":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":3510,"MaxAlarmTimeout":1,"MaxFaultThreshold":3525,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_##PCS_ID##_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_##PCS_ID##_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_##PCS_ID##_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS instance faults, the fault shutdown event will be propagated to its parent","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"enable":"/config/##PCS_ID##:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/##PCS_ID##:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/##PCS_ID##:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/##PCS_ID##:SystemFault","variable2":"/status/##PCS_ID##:TotalFaultCnt"},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/##PCS_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/##PCS_ID##:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/##PCS_ID##:FaultCnt"}},"/components/##PCS_ID##":{"grid_mode":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FollowPQ","uri":"/status/##PCS_ID##:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVF","uri":"/status/##PCS_ID##:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVSG","uri":"/status/##PCS_ID##:GridMode"},{"enable":"/config/##PCS_ID##:enum_opt","outValue":true,"uri":"/components/##PCS_ID##:grid_mode@ifChanged","useAv":true}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0},"status":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"TODO: add output value to set to uri","uri":"/status/##PCS_ID##:Status"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Stop","uri":"/status/##PCS_ID##:SystemState"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Standby","uri":"/status/##PCS_ID##:SystemState"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Run","uri":"/status/##PCS_ID##:SystemState"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Fault","uri":"/status/##PCS_ID##:SystemState"},{"enable":"/config/##PCS_ID##:enum_opt","outValue":true,"uri":"/components/##PCS_ID##:status@ifChanged","useAv":true}]}]},"enable":"/config/##PCS_ID##:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/##PCS_ID##":{"checkInputs_##PCS_ID##":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/##PCS_ID##:status@ifChanged"},{"outValue":false,"uri":"/components/##PCS_ID##:grid_mode@ifChanged"}]}]},"enable":"/config/##PCS_ID##:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/##PCS_ID##":{"active_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:active_power","vlink":"/status/##PCS_ID##:ActivePower"},"active_power_ramp_rate_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:active_power_ramp_rate_feedback","vlink":"/status/##PCS_ID##:ActivePowerRampRateFeedback"},"active_power_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:active_power_setpoint_feedback","vlink":"/status/##PCS_ID##:ActivePowerSetpointFeedback"},"apparent_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:apparent_power","vlink":"/status/##PCS_ID##:ApparentPower"},"dc_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:dc_current","vlink":"/status/##PCS_ID##:DCCurrent"},"dc_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:dc_power","vlink":"/status/##PCS_ID##:DCPower"},"dc_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:dc_voltage","vlink":"/status/##PCS_ID##:DCVoltage"},"frequency":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:frequency","vlink":"/status/##PCS_ID##:Frequency"},"frequency_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:frequency_setpoint_feedback","vlink":"/status/##PCS_ID##:FrequencySetpointFeedback"},"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:heartbeat_read","vlink":"/status/##PCS_ID##:HeartbeatRead"},"l1_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l1_current","vlink":"/status/##PCS_ID##:L1Current"},"l1_l2_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l1_l2_voltage","vlink":"/status/##PCS_ID##:L1L2Voltage"},"l2_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l2_current","vlink":"/status/##PCS_ID##:L2Current"},"l2_l3_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l2_l3_voltage","vlink":"/status/##PCS_ID##:L2L3Voltage"},"l3_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l3_current","vlink":"/status/##PCS_ID##:L3Current"},"l3_l1_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:l3_l1_voltage","vlink":"/status/##PCS_ID##:L3L1Voltage"},"power_factor":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:power_factor","vlink":"/status/##PCS_ID##:PowerFactor"},"rated_active_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:rated_active_power","vlink":"/limits/##PCS_ID##:RatedActivePower"},"rated_apparent_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:rated_apparent_power","vlink":"/limits/##PCS_ID##:RatedApparentPower"},"rated_reactive_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:rated_reactive_power","vlink":"/limits/##PCS_ID##:RatedReactivePower"},"reactive_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/##PCS_ID##:reactive_power","vlink":"/status/##PCS_ID##:ReactivePower"},"reactive_power_ramp_rate_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:reactive_power_ramp_rate_feedback","vlink":"/status/##PCS_ID##:ReactivePowerRampRateFeedback"},"reactive_power_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:reactive_power_setpoint_feedback","vlink":"/status/##PCS_ID##:ReactivePowerSetpointFeedback"},"voltage_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/##PCS_ID##:voltage_setpoint_feedback","vlink":"/status/##PCS_ID##:VoltageSetpointFeedback"}},"/site/ess":{"pcs_##PCS_ID##_control_alarms":{"bit0":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit10":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit11":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit12":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit13":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit14":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","bit15":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","bit16":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","bit17":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","bit18":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit19":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit2":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit20":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","bit21":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","bit22":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","bit23":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","bit24":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit4":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit5":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit6":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit7":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit8":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit9":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","name":"PCS Control Alarms","type":"bitfield","value":0},"pcs_##PCS_ID##_monitor_alarms":{"bit0":"PCS ActivePower - Max Threshold Exceeded","bit1":"PCS DCVoltage - Max Threshold Exceeded","bit2":"PCS DCVoltage - Min Threshold Exceeded","name":"PCS Monitor Alarms","type":"bitfield","value":0},"pcs_##PCS_ID##_monitor_faults":{"bit0":"PCS ActivePower - Max Threshold Exceeded","bit1":"PCS DCVoltage - Max Threshold Exceeded","bit2":"PCS DCVoltage - Min Threshold Exceeded","name":"PCS Monitor Faults","type":"bitfield","value":0}},"/assets/pcs/##PCS_ID##":{"active_power":{"value":0},"active_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/controls/##PCS_ID##:ActivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power ramp rate","value":0},"active_power_ramp_rate_feedback":{"value":0},"active_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/controls/##PCS_ID##:ActivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power setpoint","value":0},"active_power_setpoint_feedback":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"comms_ok":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"frequency":{"value":0},"frequency_setpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:FrequencySetpoint@triggerCmd"},{"uri":"/controls/##PCS_ID##:FrequencySetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the frequency setpoint while the PCS is in grid-forming (VF)","value":0},"frequency_setpoint_feedback":{"value":0},"grid_follow_pq":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:GridFollowPQ@triggerCmd"},{"inValue":true,"outValue":1,"uri":"/controls/##PCS_ID##:GridFollowPQ"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-following","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vf":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:GridFormVF@triggerCmd"},{"inValue":true,"outValue":2,"uri":"/controls/##PCS_ID##:GridFormVF"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (voltage and frequency)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vsg":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:GridFormVSG@triggerCmd"},{"inValue":true,"outValue":3,"uri":"/controls/##PCS_ID##:GridFormVSG"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (virtual synchronous generator)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_mode":{"value":"INIT"},"l1_current":{"value":0},"l1_l2_voltage":{"value":0},"l2_current":{"value":0},"l2_l3_voltage":{"value":0},"l3_current":{"value":0},"l3_l1_voltage":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/##PCS_ID##:clear_faults@enabled"},{"uri":"/assets/pcs/##PCS_ID##:active_power_ramp_rate@enabled"},{"uri":"/assets/pcs/##PCS_ID##:reactive_power_ramp_rate@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_charge_power":{"value":0},"max_discharge_power":{"value":0},"max_igbt_temperature":{"value":0},"power_factor":{"value":0},"rated_active_power":{"value":0},"rated_apparent_power":{"value":0},"rated_power_factor":{"value":0},"rated_reactive_power":{"value":0},"reactive_power":{"value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/controls/##PCS_ID##:ReactivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power ramp rate","value":0},"reactive_power_ramp_rate_feedback":{"value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"uri":"/controls/##PCS_ID##:ReactivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power setpoint","value":0},"reactive_power_setpoint_feedback":{"value":0},"standby":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:Standby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:Standby"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate the standby command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"start":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:Start@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:Start"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate the start command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"status":{"value":"INIT"},"stop":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/##PCS_ID##:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/##PCS_ID##:Stop"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate the stop command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"system_state":{"value":"INIT"},"voltage_setpoint":{"actions":{"onSet":[{"func":[{"amap":"##PCS_ID##","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/##PCS_ID##:VoltageSetpoint@triggerCmd"},{"uri":"/controls/##PCS_ID##:VoltageSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the voltage setpoint while the PCS is in grid-forming (VF)","value":0},"voltage_setpoint_feedback":{"value":0}},"/vlinks/##PCS_ID##":{"ui_active_power":{"default":0,"value":"/assets/pcs/##PCS_ID##:active_power","vlink":"/status/##PCS_ID##:ActivePower"},"ui_active_power_ramp_rate_feedback":{"default":0,"value":"/assets/pcs/##PCS_ID##:active_power_ramp_rate_feedback","vlink":"/status/##PCS_ID##:ActivePowerRampRateFeedback"},"ui_active_power_setpoint_feedback":{"default":0,"value":"/assets/pcs/##PCS_ID##:active_power_setpoint_feedback","vlink":"/status/##PCS_ID##:ActivePowerSetpointFeedback"},"ui_apparent_power":{"default":0,"value":"/assets/pcs/##PCS_ID##:apparent_power","vlink":"/status/##PCS_ID##:ApparentPower"},"ui_comms_ok":{"default":false,"value":"/assets/pcs/##PCS_ID##:comms_ok","vlink":"/status/##PCS_ID##:CommsOK"},"ui_dc_current":{"default":0,"value":"/assets/pcs/##PCS_ID##:dc_current","vlink":"/status/##PCS_ID##:DCCurrent"},"ui_dc_power":{"default":0,"value":"/assets/pcs/##PCS_ID##:dc_power","vlink":"/status/##PCS_ID##:DCPower"},"ui_dc_voltage":{"default":0,"value":"/assets/pcs/##PCS_ID##:dc_voltage","vlink":"/status/##PCS_ID##:DCVoltage"},"ui_frequency":{"default":0,"value":"/assets/pcs/##PCS_ID##:frequency","vlink":"/status/##PCS_ID##:Frequency"},"ui_frequency_setpoint_feedback":{"default":0,"value":"/assets/pcs/##PCS_ID##:frequency_setpoint_feedback","vlink":"/status/##PCS_ID##:FrequencySetpointFeedback"},"ui_grid_mode":{"default":"INIT","value":"/assets/pcs/##PCS_ID##:grid_mode","vlink":"/status/##PCS_ID##:GridMode"},"ui_l1_current":{"default":0,"value":"/assets/pcs/##PCS_ID##:l1_current","vlink":"/status/##PCS_ID##:L1Current"},"ui_l1_l2_voltage":{"default":0,"value":"/assets/pcs/##PCS_ID##:l1_l2_voltage","vlink":"/status/##PCS_ID##:L1L2Voltage"},"ui_l2_current":{"default":0,"value":"/assets/pcs/##PCS_ID##:l2_current","vlink":"/status/##PCS_ID##:L2Current"},"ui_l2_l3_voltage":{"default":0,"value":"/assets/pcs/##PCS_ID##:l2_l3_voltage","vlink":"/status/##PCS_ID##:L2L3Voltage"},"ui_l3_current":{"default":0,"value":"/assets/pcs/##PCS_ID##:l3_current","vlink":"/status/##PCS_ID##:L3Current"},"ui_l3_l1_voltage":{"default":0,"value":"/assets/pcs/##PCS_ID##:l3_l1_voltage","vlink":"/status/##PCS_ID##:L3L1Voltage"},"ui_max_charge_power":{"default":0,"value":"/assets/pcs/##PCS_ID##:max_charge_power","vlink":"/limits/##PCS_ID##:MaxPCSChargePower"},"ui_max_discharge_power":{"default":0,"value":"/assets/pcs/##PCS_ID##:max_discharge_power","vlink":"/limits/##PCS_ID##:MaxPCSDischargePower"},"ui_max_igbt_temperature":{"default":0,"value":"/assets/pcs/##PCS_ID##:max_igbt_temperature","vlink":"/status/##PCS_ID##:MaxIGBTTemperature"},"ui_power_factor":{"default":0,"value":"/assets/pcs/##PCS_ID##:power_factor","vlink":"/status/##PCS_ID##:PowerFactor"},"ui_rated_active_power":{"default":0,"value":"/assets/pcs/##PCS_ID##:rated_active_power","vlink":"/limits/##PCS_ID##:RatedActivePower"},"ui_rated_apparent_power":{"default":0,"value":"/assets/pcs/##PCS_ID##:rated_apparent_power","vlink":"/limits/##PCS_ID##:RatedApparentPower"},"ui_rated_power_factor":{"default":0,"value":"/assets/pcs/##PCS_ID##:rated_power_factor","vlink":"/config/##PCS_ID##:RatedPowerFactor"},"ui_rated_reactive_power":{"default":0,"value":"/assets/pcs/##PCS_ID##:rated_reactive_power","vlink":"/limits/##PCS_ID##:RatedReactivePower"},"ui_reactive_power":{"default":0,"value":"/assets/pcs/##PCS_ID##:reactive_power","vlink":"/status/##PCS_ID##:ReactivePower"},"ui_reactive_power_ramp_rate_feedback":{"default":0,"value":"/assets/pcs/##PCS_ID##:reactive_power_ramp_rate_feedback","vlink":"/status/##PCS_ID##:ReactivePowerRampRateFeedback"},"ui_reactive_power_setpoint_feedback":{"default":0,"value":"/assets/pcs/##PCS_ID##:reactive_power_setpoint_feedback","vlink":"/status/##PCS_ID##:ReactivePowerSetpointFeedback"},"ui_status":{"default":"INIT","value":"/assets/pcs/##PCS_ID##:status","vlink":"/status/##PCS_ID##:Status"},"ui_system_state":{"default":"INIT","value":"/assets/pcs/##PCS_ID##:system_state","vlink":"/status/##PCS_ID##:SystemState"},"ui_voltage_setpoint_feedback":{"default":0,"value":"/assets/pcs/##PCS_ID##:voltage_setpoint_feedback","vlink":"/status/##PCS_ID##:VoltageSetpointFeedback"}}}
[4.78575s  ] [info    ] [configure_vmapS] process file seeking header stuff am [pcs] ai [no ai]
[4.78656s  ] [info    ] [configure_vmapS] body: {"/config/pcs":{"AlarmDestination":"/assets/pcs/summary:alarms","FaultDestination":"/assets/pcs/summary:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":1200,"RatedApparentPower":1350,"RatedPowerFactor":0.8,"RatedReactivePower":1100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/controls/pcs":{"ActivePowerCmdReal":{"enable":"/config/pcs:enable","note":"Calculates the total active power command reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs_1:ActivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","note":"Used to forward value to children setpoint variables","value":0},"ReactivePowerCmdReal":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power command reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs_1:ReactivePowerSetpoint"}]}]},"enable":"/config/pcs:enable","note":"Used to forward value to children setpoint variables","value":0}},"/limits/pcs":{"MaxPCSChargePower":{"enable":"/config/pcs:enable","note":"Calculates the total max charge power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"enable":"/config/pcs:enable","note":"Calculates the total max discharge power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:MaxPCSDischargePower"},"RatedActivePower":{"enable":"/config/pcs:enable","note":"Calculates the total rated active power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedActivePower"},"RatedApparentPower":{"enable":"/config/pcs:enable","note":"Calculates the total rated apparent power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedApparentPower"},"RatedReactivePower":{"enable":"/config/pcs:enable","note":"Calculates the total rated reactive power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:RatedReactivePower"}},"/links/pcs":{"ActivePowerCmdReal":{"value":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs:ReactivePowerSetpoint"}},"/sched/pcs":{"LocalStandbyPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStandbyPCS"}]}]},"every":0.5,"value":"LocalStandbyPCS"},"LocalStartPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStartPCS"}]}]},"every":0.5,"value":"LocalStartPCS"},"LocalStopPCS":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LocalStopPCS"}]}]},"every":0.5,"value":"LocalStopPCS"},"StandbyEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StandbyEnable"}]}]},"value":"StandbyEnable"},"StartEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StartEnable"}]}]},"value":"StartEnable"},"StopEnable":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"StopEnable"}]}]},"value":"StopEnable"},"pubAssetsSummary_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunPub"}]}]},"enable":"/config/pcs:enable","mode":"ui","note":"Publishes UI summary data (/assets/pcs/summary)","table":"/assets/pcs/summary","value":1},"runMonitor_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"RunMonitor"}]}]},"aname":"pcs","enable":"/config/pcs:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs","value":1},"updateHeartbeatWrite_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CalculateVar","inAv":"/status/pcs:HeartbeatWrite"}]}]},"enable":"/config/pcs:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite","value":1}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmdReal":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmdReal":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:MaxPCSChargePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:MaxPCSDischargePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedActivePower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedApparentPower":{"amap":"pcs","func":"CalculateVar"},"/limits/pcs:RatedReactivePower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePowerRampRateFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePowerSetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ActivePower_Calculated":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ApparentPower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:AvgLineVoltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:CommsOK":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCClosed":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCCurrent":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCPower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:DCVoltage_Calculated":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:Frequency":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:FrequencySetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L1Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L1L2Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L2Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L2L3Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L3Current":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:L3L1Voltage":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:MaxIGBTTemperature":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:PowerFactor":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePower":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePowerRampRateFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:ReactivePowerSetpointFeedback":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:VoltageSetpointFeedback":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerRampRateFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total active power ramp rate feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerRampRateFeedback"},"ActivePowerSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total active power setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePowerSetpointFeedback"},"ActivePower_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:ActivePower"}]}]},"enable":"/config/pcs:enable","note":"Calculates the total active power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ActivePower"},"ApparentPower":{"enable":"/config/pcs:enable","note":"Calculates the total apparent power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ApparentPower"},"AvgLineVoltage":{"enable":"/config/pcs:enable","expression":"({1} + {2} + {3}) / 3","note":"Calculates the average grid line voltage","numVars":3,"useExpr":true,"value":0,"variable1":"/status/pcs:L1L2Voltage","variable2":"/status/pcs:L2L3Voltage","variable3":"/status/pcs:L3L1Voltage"},"CommsOK":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":true,"uri":"/site/ess:comms_faults[0]"}]}]},"enable":"/config/pcs:enable","note":"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable","numVars":1,"operation":"and","value":true,"variable1":"pcs:CommsOK"},"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage@EnableMinValCheck"},{"uri":"/status/bms:Voltage@EnableMinValCheck"}]}]},"enable":"/config/pcs:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","numVars":1,"operation":"and","value":false,"variable1":"pcs:DCClosed"},"DCCurrent":{"enable":"/config/pcs:enable","note":"Calculates the average DC current reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCCurrent"},"DCPower":{"enable":"/config/pcs:enable","note":"Calculates the average DC power reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCPower"},"DCVoltage_Calculated":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs:DCVoltage"}]}]},"enable":"/config/pcs:enable","note":"Calculates the average DC voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:DCVoltage"},"Frequency":{"enable":"/config/pcs:enable","note":"Calculates the average frequency reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:Frequency"},"FrequencySetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total frequency setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:FrequencySetpointFeedback"},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"FollowPQ","note":"Bit 0 - FollowPQ","outValue":1,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVF","note":"Bit 1 - FormVF","outValue":2,"uri":"/site/ess:pcs_grid_mode"},{"inValue":"FormVSG","note":"Bit 2 - FormVSG","outValue":4,"uri":"/site/ess:pcs_grid_mode"}]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs:heartbeat_write"}]}]},"enable":"/config/pcs:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:HeartbeatWrite"},"L1Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L1 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L1Current"},"L1L2Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L1-L2 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L1L2Voltage"},"L2Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L2 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L2Current"},"L2L3Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L2-L3 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L2L3Voltage"},"L3Current":{"enable":"/config/pcs:enable","note":"Calculates the total AC L3 current reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:L3Current"},"L3L1Voltage":{"enable":"/config/pcs:enable","note":"Calculates the average AC L3-L1 voltage reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:L3L1Voltage"},"MaxIGBTTemperature":{"enable":"/config/pcs:enable","note":"Calculates the max IGBT temperature reported by all PCS instances","numVars":1,"operation":"max","value":0,"variable1":"pcs:MaxIGBTTemperature"},"PowerFactor":{"enable":"/config/pcs:enable","note":"Calculates the average power factor reported by all PCS instances","numVars":1,"operation":"avg","value":0,"variable1":"pcs:PowerFactor"},"ReactivePower":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePower"},"ReactivePowerRampRateFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power ramp rate feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerRampRateFeedback"},"ReactivePowerSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total reactive power setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:ReactivePowerSetpointFeedback"},"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs:SystemFault"},{"inValue":"Stop","note":"Bit 0 - Stop","outValue":1,"uri":"/site/ess:pcs_system_state"},{"inValue":"Run","note":"Bit 1 - Run","outValue":2,"uri":"/site/ess:pcs_system_state"},{"inValue":"Fault","note":"Bit 2 - Fault","outValue":4,"uri":"/site/ess:pcs_system_state"},{"inValue":"Standby","note":"Bit 3 - Standby","outValue":8,"uri":"/site/ess:pcs_system_state"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"},"VoltageSetpointFeedback":{"enable":"/config/pcs:enable","note":"Calculates the total voltage setpoint feedback reported by all PCS instances","numVars":1,"operation":"+","value":0,"variable1":"pcs:VoltageSetpointFeedback"}},"/system/commands":{"runOpts_pcs":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs","every":1,"uri":"/sched/pcs:pubAssetsSummary_pcs","value":1},{"aname":"pcs","every":0.1,"uri":"/sched/pcs:runMonitor_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:checkInputs_pcs","value":1},{"aname":"pcs","every":1,"uri":"/sched/pcs:updateHeartbeatWrite_pcs","value":1},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStartPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStopPCS","value":0},{"aname":"pcs","debug":0,"every":0,"offset":0,"uri":"/sched/pcs:LocalStandbyPCS","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StartEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StopEnable","value":0},{"aname":"pcs","debug":0,"every":0.1,"offset":0,"uri":"/sched/pcs:StandbyEnable","value":0}],"targav":"/system/commands:run","value":false}},"/controls/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vf@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState","variable3":"/status/pcs:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:SystemState"},"Standby":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":2},"Start":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":1},"Stop":{"checkCmdHoldTimeout":2,"checkCmdTimeout":3,"cmdVar":"/components/pcs_registers_slow:selector_status","maxCmdTries":2,"sendCmdTimeout":3,"value":0},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerCmd","variable2":"/status/pcs:ActivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ActivePowerRampRateCmd","variable2":"/status/pcs:ActivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:FrequencySetpoint","variable2":"/status/pcs:FrequencySetpointFeedback","variable3":"/config/pcs:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerCmd","variable2":"/status/pcs:ReactivePowerSetpointFeedback","variable3":"/config/pcs:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:ReactivePowerRampRateCmd","variable2":"/status/pcs:ReactivePowerRampRateFeedback","variable3":"/config/pcs:RampRateMargin"},"VerifyStandby":{"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStart":{"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyStop":{"enableAlert":false,"expression":"{1} == Stop","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:VoltageSetpointFeedback","variable3":"/config/pcs:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs:VoltageSetpoint","variable2":"/status/pcs:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/summary:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/summary:maint_mode","variable2":"/status/pcs:GridMode"}},"/schedule/wake_monitor/pcs":{"/controls/pcs:ActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ActivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ActivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ClearFaults":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:FrequencySetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFollowPQEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVFEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:GridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:GridFormVSGEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:ReactivePowerRampRateCmdConvert":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:ReactivePowerSetpointEnable":{"amap":"pcs","func":"CalculateVar"},"/controls/pcs:VerifyActivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyActivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyFrequencySetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFollowPQ":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVF":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyGridFormVSG":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyReactivePowerRampRateCmd":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VerifyVoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpoint":{"amap":"pcs","func":"HandleCmd"},"/controls/pcs:VoltageSetpointEnable":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs:clear_alarms"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:FrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:GridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Standby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Start"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:Stop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVF"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyGridFormVSG"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStandby"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStart"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyStop"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs:VoltageSetpoint"}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"Used to validate /controls/pcs:VoltageSetpoint","value":false}},"/alarms/pcs":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_alarms[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"alarm","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/faults/pcs":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_monitor_faults[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"fault","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/schedule/wake_monitor/pcs":{"/status/pcs:ActivePower":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:DCVoltage":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:HeartbeatRead":{"amap":"pcs","func":"CheckMonitorVar"},"/status/pcs:IsAlarming":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:IsFaulted":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalAlarmCnt":{"amap":"pcs","func":"CalculateVar"},"/status/pcs:TotalFaultCnt":{"amap":"pcs","func":"CalculateVar"}},"/status/pcs":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":3510,"MaxAlarmTimeout":1,"MaxFaultThreshold":3525,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:Stop"}]}]},"ifChanged":true,"note":"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"enable":"/config/pcs:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/pcs:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs:SystemFault","variable2":"/status/pcs:TotalFaultCnt"},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/pcs:enable","numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalAlarmCnt","variable2":"/status/pcs:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/pcs:enable","numVars":2,"operation":"+","value":0,"variable1":"pcs:TotalFaultCnt","variable2":"/status/pcs:FaultCnt"}},"/components/pcs":{"grid_mode":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FollowPQ","uri":"/status/pcs:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVF","uri":"/status/pcs:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVSG","uri":"/status/pcs:GridMode"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs:grid_mode@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/components/pcs_registers_fast":{"current_status":{"actions":{"onSet":[{"remap":[{"inValue":0,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":1,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":2,"outValue":"Run","uri":"/status/pcs:SystemState"},{"inValue":3,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":4,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":5,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":6,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":8,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":9,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":10,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":11,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":12,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":13,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":14,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":15,"outValue":"Standby","uri":"/status/pcs:SystemState"},{"inValue":17,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":18,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":19,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":20,"outValue":"Stop","uri":"/status/pcs:SystemState"},{"inValue":21,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":22,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":24,"outValue":"Fault","uri":"/status/pcs:SystemState"},{"inValue":0,"outValue":"Power up","uri":"/status/pcs:Status"},{"inValue":1,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":2,"outValue":"On","uri":"/status/pcs:Status"},{"inValue":3,"outValue":"Precharge","uri":"/status/pcs:Status"},{"inValue":4,"outValue":"Ready","uri":"/status/pcs:Status"},{"inValue":5,"outValue":"Wait","uri":"/status/pcs:Status"},{"inValue":6,"outValue":"Off","uri":"/status/pcs:Status"},{"inValue":7,"outValue":"Stop","uri":"/status/pcs:Status"},{"inValue":8,"outValue":"Discharge","uri":"/status/pcs:Status"},{"inValue":9,"outValue":"Fault","uri":"/status/pcs:Status"},{"inValue":10,"outValue":"LVRT","uri":"/status/pcs:Status"},{"inValue":11,"outValue":"OVRT","uri":"/status/pcs:Status"},{"inValue":12,"outValue":"Night","uri":"/status/pcs:Status"},{"inValue":13,"outValue":"Night DC off","uri":"/status/pcs:Status"},{"inValue":14,"outValue":"Standby","uri":"/status/pcs:Status"},{"inValue":15,"outValue":"HVPL","uri":"/status/pcs:Status"},{"inValue":17,"outValue":"Pre-on","uri":"/status/pcs:Status"},{"inValue":18,"outValue":"Self-diagnosis","uri":"/status/pcs:Status"},{"inValue":19,"outValue":"Filter contactors","uri":"/status/pcs:Status"},{"inValue":20,"outValue":"Premagnetization","uri":"/status/pcs:Status"},{"inValue":21,"outValue":"Bank balancing","uri":"/status/pcs:Status"},{"inValue":22,"outValue":"CV stand by","uri":"/status/pcs:Status"},{"enable":"/config/pcs:enum_opt","outValue":true,"uri":"/components/pcs_registers_fast:current_status@ifChanged","useAv":true}]}]},"enable":"/config/pcs:enable","ifChanged":false,"note":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/pcs":{"checkInputs_pcs":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/pcs:status@ifChanged"},{"outValue":false,"uri":"/components/pcs:grid_mode@ifChanged"}]}]},"enable":"/config/pcs:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/pcs":{"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs:heartbeat_read","vlink":"/status/pcs:HeartbeatRead"}},"/site/ess":{"active_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Active Power Ramp Rate","note":"Sets the active power ramp rate","size":1,"type":"control","units":"kW/s","value":0},"active_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Active Power Setpoint","note":"Sets the active power setpoint","signed":true,"size":1,"type":"control","units":"kW","value":0},"frequency_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Frequency Setpoint","note":"Sets the frequency setpoint","size":1,"type":"control","units":"Hz","value":0},"on_off_grid_mode_setting":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":1,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":1,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"},{"inValue":2,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":2,"outValue":2,"uri":"/controls/pcs:GridFormVF"},{"inValue":3,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":3,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Grid-following/forming Mode Command","note":"Initiates PCS grid-following/forming command routines","size":1,"type":"control","value":0},"pcs_active_power":{"name":"PCS Active Power","signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_active_power_ramp_rate_feedback":{"name":"PCS Active Power Ramp Rate Feedback","size":1,"type":"status","units":"kW/s","value":0},"pcs_active_power_setpoint_feedback":{"name":"PCS Active Power Setpoint Feedback","signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_alarm_active":{"name":"PCS Alarm Active","size":1,"type":"status","value":false},"pcs_apparent_power":{"name":"PCS Apparent Power","signed":true,"size":1,"type":"status","units":"kVA","value":0},"pcs_avg_line_voltage":{"name":"PCS Average Line Voltage","size":1,"type":"status","units":"V","value":0},"pcs_comms_ok":{"name":"PCS Comms OK","size":1,"type":"status","value":false},"pcs_control_alarms":{"bit0":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit10":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit11":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit12":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit13":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit14":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","bit15":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","bit16":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","bit17":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","bit18":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit19":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit2":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit20":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","bit21":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","bit22":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","bit23":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","bit24":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit4":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit5":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit6":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit7":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit8":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit9":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","name":"PCS Control Alarms","type":"bitfield","value":0},"pcs_dc_current":{"name":"PCS DC Current","scale":10,"signed":true,"size":1,"type":"status","units":"A","value":0},"pcs_dc_power":{"name":"PCS DC Power","scale":10,"signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_dc_voltage":{"name":"PCS DC Voltage","scale":10,"signed":true,"size":1,"type":"status","units":"V","value":0},"pcs_fault_active":{"name":"PCS Fault Active","size":1,"type":"status","value":false},"pcs_frequency":{"name":"PCS Grid Frequency","scale":100,"size":1,"type":"status","units":"Hz","value":0},"pcs_frequency_setpoint_feedback":{"name":"PCS Frequency Setpoint Feedback","size":1,"type":"status","units":"Hz","value":0},"pcs_grid_mode":{"bit0":"FollowPQ","bit1":"FormVF","bit2":"FormVSG","name":"PCS Grid Mode","type":"bitfield","value":0},"pcs_is_running":{"name":"PCS is Running","size":1,"type":"status","value":false},"pcs_l1_current":{"name":"PCS Grid Current 1","scale":10,"size":1,"type":"status","units":"A","value":0},"pcs_l1_l2_voltage":{"name":"PCS Grid Voltage L1-L2","size":1,"type":"status","units":"V","value":0},"pcs_l2_current":{"name":"PCS Grid Current 2","scale":10,"size":1,"type":"status","units":"A","value":0},"pcs_l2_l3_voltage":{"name":"PCS Grid Voltage L2-L3","size":1,"type":"status","units":"V","value":0},"pcs_l3_current":{"name":"PCS Grid Current 3","scale":10,"size":1,"type":"status","units":"A","value":0},"pcs_l3_l1_voltage":{"name":"PCS Grid Voltage L3-L1","size":1,"type":"status","units":"V","value":0},"pcs_max_charge_power":{"name":"PCS Max Charge Power","signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_max_discharge_power":{"name":"PCS Max Discharge Power","size":1,"type":"status","units":"kW","value":0},"pcs_max_igbt_temperature":{"name":"PCS Max IGBT Temperature","scale":100,"size":1,"type":"status","units":"°C","value":0},"pcs_monitor_alarms":{"bit0":"PCS ActivePower - Max Threshold Exceeded","bit1":"PCS DCVoltage - Max Threshold Exceeded","bit2":"PCS DCVoltage - Min Threshold Exceeded","name":"PCS Monitor Alarms","type":"bitfield","value":0},"pcs_monitor_faults":{"bit0":"PCS ActivePower - Max Threshold Exceeded","bit1":"PCS DCVoltage - Max Threshold Exceeded","bit2":"PCS DCVoltage - Min Threshold Exceeded","name":"PCS Monitor Faults","type":"bitfield","value":0},"pcs_power_factor":{"name":"PCS Power Factor","scale":1000,"signed":true,"size":1,"type":"status","value":0},"pcs_rated_active_power":{"name":"PCS Rated Active Power","signed":true,"size":1,"type":"status","units":"kW","value":0},"pcs_rated_apparent_power":{"name":"PCS Rated Apparent Power","signed":true,"size":1,"type":"status","units":"kVA","value":0},"pcs_rated_reactive_power":{"name":"PCS Rated Reactive Power","signed":true,"size":1,"type":"status","units":"kVAR","value":0},"pcs_reactive_power":{"name":"PCS Reactive Power","signed":true,"size":1,"type":"status","units":"kVAR","value":0},"pcs_reactive_power_ramp_rate_feedback":{"name":"PCS Reactive Power Ramp Rate Feedback","size":1,"type":"status","units":"kVAR/s","value":0},"pcs_reactive_power_setpoint_feedback":{"name":"PCS Reactive Power Setpoint Feedback","signed":true,"size":1,"type":"status","units":"kVAR","value":0},"pcs_standby_enabled":{"excludeFromFile":true,"name":"PCS Standby Enabled","size":1,"type":"status","value":false},"pcs_start_enabled":{"excludeFromFile":true,"name":"PCS Start Enabled","size":1,"type":"status","value":false},"pcs_status":{"excludeFromFile":true,"name":"PCS Status","size":1,"type":"status","value":"INIT"},"pcs_stop_enabled":{"excludeFromFile":true,"name":"PCS Stop Enabled","size":1,"type":"status","value":false},"pcs_system_state":{"bit0":"Stop","bit1":"Run","bit2":"Fault","bit3":"Standby","name":"PCS System State","type":"bitfield","value":0},"pcs_voltage_setpoint_feedback":{"name":"PCS Voltage Setpoint Feedback","size":1,"type":"status","units":"V","value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Reactive Power Ramp Rate","note":"Sets the reactive power ramp rate","size":1,"type":"control","units":"kVAR/s","value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Reactive Power Setpoint","note":"Sets the reactive power setpoint","signed":true,"size":1,"type":"control","units":"kVAR","value":0},"start_stop_standby_command":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"aname":"ess","debug":0,"enable":"/config/ess:remote_control_enable","every":0.5,"ifChanged":false,"name":"Start/Stop/Standby Command","note1":"Initiates PCS start, standby, or stop command routines","note2":"0-\u003estop | 1-\u003estart | 2-\u003estandby","offset":0,"size":1,"type":"control","uri":"/sched/ess:SitePCSStatusControl","value":-1},"voltage_setpoint":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enable":"/config/ess:remote_control_enable","ifChanged":false,"name":"Voltage Setpoint","note":"Sets the voltage setpoint","size":1,"type":"control","units":"V","value":0}},"/vlinks/pcs":{"site_pcs_active_power":{"default":0,"value":"/site/ess:pcs_active_power","vlink":"/status/pcs:ActivePower"},"site_pcs_active_power_ramp_rate_feedback":{"default":0,"value":"/site/ess:pcs_active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"site_pcs_active_power_setpoint_feedback":{"default":0,"value":"/site/ess:pcs_active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"site_pcs_alarm_active":{"default":false,"value":"/site/ess:pcs_alarm_active","vlink":"/status/pcs:IsAlarming"},"site_pcs_apparent_power":{"default":0,"value":"/site/ess:pcs_apparent_power","vlink":"/status/pcs:ApparentPower"},"site_pcs_avg_line_voltage":{"default":0,"value":"/site/ess:pcs_avg_line_voltage","vlink":"/status/pcs:AvgLineVoltage"},"site_pcs_comms_ok":{"default":false,"value":"/site/ess:pcs_comms_ok","vlink":"/status/pcs:CommsOK"},"site_pcs_dc_current":{"default":0,"value":"/site/ess:pcs_dc_current","vlink":"/status/pcs:DCCurrent"},"site_pcs_dc_power":{"default":0,"value":"/site/ess:pcs_dc_power","vlink":"/status/pcs:DCPower"},"site_pcs_dc_voltage":{"default":0,"value":"/site/ess:pcs_dc_voltage","vlink":"/status/pcs:DCVoltage"},"site_pcs_fault_active":{"default":false,"value":"/site/ess:pcs_fault_active","vlink":"/status/pcs:IsFaulted"},"site_pcs_frequency":{"default":0,"value":"/site/ess:pcs_frequency","vlink":"/status/pcs:Frequency"},"site_pcs_frequency_setpoint_feedback":{"default":0,"value":"/site/ess:pcs_frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"site_pcs_is_running":{"default":false,"value":"/site/ess:pcs_is_running","vlink":"/status/pcs:IsRunning"},"site_pcs_l1_current":{"default":0,"value":"/site/ess:pcs_l1_current","vlink":"/status/pcs:L1Current"},"site_pcs_l1_l2_voltage":{"default":0,"value":"/site/ess:pcs_l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"site_pcs_l2_current":{"default":0,"value":"/site/ess:pcs_l2_current","vlink":"/status/pcs:L2Current"},"site_pcs_l2_l3_voltage":{"default":0,"value":"/site/ess:pcs_l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"site_pcs_l3_current":{"default":0,"value":"/site/ess:pcs_l3_current","vlink":"/status/pcs:L3Current"},"site_pcs_l3_l1_voltage":{"default":0,"value":"/site/ess:pcs_l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"site_pcs_max_charge_power":{"default":0,"value":"/site/ess:pcs_max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"site_pcs_max_discharge_power":{"default":0,"value":"/site/ess:pcs_max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"site_pcs_max_igbt_temperature":{"default":0,"value":"/site/ess:pcs_max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"site_pcs_power_factor":{"default":0,"value":"/site/ess:pcs_power_factor","vlink":"/status/pcs:PowerFactor"},"site_pcs_rated_active_power":{"default":0,"value":"/site/ess:pcs_rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"site_pcs_rated_apparent_power":{"default":0,"value":"/site/ess:pcs_rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"site_pcs_rated_reactive_power":{"default":0,"value":"/site/ess:pcs_rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"site_pcs_reactive_power":{"default":0,"value":"/site/ess:pcs_reactive_power","vlink":"/status/pcs:ReactivePower"},"site_pcs_reactive_power_ramp_rate_feedback":{"default":0,"value":"/site/ess:pcs_reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"site_pcs_reactive_power_setpoint_feedback":{"default":0,"value":"/site/ess:pcs_reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"site_pcs_standby_enabled":{"default":false,"value":"/site/ess:pcs_standby_enabled","vlink":"/status/pcs:StandbyEnabled"},"site_pcs_start_enabled":{"default":false,"value":"/site/ess:pcs_start_enabled","vlink":"/status/pcs:StartEnabled"},"site_pcs_status":{"default":"INIT","value":"/site/ess:pcs_status","vlink":"/status/pcs:Status"},"site_pcs_stop_enabled":{"default":false,"value":"/site/ess:pcs_stop_enabled","vlink":"/status/pcs:StopEnabled"},"site_pcs_voltage_setpoint_feedback":{"default":0,"value":"/site/ess:pcs_voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}},"/assets/pcs/summary":{"active_power":{"value":0},"active_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ActivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power ramp rate","value":0},"active_power_ramp_rate_feedback":{"value":0},"active_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ActivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power setpoint","value":0},"active_power_setpoint_feedback":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"comms_ok":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"frequency":{"value":0},"frequency_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs:FrequencySetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the frequency setpoint while the PCS is in grid-forming (VF)","value":0},"frequency_setpoint_feedback":{"value":0},"grid_follow_pq":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFollowPQ@triggerCmd"},{"inValue":true,"outValue":1,"uri":"/controls/pcs:GridFollowPQ"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-following","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vf":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFormVF@triggerCmd"},{"inValue":true,"outValue":2,"uri":"/controls/pcs:GridFormVF"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (voltage and frequency)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vsg":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs:GridFormVSG@triggerCmd"},{"inValue":true,"outValue":3,"uri":"/controls/pcs:GridFormVSG"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (virtual synchronous generator)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_mode":{"value":"INIT"},"l1_current":{"value":0},"l1_l2_voltage":{"value":0},"l2_current":{"value":0},"l2_l3_voltage":{"value":0},"l3_current":{"value":0},"l3_l1_voltage":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/summary:clear_faults@enabled"},{"uri":"/assets/pcs/summary:active_power_ramp_rate@enabled"},{"uri":"/assets/pcs/summary:reactive_power_ramp_rate@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_charge_power":{"value":0},"max_discharge_power":{"value":0},"max_igbt_temperature":{"value":0},"power_factor":{"value":0},"rated_active_power":{"value":0},"rated_apparent_power":{"value":0},"rated_power_factor":{"value":0},"rated_reactive_power":{"value":0},"reactive_power":{"value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ReactivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power ramp rate","value":0},"reactive_power_ramp_rate_feedback":{"value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs:ReactivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power setpoint","value":0},"reactive_power_setpoint_feedback":{"value":0},"standby":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Standby PCS","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 [/assets/pcs/summary/maint_mode] \u0026\u0026 [/status/pcs/SystemState == (Stop || Run)]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStandbyPCS","value":false},"start":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Start PCS","note":"Enabled conditions: [/status/bms/DCClosed] \u0026\u0026 [/assets/pcs/summary/maint_mode] \u0026\u0026 ![/status/pcs/IsFaulted]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStartPCS","value":false},"status":{"value":"INIT"},"stop":{"actions":{"onSet":[{"func":[{"func":"RunSched","inValue":true}]}]},"aname":"pcs","debug":0,"enabled":false,"every":0.5,"name":"Stop PCS","note":"Enabled conditions: [/assets/pcs/summary/maint_mode] \u0026\u0026 [/status/pcs/SystemState != Stop]","offset":0,"scaler":0,"type":"enum_button","ui_type":"control","unit":"","uri":"/sched/pcs:LocalStopPCS","value":false},"system_state":{"value":"INIT"},"voltage_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs:VoltageSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the voltage setpoint while the PCS is in grid-forming (VF)","value":0},"voltage_setpoint_feedback":{"value":0}},"/vlinks/pcs":{"ui_active_power":{"default":0,"value":"/assets/pcs/summary:active_power","vlink":"/status/pcs:ActivePower"},"ui_active_power_ramp_rate_feedback":{"default":0,"value":"/assets/pcs/summary:active_power_ramp_rate_feedback","vlink":"/status/pcs:ActivePowerRampRateFeedback"},"ui_active_power_setpoint_feedback":{"default":0,"value":"/assets/pcs/summary:active_power_setpoint_feedback","vlink":"/status/pcs:ActivePowerSetpointFeedback"},"ui_apparent_power":{"default":0,"value":"/assets/pcs/summary:apparent_power","vlink":"/status/pcs:ApparentPower"},"ui_comms_ok":{"default":false,"value":"/assets/pcs/summary:comms_ok","vlink":"/status/pcs:CommsOK"},"ui_dc_current":{"default":0,"value":"/assets/pcs/summary:dc_current","vlink":"/status/pcs:DCCurrent"},"ui_dc_power":{"default":0,"value":"/assets/pcs/summary:dc_power","vlink":"/status/pcs:DCPower"},"ui_dc_voltage":{"default":0,"value":"/assets/pcs/summary:dc_voltage","vlink":"/status/pcs:DCVoltage"},"ui_frequency":{"default":0,"value":"/assets/pcs/summary:frequency","vlink":"/status/pcs:Frequency"},"ui_frequency_setpoint_feedback":{"default":0,"value":"/assets/pcs/summary:frequency_setpoint_feedback","vlink":"/status/pcs:FrequencySetpointFeedback"},"ui_grid_mode":{"default":"INIT","value":"/assets/pcs/summary:grid_mode","vlink":"/status/pcs:GridMode"},"ui_l1_current":{"default":0,"value":"/assets/pcs/summary:l1_current","vlink":"/status/pcs:L1Current"},"ui_l1_l2_voltage":{"default":0,"value":"/assets/pcs/summary:l1_l2_voltage","vlink":"/status/pcs:L1L2Voltage"},"ui_l2_current":{"default":0,"value":"/assets/pcs/summary:l2_current","vlink":"/status/pcs:L2Current"},"ui_l2_l3_voltage":{"default":0,"value":"/assets/pcs/summary:l2_l3_voltage","vlink":"/status/pcs:L2L3Voltage"},"ui_l3_current":{"default":0,"value":"/assets/pcs/summary:l3_current","vlink":"/status/pcs:L3Current"},"ui_l3_l1_voltage":{"default":0,"value":"/assets/pcs/summary:l3_l1_voltage","vlink":"/status/pcs:L3L1Voltage"},"ui_max_charge_power":{"default":0,"value":"/assets/pcs/summary:max_charge_power","vlink":"/limits/pcs:MaxPCSChargePower"},"ui_max_discharge_power":{"default":0,"value":"/assets/pcs/summary:max_discharge_power","vlink":"/limits/pcs:MaxPCSDischargePower"},"ui_max_igbt_temperature":{"default":0,"value":"/assets/pcs/summary:max_igbt_temperature","vlink":"/status/pcs:MaxIGBTTemperature"},"ui_power_factor":{"default":0,"value":"/assets/pcs/summary:power_factor","vlink":"/status/pcs:PowerFactor"},"ui_rated_active_power":{"default":0,"value":"/assets/pcs/summary:rated_active_power","vlink":"/limits/pcs:RatedActivePower"},"ui_rated_apparent_power":{"default":0,"value":"/assets/pcs/summary:rated_apparent_power","vlink":"/limits/pcs:RatedApparentPower"},"ui_rated_power_factor":{"default":0,"value":"/assets/pcs/summary:rated_power_factor","vlink":"/config/pcs:RatedPowerFactor"},"ui_rated_reactive_power":{"default":0,"value":"/assets/pcs/summary:rated_reactive_power","vlink":"/limits/pcs:RatedReactivePower"},"ui_reactive_power":{"default":0,"value":"/assets/pcs/summary:reactive_power","vlink":"/status/pcs:ReactivePower"},"ui_reactive_power_ramp_rate_feedback":{"default":0,"value":"/assets/pcs/summary:reactive_power_ramp_rate_feedback","vlink":"/status/pcs:ReactivePowerRampRateFeedback"},"ui_reactive_power_setpoint_feedback":{"default":0,"value":"/assets/pcs/summary:reactive_power_setpoint_feedback","vlink":"/status/pcs:ReactivePowerSetpointFeedback"},"ui_status":{"default":"INIT","value":"/assets/pcs/summary:status","vlink":"/status/pcs:Status"},"ui_system_state":{"default":"INIT","value":"/assets/pcs/summary:system_state","vlink":"/status/pcs:SystemState"},"ui_voltage_setpoint_feedback":{"default":0,"value":"/assets/pcs/summary:voltage_setpoint_feedback","vlink":"/status/pcs:VoltageSetpointFeedback"}}}
[4.78843s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[4.78883s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/pcs/summary:alarms",
	"FaultDestination":	"/assets/pcs/summary:faults",
	"FrequencySetpointMargin":	5,
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"PowerSetpointMargin":	5,
	"RampRateMargin":	5,
	"RatedActivePower":	1200,
	"RatedApparentPower":	1350,
	"RatedPowerFactor":	0.8,
	"RatedReactivePower":	1100,
	"VoltageSetpointMargin":	5,
	"enable":	false,
	"enum_opt":	false
}].
[4.7892s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:alarms]
[4.78949s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:alarms]
[4.7899s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:faults]
[4.79036s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:faults]
[4.79089s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.79148s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.79203s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.79241s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.7931s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerCmdReal":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total active power command reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:ActivePowerCmdReal"
	},
	"ActivePowerSetpoint":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/controls/pcs_1:ActivePowerSetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"note":	"Used to forward value to children setpoint variables",
		"value":	0
	},
	"ReactivePowerCmdReal":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total reactive power command reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:ReactivePowerCmdReal"
	},
	"ReactivePowerSetpoint":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/controls/pcs_1:ReactivePowerSetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"note":	"Used to forward value to children setpoint variables",
		"value":	0
	}
}].
[4.79391s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"MaxPCSChargePower":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total max charge power reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:MaxPCSChargePower"
	},
	"MaxPCSDischargePower":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total max discharge power reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:MaxPCSDischargePower"
	},
	"RatedActivePower":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total rated active power reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:RatedActivePower"
	},
	"RatedApparentPower":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total rated apparent power reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:RatedApparentPower"
	},
	"RatedReactivePower":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total rated reactive power reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:RatedReactivePower"
	}
}].
[4.79521s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerCmdReal":	{
		"value":	"/controls/pcs:ActivePowerCmdReal"
	},
	"ActivePowerSetpoint":	{
		"value":	"/controls/pcs:ActivePowerSetpoint"
	},
	"MaxPCSChargePower":	{
		"value":	"/limits/pcs:MaxPCSChargePower"
	},
	"MaxPCSDischargePower":	{
		"value":	"/limits/pcs:MaxPCSDischargePower"
	},
	"RatedActivePower":	{
		"value":	"/limits/pcs:RatedActivePower"
	},
	"RatedApparentPower":	{
		"value":	"/limits/pcs:RatedApparentPower"
	},
	"RatedReactivePower":	{
		"value":	"/limits/pcs:RatedReactivePower"
	},
	"ReactivePowerCmdReal":	{
		"value":	"/controls/pcs:ReactivePowerCmdReal"
	},
	"ReactivePowerSetpoint":	{
		"value":	"/controls/pcs:ReactivePowerSetpoint"
	}
}].
[4.79588s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ActivePowerCmdReal]
[4.7963s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ActivePowerCmdReal]
[4.79664s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ActivePowerSetpoint]
[4.79723s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ActivePowerSetpoint]
[4.79775s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:MaxPCSChargePower]
[4.79813s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:MaxPCSChargePower]
[4.79849s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:MaxPCSDischargePower]
[4.79892s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:MaxPCSDischargePower]
[4.79947s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:RatedActivePower]
[4.80033s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:RatedActivePower]
[4.80074s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:RatedApparentPower]
[4.80106s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:RatedApparentPower]
[4.80134s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs:RatedReactivePower]
[4.80165s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs:RatedReactivePower]
[4.80195s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ReactivePowerCmdReal]
[4.80229s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ReactivePowerCmdReal]
[4.80266s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ReactivePowerSetpoint]
[4.80293s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ReactivePowerSetpoint]
[4.80344s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"LocalStandbyPCS":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LocalStandbyPCS"
						}]
				}]
		},
		"every":	0.5,
		"value":	"LocalStandbyPCS"
	},
	"LocalStartPCS":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LocalStartPCS"
						}]
				}]
		},
		"every":	0.5,
		"value":	"LocalStartPCS"
	},
	"LocalStopPCS":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LocalStopPCS"
						}]
				}]
		},
		"every":	0.5,
		"value":	"LocalStopPCS"
	},
	"StandbyEnable":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"StandbyEnable"
						}]
				}]
		},
		"value":	"StandbyEnable"
	},
	"StartEnable":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"StartEnable"
						}]
				}]
		},
		"value":	"StartEnable"
	},
	"StopEnable":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"StopEnable"
						}]
				}]
		},
		"value":	"StopEnable"
	},
	"pubAssetsSummary_pcs":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"mode":	"ui",
		"note":	"Publishes UI summary data (/assets/pcs/summary)",
		"table":	"/assets/pcs/summary",
		"value":	1
	},
	"runMonitor_pcs":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"pcs",
		"enable":	"/config/pcs:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs",
		"value":	1
	},
	"updateHeartbeatWrite_pcs":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"CalculateVar",
							"inAv":	"/status/pcs:HeartbeatWrite"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"note":	"Periodically updates the heartbeat write variable defined in /status/pcs:HeartbeatWrite",
		"value":	1
	}
}].
[4.80393s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [LocalStandbyPCS]
[4.80424s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [LocalStandbyPCS]
[4.80457s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [LocalStartPCS]
[4.80482s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [LocalStartPCS]
[4.80514s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [LocalStopPCS]
[4.80539s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [LocalStopPCS]
[4.8062s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [StandbyEnable]
[4.80651s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [StandbyEnable]
[4.80684s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/pcs:perf_StandbyEnable]
[4.80715s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/pcs:perf_StandbyEnable]
[4.8075s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:StandbyEnable_pcs]
[4.80779s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:StandbyEnable_pcs]
[4.80814s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [StartEnable]
[4.80846s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [StartEnable]
[4.8088s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/pcs:perf_StartEnable]
[4.80908s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/pcs:perf_StartEnable]
[4.80942s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:StartEnable_pcs]
[4.80992s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:StartEnable_pcs]
[4.81041s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [StopEnable]
[4.81079s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [StopEnable]
[4.81107s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/pcs:perf_StopEnable]
[4.81132s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/pcs:perf_StopEnable]
[4.81161s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:StopEnable_pcs]
[4.81183s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:StopEnable_pcs]
[4.81239s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/pcs:ActivePowerCmdReal":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ReactivePowerCmdReal":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/limits/pcs:MaxPCSChargePower":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/limits/pcs:MaxPCSDischargePower":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/limits/pcs:RatedActivePower":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/limits/pcs:RatedApparentPower":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/limits/pcs:RatedReactivePower":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:ActivePowerRampRateFeedback":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:ActivePowerSetpointFeedback":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:ActivePower_Calculated":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:ApparentPower":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:AvgLineVoltage":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:CommsOK":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:DCClosed":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:DCCurrent":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:DCPower":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:DCVoltage_Calculated":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:Frequency":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:FrequencySetpointFeedback":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:L1Current":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:L1L2Voltage":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:L2Current":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:L2L3Voltage":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:L3Current":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:L3L1Voltage":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:MaxIGBTTemperature":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:PowerFactor":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:ReactivePower":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:ReactivePowerRampRateFeedback":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:ReactivePowerSetpointFeedback":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:VoltageSetpointFeedback":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	}
}].
[4.81347s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerRampRateFeedback":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total active power ramp rate feedback reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:ActivePowerRampRateFeedback"
	},
	"ActivePowerSetpointFeedback":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total active power setpoint feedback reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:ActivePowerSetpointFeedback"
	},
	"ActivePower_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/pcs:ActivePower"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total active power reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:ActivePower"
	},
	"ApparentPower":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total apparent power reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:ApparentPower"
	},
	"AvgLineVoltage":	{
		"enable":	"/config/pcs:enable",
		"expression":	"({1} + {2} + {3}) / 3",
		"note":	"Calculates the average grid line voltage",
		"numVars":	3,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:L1L2Voltage",
		"variable2":	"/status/pcs:L2L3Voltage",
		"variable3":	"/status/pcs:L3L1Voltage"
	},
	"CommsOK":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	true,
							"uri":	"/site/ess:comms_faults[0]"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"note":	"Updates the UI/EMS communication status variables (ONLINE/OFFLINE) depending on the current status of the communications monitoring variable",
		"numVars":	1,
		"operation":	"and",
		"value":	true,
		"variable1":	"pcs:CommsOK"
	},
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/pcs:DCVoltage@EnableMinValCheck"
						}, {
							"uri":	"/status/bms:Voltage@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"note":	"Enables/disables monitoring variables if PCS DC contactors are closed/opened",
		"numVars":	1,
		"operation":	"and",
		"value":	false,
		"variable1":	"pcs:DCClosed"
	},
	"DCCurrent":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the average DC current reported by all PCS instances",
		"numVars":	1,
		"operation":	"avg",
		"value":	0,
		"variable1":	"pcs:DCCurrent"
	},
	"DCPower":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the average DC power reported by all PCS instances",
		"numVars":	1,
		"operation":	"avg",
		"value":	0,
		"variable1":	"pcs:DCPower"
	},
	"DCVoltage_Calculated":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/pcs:DCVoltage"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the average DC voltage reported by all PCS instances",
		"numVars":	1,
		"operation":	"avg",
		"value":	0,
		"variable1":	"pcs:DCVoltage"
	},
	"Frequency":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the average frequency reported by all PCS instances",
		"numVars":	1,
		"operation":	"avg",
		"value":	0,
		"variable1":	"pcs:Frequency"
	},
	"FrequencySetpointFeedback":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total frequency setpoint feedback reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:FrequencySetpointFeedback"
	},
	"GridMode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	"FollowPQ",
							"note":	"Bit 0 - FollowPQ",
							"outValue":	1,
							"uri":	"/site/ess:pcs_grid_mode"
						}, {
							"inValue":	"FormVF",
							"note":	"Bit 1 - FormVF",
							"outValue":	2,
							"uri":	"/site/ess:pcs_grid_mode"
						}, {
							"inValue":	"FormVSG",
							"note":	"Bit 2 - FormVSG",
							"outValue":	4,
							"uri":	"/site/ess:pcs_grid_mode"
						}]
				}]
		},
		"ifChanged":	true,
		"note1":	"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG",
		"value":	"INIT"
	},
	"HeartbeatWrite":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"fims":	"set",
							"uri":	"/components/pcs:heartbeat_write"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"excludeFromDefaultSched":	true,
		"expression":	"if (({1} >= 59), 0, ({1} + 1))",
		"note":	"Updates and then sends the heartbeat write value",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:HeartbeatWrite"
	},
	"L1Current":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total AC L1 current reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:L1Current"
	},
	"L1L2Voltage":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the average AC L1-L2 voltage reported by all PCS instances",
		"numVars":	1,
		"operation":	"avg",
		"value":	0,
		"variable1":	"pcs:L1L2Voltage"
	},
	"L2Current":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total AC L2 current reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:L2Current"
	},
	"L2L3Voltage":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the average AC L2-L3 voltage reported by all PCS instances",
		"numVars":	1,
		"operation":	"avg",
		"value":	0,
		"variable1":	"pcs:L2L3Voltage"
	},
	"L3Current":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total AC L3 current reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:L3Current"
	},
	"L3L1Voltage":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the average AC L3-L1 voltage reported by all PCS instances",
		"numVars":	1,
		"operation":	"avg",
		"value":	0,
		"variable1":	"pcs:L3L1Voltage"
	},
	"MaxIGBTTemperature":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the max IGBT temperature reported by all PCS instances",
		"numVars":	1,
		"operation":	"max",
		"value":	0,
		"variable1":	"pcs:MaxIGBTTemperature"
	},
	"PowerFactor":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the average power factor reported by all PCS instances",
		"numVars":	1,
		"operation":	"avg",
		"value":	0,
		"variable1":	"pcs:PowerFactor"
	},
	"ReactivePower":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total reactive power reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:ReactivePower"
	},
	"ReactivePowerRampRateFeedback":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total reactive power ramp rate feedback reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:ReactivePowerRampRateFeedback"
	},
	"ReactivePowerSetpointFeedback":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total reactive power setpoint feedback reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:ReactivePowerSetpointFeedback"
	},
	"Status":	"INIT",
	"SystemState":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	"Stop",
							"outValue":	false,
							"uri":	"/status/pcs:DCClosed"
						}, {
							"inValue":	"Run",
							"outValue":	true,
							"uri":	"/status/pcs:DCClosed"
						}, {
							"inValue":	"Fault",
							"outValue":	false,
							"uri":	"/status/pcs:DCClosed"
						}, {
							"inValue":	"Standby",
							"outValue":	true,
							"uri":	"/status/pcs:DCClosed"
						}, {
							"inValue":	"Stop",
							"outValue":	false,
							"uri":	"/status/pcs:IsRunning"
						}, {
							"inValue":	"Run",
							"outValue":	true,
							"uri":	"/status/pcs:IsRunning"
						}, {
							"inValue":	"Fault",
							"outValue":	false,
							"uri":	"/status/pcs:IsRunning"
						}, {
							"inValue":	"Standby",
							"outValue":	false,
							"uri":	"/status/pcs:IsRunning"
						}, {
							"inValue":	"Stop",
							"outValue":	false,
							"uri":	"/status/pcs:SystemFault"
						}, {
							"inValue":	"Run",
							"outValue":	false,
							"uri":	"/status/pcs:SystemFault"
						}, {
							"inValue":	"Fault",
							"outValue":	true,
							"uri":	"/status/pcs:SystemFault"
						}, {
							"inValue":	"Standby",
							"outValue":	false,
							"uri":	"/status/pcs:SystemFault"
						}, {
							"inValue":	"Stop",
							"note":	"Bit 0 - Stop",
							"outValue":	1,
							"uri":	"/site/ess:pcs_system_state"
						}, {
							"inValue":	"Run",
							"note":	"Bit 1 - Run",
							"outValue":	2,
							"uri":	"/site/ess:pcs_system_state"
						}, {
							"inValue":	"Fault",
							"note":	"Bit 2 - Fault",
							"outValue":	4,
							"uri":	"/site/ess:pcs_system_state"
						}, {
							"inValue":	"Standby",
							"note":	"Bit 3 - Standby",
							"outValue":	8,
							"uri":	"/site/ess:pcs_system_state"
						}]
				}]
		},
		"ifChanged":	true,
		"note1":	"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby",
		"note2":	"Updates various PCS status variables depending on this variable's value",
		"value":	"INIT"
	},
	"VoltageSetpointFeedback":	{
		"enable":	"/config/pcs:enable",
		"note":	"Calculates the total voltage setpoint feedback reported by all PCS instances",
		"numVars":	1,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:VoltageSetpointFeedback"
	}
}].
[4.81499s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.81533s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.81587s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.8161s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.81647s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.8167s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.81717s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_pcs":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/pcs) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"pcs",
				"every":	1,
				"uri":	"/sched/pcs:pubAssetsSummary_pcs",
				"value":	1
			}, {
				"aname":	"pcs",
				"every":	0.1,
				"uri":	"/sched/pcs:runMonitor_pcs",
				"value":	1
			}, {
				"aname":	"pcs",
				"every":	1,
				"uri":	"/sched/pcs:checkInputs_pcs",
				"value":	1
			}, {
				"aname":	"pcs",
				"every":	1,
				"uri":	"/sched/pcs:updateHeartbeatWrite_pcs",
				"value":	1
			}, {
				"aname":	"pcs",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/pcs:LocalStartPCS",
				"value":	0
			}, {
				"aname":	"pcs",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/pcs:LocalStopPCS",
				"value":	0
			}, {
				"aname":	"pcs",
				"debug":	0,
				"every":	0,
				"offset":	0,
				"uri":	"/sched/pcs:LocalStandbyPCS",
				"value":	0
			}, {
				"aname":	"pcs",
				"debug":	0,
				"every":	0.1,
				"offset":	0,
				"uri":	"/sched/pcs:StartEnable",
				"value":	0
			}, {
				"aname":	"pcs",
				"debug":	0,
				"every":	0.1,
				"offset":	0,
				"uri":	"/sched/pcs:StopEnable",
				"value":	0
			}, {
				"aname":	"pcs",
				"debug":	0,
				"every":	0.1,
				"offset":	0,
				"uri":	"/sched/pcs:StandbyEnable",
				"value":	0
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[4.81827s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"expression":	"{1} != Stop and {1} != Fault",
		"note1":	"Send active power command to PCS",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:SystemState"
	},
	"ActivePowerCmdConvert":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:ActivePowerCmd@triggerCmd"
						}, {
							"uri":	"/controls/pcs:ActivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1}",
		"ifChanged":	false,
		"note":	"Pass kW command to ActivePowerCmd",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ActivePowerCmdReal"
	},
	"ActivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"expression":	"{1} > 0",
		"note1":	"Send active power ramp rate to PCS",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ActivePowerRampRateCmd"
	},
	"ActivePowerRampRateCmdConvert":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:ActivePowerRampRateCmd@triggerCmd"
						}, {
							"uri":	"/controls/pcs:ActivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1}",
		"ifChanged":	false,
		"note":	"Pass kW/s command to ActivePowerRampRateCmd",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ActivePowerRampRate"
	},
	"ActivePowerSetpointEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:active_power_setpoint@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and {2} != Stop and {2} != Fault",
		"note":	"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:SystemState"
	},
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"useExpr":	false,
		"value":	0
	},
	"FrequencySetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"expression":	"{1} >= 55 and {1} <= 65 and {2} == FormVF",
		"note1":	"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	2,
		"useExpr":	true,
		"value":	60,
		"variable1":	"/controls/pcs:FrequencySetpoint",
		"variable2":	"/status/pcs:GridMode"
	},
	"FrequencySetpointEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:frequency_setpoint@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and {2} == FormVF",
		"note":	"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:GridMode"
	},
	"GridFollowPQ":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"expression":	"{1} == Stop or {1} == Fault",
		"note1":	"Grid-following mode command to send to PCS if the PCS is in Stop or Fault",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"sendCmdTimeout":	3,
		"useExpr":	true,
		"value":	1,
		"variable1":	"/status/pcs:SystemState"
	},
	"GridFollowPQEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:grid_follow_pq@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ",
		"note":	"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:SystemState",
		"variable3":	"/status/pcs:GridMode"
	},
	"GridFormVF":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"expression":	"{1} == Stop or {1} == Fault",
		"note1":	"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"sendCmdTimeout":	3,
		"useExpr":	true,
		"value":	2,
		"variable1":	"/status/pcs:SystemState"
	},
	"GridFormVFEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:grid_form_vf@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ",
		"note":	"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:SystemState",
		"variable3":	"/status/pcs:GridMode"
	},
	"GridFormVSG":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"expression":	"{1} == Stop or {1} == Fault",
		"note1":	"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"sendCmdTimeout":	3,
		"useExpr":	true,
		"value":	3,
		"variable1":	"/status/pcs:SystemState"
	},
	"GridFormVSGEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:grid_form_vsg@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ",
		"note":	"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:SystemState",
		"variable3":	"/status/pcs:GridMode"
	},
	"ReactivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"expression":	"{1} != Stop and {1} != Fault",
		"note1":	"Send reactive power command to PCS",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:SystemState"
	},
	"ReactivePowerCmdConvert":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:ReactivePowerCmd@triggerCmd"
						}, {
							"uri":	"/controls/pcs:ReactivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1}",
		"ifChanged":	false,
		"note":	"Pass kVAR command to ReactivePowerCmd",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ReactivePowerCmdReal"
	},
	"ReactivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"expression":	"{1} > 0",
		"note1":	"Send reactive power ramp rate to PCS",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ReactivePowerRampRateCmd"
	},
	"ReactivePowerRampRateCmdConvert":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:ReactivePowerRampRateCmd@triggerCmd"
						}, {
							"uri":	"/controls/pcs:ReactivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1}",
		"ifChanged":	false,
		"note":	"Pass kVAR/s command to ReactivePowerRampRateCmd",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ReactivePowerRampRate"
	},
	"ReactivePowerSetpointEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:reactive_power_setpoint@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and {2} != Stop and {2} != Fault",
		"note":	"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:SystemState"
	},
	"Standby":	{
		"checkCmdHoldTimeout":	2,
		"checkCmdTimeout":	3,
		"cmdVar":	"/components/pcs_registers_slow:selector_status",
		"maxCmdTries":	2,
		"sendCmdTimeout":	3,
		"value":	2
	},
	"Start":	{
		"checkCmdHoldTimeout":	2,
		"checkCmdTimeout":	3,
		"cmdVar":	"/components/pcs_registers_slow:selector_status",
		"maxCmdTries":	2,
		"sendCmdTimeout":	3,
		"value":	1
	},
	"Stop":	{
		"checkCmdHoldTimeout":	2,
		"checkCmdTimeout":	3,
		"cmdVar":	"/components/pcs_registers_slow:selector_status",
		"maxCmdTries":	2,
		"sendCmdTimeout":	3,
		"value":	0
	},
	"VerifyActivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ActivePowerCmd",
		"variable2":	"/status/pcs:ActivePowerSetpointFeedback",
		"variable3":	"/config/pcs:PowerSetpointMargin"
	},
	"VerifyActivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ActivePowerRampRateCmd",
		"variable2":	"/status/pcs:ActivePowerRampRateFeedback",
		"variable3":	"/config/pcs:RampRateMargin"
	},
	"VerifyFrequencySetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:FrequencySetpoint",
		"variable2":	"/status/pcs:FrequencySetpointFeedback",
		"variable3":	"/config/pcs:FrequencySetpointMargin"
	},
	"VerifyGridFollowPQ":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"{1} == GridFollowPQ",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:GridMode"
	},
	"VerifyGridFormVF":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"{1} == GridFormVF",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:GridMode"
	},
	"VerifyGridFormVSG":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"{1} == GridFormVSG",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:GridMode"
	},
	"VerifyReactivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ReactivePowerCmd",
		"variable2":	"/status/pcs:ReactivePowerSetpointFeedback",
		"variable3":	"/config/pcs:PowerSetpointMargin"
	},
	"VerifyReactivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:ReactivePowerRampRateCmd",
		"variable2":	"/status/pcs:ReactivePowerRampRateFeedback",
		"variable3":	"/config/pcs:RampRateMargin"
	},
	"VerifyStandby":	{
		"enableAlert":	false,
		"expression":	"{1} == Standby",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:SystemState"
	},
	"VerifyStart":	{
		"enableAlert":	false,
		"expression":	"{1} == Run",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:SystemState"
	},
	"VerifyStop":	{
		"enableAlert":	false,
		"expression":	"{1} == Stop",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs:SystemState"
	},
	"VerifyVoltageSetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs:VoltageSetpoint",
		"variable2":	"/status/pcs:VoltageSetpointFeedback",
		"variable3":	"/config/pcs:VoltageSetpointMargin"
	},
	"VoltageSetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"HandleCmd"
						}]
				}]
		},
		"expression":	"{1} >= 460 and {1} <= 500 and {2} == FormVF",
		"note1":	"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	2,
		"useExpr":	true,
		"value":	480,
		"variable1":	"/controls/pcs:VoltageSetpoint",
		"variable2":	"/status/pcs:GridMode"
	},
	"VoltageSetpointEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/summary:voltage_setpoint@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"expression":	"{1} and {2} == FormVF",
		"note":	"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/summary:maint_mode",
		"variable2":	"/status/pcs:GridMode"
	}
}].
[4.82037s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_ActivePowerCmd]
[4.82081s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_ActivePowerCmd]
[4.83024s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:ActivePowerCmd]  reload 0
[4.83076s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:ActivePowerCmd]
[4.83116s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:ActivePowerCmd] to amap in asset [pcs]
[4.83148s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ActivePowerCmd]
[4.8317s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ActivePowerCmd]
[4.83214s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_ActivePowerRampRateCmd]
[4.83244s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_ActivePowerRampRateCmd]
[4.83263s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:ActivePowerRampRateCmd]  reload 0
[4.83282s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:ActivePowerRampRateCmd]
[4.83304s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:ActivePowerRampRateCmd] to amap in asset [pcs]
[4.83324s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ActivePowerRampRateCmd]
[4.83343s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ActivePowerRampRateCmd]
[4.83379s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_ClearFaults]
[4.83402s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_ClearFaults]
[4.83422s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:ClearFaults]  reload 0
[4.83443s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:ClearFaults]
[4.83476s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:ClearFaults] to amap in asset [pcs]
[4.83499s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ClearFaults]
[4.83549s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ClearFaults]
[4.83594s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_FrequencySetpoint]
[4.83618s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_FrequencySetpoint]
[4.8364s   ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:FrequencySetpoint]  reload 0
[4.83657s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:FrequencySetpoint]
[4.83678s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:FrequencySetpoint] to amap in asset [pcs]
[4.83698s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:FrequencySetpoint]
[4.83719s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:FrequencySetpoint]
[4.8376s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_GridFollowPQ]
[4.83786s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_GridFollowPQ]
[4.83809s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:GridFollowPQ]  reload 0
[4.8383s   ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:GridFollowPQ]
[4.83855s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:GridFollowPQ] to amap in asset [pcs]
[4.83879s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:GridFollowPQ]
[4.83898s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:GridFollowPQ]
[4.83945s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_GridFormVF]
[4.84309s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_GridFormVF]
[4.85108s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:GridFormVF]  reload 0
[4.85698s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:GridFormVF]
[4.86044s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:GridFormVF] to amap in asset [pcs]
[4.86098s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:GridFormVF]
[4.86124s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:GridFormVF]
[4.86178s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_GridFormVSG]
[4.86202s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_GridFormVSG]
[4.86225s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:GridFormVSG]  reload 0
[4.86245s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:GridFormVSG]
[4.86266s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:GridFormVSG] to amap in asset [pcs]
[4.86285s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:GridFormVSG]
[4.86307s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:GridFormVSG]
[4.86347s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_ReactivePowerCmd]
[4.86366s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_ReactivePowerCmd]
[4.86386s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:ReactivePowerCmd]  reload 0
[4.86409s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:ReactivePowerCmd]
[4.86432s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:ReactivePowerCmd] to amap in asset [pcs]
[4.86452s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ReactivePowerCmd]
[4.86514s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ReactivePowerCmd]
[4.86611s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_ReactivePowerRampRateCmd]
[4.86631s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_ReactivePowerRampRateCmd]
[4.86649s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:ReactivePowerRampRateCmd]  reload 0
[4.86664s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:ReactivePowerRampRateCmd]
[4.86682s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:ReactivePowerRampRateCmd] to amap in asset [pcs]
[4.86697s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:ReactivePowerRampRateCmd]
[4.86712s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:ReactivePowerRampRateCmd]
[4.86754s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyActivePowerCmd]
[4.86772s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyActivePowerCmd]
[4.86788s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyActivePowerCmd]  reload 0
[4.86803s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyActivePowerCmd]
[4.86824s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyActivePowerCmd] to amap in asset [pcs]
[4.8684s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyActivePowerCmd]
[4.86855s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyActivePowerCmd]
[4.8688s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyActivePowerRampRateCmd]
[4.86896s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyActivePowerRampRateCmd]
[4.86914s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyActivePowerRampRateCmd]  reload 0
[4.86932s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyActivePowerRampRateCmd]
[4.86951s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyActivePowerRampRateCmd] to amap in asset [pcs]
[4.86968s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyActivePowerRampRateCmd]
[4.86983s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyActivePowerRampRateCmd]
[4.87045s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyFrequencySetpoint]
[4.87104s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyFrequencySetpoint]
[4.87127s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyFrequencySetpoint]  reload 0
[4.87143s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyFrequencySetpoint]
[4.87172s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyFrequencySetpoint] to amap in asset [pcs]
[4.87203s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyFrequencySetpoint]
[4.87225s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyFrequencySetpoint]
[4.87261s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyGridFollowPQ]
[4.87279s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyGridFollowPQ]
[4.87308s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyGridFollowPQ]  reload 0
[4.87498s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyGridFollowPQ]
[4.87548s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyGridFollowPQ] to amap in asset [pcs]
[4.87581s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyGridFollowPQ]
[4.87606s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyGridFollowPQ]
[4.87689s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyGridFormVF]
[4.87712s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyGridFormVF]
[4.8775s   ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyGridFormVF]  reload 0
[4.87774s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyGridFormVF]
[4.87801s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyGridFormVF] to amap in asset [pcs]
[4.87827s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyGridFormVF]
[4.87904s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyGridFormVF]
[4.88504s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyGridFormVSG]
[4.88542s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyGridFormVSG]
[4.8857s   ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyGridFormVSG]  reload 0
[4.88614s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyGridFormVSG]
[4.88656s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyGridFormVSG] to amap in asset [pcs]
[4.88701s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyGridFormVSG]
[4.88719s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyGridFormVSG]
[4.88775s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyReactivePowerCmd]
[4.88794s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyReactivePowerCmd]
[4.88814s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyReactivePowerCmd]  reload 0
[4.88832s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyReactivePowerCmd]
[4.88879s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyReactivePowerCmd] to amap in asset [pcs]
[4.88902s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyReactivePowerCmd]
[4.88922s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyReactivePowerCmd]
[4.88954s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyReactivePowerRampRateCmd]
[4.88978s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyReactivePowerRampRateCmd]
[4.89001s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyReactivePowerRampRateCmd]  reload 0
[4.89022s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyReactivePowerRampRateCmd]
[4.89046s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyReactivePowerRampRateCmd] to amap in asset [pcs]
[4.89075s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyReactivePowerRampRateCmd]
[4.89101s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyReactivePowerRampRateCmd]
[4.89144s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VerifyVoltageSetpoint]
[4.89171s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VerifyVoltageSetpoint]
[4.89194s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VerifyVoltageSetpoint]  reload 0
[4.89234s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VerifyVoltageSetpoint]
[4.89263s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VerifyVoltageSetpoint] to amap in asset [pcs]
[4.89297s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VerifyVoltageSetpoint]
[4.89331s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VerifyVoltageSetpoint]
[4.89377s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HandleCmd_VoltageSetpoint]
[4.89406s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HandleCmd_VoltageSetpoint]
[4.89492s  ] [info    ] [HandleCmd      ] reload first run [pcs] [/controls/pcs:VoltageSetpoint]  reload 0
[4.89518s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs:VoltageSetpoint]
[4.89561s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs:VoltageSetpoint] to amap in asset [pcs]
[4.89618s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs:VoltageSetpoint]
[4.89655s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs:VoltageSetpoint]
[4.89721s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/pcs:ActivePowerCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:ActivePowerCmdConvert":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ActivePowerRampRateCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:ActivePowerRampRateCmdConvert":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ActivePowerSetpointEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ClearFaults":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:FrequencySetpoint":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:FrequencySetpointEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:GridFollowPQ":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:GridFollowPQEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:GridFormVF":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:GridFormVFEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:GridFormVSG":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:GridFormVSGEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ReactivePowerCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:ReactivePowerCmdConvert":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ReactivePowerRampRateCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:ReactivePowerRampRateCmdConvert":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:ReactivePowerSetpointEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/controls/pcs:VerifyActivePowerCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyActivePowerRampRateCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyFrequencySetpoint":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyGridFollowPQ":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyGridFormVF":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyGridFormVSG":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyReactivePowerCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyReactivePowerRampRateCmd":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VerifyVoltageSetpoint":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VoltageSetpoint":	{
		"amap":	"pcs",
		"func":	"HandleCmd"
	},
	"/controls/pcs:VoltageSetpointEnable":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	}
}].
[4.89839s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:ActivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs:ActivePowerCmd",
		"value":	false
	},
	"ActivePowerRampRateCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:ActivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs:ActivePowerRampRateCmd",
		"value":	false
	},
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:ClearFaults"
						}, {
							"outValue":	"Clear",
							"uri":	"/faults/pcs:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/pcs:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/pcs:clear_faults and /alarms/pcs:clear_alarms will be set to Clear",
		"value":	false
	},
	"FrequencySetpointSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:FrequencySetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs:FrequencySetpoint",
		"value":	false
	},
	"GridFollowPQSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:VerifyGridFollowPQ@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:VerifyGridFollowPQ"
						}, {
							"inValue":	false,
							"outValue":	"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:GridFollowPQ"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm",
		"value":	false
	},
	"GridFormVFSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:VerifyGridFormVF@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:VerifyGridFormVF"
						}, {
							"inValue":	false,
							"outValue":	"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:GridFormVF"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm",
		"value":	false
	},
	"GridFormVSGSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:VerifyGridFormVSG@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:VerifyGridFormVSG"
						}, {
							"inValue":	false,
							"outValue":	"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:GridFormVSG"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm",
		"value":	false
	},
	"ReactivePowerCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:ReactivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs:ReactivePowerCmd",
		"value":	false
	},
	"ReactivePowerRampRateCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:ReactivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs:ReactivePowerRampRateCmd",
		"value":	false
	},
	"StandbySuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:VerifyStandby@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:VerifyStandby"
						}, {
							"inValue":	false,
							"outValue":	"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:Standby"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm",
		"value":	false
	},
	"StartSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:VerifyStart@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:VerifyStart"
						}, {
							"inValue":	false,
							"outValue":	"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:Start"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm",
		"value":	false
	},
	"StopSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:VerifyStop@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:VerifyStop"
						}, {
							"inValue":	false,
							"outValue":	"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:Stop"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm",
		"value":	false
	},
	"VerifyActivePowerCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyActivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm",
		"value":	false
	},
	"VerifyActivePowerRampRateCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyActivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm",
		"value":	false
	},
	"VerifyFrequencySetpointSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyFrequencySetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm",
		"value":	false
	},
	"VerifyGridFollowPQSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyGridFollowPQ"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not in grid-following after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyGridFormVFSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyGridFormVF"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyGridFormVSGSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyGridFormVSG"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyReactivePowerCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyReactivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm",
		"value":	false
	},
	"VerifyReactivePowerRampRateCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyReactivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm",
		"value":	false
	},
	"VerifyStandbySuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyStandby"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not on standby after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyStartSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyStart"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not running after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyStopSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyStop"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not stopped after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyVoltageSetpointSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs:VerifyVoltageSetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm",
		"value":	false
	},
	"VoltageSetpointSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs:VoltageSetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs:VoltageSetpoint",
		"value":	false
	}
}].
[4.90114s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[0]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending active power command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"ActivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[1]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[2]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending clear faults command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"FrequencySetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[3]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"GridFollowPQ":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[4]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending grid-following mode command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"GridFormVF":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[5]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"GridFormVSG":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[6]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"HeartbeatRead":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"type":	"alarm",
		"value":	"Normal"
	},
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"ActivePower_limit_max",
							"note":	"Bit 0 - PCS ActivePower - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_alarms[0]"
						}, {
							"inValue":	"DCVoltage_limit_max",
							"note":	"Bit 1 - PCS DCVoltage - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_alarms[1]"
						}, {
							"inValue":	"DCVoltage_limit_min",
							"note":	"Bit 2 - PCS DCVoltage - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_alarms[2]"
						}, {
							"inValue":	"HeartbeatRead_state",
							"outValue":	"PCS Communication Failure",
							"uri":	"/alarms/pcs:HeartbeatRead"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"ReactivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[7]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending reactive power command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"ReactivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[8]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"Standby":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[9]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending standby command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"Start":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[10]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending start command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"Stop":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[11]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending stop command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyActivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[12]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyActivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[13]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyFrequencySetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[14]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyGridFollowPQ":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[15]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to transition to grid-following",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyGridFormVF":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[16]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyGridFormVSG":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[17]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyReactivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[18]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyReactivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[19]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyStandby":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[20]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to transition to standby",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyStart":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[21]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to start",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyStop":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[22]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to stop",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyVoltageSetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[23]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VoltageSetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_control_alarms[24]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs) will be reset to the normal state (defined in /config/pcs:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"numVars":	3,
		"type":	"alarm",
		"value":	"Normal",
		"variable1":	"ActivePower",
		"variable2":	"DCVoltage",
		"variable3":	"HeartbeatRead"
	}
}].
[4.90284s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.90312s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.90336s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs:FaultDestination]
[4.90355s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs:FaultDestination]
[4.90378s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs:NoFaultMsg]
[4.90401s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs:NoFaultMsg]
[4.90423s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:FaultCnt]
[4.90441s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:FaultCnt]
[4.9046s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs:AlarmDestination]
[4.90478s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs:AlarmDestination]
[4.90496s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs:NoAlarmMsg]
[4.90514s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs:NoAlarmMsg]
[4.90535s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:AlarmCnt]
[4.90552s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:AlarmCnt]
[4.90577s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.90594s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.90619s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.90636s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.90669s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.9071s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.90743s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.90764s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.90798s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.90819s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.90847s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.90868s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.90913s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.90943s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.91027s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.91048s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.91089s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.91107s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.91131s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.91149s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.91177s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.91196s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.91222s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.91242s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.91266s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.91285s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.91317s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.91342s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.91371s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.91389s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.91412s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.9143s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.91456s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.91473s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.91495s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.91513s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.91539s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.91555s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.91583s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.91643s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.91678s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.91714s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.91753s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.91773s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.91801s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.9184s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.9188s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.91918s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.92s     ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.92056s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.92107s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.92138s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.92183s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.92213s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.92278s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"HeartbeatRead":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"type":	"fault",
		"value":	"Normal"
	},
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"ActivePower_limit_max",
							"note":	"Bit 0 - PCS ActivePower - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_faults[0]"
						}, {
							"inValue":	"DCVoltage_limit_max",
							"note":	"Bit 1 - PCS DCVoltage - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_faults[1]"
						}, {
							"inValue":	"DCVoltage_limit_min",
							"note":	"Bit 2 - PCS DCVoltage - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_monitor_faults[2]"
						}, {
							"inValue":	"HeartbeatRead_state",
							"outValue":	"PCS Communication Failure",
							"uri":	"/faults/pcs:HeartbeatRead"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/pcs) will be reset to the normal state (defined in /config/pcs:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"numVars":	3,
		"type":	"fault",
		"value":	"Normal",
		"variable1":	"ActivePower",
		"variable2":	"DCVoltage",
		"variable3":	"HeartbeatRead"
	}
}].
[4.92459s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.92497s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.92545s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.92585s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.92623s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[4.92659s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[4.92709s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/pcs:ActivePower":	{
		"amap":	"pcs",
		"func":	"CheckMonitorVar"
	},
	"/status/pcs:DCVoltage":	{
		"amap":	"pcs",
		"func":	"CheckMonitorVar"
	},
	"/status/pcs:HeartbeatRead":	{
		"amap":	"pcs",
		"func":	"CheckMonitorVar"
	},
	"/status/pcs:IsAlarming":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:IsFaulted":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:TotalAlarmCnt":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	},
	"/status/pcs:TotalFaultCnt":	{
		"amap":	"pcs",
		"func":	"CalculateVar"
	}
}].
[4.92768s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePower":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	true,
		"MaxAlarmThreshold":	3510,
		"MaxAlarmTimeout":	1,
		"MaxFaultThreshold":	3525,
		"MaxFaultTimeout":	1.5,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	3510,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over active power conditions",
		"value":	0
	},
	"AlarmCnt":	0,
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	0,
							"uri":	"/site/ess:pcs_monitor_alarms"
						}, {
							"outValue":	0,
							"uri":	"/site/ess:pcs_monitor_faults"
						}, {
							"outValue":	0,
							"uri":	"/site/ess:pcs_control_alarms"
						}]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"DCVoltage":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"EnableMinValCheck":	false,
		"MaxAlarmThreshold":	3000,
		"MaxAlarmTimeout":	0,
		"MaxFaultThreshold":	4000,
		"MaxFaultTimeout":	0,
		"MaxRecoverTimeout":	0,
		"MaxResetValue":	2000,
		"MinAlarmThreshold":	1200,
		"MinAlarmTimeout":	0,
		"MinFaultThreshold":	1100,
		"MinFaultTimeout":	1,
		"MinRecoverTimeout":	1,
		"MinResetValue":	1140,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions",
		"value":	0
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ActivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ReactivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:Stop@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:Stop"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the PCS faults, the ESS Controller will send 0 kW and 0 kVAR commands to the PCS and then stop the PCS",
		"value":	false
	},
	"HeartbeatRead":	{
		"AlarmTimeout":	10,
		"EnableAlert":	false,
		"EnableCommsCheck":	false,
		"EnableStateCheck":	false,
		"FaultTimeout":	15,
		"RecoverTimeout":	0.1,
		"Type":	"int",
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS",
		"value":	0
	},
	"IsAlarming":	{
		"enable":	"/config/pcs:enable",
		"expression":	"{1} > 0",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/pcs:TotalAlarmCnt"
	},
	"IsFaulted":	{
		"enable":	"/config/pcs:enable",
		"expression":	"{1} or {2} > 0",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/pcs:SystemFault",
		"variable2":	"/status/pcs:TotalFaultCnt"
	},
	"SystemFault":	false,
	"TotalAlarmCnt":	{
		"enable":	"/config/pcs:enable",
		"numVars":	2,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:TotalAlarmCnt",
		"variable2":	"/status/pcs:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"enable":	"/config/pcs:enable",
		"numVars":	2,
		"operation":	"+",
		"value":	0,
		"variable1":	"pcs:TotalFaultCnt",
		"variable2":	"/status/pcs:FaultCnt"
	}
}].
[4.92828s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:ActivePower_reload]
[4.92868s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:ActivePower_reload]
[4.92909s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/alarms/pcs:MonitorVarAlarm]
[4.92944s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/alarms/pcs:MonitorVarAlarm]
[4.92995s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/faults/pcs:MonitorVarFault]
[4.93032s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/faults/pcs:MonitorVarFault]
[4.93085s  ] [info    ] [CheckMonitorVar] Fault Destination for pcs with assetVar /status/pcs:ActivePower is /assets/pcs/summary:faults
[4.93116s  ] [info    ] [CheckMonitorVar] Alarm Destination for pcs with assetVar /status/pcs:ActivePower is /assets/pcs/summary:alarms
[4.93142s  ] [info    ] [CheckMonitorVar] Not set up for [ActivePower] reloadStr [ActivePower_reload]
[4.9355s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:DCVoltage_reload]
[4.9373s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:DCVoltage_reload]
[4.9377s   ] [info    ] [CheckMonitorVar] Fault Destination for pcs with assetVar /status/pcs:DCVoltage is /assets/pcs/summary:faults
[4.93792s  ] [info    ] [CheckMonitorVar] Alarm Destination for pcs with assetVar /status/pcs:DCVoltage is /assets/pcs/summary:alarms
[4.93815s  ] [info    ] [CheckMonitorVar] Not set up for [DCVoltage] reloadStr [DCVoltage_reload]
[4.93866s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:HeartbeatRead_reload]
[4.93903s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:HeartbeatRead_reload]
[4.93929s  ] [info    ] [CheckMonitorVar] Fault Destination for pcs with assetVar /status/pcs:HeartbeatRead is /assets/pcs/summary:faults
[4.93947s  ] [info    ] [CheckMonitorVar] Alarm Destination for pcs with assetVar /status/pcs:HeartbeatRead is /assets/pcs/summary:alarms
[4.93976s  ] [info    ] [CheckMonitorVar] Not set up for [HeartbeatRead] reloadStr [HeartbeatRead_reload]
[4.94062s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"grid_mode":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	"FollowPQ",
							"uri":	"/status/pcs:GridMode"
						}, {
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	"FormVF",
							"uri":	"/status/pcs:GridMode"
						}, {
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	"FormVSG",
							"uri":	"/status/pcs:GridMode"
						}, {
							"enable":	"/config/pcs:enum_opt",
							"outValue":	true,
							"uri":	"/components/pcs:grid_mode@ifChanged",
							"useAv":	true
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note1":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[4.94161s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"current_status":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	0,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	1,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	2,
							"outValue":	"Run",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	3,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	4,
							"outValue":	"Standby",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	5,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	6,
							"outValue":	"Fault",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	7,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	8,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	9,
							"outValue":	"Standby",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	10,
							"outValue":	"Fault",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	11,
							"outValue":	"Fault",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	12,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	13,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	14,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	15,
							"outValue":	"Standby",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	17,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	18,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	19,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	20,
							"outValue":	"Stop",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	21,
							"outValue":	"Fault",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	22,
							"outValue":	"Fault",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	24,
							"outValue":	"Fault",
							"uri":	"/status/pcs:SystemState"
						}, {
							"inValue":	0,
							"outValue":	"Power up",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	1,
							"outValue":	"Off",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	2,
							"outValue":	"On",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	3,
							"outValue":	"Precharge",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	4,
							"outValue":	"Ready",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	5,
							"outValue":	"Wait",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	6,
							"outValue":	"Off",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	7,
							"outValue":	"Stop",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	8,
							"outValue":	"Discharge",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	9,
							"outValue":	"Fault",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	10,
							"outValue":	"LVRT",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	11,
							"outValue":	"OVRT",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	12,
							"outValue":	"Night",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	13,
							"outValue":	"Night DC off",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	14,
							"outValue":	"Standby",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	15,
							"outValue":	"HVPL",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	17,
							"outValue":	"Pre-on",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	18,
							"outValue":	"Self-diagnosis",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	19,
							"outValue":	"Filter contactors",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	20,
							"outValue":	"Premagnetization",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	21,
							"outValue":	"Bank balancing",
							"uri":	"/status/pcs:Status"
						}, {
							"inValue":	22,
							"outValue":	"CV stand by",
							"uri":	"/status/pcs:Status"
						}, {
							"enable":	"/config/pcs:enum_opt",
							"outValue":	true,
							"uri":	"/components/pcs_registers_fast:current_status@ifChanged",
							"useAv":	true
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"ifChanged":	false,
		"note":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
PSM: 2024/01/23 20:19:26 Timeout receiving update configurations. If no configuration overwrite was provided then this may be expected. Continuing
[4.94284s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"checkInputs_pcs":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	false,
							"uri":	"/components/pcs:status@ifChanged"
						}, {
							"outValue":	false,
							"uri":	"/components/pcs:grid_mode@ifChanged"
						}]
				}]
		},
		"enable":	"/config/pcs:enable",
		"note":	"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change",
		"value":	0
	}
}].
[4.94522s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"heartbeat_read":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs:heartbeat_read",
		"vlink":	"/status/pcs:HeartbeatRead"
	}
}].
[4.94632s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs:heartbeat_read]
[4.94683s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs:heartbeat_read]
[4.94915s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power_ramp_rate":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/controls/pcs:ActivePowerRampRate"
						}]
				}]
		},
		"enable":	"/config/ess:remote_control_enable",
		"ifChanged":	false,
		"name":	"Active Power Ramp Rate",
		"note":	"Sets the active power ramp rate",
		"size":	1,
		"type":	"control",
		"units":	"kW/s",
		"value":	0
	},
	"active_power_setpoint":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/controls/pcs:ActivePowerSetpoint"
						}]
				}]
		},
		"enable":	"/config/ess:remote_control_enable",
		"ifChanged":	false,
		"name":	"Active Power Setpoint",
		"note":	"Sets the active power setpoint",
		"signed":	true,
		"size":	1,
		"type":	"control",
		"units":	"kW",
		"value":	0
	},
	"frequency_setpoint":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:FrequencySetpoint@triggerCmd"
						}, {
							"uri":	"/controls/pcs:FrequencySetpoint"
						}]
				}]
		},
		"enable":	"/config/ess:remote_control_enable",
		"ifChanged":	false,
		"name":	"Frequency Setpoint",
		"note":	"Sets the frequency setpoint",
		"size":	1,
		"type":	"control",
		"units":	"Hz",
		"value":	0
	},
	"on_off_grid_mode_setting":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	1,
							"outValue":	true,
							"uri":	"/controls/pcs:GridFollowPQ@triggerCmd"
						}, {
							"inValue":	1,
							"outValue":	1,
							"uri":	"/controls/pcs:GridFollowPQ"
						}, {
							"inValue":	2,
							"outValue":	true,
							"uri":	"/controls/pcs:GridFormVF@triggerCmd"
						}, {
							"inValue":	2,
							"outValue":	2,
							"uri":	"/controls/pcs:GridFormVF"
						}, {
							"inValue":	3,
							"outValue":	true,
							"uri":	"/controls/pcs:GridFormVSG@triggerCmd"
						}, {
							"inValue":	3,
							"outValue":	3,
							"uri":	"/controls/pcs:GridFormVSG"
						}]
				}]
		},
		"enable":	"/config/ess:remote_control_enable",
		"ifChanged":	false,
		"name":	"Grid-following/forming Mode Command",
		"note":	"Initiates PCS grid-following/forming command routines",
		"size":	1,
		"type":	"control",
		"value":	0
	},
	"pcs_active_power":	{
		"name":	"PCS Active Power",
		"signed":	true,
		"size":	1,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"pcs_active_power_ramp_rate_feedback":	{
		"name":	"PCS Active Power Ramp Rate Feedback",
		"size":	1,
		"type":	"status",
		"units":	"kW/s",
		"value":	0
	},
	"pcs_active_power_setpoint_feedback":	{
		"name":	"PCS Active Power Setpoint Feedback",
		"signed":	true,
		"size":	1,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"pcs_alarm_active":	{
		"name":	"PCS Alarm Active",
		"size":	1,
		"type":	"status",
		"value":	false
	},
	"pcs_apparent_power":	{
		"name":	"PCS Apparent Power",
		"signed":	true,
		"size":	1,
		"type":	"status",
		"units":	"kVA",
		"value":	0
	},
	"pcs_avg_line_voltage":	{
		"name":	"PCS Average Line Voltage",
		"size":	1,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"pcs_comms_ok":	{
		"name":	"PCS Comms OK",
		"size":	1,
		"type":	"status",
		"value":	false
	},
	"pcs_control_alarms":	{
		"bit0":	"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit1":	"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit10":	"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit11":	"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit12":	"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout",
		"bit13":	"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
		"bit14":	"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout",
		"bit15":	"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout",
		"bit16":	"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout",
		"bit17":	"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout",
		"bit18":	"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout",
		"bit19":	"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
		"bit2":	"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit20":	"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout",
		"bit21":	"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout",
		"bit22":	"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout",
		"bit23":	"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout",
		"bit24":	"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit3":	"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit4":	"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit5":	"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit6":	"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit7":	"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit8":	"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit9":	"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"name":	"PCS Control Alarms",
		"type":	"bitfield",
		"value":	0
	},
	"pcs_dc_current":	{
		"name":	"PCS DC Current",
		"scale":	10,
		"signed":	true,
		"size":	1,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"pcs_dc_power":	{
		"name":	"PCS DC Power",
		"scale":	10,
		"signed":	true,
		"size":	1,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"pcs_dc_voltage":	{
		"name":	"PCS DC Voltage",
		"scale":	10,
		"signed":	true,
		"size":	1,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"pcs_fault_active":	{
		"name":	"PCS Fault Active",
		"size":	1,
		"type":	"status",
		"value":	false
	},
	"pcs_frequency":	{
		"name":	"PCS Grid Frequency",
		"scale":	100,
		"size":	1,
		"type":	"status",
		"units":	"Hz",
		"value":	0
	},
	"pcs_frequency_setpoint_feedback":	{
		"name":	"PCS Frequency Setpoint Feedback",
		"size":	1,
		"type":	"status",
		"units":	"Hz",
		"value":	0
	},
	"pcs_grid_mode":	{
		"bit0":	"FollowPQ",
		"bit1":	"FormVF",
		"bit2":	"FormVSG",
		"name":	"PCS Grid Mode",
		"type":	"bitfield",
		"value":	0
	},
	"pcs_is_running":	{
		"name":	"PCS is Running",
		"size":	1,
		"type":	"status",
		"value":	false
	},
	"pcs_l1_current":	{
		"name":	"PCS Grid Current 1",
		"scale":	10,
		"size":	1,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"pcs_l1_l2_voltage":	{
		"name":	"PCS Grid Voltage L1-L2",
		"size":	1,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"pcs_l2_current":	{
		"name":	"PCS Grid Current 2",
		"scale":	10,
		"size":	1,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"pcs_l2_l3_voltage":	{
		"name":	"PCS Grid Voltage L2-L3",
		"size":	1,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"pcs_l3_current":	{
		"name":	"PCS Grid Current 3",
		"scale":	10,
		"size":	1,
		"type":	"status",
		"units":	"A",
		"value":	0
	},
	"pcs_l3_l1_voltage":	{
		"name":	"PCS Grid Voltage L3-L1",
		"size":	1,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"pcs_max_charge_power":	{
		"name":	"PCS Max Charge Power",
		"signed":	true,
		"size":	1,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"pcs_max_discharge_power":	{
		"name":	"PCS Max Discharge Power",
		"size":	1,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"pcs_max_igbt_temperature":	{
		"name":	"PCS Max IGBT Temperature",
		"scale":	100,
		"size":	1,
		"type":	"status",
		"units":	"°C",
		"value":	0
	},
	"pcs_monitor_alarms":	{
		"bit0":	"PCS ActivePower - Max Threshold Exceeded",
		"bit1":	"PCS DCVoltage - Max Threshold Exceeded",
		"bit2":	"PCS DCVoltage - Min Threshold Exceeded",
		"name":	"PCS Monitor Alarms",
		"type":	"bitfield",
		"value":	0
	},
	"pcs_monitor_faults":	{
		"bit0":	"PCS ActivePower - Max Threshold Exceeded",
		"bit1":	"PCS DCVoltage - Max Threshold Exceeded",
		"bit2":	"PCS DCVoltage - Min Threshold Exceeded",
		"name":	"PCS Monitor Faults",
		"type":	"bitfield",
		"value":	0
	},
	"pcs_power_factor":	{
		"name":	"PCS Power Factor",
		"scale":	1000,
		"signed":	true,
		"size":	1,
		"type":	"status",
		"value":	0
	},
	"pcs_rated_active_power":	{
		"name":	"PCS Rated Active Power",
		"signed":	true,
		"size":	1,
		"type":	"status",
		"units":	"kW",
		"value":	0
	},
	"pcs_rated_apparent_power":	{
		"name":	"PCS Rated Apparent Power",
		"signed":	true,
		"size":	1,
		"type":	"status",
		"units":	"kVA",
		"value":	0
	},
	"pcs_rated_reactive_power":	{
		"name":	"PCS Rated Reactive Power",
		"signed":	true,
		"size":	1,
		"type":	"status",
		"units":	"kVAR",
		"value":	0
	},
	"pcs_reactive_power":	{
		"name":	"PCS Reactive Power",
		"signed":	true,
		"size":	1,
		"type":	"status",
		"units":	"kVAR",
		"value":	0
	},
	"pcs_reactive_power_ramp_rate_feedback":	{
		"name":	"PCS Reactive Power Ramp Rate Feedback",
		"size":	1,
		"type":	"status",
		"units":	"kVAR/s",
		"value":	0
	},
	"pcs_reactive_power_setpoint_feedback":	{
		"name":	"PCS Reactive Power Setpoint Feedback",
		"signed":	true,
		"size":	1,
		"type":	"status",
		"units":	"kVAR",
		"value":	0
	},
	"pcs_standby_enabled":	{
		"excludeFromFile":	true,
		"name":	"PCS Standby Enabled",
		"size":	1,
		"type":	"status",
		"value":	false
	},
	"pcs_start_enabled":	{
		"excludeFromFile":	true,
		"name":	"PCS Start Enabled",
		"size":	1,
		"type":	"status",
		"value":	false
	},
	"pcs_status":	{
		"excludeFromFile":	true,
		"name":	"PCS Status",
		"size":	1,
		"type":	"status",
		"value":	"INIT"
	},
	"pcs_stop_enabled":	{
		"excludeFromFile":	true,
		"name":	"PCS Stop Enabled",
		"size":	1,
		"type":	"status",
		"value":	false
	},
	"pcs_system_state":	{
		"bit0":	"Stop",
		"bit1":	"Run",
		"bit2":	"Fault",
		"bit3":	"Standby",
		"name":	"PCS System State",
		"type":	"bitfield",
		"value":	0
	},
	"pcs_voltage_setpoint_feedback":	{
		"name":	"PCS Voltage Setpoint Feedback",
		"size":	1,
		"type":	"status",
		"units":	"V",
		"value":	0
	},
	"reactive_power_ramp_rate":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/controls/pcs:ReactivePowerRampRate"
						}]
				}]
		},
		"enable":	"/config/ess:remote_control_enable",
		"ifChanged":	false,
		"name":	"Reactive Power Ramp Rate",
		"note":	"Sets the reactive power ramp rate",
		"size":	1,
		"type":	"control",
		"units":	"kVAR/s",
		"value":	0
	},
	"reactive_power_setpoint":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/controls/pcs:ReactivePowerSetpoint"
						}]
				}]
		},
		"enable":	"/config/ess:remote_control_enable",
		"ifChanged":	false,
		"name":	"Reactive Power Setpoint",
		"note":	"Sets the reactive power setpoint",
		"signed":	true,
		"size":	1,
		"type":	"control",
		"units":	"kVAR",
		"value":	0
	},
	"start_stop_standby_command":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched"
						}]
				}]
		},
		"aname":	"ess",
		"debug":	0,
		"enable":	"/config/ess:remote_control_enable",
		"every":	0.5,
		"ifChanged":	false,
		"name":	"Start/Stop/Standby Command",
		"note1":	"Initiates PCS start, standby, or stop command routines",
		"note2":	"0->stop | 1->start | 2->standby",
		"offset":	0,
		"size":	1,
		"type":	"control",
		"uri":	"/sched/ess:SitePCSStatusControl",
		"value":	-1
	},
	"voltage_setpoint":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:VoltageSetpoint@triggerCmd"
						}, {
							"uri":	"/controls/pcs:VoltageSetpoint"
						}]
				}]
		},
		"enable":	"/config/ess:remote_control_enable",
		"ifChanged":	false,
		"name":	"Voltage Setpoint",
		"note":	"Sets the voltage setpoint",
		"size":	1,
		"type":	"control",
		"units":	"V",
		"value":	0
	}
}].
[4.95405s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.95461s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.9567s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"site_pcs_active_power":	{
		"default":	0,
		"value":	"/site/ess:pcs_active_power",
		"vlink":	"/status/pcs:ActivePower"
	},
	"site_pcs_active_power_ramp_rate_feedback":	{
		"default":	0,
		"value":	"/site/ess:pcs_active_power_ramp_rate_feedback",
		"vlink":	"/status/pcs:ActivePowerRampRateFeedback"
	},
	"site_pcs_active_power_setpoint_feedback":	{
		"default":	0,
		"value":	"/site/ess:pcs_active_power_setpoint_feedback",
		"vlink":	"/status/pcs:ActivePowerSetpointFeedback"
	},
	"site_pcs_alarm_active":	{
		"default":	false,
		"value":	"/site/ess:pcs_alarm_active",
		"vlink":	"/status/pcs:IsAlarming"
	},
	"site_pcs_apparent_power":	{
		"default":	0,
		"value":	"/site/ess:pcs_apparent_power",
		"vlink":	"/status/pcs:ApparentPower"
	},
	"site_pcs_avg_line_voltage":	{
		"default":	0,
		"value":	"/site/ess:pcs_avg_line_voltage",
		"vlink":	"/status/pcs:AvgLineVoltage"
	},
	"site_pcs_comms_ok":	{
		"default":	false,
		"value":	"/site/ess:pcs_comms_ok",
		"vlink":	"/status/pcs:CommsOK"
	},
	"site_pcs_dc_current":	{
		"default":	0,
		"value":	"/site/ess:pcs_dc_current",
		"vlink":	"/status/pcs:DCCurrent"
	},
	"site_pcs_dc_power":	{
		"default":	0,
		"value":	"/site/ess:pcs_dc_power",
		"vlink":	"/status/pcs:DCPower"
	},
	"site_pcs_dc_voltage":	{
		"default":	0,
		"value":	"/site/ess:pcs_dc_voltage",
		"vlink":	"/status/pcs:DCVoltage"
	},
	"site_pcs_fault_active":	{
		"default":	false,
		"value":	"/site/ess:pcs_fault_active",
		"vlink":	"/status/pcs:IsFaulted"
	},
	"site_pcs_frequency":	{
		"default":	0,
		"value":	"/site/ess:pcs_frequency",
		"vlink":	"/status/pcs:Frequency"
	},
	"site_pcs_frequency_setpoint_feedback":	{
		"default":	0,
		"value":	"/site/ess:pcs_frequency_setpoint_feedback",
		"vlink":	"/status/pcs:FrequencySetpointFeedback"
	},
	"site_pcs_is_running":	{
		"default":	false,
		"value":	"/site/ess:pcs_is_running",
		"vlink":	"/status/pcs:IsRunning"
	},
	"site_pcs_l1_current":	{
		"default":	0,
		"value":	"/site/ess:pcs_l1_current",
		"vlink":	"/status/pcs:L1Current"
	},
	"site_pcs_l1_l2_voltage":	{
		"default":	0,
		"value":	"/site/ess:pcs_l1_l2_voltage",
		"vlink":	"/status/pcs:L1L2Voltage"
	},
	"site_pcs_l2_current":	{
		"default":	0,
		"value":	"/site/ess:pcs_l2_current",
		"vlink":	"/status/pcs:L2Current"
	},
	"site_pcs_l2_l3_voltage":	{
		"default":	0,
		"value":	"/site/ess:pcs_l2_l3_voltage",
		"vlink":	"/status/pcs:L2L3Voltage"
	},
	"site_pcs_l3_current":	{
		"default":	0,
		"value":	"/site/ess:pcs_l3_current",
		"vlink":	"/status/pcs:L3Current"
	},
	"site_pcs_l3_l1_voltage":	{
		"default":	0,
		"value":	"/site/ess:pcs_l3_l1_voltage",
		"vlink":	"/status/pcs:L3L1Voltage"
	},
	"site_pcs_max_charge_power":	{
		"default":	0,
		"value":	"/site/ess:pcs_max_charge_power",
		"vlink":	"/limits/pcs:MaxPCSChargePower"
	},
	"site_pcs_max_discharge_power":	{
		"default":	0,
		"value":	"/site/ess:pcs_max_discharge_power",
		"vlink":	"/limits/pcs:MaxPCSDischargePower"
	},
	"site_pcs_max_igbt_temperature":	{
		"default":	0,
		"value":	"/site/ess:pcs_max_igbt_temperature",
		"vlink":	"/status/pcs:MaxIGBTTemperature"
	},
	"site_pcs_power_factor":	{
		"default":	0,
		"value":	"/site/ess:pcs_power_factor",
		"vlink":	"/status/pcs:PowerFactor"
	},
	"site_pcs_rated_active_power":	{
		"default":	0,
		"value":	"/site/ess:pcs_rated_active_power",
		"vlink":	"/limits/pcs:RatedActivePower"
	},
	"site_pcs_rated_apparent_power":	{
		"default":	0,
		"value":	"/site/ess:pcs_rated_apparent_power",
		"vlink":	"/limits/pcs:RatedApparentPower"
	},
	"site_pcs_rated_reactive_power":	{
		"default":	0,
		"value":	"/site/ess:pcs_rated_reactive_power",
		"vlink":	"/limits/pcs:RatedReactivePower"
	},
	"site_pcs_reactive_power":	{
		"default":	0,
		"value":	"/site/ess:pcs_reactive_power",
		"vlink":	"/status/pcs:ReactivePower"
	},
	"site_pcs_reactive_power_ramp_rate_feedback":	{
		"default":	0,
		"value":	"/site/ess:pcs_reactive_power_ramp_rate_feedback",
		"vlink":	"/status/pcs:ReactivePowerRampRateFeedback"
	},
	"site_pcs_reactive_power_setpoint_feedback":	{
		"default":	0,
		"value":	"/site/ess:pcs_reactive_power_setpoint_feedback",
		"vlink":	"/status/pcs:ReactivePowerSetpointFeedback"
	},
	"site_pcs_standby_enabled":	{
		"default":	false,
		"value":	"/site/ess:pcs_standby_enabled",
		"vlink":	"/status/pcs:StandbyEnabled"
	},
	"site_pcs_start_enabled":	{
		"default":	false,
		"value":	"/site/ess:pcs_start_enabled",
		"vlink":	"/status/pcs:StartEnabled"
	},
	"site_pcs_status":	{
		"default":	"INIT",
		"value":	"/site/ess:pcs_status",
		"vlink":	"/status/pcs:Status"
	},
	"site_pcs_stop_enabled":	{
		"default":	false,
		"value":	"/site/ess:pcs_stop_enabled",
		"vlink":	"/status/pcs:StopEnabled"
	},
	"site_pcs_voltage_setpoint_feedback":	{
		"default":	0,
		"value":	"/site/ess:pcs_voltage_setpoint_feedback",
		"vlink":	"/status/pcs:VoltageSetpointFeedback"
	}
}].
[4.95797s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_active_power]
[4.95828s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_active_power]
[4.95865s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_active_power_ramp_rate_feedback]
[4.95891s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_active_power_ramp_rate_feedback]
[4.95917s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_active_power_setpoint_feedback]
[4.9594s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_active_power_setpoint_feedback]
[4.95967s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_alarm_active]
[4.95995s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_alarm_active]
[4.96023s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_apparent_power]
[4.96049s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_apparent_power]
[4.96077s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_avg_line_voltage]
[4.96106s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_avg_line_voltage]
[4.96141s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_comms_ok]
[4.96166s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_comms_ok]
[4.96191s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_dc_current]
[4.96216s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_dc_current]
[4.9624s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_dc_power]
[4.9627s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_dc_power]
[4.96321s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_dc_voltage]
[4.96351s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_dc_voltage]
[4.96384s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_fault_active]
[4.96415s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_fault_active]
[4.9644s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_frequency]
[4.96466s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_frequency]
[4.96492s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_frequency_setpoint_feedback]
[4.96512s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_frequency_setpoint_feedback]
[4.9654s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_is_running]
[4.96568s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_is_running]
[4.96594s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_l1_current]
[4.96616s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_l1_current]
[4.96645s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_l1_l2_voltage]
[4.9667s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_l1_l2_voltage]
[4.96695s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_l2_current]
[4.96717s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_l2_current]
[4.96744s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_l2_l3_voltage]
[4.96765s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_l2_l3_voltage]
[4.96793s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_l3_current]
[4.96838s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_l3_current]
[4.96868s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_l3_l1_voltage]
[4.9689s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_l3_l1_voltage]
[4.96921s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_max_charge_power]
[4.96945s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_max_charge_power]
[4.96968s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_max_discharge_power]
[4.96993s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_max_discharge_power]
[4.97024s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_max_igbt_temperature]
[4.97044s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_max_igbt_temperature]
[4.97076s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_power_factor]
[4.97101s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_power_factor]
[4.9713s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_rated_active_power]
[4.97156s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_rated_active_power]
[4.9719s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_rated_apparent_power]
[4.97212s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_rated_apparent_power]
[4.97238s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_rated_reactive_power]
[4.9726s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_rated_reactive_power]
[4.97284s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_reactive_power]
[4.97306s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_reactive_power]
[4.97334s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_reactive_power_ramp_rate_feedback]
[4.97367s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_reactive_power_ramp_rate_feedback]
[4.97406s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_reactive_power_setpoint_feedback]
[4.97453s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_reactive_power_setpoint_feedback]
[4.97487s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_standby_enabled]
[4.97514s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_standby_enabled]
[4.97539s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_start_enabled]
[4.97562s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_start_enabled]
[4.97589s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_status]
[4.97623s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_status]
[4.97649s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_stop_enabled]
[4.97673s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_stop_enabled]
[4.97703s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/site/ess:pcs_voltage_setpoint_feedback]
[4.97759s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/site/ess:pcs_voltage_setpoint_feedback]
[4.979s    ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	0
	},
	"active_power_ramp_rate":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/controls/pcs:ActivePowerRampRate"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the active power ramp rate",
		"value":	0
	},
	"active_power_ramp_rate_feedback":	{
		"value":	0
	},
	"active_power_setpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/controls/pcs:ActivePowerSetpoint"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the active power setpoint",
		"value":	0
	},
	"active_power_setpoint_feedback":	{
		"value":	0
	},
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"apparent_power":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"comms_ok":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"frequency":	{
		"value":	0
	},
	"frequency_setpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:FrequencySetpoint@triggerCmd"
						}, {
							"uri":	"/controls/pcs:FrequencySetpoint"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the frequency setpoint while the PCS is in grid-forming (VF)",
		"value":	0
	},
	"frequency_setpoint_feedback":	{
		"value":	0
	},
	"grid_follow_pq":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:GridFollowPQ@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	1,
							"uri":	"/controls/pcs:GridFollowPQ"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate command routine for setting PCS to grid-following",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"grid_form_vf":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:GridFormVF@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	2,
							"uri":	"/controls/pcs:GridFormVF"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate command routine for setting PCS to grid-forming (voltage and frequency)",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"grid_form_vsg":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs:GridFormVSG@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	3,
							"uri":	"/controls/pcs:GridFormVSG"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate command routine for setting PCS to grid-forming (virtual synchronous generator)",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"grid_mode":	{
		"value":	"INIT"
	},
	"l1_current":	{
		"value":	0
	},
	"l1_l2_voltage":	{
		"value":	0
	},
	"l2_current":	{
		"value":	0
	},
	"l2_l3_voltage":	{
		"value":	0
	},
	"l3_current":	{
		"value":	0
	},
	"l3_l1_voltage":	{
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/pcs/summary:clear_faults@enabled"
						}, {
							"uri":	"/assets/pcs/summary:active_power_ramp_rate@enabled"
						}, {
							"uri":	"/assets/pcs/summary:reactive_power_ramp_rate@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"max_igbt_temperature":	{
		"value":	0
	},
	"power_factor":	{
		"value":	0
	},
	"rated_active_power":	{
		"value":	0
	},
	"rated_apparent_power":	{
		"value":	0
	},
	"rated_power_factor":	{
		"value":	0
	},
	"rated_reactive_power":	{
		"value":	0
	},
	"reactive_power":	{
		"value":	0
	},
	"reactive_power_ramp_rate":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/controls/pcs:ReactivePowerRampRate"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the reactive power ramp rate",
		"value":	0
	},
	"reactive_power_ramp_rate_feedback":	{
		"value":	0
	},
	"reactive_power_setpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/controls/pcs:ReactivePowerSetpoint"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the reactive power setpoint",
		"value":	0
	},
	"reactive_power_setpoint_feedback":	{
		"value":	0
	},
	"standby":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched",
							"inValue":	true
						}]
				}]
		},
		"aname":	"pcs",
		"debug":	0,
		"enabled":	false,
		"every":	0.5,
		"name":	"Standby PCS",
		"note":	"Enabled conditions: [/status/bms/DCClosed] && [/assets/pcs/summary/maint_mode] && [/status/pcs/SystemState == (Stop || Run)]",
		"offset":	0,
		"scaler":	0,
		"type":	"enum_button",
		"ui_type":	"control",
		"unit":	"",
		"uri":	"/sched/pcs:LocalStandbyPCS",
		"value":	false
	},
	"start":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched",
							"inValue":	true
						}]
				}]
		},
		"aname":	"pcs",
		"debug":	0,
		"enabled":	false,
		"every":	0.5,
		"name":	"Start PCS",
		"note":	"Enabled conditions: [/status/bms/DCClosed] && [/assets/pcs/summary/maint_mode] && ![/status/pcs/IsFaulted]",
		"offset":	0,
		"scaler":	0,
		"type":	"enum_button",
		"ui_type":	"control",
		"unit":	"",
		"uri":	"/sched/pcs:LocalStartPCS",
		"value":	false
	},
	"status":	{
		"value":	"INIT"
	},
	"stop":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched",
							"inValue":	true
						}]
				}]
		},
		"aname":	"pcs",
		"debug":	0,
		"enabled":	false,
		"every":	0.5,
		"name":	"Stop PCS",
		"note":	"Enabled conditions: [/assets/pcs/summary/maint_mode] && [/status/pcs/SystemState != Stop]",
		"offset":	0,
		"scaler":	0,
		"type":	"enum_button",
		"ui_type":	"control",
		"unit":	"",
		"uri":	"/sched/pcs:LocalStopPCS",
		"value":	false
	},
	"system_state":	{
		"value":	"INIT"
	},
	"voltage_setpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs:VoltageSetpoint@triggerCmd"
						}, {
							"uri":	"/controls/pcs:VoltageSetpoint"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the voltage setpoint while the PCS is in grid-forming (VF)",
		"value":	0
	},
	"voltage_setpoint_feedback":	{
		"value":	0
	}
}].
[4.98151s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.98201s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.98246s  ] [info    ] [LogInfo        ] [/assets/pcs/summary:maint_mode] received a value of [false]
[4.98278s  ] [info    ] [setParamfromAf ]  created var for uri [/assets/pcs/summary] as [/assets/pcs/summary:reactive_power_ramp_rate]
[4.98321s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"Failed Attempt to update [/assets/pcs/summary:standby] because [standby@enabled:false] == true ---> Condition(s): [/status/bms:DCClosed:false] == true && [/assets/pcs/summary:maint_mode:false] == true && [/status/pcs:SystemState:nullptr] == (Stop or Run)","severity":1}]
[4.9836s   ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"Failed Attempt to update [/assets/pcs/summary:start] because [start@enabled:false] == true ---> Condition(s): [/status/bms:DCClosed:false] == true && [/assets/pcs/summary:maint_mode:false] == true && [/status/pcs:SystemState:nullptr] == (Stop or Standby) && [/status/pcs:IsFaulted:false] == false","severity":1}]
[4.98385s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.98407s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.98431s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"Failed Attempt to update [/assets/pcs/summary:stop] because [stop@enabled:false] == true ---> Condition(s): [/assets/pcs/summary:maint_mode:false] == true && [/status/pcs:SystemState:nullptr] != Stop","severity":1}]
[4.98447s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[4.98469s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[4.98519s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_active_power":	{
		"default":	0,
		"value":	"/assets/pcs/summary:active_power",
		"vlink":	"/status/pcs:ActivePower"
	},
	"ui_active_power_ramp_rate_feedback":	{
		"default":	0,
		"value":	"/assets/pcs/summary:active_power_ramp_rate_feedback",
		"vlink":	"/status/pcs:ActivePowerRampRateFeedback"
	},
	"ui_active_power_setpoint_feedback":	{
		"default":	0,
		"value":	"/assets/pcs/summary:active_power_setpoint_feedback",
		"vlink":	"/status/pcs:ActivePowerSetpointFeedback"
	},
	"ui_apparent_power":	{
		"default":	0,
		"value":	"/assets/pcs/summary:apparent_power",
		"vlink":	"/status/pcs:ApparentPower"
	},
	"ui_comms_ok":	{
		"default":	false,
		"value":	"/assets/pcs/summary:comms_ok",
		"vlink":	"/status/pcs:CommsOK"
	},
	"ui_dc_current":	{
		"default":	0,
		"value":	"/assets/pcs/summary:dc_current",
		"vlink":	"/status/pcs:DCCurrent"
	},
	"ui_dc_power":	{
		"default":	0,
		"value":	"/assets/pcs/summary:dc_power",
		"vlink":	"/status/pcs:DCPower"
	},
	"ui_dc_voltage":	{
		"default":	0,
		"value":	"/assets/pcs/summary:dc_voltage",
		"vlink":	"/status/pcs:DCVoltage"
	},
	"ui_frequency":	{
		"default":	0,
		"value":	"/assets/pcs/summary:frequency",
		"vlink":	"/status/pcs:Frequency"
	},
	"ui_frequency_setpoint_feedback":	{
		"default":	0,
		"value":	"/assets/pcs/summary:frequency_setpoint_feedback",
		"vlink":	"/status/pcs:FrequencySetpointFeedback"
	},
	"ui_grid_mode":	{
		"default":	"INIT",
		"value":	"/assets/pcs/summary:grid_mode",
		"vlink":	"/status/pcs:GridMode"
	},
	"ui_l1_current":	{
		"default":	0,
		"value":	"/assets/pcs/summary:l1_current",
		"vlink":	"/status/pcs:L1Current"
	},
	"ui_l1_l2_voltage":	{
		"default":	0,
		"value":	"/assets/pcs/summary:l1_l2_voltage",
		"vlink":	"/status/pcs:L1L2Voltage"
	},
	"ui_l2_current":	{
		"default":	0,
		"value":	"/assets/pcs/summary:l2_current",
		"vlink":	"/status/pcs:L2Current"
	},
	"ui_l2_l3_voltage":	{
		"default":	0,
		"value":	"/assets/pcs/summary:l2_l3_voltage",
		"vlink":	"/status/pcs:L2L3Voltage"
	},
	"ui_l3_current":	{
		"default":	0,
		"value":	"/assets/pcs/summary:l3_current",
		"vlink":	"/status/pcs:L3Current"
	},
	"ui_l3_l1_voltage":	{
		"default":	0,
		"value":	"/assets/pcs/summary:l3_l1_voltage",
		"vlink":	"/status/pcs:L3L1Voltage"
	},
	"ui_max_charge_power":	{
		"default":	0,
		"value":	"/assets/pcs/summary:max_charge_power",
		"vlink":	"/limits/pcs:MaxPCSChargePower"
	},
	"ui_max_discharge_power":	{
		"default":	0,
		"value":	"/assets/pcs/summary:max_discharge_power",
		"vlink":	"/limits/pcs:MaxPCSDischargePower"
	},
	"ui_max_igbt_temperature":	{
		"default":	0,
		"value":	"/assets/pcs/summary:max_igbt_temperature",
		"vlink":	"/status/pcs:MaxIGBTTemperature"
	},
	"ui_power_factor":	{
		"default":	0,
		"value":	"/assets/pcs/summary:power_factor",
		"vlink":	"/status/pcs:PowerFactor"
	},
	"ui_rated_active_power":	{
		"default":	0,
		"value":	"/assets/pcs/summary:rated_active_power",
		"vlink":	"/limits/pcs:RatedActivePower"
	},
	"ui_rated_apparent_power":	{
		"default":	0,
		"value":	"/assets/pcs/summary:rated_apparent_power",
		"vlink":	"/limits/pcs:RatedApparentPower"
	},
	"ui_rated_power_factor":	{
		"default":	0,
		"value":	"/assets/pcs/summary:rated_power_factor",
		"vlink":	"/config/pcs:RatedPowerFactor"
	},
	"ui_rated_reactive_power":	{
		"default":	0,
		"value":	"/assets/pcs/summary:rated_reactive_power",
		"vlink":	"/limits/pcs:RatedReactivePower"
	},
	"ui_reactive_power":	{
		"default":	0,
		"value":	"/assets/pcs/summary:reactive_power",
		"vlink":	"/status/pcs:ReactivePower"
	},
	"ui_reactive_power_ramp_rate_feedback":	{
		"default":	0,
		"value":	"/assets/pcs/summary:reactive_power_ramp_rate_feedback",
		"vlink":	"/status/pcs:ReactivePowerRampRateFeedback"
	},
	"ui_reactive_power_setpoint_feedback":	{
		"default":	0,
		"value":	"/assets/pcs/summary:reactive_power_setpoint_feedback",
		"vlink":	"/status/pcs:ReactivePowerSetpointFeedback"
	},
	"ui_status":	{
		"default":	"INIT",
		"value":	"/assets/pcs/summary:status",
		"vlink":	"/status/pcs:Status"
	},
	"ui_system_state":	{
		"default":	"INIT",
		"value":	"/assets/pcs/summary:system_state",
		"vlink":	"/status/pcs:SystemState"
	},
	"ui_voltage_setpoint_feedback":	{
		"default":	0,
		"value":	"/assets/pcs/summary:voltage_setpoint_feedback",
		"vlink":	"/status/pcs:VoltageSetpointFeedback"
	}
}].
[4.98578s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:active_power]
[4.98594s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:active_power]
[4.98612s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:active_power_ramp_rate_feedback]
[4.9863s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:active_power_ramp_rate_feedback]
[4.98649s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:active_power_setpoint_feedback]
[4.98671s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:active_power_setpoint_feedback]
[4.98691s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:apparent_power]
[4.9871s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:apparent_power]
[4.98727s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:comms_ok]
[4.98751s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:comms_ok]
[4.98779s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:dc_current]
[4.98803s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:dc_current]
[4.98828s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:dc_power]
[4.98854s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:dc_power]
[4.98884s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:dc_voltage]
[4.98906s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:dc_voltage]
[4.98934s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:frequency]
[4.98956s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:frequency]
[4.98982s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:frequency_setpoint_feedback]
[4.99007s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:frequency_setpoint_feedback]
[4.99033s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:grid_mode]
[4.99081s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:grid_mode]
[4.99114s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:l1_current]
[4.99133s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:l1_current]
[4.99162s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:l1_l2_voltage]
[4.99208s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:l1_l2_voltage]
[4.99239s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:l2_current]
[4.99261s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:l2_current]
[4.99291s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:l2_l3_voltage]
[4.99314s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:l2_l3_voltage]
[4.9934s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:l3_current]
[4.99362s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:l3_current]
[4.9939s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:l3_l1_voltage]
[4.99422s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:l3_l1_voltage]
[4.99459s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:max_charge_power]
[4.99494s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:max_charge_power]
[4.99529s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:max_discharge_power]
[4.99558s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:max_discharge_power]
[4.99587s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:max_igbt_temperature]
[4.99618s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:max_igbt_temperature]
[4.99706s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:power_factor]
[4.99749s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:power_factor]
[4.99821s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:rated_active_power]
[4.99857s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:rated_active_power]
[4.99891s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:rated_apparent_power]
[4.9992s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:rated_apparent_power]
[4.99958s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:rated_power_factor]
[4.99989s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:rated_power_factor]
[5.00029s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:rated_reactive_power]
[5.0006s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:rated_reactive_power]
[5.00104s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:reactive_power]
[5.00136s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:reactive_power]
[5.00176s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:reactive_power_ramp_rate_feedback]
[5.00204s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:reactive_power_ramp_rate_feedback]
[5.00242s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:reactive_power_setpoint_feedback]
[5.00272s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:reactive_power_setpoint_feedback]
[5.00307s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:status]
[5.00333s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:status]
[5.00361s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:system_state]
[5.00385s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:system_state]
[5.00411s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/summary:voltage_setpoint_feedback]
[5.00431s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/summary:voltage_setpoint_feedback]
[5.00758s  ] [info    ] [setVecAmAi     ]  amname Setting am  [pcs_1] parent am [pcs] 
[5.01008s  ] [info    ] [configure_vmapS] process file seeking header stuff am [pcs_1] ai [no ai]
[5.01062s  ] [info    ] [configure_vmapS] body: {"/config/pcs_1":{"AlarmDestination":"/assets/pcs/pcs_1:alarms","FaultDestination":"/assets/pcs/pcs_1:faults","FrequencySetpointMargin":5,"NoAlarmMsg":"Normal","NoFaultMsg":"Normal","PowerSetpointMargin":5,"RampRateMargin":5,"RatedActivePower":1200,"RatedApparentPower":1350,"RatedPowerFactor":0.8,"RatedReactivePower":1100,"VoltageSetpointMargin":5,"enable":false,"enum_opt":false},"/controls/pcs_1":{"ActivePowerSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandlePowerCmd","inAv":"/sched/pcs_1:handlePowerCmd_pcs_1"},{"amap":"pcs_1","func":"CalculateVar","inAv":"/controls/pcs_1:ActivePowerCmdConvert"}]}]},"enable":"/config/pcs_1:enable","note":"Used to trigger power command handling function on a value set","value":0},"ReactivePowerSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandlePowerCmd","inAv":"/sched/pcs_1:handlePowerCmd_pcs_1"},{"amap":"pcs_1","func":"CalculateVar","inAv":"/controls/pcs_1:ReactivePowerCmdConvert"}]}]},"enable":"/config/pcs_1:enable","note":"Used to trigger power command handling function on a value set","value":0}},"/links/pcs_1":{"ActivePowerCmdReal":{"value":"/controls/pcs_1:ActivePowerCmdReal"},"ActivePowerSetpoint":{"value":"/controls/pcs_1:ActivePowerSetpoint"},"MaxPCSChargePower":{"value":"/limits/pcs_1:MaxPCSChargePower"},"MaxPCSDischargePower":{"value":"/limits/pcs_1:MaxPCSDischargePower"},"RatedActivePower":{"value":"/limits/pcs_1:RatedActivePower"},"RatedApparentPower":{"value":"/limits/pcs_1:RatedApparentPower"},"RatedReactivePower":{"value":"/limits/pcs_1:RatedReactivePower"},"ReactivePowerCmdReal":{"value":"/controls/pcs_1:ReactivePowerCmdReal"},"ReactivePowerSetpoint":{"value":"/controls/pcs_1:ReactivePowerSetpoint"}},"/sched/pcs_1":{"handlePowerCmd_pcs_1":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandlePowerCmd"}]}]},"bms":"bms_1","ess":"ess_1","note":"Processes active and reactive power commands before they are sent","pcs":"pcs_1","value":1},"pubAssets_pcs_1":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"RunPub"}]}]},"enable":"/config/pcs_1:enable","mode":"ui","note":"Publishes UI asset data (/assets/pcs/pcs_1)","table":"/assets/pcs/pcs_1","value":1},"runMonitor_pcs_1":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"RunMonitor"}]}]},"aname":"pcs_1","enable":"/config/pcs_1:enable","monitor":"wake_monitor","note":"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs_1","value":1},"updateHeartbeatWrite_pcs_1":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"CalculateVar","inAv":"/status/pcs_1:HeartbeatWrite"}]}]},"enable":"/config/pcs_1:enable","note":"Periodically updates the heartbeat write variable defined in /status/pcs_1:HeartbeatWrite","value":1}},"/status/pcs_1":{"CommsOK":true,"DCClosed":{"actions":{"onSet":[{"remap":[{"uri":"/status/pcs_1:DCVoltage@EnableMaxValCheck"},{"uri":"/status/pcs_1:DCVoltage@EnableMinValCheck"}]}]},"enable":"/config/pcs_1:enable","note":"Enables/disables monitoring variables if PCS DC contactors are closed/opened","value":false},"GridMode":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"LogInfo"}]},{"remap":[]}]},"ifChanged":true,"note1":"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG","value":"INIT"},"HeartbeatWrite":{"actions":{"onSet":[{"remap":[{"fims":"set","uri":"/components/pcs_1:heartbeat_write"}]}]},"enable":"/config/pcs_1:enable","excludeFromDefaultSched":true,"expression":"if (({1} \u003e= 59), 0, ({1} + 1))","note":"Updates and then sends the heartbeat write value","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs_1:HeartbeatWrite"},"Status":"INIT","SystemState":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"LogInfo"}]},{"remap":[{"inValue":"Stop","outValue":false,"uri":"/status/pcs_1:DCClosed"},{"inValue":"Run","outValue":true,"uri":"/status/pcs_1:DCClosed"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs_1:DCClosed"},{"inValue":"Standby","outValue":true,"uri":"/status/pcs_1:DCClosed"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs_1:IsRunning"},{"inValue":"Run","outValue":true,"uri":"/status/pcs_1:IsRunning"},{"inValue":"Fault","outValue":false,"uri":"/status/pcs_1:IsRunning"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs_1:IsRunning"},{"inValue":"Stop","outValue":false,"uri":"/status/pcs_1:SystemFault"},{"inValue":"Run","outValue":false,"uri":"/status/pcs_1:SystemFault"},{"inValue":"Fault","outValue":true,"uri":"/status/pcs_1:SystemFault"},{"inValue":"Standby","outValue":false,"uri":"/status/pcs_1:SystemFault"}]}]},"ifChanged":true,"note1":"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby","note2":"Updates various PCS status variables depending on this variable's value","value":"INIT"}},"/system/commands":{"runOpts_pcs_1":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"SchedItemOpts"}]}]},"enabled":false,"note1":"Sets schedule variables (defined in /sched/pcs_1) to /system/commands:run","note2":"This allows the ESS Controller to kick off scheduled tasks based on the provided variables","options":[{"aname":"pcs_1","every":1,"uri":"/sched/pcs_1:pubAssets_pcs_1","value":1},{"aname":"pcs_1","every":0.1,"uri":"/sched/pcs_1:runMonitor_pcs_1","value":1},{"aname":"pcs_1","every":1,"uri":"/sched/pcs_1:checkInputs_pcs_1","value":1},{"aname":"pcs_1","every":1,"uri":"/sched/pcs_1:updateHeartbeatWrite_pcs_1","value":1},{"aname":"pcs_1","every":0.1,"uri":"/sched/pcs_1:handlePowerCmd_pcs_1","value":1}],"targav":"/system/commands:run","value":false}},"/controls/pcs_1":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send active power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs_1:SystemState"},"ActivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs_1:ActivePowerCmd@triggerCmd"},{"uri":"/controls/pcs_1:ActivePowerCmd"}]}]},"enable":"/config/pcs_1:enable","expression":"{1}","ifChanged":false,"note":"Pass kW command to ActivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs_1:ActivePowerCmdReal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send active power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs_1:ActivePowerRampRateCmd"},"ActivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs_1:ActivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs_1:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs_1:enable","expression":"{1}","ifChanged":false,"note":"Pass kW/s command to ActivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs_1:ActivePowerRampRate"},"ActivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/pcs_1:active_power_setpoint@enabled"}]}]},"enable":"/config/pcs_1:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/pcs_1:maint_mode","variable2":"/status/pcs_1:SystemState"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"note":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","useExpr":false,"value":0},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 55 and {1} \u003c= 65 and {2} == FormVF","note1":"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":60,"variable1":"/controls/pcs_1:FrequencySetpoint","variable2":"/status/pcs_1:GridMode"},"FrequencySetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/pcs_1:frequency_setpoint@enabled"}]}]},"enable":"/config/pcs_1:enable","expression":"{1} and {2} == FormVF","note":"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/pcs_1:maint_mode","variable2":"/status/pcs_1:GridMode"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-following mode command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":1,"variable1":"/status/pcs_1:SystemState"},"GridFollowPQEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/pcs_1:grid_follow_pq@enabled"}]}]},"enable":"/config/pcs_1:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ","note":"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/pcs_1:maint_mode","variable2":"/status/pcs_1:SystemState","variable3":"/status/pcs_1:GridMode"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":2,"variable1":"/status/pcs_1:SystemState"},"GridFormVFEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/pcs_1:grid_form_vf@enabled"}]}]},"enable":"/config/pcs_1:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/pcs_1:maint_mode","variable2":"/status/pcs_1:SystemState","variable3":"/status/pcs_1:GridMode"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} == Stop or {1} == Fault","note1":"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"sendCmdTimeout":3,"useExpr":true,"value":3,"variable1":"/status/pcs_1:SystemState"},"GridFormVSGEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/pcs_1:grid_form_vsg@enabled"}]}]},"enable":"/config/pcs_1:enable","expression":"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ","note":"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/assets/pcs/pcs_1:maint_mode","variable2":"/status/pcs_1:SystemState","variable3":"/status/pcs_1:GridMode"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"expression":"{1} != Stop and {1} != Fault","note1":"Send reactive power command to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs_1:SystemState"},"ReactivePowerCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs_1:ReactivePowerCmd@triggerCmd"},{"uri":"/controls/pcs_1:ReactivePowerCmd"}]}]},"enable":"/config/pcs_1:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR command to ReactivePowerCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs_1:ReactivePowerCmdReal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"expression":"{1} \u003e 0","note1":"Send reactive power ramp rate to PCS","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs_1:ReactivePowerRampRateCmd"},"ReactivePowerRampRateCmdConvert":{"actions":{"onSet":[{"remap":[{"outValue":true,"uri":"/controls/pcs_1:ReactivePowerRampRateCmd@triggerCmd"},{"uri":"/controls/pcs_1:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs_1:enable","expression":"{1}","ifChanged":false,"note":"Pass kVAR/s command to ReactivePowerRampRateCmd","numVars":1,"useExpr":true,"value":0,"variable1":"/controls/pcs_1:ReactivePowerRampRate"},"ReactivePowerSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/pcs_1:reactive_power_setpoint@enabled"}]}]},"enable":"/config/pcs_1:enable","expression":"{1} and {2} != Stop and {2} != Fault","note":"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/pcs_1:maint_mode","variable2":"/status/pcs_1:SystemState"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Stop or {2} == Run) and {3}","note1":"Standby command to send to PCS if the PCS is in Stop or Run, the BMS DC contactors are closed, and the BMS current is within an acceptable level","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/bms_1:CurrentBeforeStopIsOK","variable2":"/status/pcs_1:SystemState","variable3":"/status/bms_1:DCClosed"},"StandbyEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/pcs_1:standby@enabled"},{"uri":"/status/pcs_1:StandbyEnabled"}]}]},"enable":"/config/pcs_1:enable","expression":"{1} and {2} and ({3} == Stop or {3} == Run)","note":"Enable Standby UI control if BMS DC Contactors are closed, the PCS is in Stop or Run, and the PCS is in maintenance mode","numVars":3,"useExpr":true,"value":false,"variable1":"/status/bms_1:DCClosed","variable2":"/assets/pcs/pcs_1:maint_mode","variable3":"/status/pcs_1:SystemState"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"({1} == Stop or {1} == Standby) and {2} and not {3}","note1":"Start command to send to PCS if the PCS is in Stop or Standby, the BMS DC contactors are closed, and the PCS is not faulted","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/pcs_1:SystemState","variable2":"/status/bms_1:DCClosed","variable3":"/status/pcs_1:IsFaulted"},"StartEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/pcs_1:start@enabled"},{"uri":"/status/pcs_1:StartEnabled"}]}]},"enable":"/config/pcs_1:enable","expression":"{1} and {2} and ({3} == Stop or {3} == Standby) and not {4}","note":"Enable Start UI control if BMS DC Contactors are closed, the PCS is in Stop or Standby, the PCS is not faulted, and the PCS is in maintenance mode","numVars":4,"useExpr":true,"value":false,"variable1":"/status/bms_1:DCClosed","variable2":"/assets/pcs/pcs_1:maint_mode","variable3":"/status/pcs_1:SystemState","variable4":"/status/pcs_1:IsFaulted"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"checkCmdTimeout":3,"expression":"{1} and ({2} == Standby or {2} == Run) and {3}","note1":"Stop command to send to PCS if the PCS is in Standby or Run, the BMS DC contactors are closed, and the BMS current is within an acceptable level","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":3,"sendCmdTimeout":3,"useExpr":true,"value":0,"variable1":"/status/bms_1:CurrentBeforeStopIsOK","variable2":"/status/pcs_1:SystemState","variable3":"/status/bms_1:DCClosed"},"StopEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/pcs_1:stop@enabled"},{"uri":"/status/pcs_1:StopEnabled"}]}]},"enable":"/config/pcs_1:enable","expression":"{1} and {2} != Stop","note":"Enable Stop UI control if the PCS is not in Stop and the PCS is in maintenance mode","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/pcs_1:maint_mode","variable2":"/status/pcs_1:SystemState"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs_1:ActivePowerCmd","variable2":"/status/pcs_1:ActivePowerSetpointFeedback","variable3":"/config/pcs_1:PowerSetpointMargin"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs_1:ActivePowerRampRateCmd","variable2":"/status/pcs_1:ActivePowerRampRateFeedback","variable3":"/config/pcs_1:RampRateMargin"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs_1:FrequencySetpoint","variable2":"/status/pcs_1:FrequencySetpointFeedback","variable3":"/config/pcs_1:FrequencySetpointMargin"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFollowPQ","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs_1:GridMode"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVF","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs_1:GridMode"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == GridFormVSG","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs_1:GridMode"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs_1:ReactivePowerCmd","variable2":"/status/pcs_1:ReactivePowerSetpointFeedback","variable3":"/config/pcs_1:PowerSetpointMargin"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs_1:ReactivePowerRampRateCmd","variable2":"/status/pcs_1:ReactivePowerRampRateFeedback","variable3":"/config/pcs_1:RampRateMargin"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Standby","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs_1:SystemState"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Run","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs_1:SystemState"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"{1} == Stop or {1} == Fault","numVars":1,"sendCmdTimeout":10,"useExpr":true,"value":0,"variable1":"/status/pcs_1:SystemState"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"enableAlert":false,"expression":"({1} - {3}) \u003c= {2} and ({1} + {3}) \u003e= {2}","numVars":3,"sendCmdTimeout":5,"useExpr":true,"value":0,"variable1":"/controls/pcs_1:VoltageSetpoint","variable2":"/status/pcs_1:VoltageSetpointFeedback","variable3":"/config/pcs_1:VoltageSetpointMargin"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"HandleCmd"}]}]},"expression":"{1} \u003e= 460 and {1} \u003c= 500 and {2} == FormVF","note1":"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)","note2":"TODO: If needed, add \u003ccomponent_uri\u003e:\u003cname\u003e to cmdVar","numVars":2,"useExpr":true,"value":480,"variable1":"/controls/pcs_1:VoltageSetpoint","variable2":"/status/pcs_1:GridMode"},"VoltageSetpointEnable":{"actions":{"onSet":[{"remap":[{"uri":"/assets/pcs/pcs_1:voltage_setpoint@enabled"}]}]},"enable":"/config/pcs_1:enable","expression":"{1} and {2} == FormVF","note":"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)","numVars":2,"useExpr":true,"value":false,"variable1":"/assets/pcs/pcs_1:maint_mode","variable2":"/status/pcs_1:GridMode"}},"/schedule/wake_monitor/pcs_1":{"/controls/pcs_1:ActivePowerCmd":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:ActivePowerCmdConvert":{"amap":"pcs_1","func":"CalculateVar"},"/controls/pcs_1:ActivePowerRampRateCmd":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:ActivePowerRampRateCmdConvert":{"amap":"pcs_1","func":"CalculateVar"},"/controls/pcs_1:ActivePowerSetpointEnable":{"amap":"pcs_1","func":"CalculateVar"},"/controls/pcs_1:ClearFaults":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:FrequencySetpoint":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:FrequencySetpointEnable":{"amap":"pcs_1","func":"CalculateVar"},"/controls/pcs_1:GridFollowPQ":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:GridFollowPQEnable":{"amap":"pcs_1","func":"CalculateVar"},"/controls/pcs_1:GridFormVF":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:GridFormVFEnable":{"amap":"pcs_1","func":"CalculateVar"},"/controls/pcs_1:GridFormVSG":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:GridFormVSGEnable":{"amap":"pcs_1","func":"CalculateVar"},"/controls/pcs_1:ReactivePowerCmd":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:ReactivePowerCmdConvert":{"amap":"pcs_1","func":"CalculateVar"},"/controls/pcs_1:ReactivePowerRampRateCmd":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:ReactivePowerRampRateCmdConvert":{"amap":"pcs_1","func":"CalculateVar"},"/controls/pcs_1:ReactivePowerSetpointEnable":{"amap":"pcs_1","func":"CalculateVar"},"/controls/pcs_1:Standby":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:StandbyEnable":{"amap":"pcs_1","func":"CalculateVar"},"/controls/pcs_1:Start":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:StartEnable":{"amap":"pcs_1","func":"CalculateVar"},"/controls/pcs_1:Stop":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:StopEnable":{"amap":"pcs_1","func":"CalculateVar"},"/controls/pcs_1:VerifyActivePowerCmd":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:VerifyActivePowerRampRateCmd":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:VerifyFrequencySetpoint":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:VerifyGridFollowPQ":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:VerifyGridFormVF":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:VerifyGridFormVSG":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:VerifyReactivePowerCmd":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:VerifyReactivePowerRampRateCmd":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:VerifyStandby":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:VerifyStart":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:VerifyStop":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:VerifyVoltageSetpoint":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:VoltageSetpoint":{"amap":"pcs_1","func":"HandleCmd"},"/controls/pcs_1:VoltageSetpointEnable":{"amap":"pcs_1","func":"CalculateVar"}},"/status/pcs_1":{"ActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs_1:ActivePowerCmd"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"Used to validate /controls/pcs_1:ActivePowerCmd","value":false},"ActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs_1:ActivePowerRampRateCmd"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"Used to validate /controls/pcs_1:ActivePowerRampRateCmd","value":false},"ClearFaultsSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs_1:ClearFaults"},{"outValue":"Clear","uri":"/faults/pcs_1:clear_faults"},{"outValue":"Clear","uri":"/alarms/pcs_1:clear_alarms"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"When this variable is set, /faults/pcs_1:clear_faults and /alarms/pcs_1:clear_alarms will be set to Clear","value":false},"FrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs_1:FrequencySetpoint"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"Used to validate /controls/pcs_1:FrequencySetpoint","value":false},"GridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs_1:VerifyGridFollowPQ@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs_1:VerifyGridFollowPQ"},{"inValue":false,"outValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs_1:GridFollowPQ"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm","value":false},"GridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs_1:VerifyGridFormVF@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs_1:VerifyGridFormVF"},{"inValue":false,"outValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs_1:GridFormVF"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm","value":false},"GridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs_1:VerifyGridFormVSG@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs_1:VerifyGridFormVSG"},{"inValue":false,"outValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs_1:GridFormVSG"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm","value":false},"ReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs_1:ReactivePowerCmd"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"Used to validate /controls/pcs_1:ReactivePowerCmd","value":false},"ReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs_1:ReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"Used to validate /controls/pcs_1:ReactivePowerRampRateCmd","value":false},"StandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs_1:VerifyStandby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs_1:VerifyStandby"},{"inValue":false,"outValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs_1:Standby"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm","value":false},"StartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs_1:VerifyStart@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs_1:VerifyStart"},{"inValue":false,"outValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs_1:Start"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm","value":false},"StopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs_1:VerifyStop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs_1:VerifyStop"},{"inValue":false,"outValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs_1:Stop"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm","value":false},"VerifyActivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs_1:VerifyActivePowerCmd"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm","value":false},"VerifyActivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs_1:VerifyActivePowerRampRateCmd"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm","value":false},"VerifyFrequencySetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs_1:VerifyFrequencySetpoint"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm","value":false},"VerifyGridFollowPQSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs_1:VerifyGridFollowPQ"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"If the PCS is not in grid-following after an elasped time, send an alarm","value":false},"VerifyGridFormVFSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs_1:VerifyGridFormVF"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm","value":false},"VerifyGridFormVSGSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs_1:VerifyGridFormVSG"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm","value":false},"VerifyReactivePowerCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs_1:VerifyReactivePowerCmd"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm","value":false},"VerifyReactivePowerRampRateCmdSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs_1:VerifyReactivePowerRampRateCmd"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm","value":false},"VerifyStandbySuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs_1:VerifyStandby"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"If the PCS is not on standby after an elasped time, send an alarm","value":false},"VerifyStartSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs_1:VerifyStart"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"If the PCS is not running after an elasped time, send an alarm","value":false},"VerifyStopSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs_1:VerifyStop"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"If the PCS is not stopped after an elasped time, send an alarm","value":false},"VerifyVoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","uri":"/alarms/pcs_1:VerifyVoltageSetpoint"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm","value":false},"VoltageSetpointSuccess":{"actions":{"onSet":[{"remap":[{"inValue":false,"outValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","uri":"/alarms/pcs_1:VoltageSetpoint"}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note":"Used to validate /controls/pcs_1:VoltageSetpoint","value":false}},"/alarms/pcs_1":{"ActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[0]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power command is unsuccessful","type":"alarm","value":"Normal"},"ActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[1]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"ClearFaults":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[2]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending clear faults command is unsuccessful","type":"alarm","value":"Normal"},"FrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[3]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful","type":"alarm","value":"Normal"},"GridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[4]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-following mode command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[5]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful","type":"alarm","value":"Normal"},"GridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[6]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful","type":"alarm","value":"Normal"},"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]}]},"enabled":true,"type":"alarm","value":"Normal"},"MonitorVarAlarm":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_pcs_1_monitor_alarms[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_pcs_1_monitor_alarms[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_pcs_1_monitor_alarms[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/alarms/pcs_1:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported alarm from any monitoring variable","note2":"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI","value":"Normal"},"ReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[7]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power command is unsuccessful","type":"alarm","value":"Normal"},"ReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[8]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful","type":"alarm","value":"Normal"},"Standby":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[9]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending standby command is unsuccessful","type":"alarm","value":"Normal"},"Start":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[10]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending start command is unsuccessful","type":"alarm","value":"Normal"},"Stop":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[11]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending stop command is unsuccessful","type":"alarm","value":"Normal"},"VerifyActivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[12]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyActivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[13]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyFrequencySetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[14]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyGridFollowPQ":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","note":"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[15]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-following","type":"alarm","value":"Normal"},"VerifyGridFormVF":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","note":"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[16]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)","type":"alarm","value":"Normal"},"VerifyGridFormVSG":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","note":"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[17]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)","type":"alarm","value":"Normal"},"VerifyReactivePowerCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[18]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyReactivePowerRampRateCmd":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","note":"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[19]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected","type":"alarm","value":"Normal"},"VerifyStandby":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","note":"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[20]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to transition to standby","type":"alarm","value":"Normal"},"VerifyStart":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","note":"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[21]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to start","type":"alarm","value":"Normal"},"VerifyStop":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","note":"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[22]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS failed to stop","type":"alarm","value":"Normal"},"VerifyVoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","note":"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[23]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected","type":"alarm","value":"Normal"},"VoltageSetpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]},{"remap":[{"inValue":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","note":"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","outValue":true,"uri":"/site/ess:pcs_pcs_1_control_alarms[24]"}]}]},"enabled":true,"note":"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful","type":"alarm","value":"Normal"},"clear_alarms":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs_1) will be reset to the normal state (defined in /config/pcs_1:NoAlarmMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"alarm","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/faults/pcs_1":{"HeartbeatRead":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]}]},"enabled":true,"type":"fault","value":"Normal"},"MonitorVarFault":{"actions":{"onSet":[{"remap":[{"inValue":"ActivePower_limit_max","note":"Bit 0 - PCS ActivePower - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_pcs_1_monitor_faults[0]"},{"inValue":"DCVoltage_limit_max","note":"Bit 1 - PCS DCVoltage - Max Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_pcs_1_monitor_faults[1]"},{"inValue":"DCVoltage_limit_min","note":"Bit 2 - PCS DCVoltage - Min Threshold Exceeded","outValue":true,"uri":"/site/ess:pcs_pcs_1_monitor_faults[2]"},{"inValue":"HeartbeatRead_state","outValue":"PCS Communication Failure","uri":"/faults/pcs_1:HeartbeatRead"}]}]},"enabled":true,"ifChanged":false,"note1":"Contains last recently reported fault from any monitoring variable","note2":"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI","value":"Normal"},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"process_sys_alarm"}]}]},"enabled":true,"note1":"When this variable is set to Clear, all fault variables (defined in /faults/pcs_1) will be reset to the normal state (defined in /config/pcs_1:NoFaultMsg)","note2":"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset","numVars":3,"type":"fault","value":"Normal","variable1":"ActivePower","variable2":"DCVoltage","variable3":"HeartbeatRead"}},"/schedule/wake_monitor/pcs_1":{"/status/pcs_1:ActivePower":{"amap":"pcs_1","func":"CheckMonitorVar"},"/status/pcs_1:DCVoltage":{"amap":"pcs_1","func":"CheckMonitorVar"},"/status/pcs_1:HeartbeatRead":{"amap":"pcs_1","func":"CheckMonitorVar"},"/status/pcs_1:IsAlarming":{"amap":"pcs_1","func":"CalculateVar"},"/status/pcs_1:IsFaulted":{"amap":"pcs_1","func":"CalculateVar"},"/status/pcs_1:TotalAlarmCnt":{"amap":"pcs_1","func":"CalculateVar"},"/status/pcs_1:TotalFaultCnt":{"amap":"pcs_1","func":"CalculateVar"}},"/status/pcs_1":{"ActivePower":{"EnableFaultCheck":true,"EnableMaxValCheck":true,"MaxAlarmThreshold":3510,"MaxAlarmTimeout":1,"MaxFaultThreshold":3525,"MaxFaultTimeout":1.5,"MaxRecoverTimeout":1.4,"MaxResetValue":3510,"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over active power conditions","value":0},"AlarmCnt":0,"ClearFaultsDone":{"actions":{"onSet":[{"remap":[{"outValue":0,"uri":"/site/ess:pcs_pcs_1_monitor_alarms"},{"outValue":0,"uri":"/site/ess:pcs_pcs_1_monitor_faults"},{"outValue":0,"uri":"/site/ess:pcs_pcs_1_control_alarms"}]}]},"ifChanged":false,"note":"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits","value":false},"DCVoltage":{"EnableFaultCheck":true,"EnableMaxValCheck":false,"EnableMinValCheck":false,"MaxAlarmThreshold":3000,"MaxAlarmTimeout":0,"MaxFaultThreshold":4000,"MaxFaultTimeout":0,"MaxRecoverTimeout":0,"MaxResetValue":2000,"MinAlarmThreshold":1200,"MinAlarmTimeout":0,"MinFaultThreshold":1100,"MinFaultTimeout":1,"MinRecoverTimeout":1,"MinResetValue":1140,"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions","value":0},"FaultCnt":0,"FaultShutdown":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/status/pcs:FaultShutdown"}]}]},"ifChanged":true,"note":"When the PCS instance faults, the fault shutdown event will be propagated to its parent","value":false},"HeartbeatRead":{"AlarmTimeout":10,"EnableAlert":false,"EnableCommsCheck":false,"EnableStateCheck":false,"FaultTimeout":15,"RecoverTimeout":0.1,"Type":"int","actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"CheckMonitorVar"}]}]},"note":"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS","value":0},"IsAlarming":{"enable":"/config/pcs_1:enable","expression":"{1} \u003e 0","numVars":1,"useExpr":true,"value":false,"variable1":"/status/pcs_1:TotalAlarmCnt"},"IsFaulted":{"enable":"/config/pcs_1:enable","expression":"{1} or {2} \u003e 0","numVars":2,"useExpr":true,"value":false,"variable1":"/status/pcs_1:SystemFault","variable2":"/status/pcs_1:TotalFaultCnt"},"SystemFault":false,"TotalAlarmCnt":{"enable":"/config/pcs_1:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs_1:AlarmCnt"},"TotalFaultCnt":{"enable":"/config/pcs_1:enable","expression":"{1}","numVars":1,"useExpr":true,"value":0,"variable1":"/status/pcs_1:FaultCnt"}},"/components/pcs_1":{"grid_mode":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FollowPQ","uri":"/status/pcs_1:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVF","uri":"/status/pcs_1:GridMode"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"FormVSG","uri":"/status/pcs_1:GridMode"},{"enable":"/config/pcs_1:enum_opt","outValue":true,"uri":"/components/pcs_1:grid_mode@ifChanged","useAv":true}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0},"status":{"actions":{"onSet":[{"remap":[{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"TODO: add output value to set to uri","uri":"/status/pcs_1:Status"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Stop","uri":"/status/pcs_1:SystemState"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Standby","uri":"/status/pcs_1:SystemState"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Run","uri":"/status/pcs_1:SystemState"},{"inValue":"TODO: add input value to compare against value field or remove remap entry","outValue":"Fault","uri":"/status/pcs_1:SystemState"},{"enable":"/config/pcs_1:enum_opt","outValue":true,"uri":"/components/pcs_1:status@ifChanged","useAv":true}]}]},"enable":"/config/pcs_1:enable","ifChanged":false,"note1":"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action","note2":"Use enum if the variable's value contains bitfields. Otherwise, use remap","value":0}},"/sched/pcs_1":{"checkInputs_pcs_1":{"actions":{"onSet":[{"remap":[{"outValue":false,"uri":"/components/pcs_1:status@ifChanged"},{"outValue":false,"uri":"/components/pcs_1:grid_mode@ifChanged"}]}]},"enable":"/config/pcs_1:enable","note":"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change","value":0}},"/vlinks/pcs_1":{"active_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs_1:active_power","vlink":"/status/pcs_1:ActivePower"},"active_power_ramp_rate_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/pcs_1:active_power_ramp_rate_feedback","vlink":"/status/pcs_1:ActivePowerRampRateFeedback"},"active_power_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/pcs_1:active_power_setpoint_feedback","vlink":"/status/pcs_1:ActivePowerSetpointFeedback"},"apparent_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs_1:apparent_power","vlink":"/status/pcs_1:ApparentPower"},"dc_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs_1:dc_current","vlink":"/status/pcs_1:DCCurrent"},"dc_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs_1:dc_power","vlink":"/status/pcs_1:DCPower"},"dc_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs_1:dc_voltage","vlink":"/status/pcs_1:DCVoltage"},"frequency":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs_1:frequency","vlink":"/status/pcs_1:Frequency"},"frequency_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/pcs_1:frequency_setpoint_feedback","vlink":"/status/pcs_1:FrequencySetpointFeedback"},"heartbeat_read":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs_1:heartbeat_read","vlink":"/status/pcs_1:HeartbeatRead"},"l1_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs_1:l1_current","vlink":"/status/pcs_1:L1Current"},"l1_l2_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs_1:l1_l2_voltage","vlink":"/status/pcs_1:L1L2Voltage"},"l2_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs_1:l2_current","vlink":"/status/pcs_1:L2Current"},"l2_l3_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs_1:l2_l3_voltage","vlink":"/status/pcs_1:L2L3Voltage"},"l3_current":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs_1:l3_current","vlink":"/status/pcs_1:L3Current"},"l3_l1_voltage":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs_1:l3_l1_voltage","vlink":"/status/pcs_1:L3L1Voltage"},"power_factor":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs_1:power_factor","vlink":"/status/pcs_1:PowerFactor"},"rated_active_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs_1:rated_active_power","vlink":"/limits/pcs_1:RatedActivePower"},"rated_apparent_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs_1:rated_apparent_power","vlink":"/limits/pcs_1:RatedApparentPower"},"rated_reactive_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs_1:rated_reactive_power","vlink":"/limits/pcs_1:RatedReactivePower"},"reactive_power":{"default":0,"note":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","value":"/components/pcs_1:reactive_power","vlink":"/status/pcs_1:ReactivePower"},"reactive_power_ramp_rate_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/pcs_1:reactive_power_ramp_rate_feedback","vlink":"/status/pcs_1:ReactivePowerRampRateFeedback"},"reactive_power_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/pcs_1:reactive_power_setpoint_feedback","vlink":"/status/pcs_1:ReactivePowerSetpointFeedback"},"voltage_setpoint_feedback":{"default":0,"note1":"TODO: If needed, modify value: \u003ccomponents_uri\u003e:\u003cvariable_name\u003e or remove entire vlink variable","note2":"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID","value":"/components/pcs_1:voltage_setpoint_feedback","vlink":"/status/pcs_1:VoltageSetpointFeedback"}},"/site/ess":{"pcs_pcs_1_control_alarms":{"bit0":"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit1":"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit10":"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit11":"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit12":"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit13":"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit14":"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout","bit15":"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout","bit16":"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout","bit17":"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout","bit18":"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout","bit19":"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout","bit2":"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit20":"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout","bit21":"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout","bit22":"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout","bit23":"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout","bit24":"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit3":"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit4":"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit5":"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit6":"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit7":"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit8":"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","bit9":"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details","name":"PCS Control Alarms","type":"bitfield","value":0},"pcs_pcs_1_monitor_alarms":{"bit0":"PCS ActivePower - Max Threshold Exceeded","bit1":"PCS DCVoltage - Max Threshold Exceeded","bit2":"PCS DCVoltage - Min Threshold Exceeded","name":"PCS Monitor Alarms","type":"bitfield","value":0},"pcs_pcs_1_monitor_faults":{"bit0":"PCS ActivePower - Max Threshold Exceeded","bit1":"PCS DCVoltage - Max Threshold Exceeded","bit2":"PCS DCVoltage - Min Threshold Exceeded","name":"PCS Monitor Faults","type":"bitfield","value":0}},"/assets/pcs/pcs_1":{"active_power":{"value":0},"active_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs_1:ActivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power ramp rate","value":0},"active_power_ramp_rate_feedback":{"value":0},"active_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs_1:ActivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the active power setpoint","value":0},"active_power_setpoint_feedback":{"value":0},"alarms":{"options":[],"value":0},"apparent_power":{"value":0},"clear_faults":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs_1:ClearFaults@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs_1:ClearFaults"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate clear faults command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"comms_ok":{"value":false},"dc_current":{"value":0},"dc_power":{"value":0},"dc_voltage":{"value":0},"faults":{"options":[],"value":0},"frequency":{"value":0},"frequency_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs_1:FrequencySetpoint@triggerCmd"},{"uri":"/controls/pcs_1:FrequencySetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the frequency setpoint while the PCS is in grid-forming (VF)","value":0},"frequency_setpoint_feedback":{"value":0},"grid_follow_pq":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs_1:GridFollowPQ@triggerCmd"},{"inValue":true,"outValue":1,"uri":"/controls/pcs_1:GridFollowPQ"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-following","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vf":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs_1:GridFormVF@triggerCmd"},{"inValue":true,"outValue":2,"uri":"/controls/pcs_1:GridFormVF"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (voltage and frequency)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_form_vsg":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs_1:GridFormVSG@triggerCmd"},{"inValue":true,"outValue":3,"uri":"/controls/pcs_1:GridFormVSG"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate command routine for setting PCS to grid-forming (virtual synchronous generator)","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"grid_mode":{"value":"INIT"},"l1_current":{"value":0},"l1_l2_voltage":{"value":0},"l2_current":{"value":0},"l2_l3_voltage":{"value":0},"l3_current":{"value":0},"l3_l1_voltage":{"value":0},"maint_mode":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"LogInfo"}]},{"remap":[{"uri":"/assets/pcs/pcs_1:clear_faults@enabled"},{"uri":"/assets/pcs/pcs_1:active_power_ramp_rate@enabled"},{"uri":"/assets/pcs/pcs_1:reactive_power_ramp_rate@enabled"}]}]},"enabled":true,"ifChanged":false,"note":"UI control variable used to set the current asset in maintenance mode","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"max_charge_power":{"value":0},"max_discharge_power":{"value":0},"max_igbt_temperature":{"value":0},"power_factor":{"value":0},"rated_active_power":{"value":0},"rated_apparent_power":{"value":0},"rated_power_factor":{"value":0},"rated_reactive_power":{"value":0},"reactive_power":{"value":0},"reactive_power_ramp_rate":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs_1:ReactivePowerRampRate"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power ramp rate","value":0},"reactive_power_ramp_rate_feedback":{"value":0},"reactive_power_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"LogInfo"}]},{"remap":[{"uri":"/controls/pcs_1:ReactivePowerSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the reactive power setpoint","value":0},"reactive_power_setpoint_feedback":{"value":0},"standby":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs_1:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs_1:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs_1:Standby@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs_1:Standby"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate the standby command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"start":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":true,"uri":"/controls/pcs_1:Start@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs_1:Start"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate the start command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"status":{"value":"INIT"},"stop":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"LogInfo"}]},{"remap":[{"inValue":true,"outValue":0,"uri":"/controls/pcs_1:ActivePowerSetpoint"},{"inValue":true,"outValue":0,"uri":"/controls/pcs_1:ReactivePowerSetpoint"},{"inValue":true,"outValue":true,"uri":"/controls/pcs_1:Stop@triggerCmd"},{"inValue":true,"outValue":0,"uri":"/controls/pcs_1:Stop"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to initiate the stop command routine","options":[{"name":"No","return_value":false},{"name":"Yes","return_value":true}],"value":false},"system_state":{"value":"INIT"},"voltage_setpoint":{"actions":{"onSet":[{"func":[{"amap":"pcs_1","func":"LogInfo"}]},{"remap":[{"outValue":true,"uri":"/controls/pcs_1:VoltageSetpoint@triggerCmd"},{"uri":"/controls/pcs_1:VoltageSetpoint"}]}]},"enabled":false,"ifChanged":false,"note":"UI control variable used to set the voltage setpoint while the PCS is in grid-forming (VF)","value":0},"voltage_setpoint_feedback":{"value":0}},"/vlinks/pcs_1":{"ui_active_power":{"default":0,"value":"/assets/pcs/pcs_1:active_power","vlink":"/status/pcs_1:ActivePower"},"ui_active_power_ramp_rate_feedback":{"default":0,"value":"/assets/pcs/pcs_1:active_power_ramp_rate_feedback","vlink":"/status/pcs_1:ActivePowerRampRateFeedback"},"ui_active_power_setpoint_feedback":{"default":0,"value":"/assets/pcs/pcs_1:active_power_setpoint_feedback","vlink":"/status/pcs_1:ActivePowerSetpointFeedback"},"ui_apparent_power":{"default":0,"value":"/assets/pcs/pcs_1:apparent_power","vlink":"/status/pcs_1:ApparentPower"},"ui_comms_ok":{"default":false,"value":"/assets/pcs/pcs_1:comms_ok","vlink":"/status/pcs_1:CommsOK"},"ui_dc_current":{"default":0,"value":"/assets/pcs/pcs_1:dc_current","vlink":"/status/pcs_1:DCCurrent"},"ui_dc_power":{"default":0,"value":"/assets/pcs/pcs_1:dc_power","vlink":"/status/pcs_1:DCPower"},"ui_dc_voltage":{"default":0,"value":"/assets/pcs/pcs_1:dc_voltage","vlink":"/status/pcs_1:DCVoltage"},"ui_frequency":{"default":0,"value":"/assets/pcs/pcs_1:frequency","vlink":"/status/pcs_1:Frequency"},"ui_frequency_setpoint_feedback":{"default":0,"value":"/assets/pcs/pcs_1:frequency_setpoint_feedback","vlink":"/status/pcs_1:FrequencySetpointFeedback"},"ui_grid_mode":{"default":"INIT","value":"/assets/pcs/pcs_1:grid_mode","vlink":"/status/pcs_1:GridMode"},"ui_l1_current":{"default":0,"value":"/assets/pcs/pcs_1:l1_current","vlink":"/status/pcs_1:L1Current"},"ui_l1_l2_voltage":{"default":0,"value":"/assets/pcs/pcs_1:l1_l2_voltage","vlink":"/status/pcs_1:L1L2Voltage"},"ui_l2_current":{"default":0,"value":"/assets/pcs/pcs_1:l2_current","vlink":"/status/pcs_1:L2Current"},"ui_l2_l3_voltage":{"default":0,"value":"/assets/pcs/pcs_1:l2_l3_voltage","vlink":"/status/pcs_1:L2L3Voltage"},"ui_l3_current":{"default":0,"value":"/assets/pcs/pcs_1:l3_current","vlink":"/status/pcs_1:L3Current"},"ui_l3_l1_voltage":{"default":0,"value":"/assets/pcs/pcs_1:l3_l1_voltage","vlink":"/status/pcs_1:L3L1Voltage"},"ui_max_charge_power":{"default":0,"value":"/assets/pcs/pcs_1:max_charge_power","vlink":"/limits/pcs_1:MaxPCSChargePower"},"ui_max_discharge_power":{"default":0,"value":"/assets/pcs/pcs_1:max_discharge_power","vlink":"/limits/pcs_1:MaxPCSDischargePower"},"ui_max_igbt_temperature":{"default":0,"value":"/assets/pcs/pcs_1:max_igbt_temperature","vlink":"/status/pcs_1:MaxIGBTTemperature"},"ui_power_factor":{"default":0,"value":"/assets/pcs/pcs_1:power_factor","vlink":"/status/pcs_1:PowerFactor"},"ui_rated_active_power":{"default":0,"value":"/assets/pcs/pcs_1:rated_active_power","vlink":"/limits/pcs_1:RatedActivePower"},"ui_rated_apparent_power":{"default":0,"value":"/assets/pcs/pcs_1:rated_apparent_power","vlink":"/limits/pcs_1:RatedApparentPower"},"ui_rated_power_factor":{"default":0,"value":"/assets/pcs/pcs_1:rated_power_factor","vlink":"/config/pcs_1:RatedPowerFactor"},"ui_rated_reactive_power":{"default":0,"value":"/assets/pcs/pcs_1:rated_reactive_power","vlink":"/limits/pcs_1:RatedReactivePower"},"ui_reactive_power":{"default":0,"value":"/assets/pcs/pcs_1:reactive_power","vlink":"/status/pcs_1:ReactivePower"},"ui_reactive_power_ramp_rate_feedback":{"default":0,"value":"/assets/pcs/pcs_1:reactive_power_ramp_rate_feedback","vlink":"/status/pcs_1:ReactivePowerRampRateFeedback"},"ui_reactive_power_setpoint_feedback":{"default":0,"value":"/assets/pcs/pcs_1:reactive_power_setpoint_feedback","vlink":"/status/pcs_1:ReactivePowerSetpointFeedback"},"ui_status":{"default":"INIT","value":"/assets/pcs/pcs_1:status","vlink":"/status/pcs_1:Status"},"ui_system_state":{"default":"INIT","value":"/assets/pcs/pcs_1:system_state","vlink":"/status/pcs_1:SystemState"},"ui_voltage_setpoint_feedback":{"default":0,"value":"/assets/pcs/pcs_1:voltage_setpoint_feedback","vlink":"/status/pcs_1:VoltageSetpointFeedback"}}}
[5.01339s  ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[5.01372s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"AlarmDestination":	"/assets/pcs/pcs_1:alarms",
	"FaultDestination":	"/assets/pcs/pcs_1:faults",
	"FrequencySetpointMargin":	5,
	"NoAlarmMsg":	"Normal",
	"NoFaultMsg":	"Normal",
	"PowerSetpointMargin":	5,
	"RampRateMargin":	5,
	"RatedActivePower":	1200,
	"RatedApparentPower":	1350,
	"RatedPowerFactor":	0.8,
	"RatedReactivePower":	1100,
	"VoltageSetpointMargin":	5,
	"enable":	false,
	"enum_opt":	false
}].
[5.01406s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:alarms]
[5.01432s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:alarms]
[5.01458s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:faults]
[5.015s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:faults]
[5.01528s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.01551s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.01583s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.01611s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.01661s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerSetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandlePowerCmd",
							"inAv":	"/sched/pcs_1:handlePowerCmd_pcs_1"
						}, {
							"amap":	"pcs_1",
							"func":	"CalculateVar",
							"inAv":	"/controls/pcs_1:ActivePowerCmdConvert"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"note":	"Used to trigger power command handling function on a value set",
		"value":	0
	},
	"ReactivePowerSetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandlePowerCmd",
							"inAv":	"/sched/pcs_1:handlePowerCmd_pcs_1"
						}, {
							"amap":	"pcs_1",
							"func":	"CalculateVar",
							"inAv":	"/controls/pcs_1:ReactivePowerCmdConvert"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"note":	"Used to trigger power command handling function on a value set",
		"value":	0
	}
}].
[5.01712s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerCmdReal":	{
		"value":	"/controls/pcs_1:ActivePowerCmdReal"
	},
	"ActivePowerSetpoint":	{
		"value":	"/controls/pcs_1:ActivePowerSetpoint"
	},
	"MaxPCSChargePower":	{
		"value":	"/limits/pcs_1:MaxPCSChargePower"
	},
	"MaxPCSDischargePower":	{
		"value":	"/limits/pcs_1:MaxPCSDischargePower"
	},
	"RatedActivePower":	{
		"value":	"/limits/pcs_1:RatedActivePower"
	},
	"RatedApparentPower":	{
		"value":	"/limits/pcs_1:RatedApparentPower"
	},
	"RatedReactivePower":	{
		"value":	"/limits/pcs_1:RatedReactivePower"
	},
	"ReactivePowerCmdReal":	{
		"value":	"/controls/pcs_1:ReactivePowerCmdReal"
	},
	"ReactivePowerSetpoint":	{
		"value":	"/controls/pcs_1:ReactivePowerSetpoint"
	}
}].
[5.01743s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:ActivePowerCmdReal]
[5.0177s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:ActivePowerCmdReal]
[5.01799s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:ActivePowerSetpoint]
[5.01842s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:ActivePowerSetpoint]
[5.01871s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs_1:MaxPCSChargePower]
[5.01901s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs_1:MaxPCSChargePower]
[5.01929s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs_1:MaxPCSDischargePower]
[5.01954s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs_1:MaxPCSDischargePower]
[5.01984s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs_1:RatedActivePower]
[5.0201s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs_1:RatedActivePower]
[5.02038s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs_1:RatedApparentPower]
[5.02062s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs_1:RatedApparentPower]
[5.02087s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs_1:RatedReactivePower]
[5.02109s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs_1:RatedReactivePower]
[5.02136s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:ReactivePowerCmdReal]
[5.02161s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:ReactivePowerCmdReal]
[5.02191s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:ReactivePowerSetpoint]
[5.02216s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:ReactivePowerSetpoint]
[5.0225s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"handlePowerCmd_pcs_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandlePowerCmd"
						}]
				}]
		},
		"bms":	"bms_1",
		"ess":	"ess_1",
		"note":	"Processes active and reactive power commands before they are sent",
		"pcs":	"pcs_1",
		"value":	1
	},
	"pubAssets_pcs_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"RunPub"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"mode":	"ui",
		"note":	"Publishes UI asset data (/assets/pcs/pcs_1)",
		"table":	"/assets/pcs/pcs_1",
		"value":	1
	},
	"runMonitor_pcs_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"RunMonitor"
						}]
				}]
		},
		"aname":	"pcs_1",
		"enable":	"/config/pcs_1:enable",
		"monitor":	"wake_monitor",
		"note":	"Periodically runs functions for variables defined in /schedule/wake_monitor/pcs_1",
		"value":	1
	},
	"updateHeartbeatWrite_pcs_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"CalculateVar",
							"inAv":	"/status/pcs_1:HeartbeatWrite"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"note":	"Periodically updates the heartbeat write variable defined in /status/pcs_1:HeartbeatWrite",
		"value":	1
	}
}].
[5.02282s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/pcs_1:perf_HandlePowerCmd]
[5.02309s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/pcs_1:perf_HandlePowerCmd]
[5.0234s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess_1:HandlePowerCmd_ess_1]
[5.02367s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess_1:HandlePowerCmd_ess_1]
[5.02397s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/ess_1:MaxChargePower]
[5.02438s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/ess_1:MaxChargePower]
[5.0247s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/ess_1:MaxDischargePower]
[5.02496s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/ess_1:MaxDischargePower]
[5.02529s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/ess_1:MaxReactivePower]
[5.02554s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/ess_1:MaxReactivePower]
[5.02598s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/ess_1:MaxApparentPower]
[5.02624s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/ess_1:MaxApparentPower]
[5.02664s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:PowerPriority]
[5.02694s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:PowerPriority]
[5.02767s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs_1:PCSLimitsChanged]
[5.02799s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs_1:PCSLimitsChanged]
[5.02836s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs_1:PCSConfigChanged]
[5.02867s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs_1:PCSConfigChanged]
[5.02904s  ] [info    ] [HandlePowerInit] RUNNING RELOAD 0 for pcs_1
[5.02941s  ] [info    ] [HandlePowerInit] Done checking hw and config
[5.02988s  ] [info    ] [HandlePowerInit] pcs_1 Found Pr_c [1200]
[5.03023s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs_1:RatedActivePower_Config]
[5.0305s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs_1:RatedActivePower_Config]
[5.03101s  ] [info    ] [HandlePowerInit] pcs_1 Found Qr_c [1100]
[5.03135s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs_1:RatedReactivePower_Config]
[5.03162s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs_1:RatedReactivePower_Config]
[5.03198s  ] [info    ] [HandlePowerInit] pcs_1 Found Sr_c [1350]
[5.03229s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs_1:RatedApparentPower_Config]
[5.03259s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs_1:RatedApparentPower_Config]
[5.03288s  ] [info    ] [HandlePowerInit] pcs_1 Found pfr_c [0.8]
[5.03312s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs_1:RatedPowerFactor_Config]
[5.03334s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs_1:RatedPowerFactor_Config]
[5.0336s   ] [info    ] [HandlePowerInit] Done initializing vars
[5.03388s  ] [info    ] [HandlePowerInit] pcs_1 No priority found in /config or /controls. Setting power priority for pcs_1 to default P P
[5.03417s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [P]
[5.03444s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [P]
[5.03467s  ] [info    ] [HandlePowerInit] Done initializing Priority
[5.03501s  ] [info    ] [HandlePowerInit] Done initializing Ps and Qs
[5.03523s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/limits/pcs_1:MaxPCSReactivePower]
[5.03551s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/limits/pcs_1:MaxPCSReactivePower]
[5.03582s  ] [info    ] [HandlePowerInit] Rated Active/Reactive/Apparent Powers set to 1200/1100/1350
[5.03614s  ] [info    ] [HandlePowerInit] Done initing vars
[5.03639s  ] [info    ] [HandlePowerInit] Done setting max Ps
[5.03677s  ] [info    ] [HandlePowerInit] Rated Power for pcs_1:
[5.03702s  ] [info    ] [HandlePowerInit]        Apparent Power  [1350]
[5.03732s  ] [info    ] [HandlePowerInit]        Reactive Power  [1100]
[5.03756s  ] [info    ] [HandlePowerInit] Max Powers for pcs_1:
[5.03778s  ] [info    ] [HandlePowerInit]        Charge Power    [-1200]
[5.03802s  ] [info    ] [HandlePowerInit]        Discharge Power [1200]
[5.03826s  ] [info    ] [HandlePowerInit] RUNNING RELOAD 2 for pcs_1
[5.03857s  ] [info    ] [HandlePowerInit] Done checking hw and config
[5.03885s  ] [info    ] [HandlePowerInit] pcs_1 Found Pr_c [1200]
[5.03924s  ] [info    ] [HandlePowerInit] pcs_1 Found Qr_c [1100]
[5.03973s  ] [info    ] [HandlePowerInit] pcs_1 Found Sr_c [1350]
[5.03996s  ] [info    ] [HandlePowerInit] pcs_1 Found pfr_c [0.8]
[5.04043s  ] [info    ] [HandlePowerInit] Done initializing vars
[5.04077s  ] [info    ] [HandlePowerInit] pcs_1 No priority found in /config or /controls. Setting power priority for pcs_1 to default P P
[5.04106s  ] [info    ] [HandlePowerInit] Done initializing Priority
[5.04135s  ] [info    ] [HandlePowerInit] Done initializing Ps and Qs
[5.0416s   ] [info    ] [HandlePowerInit] Rated Active/Reactive/Apparent Powers set to 1200/1100/1350
[5.04184s  ] [info    ] [HandlePowerInit] Done initing vars
[5.04213s  ] [info    ] [HandlePowerInit] Done setting max Ps
[5.0431s   ] [info    ] [HandlePowerInit] Rated Power for pcs_1:
[5.04392s  ] [info    ] [HandlePowerInit]        Apparent Power  [1350]
[5.0444s   ] [info    ] [HandlePowerInit]        Reactive Power  [1100]
[5.04481s  ] [info    ] [HandlePowerInit] Max Powers for pcs_1:
[5.04517s  ] [info    ] [HandlePowerInit]        Charge Power    [-1200]
[5.04629s  ] [info    ] [HandlePowerInit]        Discharge Power [1200]
[5.04728s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"CommsOK":	true,
	"DCClosed":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/status/pcs_1:DCVoltage@EnableMaxValCheck"
						}, {
							"uri":	"/status/pcs_1:DCVoltage@EnableMinValCheck"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"note":	"Enables/disables monitoring variables if PCS DC contactors are closed/opened",
		"value":	false
	},
	"GridMode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[]
				}]
		},
		"ifChanged":	true,
		"note1":	"Contains the PCS's current grid mode, which can be one of the following: FollowPQ, FormVF, FormVSG",
		"value":	"INIT"
	},
	"HeartbeatWrite":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"fims":	"set",
							"uri":	"/components/pcs_1:heartbeat_write"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"excludeFromDefaultSched":	true,
		"expression":	"if (({1} >= 59), 0, ({1} + 1))",
		"note":	"Updates and then sends the heartbeat write value",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs_1:HeartbeatWrite"
	},
	"Status":	"INIT",
	"SystemState":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	"Stop",
							"outValue":	false,
							"uri":	"/status/pcs_1:DCClosed"
						}, {
							"inValue":	"Run",
							"outValue":	true,
							"uri":	"/status/pcs_1:DCClosed"
						}, {
							"inValue":	"Fault",
							"outValue":	false,
							"uri":	"/status/pcs_1:DCClosed"
						}, {
							"inValue":	"Standby",
							"outValue":	true,
							"uri":	"/status/pcs_1:DCClosed"
						}, {
							"inValue":	"Stop",
							"outValue":	false,
							"uri":	"/status/pcs_1:IsRunning"
						}, {
							"inValue":	"Run",
							"outValue":	true,
							"uri":	"/status/pcs_1:IsRunning"
						}, {
							"inValue":	"Fault",
							"outValue":	false,
							"uri":	"/status/pcs_1:IsRunning"
						}, {
							"inValue":	"Standby",
							"outValue":	false,
							"uri":	"/status/pcs_1:IsRunning"
						}, {
							"inValue":	"Stop",
							"outValue":	false,
							"uri":	"/status/pcs_1:SystemFault"
						}, {
							"inValue":	"Run",
							"outValue":	false,
							"uri":	"/status/pcs_1:SystemFault"
						}, {
							"inValue":	"Fault",
							"outValue":	true,
							"uri":	"/status/pcs_1:SystemFault"
						}, {
							"inValue":	"Standby",
							"outValue":	false,
							"uri":	"/status/pcs_1:SystemFault"
						}]
				}]
		},
		"ifChanged":	true,
		"note1":	"Contains the PCS's current state, which can be one of the following: Stop, Run, Fault, Standby",
		"note2":	"Updates various PCS status variables depending on this variable's value",
		"value":	"INIT"
	}
}].
[5.04927s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.0496s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.05015s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.05041s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.05078s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.05102s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.05157s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"runOpts_pcs_1":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"SchedItemOpts"
						}]
				}]
		},
		"enabled":	false,
		"note1":	"Sets schedule variables (defined in /sched/pcs_1) to /system/commands:run",
		"note2":	"This allows the ESS Controller to kick off scheduled tasks based on the provided variables",
		"options":	[{
				"aname":	"pcs_1",
				"every":	1,
				"uri":	"/sched/pcs_1:pubAssets_pcs_1",
				"value":	1
			}, {
				"aname":	"pcs_1",
				"every":	0.1,
				"uri":	"/sched/pcs_1:runMonitor_pcs_1",
				"value":	1
			}, {
				"aname":	"pcs_1",
				"every":	1,
				"uri":	"/sched/pcs_1:checkInputs_pcs_1",
				"value":	1
			}, {
				"aname":	"pcs_1",
				"every":	1,
				"uri":	"/sched/pcs_1:updateHeartbeatWrite_pcs_1",
				"value":	1
			}, {
				"aname":	"pcs_1",
				"every":	0.1,
				"uri":	"/sched/pcs_1:handlePowerCmd_pcs_1",
				"value":	1
			}],
		"targav":	"/system/commands:run",
		"value":	false
	}
}].
[5.05278s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"expression":	"{1} != Stop and {1} != Fault",
		"note1":	"Send active power command to PCS",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs_1:SystemState"
	},
	"ActivePowerCmdConvert":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs_1:ActivePowerCmd@triggerCmd"
						}, {
							"uri":	"/controls/pcs_1:ActivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"expression":	"{1}",
		"ifChanged":	false,
		"note":	"Pass kW command to ActivePowerCmd",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs_1:ActivePowerCmdReal"
	},
	"ActivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"expression":	"{1} > 0",
		"note1":	"Send active power ramp rate to PCS",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs_1:ActivePowerRampRateCmd"
	},
	"ActivePowerRampRateCmdConvert":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs_1:ActivePowerRampRateCmd@triggerCmd"
						}, {
							"uri":	"/controls/pcs_1:ActivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"expression":	"{1}",
		"ifChanged":	false,
		"note":	"Pass kW/s command to ActivePowerRampRateCmd",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs_1:ActivePowerRampRate"
	},
	"ActivePowerSetpointEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/pcs_1:active_power_setpoint@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"expression":	"{1} and {2} != Stop and {2} != Fault",
		"note":	"Enable active power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/pcs_1:maint_mode",
		"variable2":	"/status/pcs_1:SystemState"
	},
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"note":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"useExpr":	false,
		"value":	0
	},
	"FrequencySetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"expression":	"{1} >= 55 and {1} <= 65 and {2} == FormVF",
		"note1":	"Send frequency setpoint command to PCS as long as the setpoint is between 55 and 65 Hz and the PCS is in grid-forming (VF)",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	2,
		"useExpr":	true,
		"value":	60,
		"variable1":	"/controls/pcs_1:FrequencySetpoint",
		"variable2":	"/status/pcs_1:GridMode"
	},
	"FrequencySetpointEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/pcs_1:frequency_setpoint@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"expression":	"{1} and {2} == FormVF",
		"note":	"Enable frequency setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/pcs_1:maint_mode",
		"variable2":	"/status/pcs_1:GridMode"
	},
	"GridFollowPQ":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"expression":	"{1} == Stop or {1} == Fault",
		"note1":	"Grid-following mode command to send to PCS if the PCS is in Stop or Fault",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"sendCmdTimeout":	3,
		"useExpr":	true,
		"value":	1,
		"variable1":	"/status/pcs_1:SystemState"
	},
	"GridFollowPQEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/pcs_1:grid_follow_pq@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"expression":	"{1} and ({2} == Stop or {2} == Fault) and {3} != FollowPQ",
		"note":	"Enable grid-following mode UI control if the PCS is in Stop or Fault, the PCS is not in grid-following, and the PCS is in maintenance mode",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/pcs_1:maint_mode",
		"variable2":	"/status/pcs_1:SystemState",
		"variable3":	"/status/pcs_1:GridMode"
	},
	"GridFormVF":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"expression":	"{1} == Stop or {1} == Fault",
		"note1":	"Grid-forming mode (VF) command to send to PCS if the PCS is in Stop or Fault",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"sendCmdTimeout":	3,
		"useExpr":	true,
		"value":	2,
		"variable1":	"/status/pcs_1:SystemState"
	},
	"GridFormVFEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/pcs_1:grid_form_vf@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"expression":	"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ",
		"note":	"Enable grid-forming mode (VF) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/pcs_1:maint_mode",
		"variable2":	"/status/pcs_1:SystemState",
		"variable3":	"/status/pcs_1:GridMode"
	},
	"GridFormVSG":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"expression":	"{1} == Stop or {1} == Fault",
		"note1":	"Grid-forming mode (VSG) command to send to PCS if the PCS is in Stop or Fault",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"sendCmdTimeout":	3,
		"useExpr":	true,
		"value":	3,
		"variable1":	"/status/pcs_1:SystemState"
	},
	"GridFormVSGEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/pcs_1:grid_form_vsg@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"expression":	"{1} and ({2} == Stop or {2} == Fault) and {3} == FollowPQ",
		"note":	"Enable grid-forming mode (VSG) UI control if the PCS is in Stop or Fault, the PCS is in grid-following, and the PCS is in maintenance mode",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/pcs_1:maint_mode",
		"variable2":	"/status/pcs_1:SystemState",
		"variable3":	"/status/pcs_1:GridMode"
	},
	"ReactivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"expression":	"{1} != Stop and {1} != Fault",
		"note1":	"Send reactive power command to PCS",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs_1:SystemState"
	},
	"ReactivePowerCmdConvert":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs_1:ReactivePowerCmd@triggerCmd"
						}, {
							"uri":	"/controls/pcs_1:ReactivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"expression":	"{1}",
		"ifChanged":	false,
		"note":	"Pass kVAR command to ReactivePowerCmd",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs_1:ReactivePowerCmdReal"
	},
	"ReactivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"expression":	"{1} > 0",
		"note1":	"Send reactive power ramp rate to PCS",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs_1:ReactivePowerRampRateCmd"
	},
	"ReactivePowerRampRateCmdConvert":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs_1:ReactivePowerRampRateCmd@triggerCmd"
						}, {
							"uri":	"/controls/pcs_1:ReactivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"expression":	"{1}",
		"ifChanged":	false,
		"note":	"Pass kVAR/s command to ReactivePowerRampRateCmd",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs_1:ReactivePowerRampRate"
	},
	"ReactivePowerSetpointEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/pcs_1:reactive_power_setpoint@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"expression":	"{1} and {2} != Stop and {2} != Fault",
		"note":	"Enable reactive power setpoint UI control if the PCS is not in Stop and Fault and the PCS is in maintenance mode",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/pcs_1:maint_mode",
		"variable2":	"/status/pcs_1:SystemState"
	},
	"Standby":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"expression":	"{1} and ({2} == Stop or {2} == Run) and {3}",
		"note1":	"Standby command to send to PCS if the PCS is in Stop or Run, the BMS DC contactors are closed, and the BMS current is within an acceptable level",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	3,
		"sendCmdTimeout":	3,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1:CurrentBeforeStopIsOK",
		"variable2":	"/status/pcs_1:SystemState",
		"variable3":	"/status/bms_1:DCClosed"
	},
	"StandbyEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/pcs_1:standby@enabled"
						}, {
							"uri":	"/status/pcs_1:StandbyEnabled"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"expression":	"{1} and {2} and ({3} == Stop or {3} == Run)",
		"note":	"Enable Standby UI control if BMS DC Contactors are closed, the PCS is in Stop or Run, and the PCS is in maintenance mode",
		"numVars":	3,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms_1:DCClosed",
		"variable2":	"/assets/pcs/pcs_1:maint_mode",
		"variable3":	"/status/pcs_1:SystemState"
	},
	"Start":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"expression":	"({1} == Stop or {1} == Standby) and {2} and not {3}",
		"note1":	"Start command to send to PCS if the PCS is in Stop or Standby, the BMS DC contactors are closed, and the PCS is not faulted",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	3,
		"sendCmdTimeout":	3,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs_1:SystemState",
		"variable2":	"/status/bms_1:DCClosed",
		"variable3":	"/status/pcs_1:IsFaulted"
	},
	"StartEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/pcs_1:start@enabled"
						}, {
							"uri":	"/status/pcs_1:StartEnabled"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"expression":	"{1} and {2} and ({3} == Stop or {3} == Standby) and not {4}",
		"note":	"Enable Start UI control if BMS DC Contactors are closed, the PCS is in Stop or Standby, the PCS is not faulted, and the PCS is in maintenance mode",
		"numVars":	4,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/bms_1:DCClosed",
		"variable2":	"/assets/pcs/pcs_1:maint_mode",
		"variable3":	"/status/pcs_1:SystemState",
		"variable4":	"/status/pcs_1:IsFaulted"
	},
	"Stop":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"checkCmdTimeout":	3,
		"expression":	"{1} and ({2} == Standby or {2} == Run) and {3}",
		"note1":	"Stop command to send to PCS if the PCS is in Standby or Run, the BMS DC contactors are closed, and the BMS current is within an acceptable level",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	3,
		"sendCmdTimeout":	3,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/bms_1:CurrentBeforeStopIsOK",
		"variable2":	"/status/pcs_1:SystemState",
		"variable3":	"/status/bms_1:DCClosed"
	},
	"StopEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/pcs_1:stop@enabled"
						}, {
							"uri":	"/status/pcs_1:StopEnabled"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"expression":	"{1} and {2} != Stop",
		"note":	"Enable Stop UI control if the PCS is not in Stop and the PCS is in maintenance mode",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/pcs_1:maint_mode",
		"variable2":	"/status/pcs_1:SystemState"
	},
	"VerifyActivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs_1:ActivePowerCmd",
		"variable2":	"/status/pcs_1:ActivePowerSetpointFeedback",
		"variable3":	"/config/pcs_1:PowerSetpointMargin"
	},
	"VerifyActivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs_1:ActivePowerRampRateCmd",
		"variable2":	"/status/pcs_1:ActivePowerRampRateFeedback",
		"variable3":	"/config/pcs_1:RampRateMargin"
	},
	"VerifyFrequencySetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs_1:FrequencySetpoint",
		"variable2":	"/status/pcs_1:FrequencySetpointFeedback",
		"variable3":	"/config/pcs_1:FrequencySetpointMargin"
	},
	"VerifyGridFollowPQ":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"{1} == GridFollowPQ",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs_1:GridMode"
	},
	"VerifyGridFormVF":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"{1} == GridFormVF",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs_1:GridMode"
	},
	"VerifyGridFormVSG":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"{1} == GridFormVSG",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs_1:GridMode"
	},
	"VerifyReactivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs_1:ReactivePowerCmd",
		"variable2":	"/status/pcs_1:ReactivePowerSetpointFeedback",
		"variable3":	"/config/pcs_1:PowerSetpointMargin"
	},
	"VerifyReactivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs_1:ReactivePowerRampRateCmd",
		"variable2":	"/status/pcs_1:ReactivePowerRampRateFeedback",
		"variable3":	"/config/pcs_1:RampRateMargin"
	},
	"VerifyStandby":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"{1} == Standby",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs_1:SystemState"
	},
	"VerifyStart":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"{1} == Run",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs_1:SystemState"
	},
	"VerifyStop":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"{1} == Stop or {1} == Fault",
		"numVars":	1,
		"sendCmdTimeout":	10,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs_1:SystemState"
	},
	"VerifyVoltageSetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"enableAlert":	false,
		"expression":	"({1} - {3}) <= {2} and ({1} + {3}) >= {2}",
		"numVars":	3,
		"sendCmdTimeout":	5,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/controls/pcs_1:VoltageSetpoint",
		"variable2":	"/status/pcs_1:VoltageSetpointFeedback",
		"variable3":	"/config/pcs_1:VoltageSetpointMargin"
	},
	"VoltageSetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"HandleCmd"
						}]
				}]
		},
		"expression":	"{1} >= 460 and {1} <= 500 and {2} == FormVF",
		"note1":	"Send voltage setpoint command to PCS as long as the setpoint is between 460 and 500 V and the PCS is in grid-forming (VF)",
		"note2":	"TODO: If needed, add <component_uri>:<name> to cmdVar",
		"numVars":	2,
		"useExpr":	true,
		"value":	480,
		"variable1":	"/controls/pcs_1:VoltageSetpoint",
		"variable2":	"/status/pcs_1:GridMode"
	},
	"VoltageSetpointEnable":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/assets/pcs/pcs_1:voltage_setpoint@enabled"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"expression":	"{1} and {2} == FormVF",
		"note":	"Enable voltage setpoint UI control if the PCS is in maintenance mode and grid-forming (VF)",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/assets/pcs/pcs_1:maint_mode",
		"variable2":	"/status/pcs_1:GridMode"
	}
}].
[5.05416s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_ActivePowerCmd]
[5.05447s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_ActivePowerCmd]
[5.05469s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:ActivePowerCmd]  reload 0
[5.05498s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:ActivePowerCmd]
[5.05533s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:ActivePowerCmd] to amap in asset [pcs_1]
[5.05559s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:ActivePowerCmd]
[5.05594s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:ActivePowerCmd]
[5.0564s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_ActivePowerRampRateCmd]
[5.05668s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_ActivePowerRampRateCmd]
[5.05747s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:ActivePowerRampRateCmd]  reload 0
[5.05769s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:ActivePowerRampRateCmd]
[5.05793s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:ActivePowerRampRateCmd] to amap in asset [pcs_1]
[5.05818s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:ActivePowerRampRateCmd]
[5.0584s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:ActivePowerRampRateCmd]
[5.05884s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_ClearFaults]
[5.05915s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_ClearFaults]
[5.05941s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:ClearFaults]  reload 0
[5.05967s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:ClearFaults]
[5.05998s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:ClearFaults] to amap in asset [pcs_1]
[5.06027s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:ClearFaults]
[5.06058s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:ClearFaults]
[5.06109s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_FrequencySetpoint]
[5.06144s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_FrequencySetpoint]
[5.06176s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:FrequencySetpoint]  reload 0
[5.06209s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:FrequencySetpoint]
[5.06241s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:FrequencySetpoint] to amap in asset [pcs_1]
[5.06274s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:FrequencySetpoint]
[5.06302s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:FrequencySetpoint]
[5.06363s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_GridFollowPQ]
[5.06391s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_GridFollowPQ]
[5.06417s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:GridFollowPQ]  reload 0
[5.06441s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:GridFollowPQ]
[5.06465s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:GridFollowPQ] to amap in asset [pcs_1]
[5.065s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:GridFollowPQ]
[5.06525s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:GridFollowPQ]
[5.06568s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_GridFormVF]
[5.06645s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_GridFormVF]
[5.06674s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:GridFormVF]  reload 0
[5.06697s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:GridFormVF]
[5.06723s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:GridFormVF] to amap in asset [pcs_1]
[5.06755s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:GridFormVF]
[5.06778s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:GridFormVF]
[5.06817s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_GridFormVSG]
[5.06841s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_GridFormVSG]
[5.06873s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:GridFormVSG]  reload 0
[5.06896s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:GridFormVSG]
[5.06924s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:GridFormVSG] to amap in asset [pcs_1]
[5.06961s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:GridFormVSG]
[5.06992s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:GridFormVSG]
[5.07034s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_ReactivePowerCmd]
[5.07057s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_ReactivePowerCmd]
[5.07082s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:ReactivePowerCmd]  reload 0
[5.07198s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:ReactivePowerCmd]
[5.07238s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:ReactivePowerCmd] to amap in asset [pcs_1]
[5.07273s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:ReactivePowerCmd]
[5.0731s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:ReactivePowerCmd]
[5.07401s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_ReactivePowerRampRateCmd]
[5.07463s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_ReactivePowerRampRateCmd]
[5.07557s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:ReactivePowerRampRateCmd]  reload 0
[5.07621s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:ReactivePowerRampRateCmd]
[5.07662s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:ReactivePowerRampRateCmd] to amap in asset [pcs_1]
[5.07702s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:ReactivePowerRampRateCmd]
[5.07738s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:ReactivePowerRampRateCmd]
[5.07809s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_Standby]
[5.07855s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_Standby]
[5.07988s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:Standby]  reload 0
[5.08184s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:Standby]
[5.08262s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:Standby] to amap in asset [pcs_1]
[5.08309s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:Standby]
[5.08336s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:Standby]
[5.08394s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_Start]
[5.08425s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_Start]
[5.08458s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:Start]  reload 0
[5.08485s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:Start]
[5.08511s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:Start] to amap in asset [pcs_1]
[5.08537s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:Start]
[5.0856s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:Start]
[5.08617s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_Stop]
[5.08694s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_Stop]
[5.08748s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:Stop]  reload 0
[5.08787s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:Stop]
[5.08846s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:Stop] to amap in asset [pcs_1]
[5.08881s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:Stop]
[5.08911s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:Stop]
[5.08963s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyActivePowerCmd]
[5.09002s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyActivePowerCmd]
[5.09043s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:VerifyActivePowerCmd]  reload 0
[5.09093s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:VerifyActivePowerCmd]
[5.09142s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:VerifyActivePowerCmd] to amap in asset [pcs_1]
[5.09183s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:VerifyActivePowerCmd]
[5.09217s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:VerifyActivePowerCmd]
[5.09266s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyActivePowerRampRateCmd]
[5.09293s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyActivePowerRampRateCmd]
[5.09317s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:VerifyActivePowerRampRateCmd]  reload 0
[5.09341s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:VerifyActivePowerRampRateCmd]
[5.09375s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:VerifyActivePowerRampRateCmd] to amap in asset [pcs_1]
[5.09403s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:VerifyActivePowerRampRateCmd]
[5.09427s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:VerifyActivePowerRampRateCmd]
[5.09464s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyFrequencySetpoint]
[5.09489s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyFrequencySetpoint]
[5.09516s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:VerifyFrequencySetpoint]  reload 0
[5.09551s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:VerifyFrequencySetpoint]
[5.09594s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:VerifyFrequencySetpoint] to amap in asset [pcs_1]
[5.09621s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:VerifyFrequencySetpoint]
[5.09648s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:VerifyFrequencySetpoint]
[5.09702s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyGridFollowPQ]
[5.09731s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyGridFollowPQ]
[5.09761s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:VerifyGridFollowPQ]  reload 0
[5.09783s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:VerifyGridFollowPQ]
[5.0981s   ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:VerifyGridFollowPQ] to amap in asset [pcs_1]
[5.09834s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:VerifyGridFollowPQ]
[5.09857s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:VerifyGridFollowPQ]
[5.09926s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyGridFormVF]
[5.09955s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyGridFormVF]
[5.09984s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:VerifyGridFormVF]  reload 0
[5.10008s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:VerifyGridFormVF]
[5.10039s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:VerifyGridFormVF] to amap in asset [pcs_1]
[5.10067s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:VerifyGridFormVF]
[5.10098s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:VerifyGridFormVF]
[5.10212s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyGridFormVSG]
[5.10256s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyGridFormVSG]
[5.10285s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:VerifyGridFormVSG]  reload 0
[5.10313s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:VerifyGridFormVSG]
[5.10352s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:VerifyGridFormVSG] to amap in asset [pcs_1]
[5.10382s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:VerifyGridFormVSG]
[5.10409s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:VerifyGridFormVSG]
[5.1045s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyReactivePowerCmd]
[5.10476s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyReactivePowerCmd]
[5.105s    ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:VerifyReactivePowerCmd]  reload 0
[5.10521s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:VerifyReactivePowerCmd]
[5.10545s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:VerifyReactivePowerCmd] to amap in asset [pcs_1]
[5.10569s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:VerifyReactivePowerCmd]
[5.10592s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:VerifyReactivePowerCmd]
[5.10633s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyReactivePowerRampRateCmd]
[5.10656s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyReactivePowerRampRateCmd]
[5.1073s   ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:VerifyReactivePowerRampRateCmd]  reload 0
[5.10761s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:VerifyReactivePowerRampRateCmd]
[5.10797s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:VerifyReactivePowerRampRateCmd] to amap in asset [pcs_1]
[5.10825s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:VerifyReactivePowerRampRateCmd]
[5.10916s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:VerifyReactivePowerRampRateCmd]
[5.10984s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyStandby]
[5.11054s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyStandby]
[5.11107s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:VerifyStandby]  reload 0
[5.11137s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:VerifyStandby]
[5.11197s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:VerifyStandby] to amap in asset [pcs_1]
[5.11246s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:VerifyStandby]
[5.11306s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:VerifyStandby]
[5.11379s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyStart]
[5.11416s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyStart]
[5.11452s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:VerifyStart]  reload 0
[5.11489s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:VerifyStart]
[5.11522s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:VerifyStart] to amap in asset [pcs_1]
[5.11555s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:VerifyStart]
[5.12172s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:VerifyStart]
[5.1228s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyStop]
[5.12321s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyStop]
[5.1243s   ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:VerifyStop]  reload 0
[5.12456s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:VerifyStop]
[5.12481s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:VerifyStop] to amap in asset [pcs_1]
[5.12538s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:VerifyStop]
[5.12806s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:VerifyStop]
[5.1288s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyVoltageSetpoint]
[5.12932s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_VerifyVoltageSetpoint]
[5.12992s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:VerifyVoltageSetpoint]  reload 0
[5.13033s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:VerifyVoltageSetpoint]
[5.1307s   ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:VerifyVoltageSetpoint] to amap in asset [pcs_1]
[5.13139s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:VerifyVoltageSetpoint]
[5.13184s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:VerifyVoltageSetpoint]
[5.13239s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HandleCmd_VoltageSetpoint]
[5.13276s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HandleCmd_VoltageSetpoint]
[5.13308s  ] [info    ] [HandleCmd      ] reload first run [pcs_1] [/controls/pcs_1:VoltageSetpoint]  reload 0
[5.13336s  ] [info    ] [setupCmdParams ] Setting up params for [/controls/pcs_1:VoltageSetpoint]
[5.13369s  ] [info    ] [HandleCmd      ] Adding [/controls/pcs_1:VoltageSetpoint] to amap in asset [pcs_1]
[5.13403s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/controls/pcs_1:VoltageSetpoint]
[5.13434s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/controls/pcs_1:VoltageSetpoint]
[5.13507s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/controls/pcs_1:ActivePowerCmd":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:ActivePowerCmdConvert":	{
		"amap":	"pcs_1",
		"func":	"CalculateVar"
	},
	"/controls/pcs_1:ActivePowerRampRateCmd":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:ActivePowerRampRateCmdConvert":	{
		"amap":	"pcs_1",
		"func":	"CalculateVar"
	},
	"/controls/pcs_1:ActivePowerSetpointEnable":	{
		"amap":	"pcs_1",
		"func":	"CalculateVar"
	},
	"/controls/pcs_1:ClearFaults":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:FrequencySetpoint":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:FrequencySetpointEnable":	{
		"amap":	"pcs_1",
		"func":	"CalculateVar"
	},
	"/controls/pcs_1:GridFollowPQ":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:GridFollowPQEnable":	{
		"amap":	"pcs_1",
		"func":	"CalculateVar"
	},
	"/controls/pcs_1:GridFormVF":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:GridFormVFEnable":	{
		"amap":	"pcs_1",
		"func":	"CalculateVar"
	},
	"/controls/pcs_1:GridFormVSG":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:GridFormVSGEnable":	{
		"amap":	"pcs_1",
		"func":	"CalculateVar"
	},
	"/controls/pcs_1:ReactivePowerCmd":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:ReactivePowerCmdConvert":	{
		"amap":	"pcs_1",
		"func":	"CalculateVar"
	},
	"/controls/pcs_1:ReactivePowerRampRateCmd":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:ReactivePowerRampRateCmdConvert":	{
		"amap":	"pcs_1",
		"func":	"CalculateVar"
	},
	"/controls/pcs_1:ReactivePowerSetpointEnable":	{
		"amap":	"pcs_1",
		"func":	"CalculateVar"
	},
	"/controls/pcs_1:Standby":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:StandbyEnable":	{
		"amap":	"pcs_1",
		"func":	"CalculateVar"
	},
	"/controls/pcs_1:Start":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:StartEnable":	{
		"amap":	"pcs_1",
		"func":	"CalculateVar"
	},
	"/controls/pcs_1:Stop":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:StopEnable":	{
		"amap":	"pcs_1",
		"func":	"CalculateVar"
	},
	"/controls/pcs_1:VerifyActivePowerCmd":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:VerifyActivePowerRampRateCmd":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:VerifyFrequencySetpoint":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:VerifyGridFollowPQ":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:VerifyGridFormVF":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:VerifyGridFormVSG":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:VerifyReactivePowerCmd":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:VerifyReactivePowerRampRateCmd":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:VerifyStandby":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:VerifyStart":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:VerifyStop":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:VerifyVoltageSetpoint":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:VoltageSetpoint":	{
		"amap":	"pcs_1",
		"func":	"HandleCmd"
	},
	"/controls/pcs_1:VoltageSetpointEnable":	{
		"amap":	"pcs_1",
		"func":	"CalculateVar"
	}
}].
[5.13676s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs_1:ActivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs_1:ActivePowerCmd",
		"value":	false
	},
	"ActivePowerRampRateCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs_1:ActivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs_1:ActivePowerRampRateCmd",
		"value":	false
	},
	"ClearFaultsSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs_1:ClearFaults"
						}, {
							"outValue":	"Clear",
							"uri":	"/faults/pcs_1:clear_faults"
						}, {
							"outValue":	"Clear",
							"uri":	"/alarms/pcs_1:clear_alarms"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"When this variable is set, /faults/pcs_1:clear_faults and /alarms/pcs_1:clear_alarms will be set to Clear",
		"value":	false
	},
	"FrequencySetpointSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs_1:FrequencySetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs_1:FrequencySetpoint",
		"value":	false
	},
	"GridFollowPQSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs_1:VerifyGridFollowPQ@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs_1:VerifyGridFollowPQ"
						}, {
							"inValue":	false,
							"outValue":	"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs_1:GridFollowPQ"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"If the grid-following mode command has been successfully sent to the PCS, verify that the PCS is now in grid-following. Otherwise, send an alarm",
		"value":	false
	},
	"GridFormVFSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs_1:VerifyGridFormVF@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs_1:VerifyGridFormVF"
						}, {
							"inValue":	false,
							"outValue":	"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs_1:GridFormVF"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"If the grid-forming mode (VF) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VF). Otherwise, send an alarm",
		"value":	false
	},
	"GridFormVSGSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs_1:VerifyGridFormVSG@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs_1:VerifyGridFormVSG"
						}, {
							"inValue":	false,
							"outValue":	"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs_1:GridFormVSG"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"If the grid-forming mode (VSG) command has been successfully sent to the PCS, verify that the PCS is now in grid-forming (VSG). Otherwise, send an alarm",
		"value":	false
	},
	"ReactivePowerCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs_1:ReactivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs_1:ReactivePowerCmd",
		"value":	false
	},
	"ReactivePowerRampRateCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs_1:ReactivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs_1:ReactivePowerRampRateCmd",
		"value":	false
	},
	"StandbySuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs_1:VerifyStandby@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs_1:VerifyStandby"
						}, {
							"inValue":	false,
							"outValue":	"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs_1:Standby"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"If the standby command has been successfully sent to the PCS, verify that the PCS is now on standby. Otherwise, send an alarm",
		"value":	false
	},
	"StartSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs_1:VerifyStart@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs_1:VerifyStart"
						}, {
							"inValue":	false,
							"outValue":	"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs_1:Start"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"If the start command has been successfully sent to the PCS, verify that the PCS is now running. Otherwise, send an alarm",
		"value":	false
	},
	"StopSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs_1:VerifyStop@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs_1:VerifyStop"
						}, {
							"inValue":	false,
							"outValue":	"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs_1:Stop"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"If the stop command has been successfully sent to the PCS, verify that the PCS has stopped. Otherwise, send an alarm",
		"value":	false
	},
	"VerifyActivePowerCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs_1:VerifyActivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual active power setpoint does not match or is not near the active power setpoint sent, send an alarm",
		"value":	false
	},
	"VerifyActivePowerRampRateCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs_1:VerifyActivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual active power ramp rate does not match or is not near the active power ramp rate sent, send an alarm",
		"value":	false
	},
	"VerifyFrequencySetpointSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs_1:VerifyFrequencySetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual frequency setpoint does not match or is not near the frequency setpoint sent, send an alarm",
		"value":	false
	},
	"VerifyGridFollowPQSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs_1:VerifyGridFollowPQ"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not in grid-following after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyGridFormVFSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs_1:VerifyGridFormVF"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not in grid-forming (VF) after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyGridFormVSGSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs_1:VerifyGridFormVSG"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not in grid-forming (VSG) after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyReactivePowerCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs_1:VerifyReactivePowerCmd"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual reactive power setpoint does not match or is not near the reactive power setpoint sent, send an alarm",
		"value":	false
	},
	"VerifyReactivePowerRampRateCmdSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs_1:VerifyReactivePowerRampRateCmd"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual reactive power ramp rate does not match or is not near the reactive power ramp rate sent, send an alarm",
		"value":	false
	},
	"VerifyStandbySuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs_1:VerifyStandby"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not on standby after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyStartSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs_1:VerifyStart"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not running after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyStopSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs_1:VerifyStop"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"If the PCS is not stopped after an elasped time, send an alarm",
		"value":	false
	},
	"VerifyVoltageSetpointSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout",
							"uri":	"/alarms/pcs_1:VerifyVoltageSetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"If the PCS's actual voltage setpoint does not match or is not near the voltage setpoint sent, send an alarm",
		"value":	false
	},
	"VoltageSetpointSuccess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	false,
							"outValue":	"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"uri":	"/alarms/pcs_1:VoltageSetpoint"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note":	"Used to validate /controls/pcs_1:VoltageSetpoint",
		"value":	false
	}
}].
[5.14006s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 0 - PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[0]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending active power command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"ActivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 1 - PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[1]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending active power ramp rate command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"ClearFaults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 2 - PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[2]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending clear faults command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"FrequencySetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 3 - PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[3]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending frequency setpoint command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"GridFollowPQ":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 4 - PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[4]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending grid-following mode command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"GridFormVF":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 5 - PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[5]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending grid-forming mode (VF) command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"GridFormVSG":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 6 - PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[6]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending grid-forming mode (VSG) command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"HeartbeatRead":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"type":	"alarm",
		"value":	"Normal"
	},
	"MonitorVarAlarm":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"ActivePower_limit_max",
							"note":	"Bit 0 - PCS ActivePower - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_monitor_alarms[0]"
						}, {
							"inValue":	"DCVoltage_limit_max",
							"note":	"Bit 1 - PCS DCVoltage - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_monitor_alarms[1]"
						}, {
							"inValue":	"DCVoltage_limit_min",
							"note":	"Bit 2 - PCS DCVoltage - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_monitor_alarms[2]"
						}, {
							"inValue":	"HeartbeatRead_state",
							"outValue":	"PCS Communication Failure",
							"uri":	"/alarms/pcs_1:HeartbeatRead"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported alarm from any monitoring variable",
		"note2":	"Useful for reporting alarm states to an external management system (e.g. Site Controller) or modifying the alarm message before it is reported on the UI",
		"value":	"Normal"
	},
	"ReactivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 7 - PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[7]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending reactive power command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"ReactivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 8 - PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[8]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending reactive power ramp rate command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"Standby":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 9 - PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[9]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending standby command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"Start":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 10 - PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[10]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending start command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"Stop":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 11 - PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[11]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending stop command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyActivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 12 - PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[12]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual active power setpoint after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyActivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 13 - PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[13]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual active power ramp rate after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyFrequencySetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 14 - PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[14]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual frequency setpoint after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyGridFollowPQ":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 15 - PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[15]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to transition to grid-following",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyGridFormVF":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 16 - PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[16]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VF)",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyGridFormVSG":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 17 - PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[17]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to transition to grid-forming (VSG)",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyReactivePowerCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 18 - PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[18]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual reactive power setpoint after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyReactivePowerRampRateCmd":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 19 - PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[19]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual reactive power ramp rate after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyStandby":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 20 - PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[20]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to transition to standby",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyStart":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 21 - PCS VerifyStart - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[21]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to start",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyStop":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 22 - PCS VerifyStop - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[22]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS failed to stop",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VerifyVoltageSetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout",
							"note":	"Bit 23 - PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[23]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if the PCS's actual voltage setpoint after sending the command is not expected",
		"type":	"alarm",
		"value":	"Normal"
	},
	"VoltageSetpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}, {
					"remap":	[{
							"inValue":	"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"note":	"Bit 24 - PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms[24]"
						}]
				}]
		},
		"enabled":	true,
		"note":	"Alarm variable that is triggered if sending voltage setpoint command is unsuccessful",
		"type":	"alarm",
		"value":	"Normal"
	},
	"clear_alarms":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all alarm variables (defined in /alarms/pcs_1) will be reset to the normal state (defined in /config/pcs_1:NoAlarmMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"numVars":	3,
		"type":	"alarm",
		"value":	"Normal",
		"variable1":	"ActivePower",
		"variable2":	"DCVoltage",
		"variable3":	"HeartbeatRead"
	}
}].
[5.14193s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.14246s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.14279s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs_1:FaultDestination]
[5.14309s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs_1:FaultDestination]
[5.14345s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs_1:NoFaultMsg]
[5.14373s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs_1:NoFaultMsg]
[5.1441s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:FaultCnt]
[5.15497s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:FaultCnt]
[5.1556s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs_1:AlarmDestination]
[5.15616s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs_1:AlarmDestination]
[5.15664s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/config/pcs_1:NoAlarmMsg]
[5.15739s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/config/pcs_1:NoAlarmMsg]
[5.15783s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:AlarmCnt]
[5.15821s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:AlarmCnt]
[5.15882s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.15919s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.16033s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.16119s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.16198s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.1625s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.16332s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.1638s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.16426s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.16461s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.16501s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.16534s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.16598s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.16629s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.16718s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.16754s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.16803s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.16837s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.16887s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.16914s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.16952s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.16999s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.1704s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.17067s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.17109s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.1714s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.17183s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.17221s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.17326s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.1736s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.174s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.17426s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.17459s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.17489s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.17522s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.17582s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.17616s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.1764s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.17669s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.17692s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.17723s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.17747s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.17789s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.17817s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.1786s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.17888s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.17917s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.1794s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.17982s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.18019s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.1806s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.18101s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.18139s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.18166s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.18225s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"HeartbeatRead":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"type":	"fault",
		"value":	"Normal"
	},
	"MonitorVarFault":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"ActivePower_limit_max",
							"note":	"Bit 0 - PCS ActivePower - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_monitor_faults[0]"
						}, {
							"inValue":	"DCVoltage_limit_max",
							"note":	"Bit 1 - PCS DCVoltage - Max Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_monitor_faults[1]"
						}, {
							"inValue":	"DCVoltage_limit_min",
							"note":	"Bit 2 - PCS DCVoltage - Min Threshold Exceeded",
							"outValue":	true,
							"uri":	"/site/ess:pcs_pcs_1_monitor_faults[2]"
						}, {
							"inValue":	"HeartbeatRead_state",
							"outValue":	"PCS Communication Failure",
							"uri":	"/faults/pcs_1:HeartbeatRead"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Contains last recently reported fault from any monitoring variable",
		"note2":	"Useful for reporting fault states to an external management system (e.g. Site Controller) or modifying the fault message before it is reported on the UI",
		"value":	"Normal"
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"process_sys_alarm"
						}]
				}]
		},
		"enabled":	true,
		"note1":	"When this variable is set to Clear, all fault variables (defined in /faults/pcs_1) will be reset to the normal state (defined in /config/pcs_1:NoFaultMsg)",
		"note2":	"Also, all monitoring variables (defined in variable) will have their alarm/fault states reset",
		"numVars":	3,
		"type":	"fault",
		"value":	"Normal",
		"variable1":	"ActivePower",
		"variable2":	"DCVoltage",
		"variable3":	"HeartbeatRead"
	}
}].
[5.18264s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.18291s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.18342s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.18364s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.18391s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.18417s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.18468s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"/status/pcs_1:ActivePower":	{
		"amap":	"pcs_1",
		"func":	"CheckMonitorVar"
	},
	"/status/pcs_1:DCVoltage":	{
		"amap":	"pcs_1",
		"func":	"CheckMonitorVar"
	},
	"/status/pcs_1:HeartbeatRead":	{
		"amap":	"pcs_1",
		"func":	"CheckMonitorVar"
	},
	"/status/pcs_1:IsAlarming":	{
		"amap":	"pcs_1",
		"func":	"CalculateVar"
	},
	"/status/pcs_1:IsFaulted":	{
		"amap":	"pcs_1",
		"func":	"CalculateVar"
	},
	"/status/pcs_1:TotalAlarmCnt":	{
		"amap":	"pcs_1",
		"func":	"CalculateVar"
	},
	"/status/pcs_1:TotalFaultCnt":	{
		"amap":	"pcs_1",
		"func":	"CalculateVar"
	}
}].
[5.18514s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ActivePower":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	true,
		"MaxAlarmThreshold":	3510,
		"MaxAlarmTimeout":	1,
		"MaxFaultThreshold":	3525,
		"MaxFaultTimeout":	1.5,
		"MaxRecoverTimeout":	1.4,
		"MaxResetValue":	3510,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over active power conditions",
		"value":	0
	},
	"AlarmCnt":	0,
	"ClearFaultsDone":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	0,
							"uri":	"/site/ess:pcs_pcs_1_monitor_alarms"
						}, {
							"outValue":	0,
							"uri":	"/site/ess:pcs_pcs_1_monitor_faults"
						}, {
							"outValue":	0,
							"uri":	"/site/ess:pcs_pcs_1_control_alarms"
						}]
				}]
		},
		"ifChanged":	false,
		"note":	"When this variable is set, the alarm/fault bitfields will be set to 0 to clear all bits",
		"value":	false
	},
	"DCVoltage":	{
		"EnableFaultCheck":	true,
		"EnableMaxValCheck":	false,
		"EnableMinValCheck":	false,
		"MaxAlarmThreshold":	3000,
		"MaxAlarmTimeout":	0,
		"MaxFaultThreshold":	4000,
		"MaxFaultTimeout":	0,
		"MaxRecoverTimeout":	0,
		"MaxResetValue":	2000,
		"MinAlarmThreshold":	1200,
		"MinAlarmTimeout":	0,
		"MinFaultThreshold":	1100,
		"MinFaultTimeout":	1,
		"MinRecoverTimeout":	1,
		"MinResetValue":	1140,
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault for over/under DC voltage conditions",
		"value":	0
	},
	"FaultCnt":	0,
	"FaultShutdown":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/status/pcs:FaultShutdown"
						}]
				}]
		},
		"ifChanged":	true,
		"note":	"When the PCS instance faults, the fault shutdown event will be propagated to its parent",
		"value":	false
	},
	"HeartbeatRead":	{
		"AlarmTimeout":	10,
		"EnableAlert":	false,
		"EnableCommsCheck":	false,
		"EnableStateCheck":	false,
		"FaultTimeout":	15,
		"RecoverTimeout":	0.1,
		"Type":	"int",
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"CheckMonitorVar"
						}]
				}]
		},
		"note":	"Also a monitoring variable that reports an alarm/fault if ESS Controller loses communications with PCS",
		"value":	0
	},
	"IsAlarming":	{
		"enable":	"/config/pcs_1:enable",
		"expression":	"{1} > 0",
		"numVars":	1,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/pcs_1:TotalAlarmCnt"
	},
	"IsFaulted":	{
		"enable":	"/config/pcs_1:enable",
		"expression":	"{1} or {2} > 0",
		"numVars":	2,
		"useExpr":	true,
		"value":	false,
		"variable1":	"/status/pcs_1:SystemFault",
		"variable2":	"/status/pcs_1:TotalFaultCnt"
	},
	"SystemFault":	false,
	"TotalAlarmCnt":	{
		"enable":	"/config/pcs_1:enable",
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs_1:AlarmCnt"
	},
	"TotalFaultCnt":	{
		"enable":	"/config/pcs_1:enable",
		"expression":	"{1}",
		"numVars":	1,
		"useExpr":	true,
		"value":	0,
		"variable1":	"/status/pcs_1:FaultCnt"
	}
}].
[5.18551s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:ActivePower_reload]
[5.18579s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:ActivePower_reload]
[5.18613s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/alarms/pcs_1:MonitorVarAlarm]
[5.18636s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/alarms/pcs_1:MonitorVarAlarm]
[5.18659s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/faults/pcs_1:MonitorVarFault]
[5.18679s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/faults/pcs_1:MonitorVarFault]
[5.18707s  ] [info    ] [CheckMonitorVar] Fault Destination for pcs_1 with assetVar /status/pcs_1:ActivePower is /assets/pcs/pcs_1:faults
[5.18732s  ] [info    ] [CheckMonitorVar] Alarm Destination for pcs_1 with assetVar /status/pcs_1:ActivePower is /assets/pcs/pcs_1:alarms
[5.18753s  ] [info    ] [CheckMonitorVar] Not set up for [ActivePower] reloadStr [ActivePower_reload]
[5.18818s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:DCVoltage_reload]
[5.18844s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:DCVoltage_reload]
[5.18867s  ] [info    ] [CheckMonitorVar] Fault Destination for pcs_1 with assetVar /status/pcs_1:DCVoltage is /assets/pcs/pcs_1:faults
[5.18884s  ] [info    ] [CheckMonitorVar] Alarm Destination for pcs_1 with assetVar /status/pcs_1:DCVoltage is /assets/pcs/pcs_1:alarms
[5.18905s  ] [info    ] [CheckMonitorVar] Not set up for [DCVoltage] reloadStr [DCVoltage_reload]
[5.18973s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:HeartbeatRead_reload]
[5.19057s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:HeartbeatRead_reload]
[5.19085s  ] [info    ] [CheckMonitorVar] Fault Destination for pcs_1 with assetVar /status/pcs_1:HeartbeatRead is /assets/pcs/pcs_1:faults
[5.19108s  ] [info    ] [CheckMonitorVar] Alarm Destination for pcs_1 with assetVar /status/pcs_1:HeartbeatRead is /assets/pcs/pcs_1:alarms
[5.19132s  ] [info    ] [CheckMonitorVar] Not set up for [HeartbeatRead] reloadStr [HeartbeatRead_reload]
[5.19194s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"grid_mode":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	"FollowPQ",
							"uri":	"/status/pcs_1:GridMode"
						}, {
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	"FormVF",
							"uri":	"/status/pcs_1:GridMode"
						}, {
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	"FormVSG",
							"uri":	"/status/pcs_1:GridMode"
						}, {
							"enable":	"/config/pcs_1:enum_opt",
							"outValue":	true,
							"uri":	"/components/pcs_1:grid_mode@ifChanged",
							"useAv":	true
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note1":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	},
	"status":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	"TODO: add output value to set to uri",
							"uri":	"/status/pcs_1:Status"
						}, {
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	"Stop",
							"uri":	"/status/pcs_1:SystemState"
						}, {
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	"Standby",
							"uri":	"/status/pcs_1:SystemState"
						}, {
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	"Run",
							"uri":	"/status/pcs_1:SystemState"
						}, {
							"inValue":	"TODO: add input value to compare against value field or remove remap entry",
							"outValue":	"Fault",
							"uri":	"/status/pcs_1:SystemState"
						}, {
							"enable":	"/config/pcs_1:enum_opt",
							"outValue":	true,
							"uri":	"/components/pcs_1:status@ifChanged",
							"useAv":	true
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"ifChanged":	false,
		"note1":	"TODO: if applicable, decode the variable's value to other variables using either remap (default) or enum action",
		"note2":	"Use enum if the variable's value contains bitfields. Otherwise, use remap",
		"value":	0
	}
}].
[5.19252s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"checkInputs_pcs_1":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"outValue":	false,
							"uri":	"/components/pcs_1:status@ifChanged"
						}, {
							"outValue":	false,
							"uri":	"/components/pcs_1:grid_mode@ifChanged"
						}]
				}]
		},
		"enable":	"/config/pcs_1:enable",
		"note":	"Sets ifChanged to false to process inputs for various interface variables with actions regardless of value change",
		"value":	0
	}
}].
[5.19339s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs_1:active_power",
		"vlink":	"/status/pcs_1:ActivePower"
	},
	"active_power_ramp_rate_feedback":	{
		"default":	0,
		"note1":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"note2":	"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID",
		"value":	"/components/pcs_1:active_power_ramp_rate_feedback",
		"vlink":	"/status/pcs_1:ActivePowerRampRateFeedback"
	},
	"active_power_setpoint_feedback":	{
		"default":	0,
		"note1":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"note2":	"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID",
		"value":	"/components/pcs_1:active_power_setpoint_feedback",
		"vlink":	"/status/pcs_1:ActivePowerSetpointFeedback"
	},
	"apparent_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs_1:apparent_power",
		"vlink":	"/status/pcs_1:ApparentPower"
	},
	"dc_current":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs_1:dc_current",
		"vlink":	"/status/pcs_1:DCCurrent"
	},
	"dc_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs_1:dc_power",
		"vlink":	"/status/pcs_1:DCPower"
	},
	"dc_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs_1:dc_voltage",
		"vlink":	"/status/pcs_1:DCVoltage"
	},
	"frequency":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs_1:frequency",
		"vlink":	"/status/pcs_1:Frequency"
	},
	"frequency_setpoint_feedback":	{
		"default":	0,
		"note1":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"note2":	"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID",
		"value":	"/components/pcs_1:frequency_setpoint_feedback",
		"vlink":	"/status/pcs_1:FrequencySetpointFeedback"
	},
	"heartbeat_read":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs_1:heartbeat_read",
		"vlink":	"/status/pcs_1:HeartbeatRead"
	},
	"l1_current":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs_1:l1_current",
		"vlink":	"/status/pcs_1:L1Current"
	},
	"l1_l2_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs_1:l1_l2_voltage",
		"vlink":	"/status/pcs_1:L1L2Voltage"
	},
	"l2_current":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs_1:l2_current",
		"vlink":	"/status/pcs_1:L2Current"
	},
	"l2_l3_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs_1:l2_l3_voltage",
		"vlink":	"/status/pcs_1:L2L3Voltage"
	},
	"l3_current":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs_1:l3_current",
		"vlink":	"/status/pcs_1:L3Current"
	},
	"l3_l1_voltage":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs_1:l3_l1_voltage",
		"vlink":	"/status/pcs_1:L3L1Voltage"
	},
	"power_factor":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs_1:power_factor",
		"vlink":	"/status/pcs_1:PowerFactor"
	},
	"rated_active_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs_1:rated_active_power",
		"vlink":	"/limits/pcs_1:RatedActivePower"
	},
	"rated_apparent_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs_1:rated_apparent_power",
		"vlink":	"/limits/pcs_1:RatedApparentPower"
	},
	"rated_reactive_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs_1:rated_reactive_power",
		"vlink":	"/limits/pcs_1:RatedReactivePower"
	},
	"reactive_power":	{
		"default":	0,
		"note":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"value":	"/components/pcs_1:reactive_power",
		"vlink":	"/status/pcs_1:ReactivePower"
	},
	"reactive_power_ramp_rate_feedback":	{
		"default":	0,
		"note1":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"note2":	"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID",
		"value":	"/components/pcs_1:reactive_power_ramp_rate_feedback",
		"vlink":	"/status/pcs_1:ReactivePowerRampRateFeedback"
	},
	"reactive_power_setpoint_feedback":	{
		"default":	0,
		"note1":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"note2":	"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID",
		"value":	"/components/pcs_1:reactive_power_setpoint_feedback",
		"vlink":	"/status/pcs_1:ReactivePowerSetpointFeedback"
	},
	"voltage_setpoint_feedback":	{
		"default":	0,
		"note1":	"TODO: If needed, modify value: <components_uri>:<variable_name> or remove entire vlink variable",
		"note2":	"TODO: If the feedback variable is also used as the control variable, then remove the _feedback suffix from the ID",
		"value":	"/components/pcs_1:voltage_setpoint_feedback",
		"vlink":	"/status/pcs_1:VoltageSetpointFeedback"
	}
}].
[5.19584s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:active_power]
[5.19634s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:active_power]
[5.19674s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:active_power_ramp_rate_feedback]
[5.19707s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:active_power_ramp_rate_feedback]
[5.1975s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:active_power_setpoint_feedback]
[5.19818s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:active_power_setpoint_feedback]
[5.19903s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:apparent_power]
[5.19952s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:apparent_power]
[5.19994s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:dc_current]
[5.20031s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:dc_current]
[5.20066s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:dc_power]
[5.20092s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:dc_power]
[5.20128s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:dc_voltage]
[5.20193s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:dc_voltage]
[5.20231s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:frequency]
[5.20265s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:frequency]
[5.20304s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:frequency_setpoint_feedback]
[5.20336s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:frequency_setpoint_feedback]
[5.20373s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:heartbeat_read]
[5.20403s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:heartbeat_read]
[5.20452s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:l1_current]
[5.2048s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:l1_current]
[5.20531s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:l1_l2_voltage]
[5.20556s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:l1_l2_voltage]
[5.20587s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:l2_current]
[5.20617s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:l2_current]
[5.20651s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:l2_l3_voltage]
[5.2068s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:l2_l3_voltage]
[5.20708s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:l3_current]
[5.20733s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:l3_current]
[5.20764s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:l3_l1_voltage]
[5.20788s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:l3_l1_voltage]
[5.20818s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:power_factor]
[5.20849s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:power_factor]
[5.20878s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:rated_active_power]
[5.20904s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:rated_active_power]
[5.21025s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:rated_apparent_power]
[5.21055s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:rated_apparent_power]
[5.21098s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:rated_reactive_power]
[5.21126s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:rated_reactive_power]
[5.21157s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:reactive_power]
[5.2118s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:reactive_power]
[5.21207s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:reactive_power_ramp_rate_feedback]
[5.2123s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:reactive_power_ramp_rate_feedback]
[5.21263s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:reactive_power_setpoint_feedback]
[5.21289s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:reactive_power_setpoint_feedback]
[5.21313s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/components/pcs_1:voltage_setpoint_feedback]
[5.21333s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/components/pcs_1:voltage_setpoint_feedback]
[5.21371s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"pcs_pcs_1_control_alarms":	{
		"bit0":	"PCS ActivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit1":	"PCS ActivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit10":	"PCS Start - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit11":	"PCS Stop - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit12":	"PCS VerifyActivePowerCmd - Command was sent, but the expected result was not observed before timeout",
		"bit13":	"PCS VerifyActivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
		"bit14":	"PCS VerifyFrequencySetpoint - Command was sent, but the expected result was not observed before timeout",
		"bit15":	"PCS VerifyGridFollowPQ - Command was sent, but the expected result was not observed before timeout",
		"bit16":	"PCS VerifyGridFormVF - Command was sent, but the expected result was not observed before timeout",
		"bit17":	"PCS VerifyGridFormVSG - Command was sent, but the expected result was not observed before timeout",
		"bit18":	"PCS VerifyReactivePowerCmd - Command was sent, but the expected result was not observed before timeout",
		"bit19":	"PCS VerifyReactivePowerRampRateCmd - Command was sent, but the expected result was not observed before timeout",
		"bit2":	"PCS ClearFaults - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit20":	"PCS VerifyStandby - Command was sent, but the expected result was not observed before timeout",
		"bit21":	"PCS VerifyStart - Command was sent, but the expected result was not observed before timeout",
		"bit22":	"PCS VerifyStop - Command was sent, but the expected result was not observed before timeout",
		"bit23":	"PCS VerifyVoltageSetpoint - Command was sent, but the expected result was not observed before timeout",
		"bit24":	"PCS VoltageSetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit3":	"PCS FrequencySetpoint - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit4":	"PCS GridFollowPQ - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit5":	"PCS GridFormVF - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit6":	"PCS GridFormVSG - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit7":	"PCS ReactivePowerCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit8":	"PCS ReactivePowerRampRateCmd - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"bit9":	"PCS Standby - Preconditions were not met or failed to verify command was sent. View ESS Events page for more details",
		"name":	"PCS Control Alarms",
		"type":	"bitfield",
		"value":	0
	},
	"pcs_pcs_1_monitor_alarms":	{
		"bit0":	"PCS ActivePower - Max Threshold Exceeded",
		"bit1":	"PCS DCVoltage - Max Threshold Exceeded",
		"bit2":	"PCS DCVoltage - Min Threshold Exceeded",
		"name":	"PCS Monitor Alarms",
		"type":	"bitfield",
		"value":	0
	},
	"pcs_pcs_1_monitor_faults":	{
		"bit0":	"PCS ActivePower - Max Threshold Exceeded",
		"bit1":	"PCS DCVoltage - Max Threshold Exceeded",
		"bit2":	"PCS DCVoltage - Min Threshold Exceeded",
		"name":	"PCS Monitor Faults",
		"type":	"bitfield",
		"value":	0
	}
}].
[5.21473s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"active_power":	{
		"value":	0
	},
	"active_power_ramp_rate":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/controls/pcs_1:ActivePowerRampRate"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the active power ramp rate",
		"value":	0
	},
	"active_power_ramp_rate_feedback":	{
		"value":	0
	},
	"active_power_setpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/controls/pcs_1:ActivePowerSetpoint"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the active power setpoint",
		"value":	0
	},
	"active_power_setpoint_feedback":	{
		"value":	0
	},
	"alarms":	{
		"options":	[],
		"value":	0
	},
	"apparent_power":	{
		"value":	0
	},
	"clear_faults":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs_1:ClearFaults@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs_1:ClearFaults"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate clear faults command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"comms_ok":	{
		"value":	false
	},
	"dc_current":	{
		"value":	0
	},
	"dc_power":	{
		"value":	0
	},
	"dc_voltage":	{
		"value":	0
	},
	"faults":	{
		"options":	[],
		"value":	0
	},
	"frequency":	{
		"value":	0
	},
	"frequency_setpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs_1:FrequencySetpoint@triggerCmd"
						}, {
							"uri":	"/controls/pcs_1:FrequencySetpoint"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the frequency setpoint while the PCS is in grid-forming (VF)",
		"value":	0
	},
	"frequency_setpoint_feedback":	{
		"value":	0
	},
	"grid_follow_pq":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs_1:GridFollowPQ@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	1,
							"uri":	"/controls/pcs_1:GridFollowPQ"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate command routine for setting PCS to grid-following",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"grid_form_vf":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs_1:GridFormVF@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	2,
							"uri":	"/controls/pcs_1:GridFormVF"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate command routine for setting PCS to grid-forming (voltage and frequency)",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"grid_form_vsg":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs_1:GridFormVSG@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	3,
							"uri":	"/controls/pcs_1:GridFormVSG"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate command routine for setting PCS to grid-forming (virtual synchronous generator)",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"grid_mode":	{
		"value":	"INIT"
	},
	"l1_current":	{
		"value":	0
	},
	"l1_l2_voltage":	{
		"value":	0
	},
	"l2_current":	{
		"value":	0
	},
	"l2_l3_voltage":	{
		"value":	0
	},
	"l3_current":	{
		"value":	0
	},
	"l3_l1_voltage":	{
		"value":	0
	},
	"maint_mode":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/assets/pcs/pcs_1:clear_faults@enabled"
						}, {
							"uri":	"/assets/pcs/pcs_1:active_power_ramp_rate@enabled"
						}, {
							"uri":	"/assets/pcs/pcs_1:reactive_power_ramp_rate@enabled"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"UI control variable used to set the current asset in maintenance mode",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"max_charge_power":	{
		"value":	0
	},
	"max_discharge_power":	{
		"value":	0
	},
	"max_igbt_temperature":	{
		"value":	0
	},
	"power_factor":	{
		"value":	0
	},
	"rated_active_power":	{
		"value":	0
	},
	"rated_apparent_power":	{
		"value":	0
	},
	"rated_power_factor":	{
		"value":	0
	},
	"rated_reactive_power":	{
		"value":	0
	},
	"reactive_power":	{
		"value":	0
	},
	"reactive_power_ramp_rate":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/controls/pcs_1:ReactivePowerRampRate"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the reactive power ramp rate",
		"value":	0
	},
	"reactive_power_ramp_rate_feedback":	{
		"value":	0
	},
	"reactive_power_setpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"uri":	"/controls/pcs_1:ReactivePowerSetpoint"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the reactive power setpoint",
		"value":	0
	},
	"reactive_power_setpoint_feedback":	{
		"value":	0
	},
	"standby":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs_1:ActivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs_1:ReactivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs_1:Standby@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs_1:Standby"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate the standby command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"start":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs_1:Start@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs_1:Start"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate the start command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"status":	{
		"value":	"INIT"
	},
	"stop":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs_1:ActivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs_1:ReactivePowerSetpoint"
						}, {
							"inValue":	true,
							"outValue":	true,
							"uri":	"/controls/pcs_1:Stop@triggerCmd"
						}, {
							"inValue":	true,
							"outValue":	0,
							"uri":	"/controls/pcs_1:Stop"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to initiate the stop command routine",
		"options":	[{
				"name":	"No",
				"return_value":	false
			}, {
				"name":	"Yes",
				"return_value":	true
			}],
		"value":	false
	},
	"system_state":	{
		"value":	"INIT"
	},
	"voltage_setpoint":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"amap":	"pcs_1",
							"func":	"LogInfo"
						}]
				}, {
					"remap":	[{
							"outValue":	true,
							"uri":	"/controls/pcs_1:VoltageSetpoint@triggerCmd"
						}, {
							"uri":	"/controls/pcs_1:VoltageSetpoint"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"UI control variable used to set the voltage setpoint while the PCS is in grid-forming (VF)",
		"value":	0
	},
	"voltage_setpoint_feedback":	{
		"value":	0
	}
}].
[5.21601s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.21629s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.21669s  ] [info    ] [LogInfo        ] [/assets/pcs/pcs_1:maint_mode] received a value of [false]
[5.21702s  ] [info    ] [setParamfromAf ]  created var for uri [/assets/pcs/pcs_1] as [/assets/pcs/pcs_1:reactive_power_ramp_rate]
[5.21775s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"Failed Attempt to update [/assets/pcs/pcs_1:standby] because [standby@enabled:false] == true ---> Condition(s): [/status/bms:DCClosed:false] == true && [/assets/pcs/summary:maint_mode:false] == true && [/status/pcs:SystemState:nullptr] == (Stop or Run)","severity":1}]
[5.21823s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"Failed Attempt to update [/assets/pcs/pcs_1:start] because [start@enabled:false] == true ---> Condition(s): [/status/bms:DCClosed:false] == true && [/assets/pcs/summary:maint_mode:false] == true && [/status/pcs:SystemState:nullptr] == (Stop or Standby) && [/status/pcs:IsFaulted:false] == false","severity":1}]
[5.21859s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.21886s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.21934s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"ess","message":"Failed Attempt to update [/assets/pcs/pcs_1:stop] because [stop@enabled:false] == true ---> Condition(s): [/assets/pcs/summary:maint_mode:false] == true && [/status/pcs:SystemState:nullptr] != Stop","severity":1}]
[5.22027s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [INIT]
[5.22057s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [INIT]
[5.22135s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"ui_active_power":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:active_power",
		"vlink":	"/status/pcs_1:ActivePower"
	},
	"ui_active_power_ramp_rate_feedback":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:active_power_ramp_rate_feedback",
		"vlink":	"/status/pcs_1:ActivePowerRampRateFeedback"
	},
	"ui_active_power_setpoint_feedback":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:active_power_setpoint_feedback",
		"vlink":	"/status/pcs_1:ActivePowerSetpointFeedback"
	},
	"ui_apparent_power":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:apparent_power",
		"vlink":	"/status/pcs_1:ApparentPower"
	},
	"ui_comms_ok":	{
		"default":	false,
		"value":	"/assets/pcs/pcs_1:comms_ok",
		"vlink":	"/status/pcs_1:CommsOK"
	},
	"ui_dc_current":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:dc_current",
		"vlink":	"/status/pcs_1:DCCurrent"
	},
	"ui_dc_power":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:dc_power",
		"vlink":	"/status/pcs_1:DCPower"
	},
	"ui_dc_voltage":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:dc_voltage",
		"vlink":	"/status/pcs_1:DCVoltage"
	},
	"ui_frequency":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:frequency",
		"vlink":	"/status/pcs_1:Frequency"
	},
	"ui_frequency_setpoint_feedback":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:frequency_setpoint_feedback",
		"vlink":	"/status/pcs_1:FrequencySetpointFeedback"
	},
	"ui_grid_mode":	{
		"default":	"INIT",
		"value":	"/assets/pcs/pcs_1:grid_mode",
		"vlink":	"/status/pcs_1:GridMode"
	},
	"ui_l1_current":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:l1_current",
		"vlink":	"/status/pcs_1:L1Current"
	},
	"ui_l1_l2_voltage":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:l1_l2_voltage",
		"vlink":	"/status/pcs_1:L1L2Voltage"
	},
	"ui_l2_current":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:l2_current",
		"vlink":	"/status/pcs_1:L2Current"
	},
	"ui_l2_l3_voltage":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:l2_l3_voltage",
		"vlink":	"/status/pcs_1:L2L3Voltage"
	},
	"ui_l3_current":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:l3_current",
		"vlink":	"/status/pcs_1:L3Current"
	},
	"ui_l3_l1_voltage":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:l3_l1_voltage",
		"vlink":	"/status/pcs_1:L3L1Voltage"
	},
	"ui_max_charge_power":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:max_charge_power",
		"vlink":	"/limits/pcs_1:MaxPCSChargePower"
	},
	"ui_max_discharge_power":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:max_discharge_power",
		"vlink":	"/limits/pcs_1:MaxPCSDischargePower"
	},
	"ui_max_igbt_temperature":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:max_igbt_temperature",
		"vlink":	"/status/pcs_1:MaxIGBTTemperature"
	},
	"ui_power_factor":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:power_factor",
		"vlink":	"/status/pcs_1:PowerFactor"
	},
	"ui_rated_active_power":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:rated_active_power",
		"vlink":	"/limits/pcs_1:RatedActivePower"
	},
	"ui_rated_apparent_power":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:rated_apparent_power",
		"vlink":	"/limits/pcs_1:RatedApparentPower"
	},
	"ui_rated_power_factor":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:rated_power_factor",
		"vlink":	"/config/pcs_1:RatedPowerFactor"
	},
	"ui_rated_reactive_power":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:rated_reactive_power",
		"vlink":	"/limits/pcs_1:RatedReactivePower"
	},
	"ui_reactive_power":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:reactive_power",
		"vlink":	"/status/pcs_1:ReactivePower"
	},
	"ui_reactive_power_ramp_rate_feedback":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:reactive_power_ramp_rate_feedback",
		"vlink":	"/status/pcs_1:ReactivePowerRampRateFeedback"
	},
	"ui_reactive_power_setpoint_feedback":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:reactive_power_setpoint_feedback",
		"vlink":	"/status/pcs_1:ReactivePowerSetpointFeedback"
	},
	"ui_status":	{
		"default":	"INIT",
		"value":	"/assets/pcs/pcs_1:status",
		"vlink":	"/status/pcs_1:Status"
	},
	"ui_system_state":	{
		"default":	"INIT",
		"value":	"/assets/pcs/pcs_1:system_state",
		"vlink":	"/status/pcs_1:SystemState"
	},
	"ui_voltage_setpoint_feedback":	{
		"default":	0,
		"value":	"/assets/pcs/pcs_1:voltage_setpoint_feedback",
		"vlink":	"/status/pcs_1:VoltageSetpointFeedback"
	}
}].
[5.22215s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:active_power]
[5.22239s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:active_power]
[5.22263s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:active_power_ramp_rate_feedback]
[5.22293s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:active_power_ramp_rate_feedback]
[5.2237s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:active_power_setpoint_feedback]
[5.22413s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:active_power_setpoint_feedback]
[5.22452s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:apparent_power]
[5.22493s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:apparent_power]
[5.22538s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:comms_ok]
[5.22573s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:comms_ok]
[5.22614s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:dc_current]
[5.22655s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:dc_current]
[5.22706s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:dc_power]
[5.22754s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:dc_power]
[5.22825s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:dc_voltage]
[5.22904s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:dc_voltage]
[5.22952s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:frequency]
[5.2307s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:frequency]
[5.23124s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:frequency_setpoint_feedback]
[5.23164s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:frequency_setpoint_feedback]
[5.23214s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:grid_mode]
[5.23251s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:grid_mode]
[5.23282s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:l1_current]
[5.23311s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:l1_current]
[5.23343s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:l1_l2_voltage]
[5.23369s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:l1_l2_voltage]
[5.23397s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:l2_current]
[5.23422s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:l2_current]
[5.23484s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:l2_l3_voltage]
[5.23513s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:l2_l3_voltage]
[5.23543s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:l3_current]
[5.23581s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:l3_current]
[5.23639s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:l3_l1_voltage]
[5.23671s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:l3_l1_voltage]
[5.2371s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:max_charge_power]
[5.23749s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:max_charge_power]
[5.23786s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:max_discharge_power]
[5.23821s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:max_discharge_power]
[5.23863s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:max_igbt_temperature]
[5.23896s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:max_igbt_temperature]
[5.23936s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:power_factor]
[5.23966s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:power_factor]
[5.23999s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:rated_active_power]
[5.24033s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:rated_active_power]
[5.24078s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:rated_apparent_power]
[5.2411s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:rated_apparent_power]
[5.24145s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:rated_power_factor]
[5.2418s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:rated_power_factor]
[5.24219s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:rated_reactive_power]
[5.24254s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:rated_reactive_power]
[5.24293s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:reactive_power]
[5.2432s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:reactive_power]
[5.24397s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:reactive_power_ramp_rate_feedback]
[5.24431s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:reactive_power_ramp_rate_feedback]
[5.24464s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:reactive_power_setpoint_feedback]
[5.24524s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:reactive_power_setpoint_feedback]
[5.24559s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:status]
[5.24603s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:status]
[5.24639s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:system_state]
[5.24659s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:system_state]
[5.2469s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/assets/pcs/pcs_1:voltage_setpoint_feedback]
[5.2476s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/assets/pcs/pcs_1:voltage_setpoint_feedback]
[5.24998s  ] [info    ] [runConfig      ]  All files loaded for loader [ess_controller] ready to run av [/config/load:ess_controller] load
[5.25069s  ] [info    ] [requestFfile   ]  fims send [/dbi/ess_controller/configs_ess_final] reply [/ess/cfg/cfile/ess/ess_final] cfile [ess_final]
[5.25113s  ] [info    ] [runConfig      ]  After requestFfile, requesting final [ess_final]
[5.26285s  ] [info    ] [handleCfile    ]  >>>>>> before getting management #1 info from  [/config/cfile:ess_final]  am at start [ess]
[5.26352s  ] [info    ] [configure_vmapS] process file seeking header stuff am [ess] ai [no ai]
[5.26398s  ] [info    ] [configure_vmapS] body: {"/system/commands":{"addSchedVars_ess":{"actions":{"onSet":[{"remap":[{"uri":"/system/commands:runOpts_ess@enabled"},{"uri":"/system/commands:runOpts_ess"},{"uri":"/system/commands:runOpts_bms@enabled"},{"uri":"/system/commands:runOpts_bms"},{"uri":"/system/commands:runOpts_bms_1@enabled"},{"uri":"/system/commands:runOpts_bms_1"},{"uri":"/system/commands:runOpts_rack@enabled"},{"uri":"/system/commands:runOpts_rack"},{"uri":"/system/commands:runOpts_pcs@enabled"},{"uri":"/system/commands:runOpts_pcs"},{"uri":"/system/commands:runOpts_pcs_1@enabled"},{"uri":"/system/commands:runOpts_pcs_1"}]}]},"enabled":false,"ifChanged":false,"note":"Sets /system/commands:runOpts_\u003casset\u003e to add schedule variables to scheduler","value":true},"enableVars_ess":{"actions":{"onSet":[{"remap":[{"uri":"/config/ess:enable"},{"uri":"/config/ess:remote_control_enable"},{"uri":"/config/bms:enable"},{"uri":"/config/bms:enum_opt"},{"uri":"/config/bms_1:enable"},{"uri":"/config/bms_1:enum_opt"},{"uri":"/config/bms_1_rack_1:enable"},{"uri":"/config/bms_1_rack_1:enum_opt"},{"uri":"/config/bms_1_rack_2:enable"},{"uri":"/config/bms_1_rack_2:enum_opt"},{"uri":"/config/bms_1_rack_3:enable"},{"uri":"/config/bms_1_rack_3:enum_opt"},{"uri":"/config/pcs:enable"},{"uri":"/config/pcs:enum_opt"},{"uri":"/config/pcs_1:enable"},{"uri":"/config/pcs_1:enum_opt"}]}]},"enabled":false,"ifChanged":false,"note1":"Sets /config/\u003casset\u003e:enable and /config/\u003casset\u003e:enum_opt","note2":"Enable actions, if any, and other operations for variables that have the enable parameter","value":true},"link":{"actions":{"onSet":[{"func":[{"func":"RunAllLinks"}]}]},"enabled":false,"ifChanged":false,"note":"Command variable used to link all variables defined in /links","value":true},"run":{"actions":{"onSet":[{"func":[{"func":"RunSched"}]}]},"enabled":true,"ifChanged":false,"note":"Command variable used to start scheduled tasks","value":true},"stop":{"actions":{"onSet":[{"func":[{"func":"StopSched"}]}]},"enabled":true,"ifChanged":false,"note":"Command variable used to stop scheduled tasks","value":true},"vlink":{"actions":{"onSet":[{"func":[{"func":"RunAllVLinks"}]}]},"enabled":false,"ifChanged":false,"note":"Command variable used to link all variables defined in /vlinks","value":true}},"/system/sequences":{"triggerSysCmds_ess":{"actions":{"onSet":[{"remap":[{"uri":"/system/commands:enableVars_ess@enabled"},{"uri":"/system/commands:enableVars_ess"},{"uri":"/system/commands:link@enabled"},{"uri":"/system/commands:link"},{"uri":"/system/commands:vlink@enabled"},{"uri":"/system/commands:vlink"},{"uri":"/system/commands:addSchedVars_ess@enabled"},{"uri":"/system/commands:addSchedVars_ess"}]}]},"enabled":true,"ifChanged":false,"note1":"Trigger some variables defined in /system/commands","note2":"Specifically, enableVars_ess, link, vlink, and addSchedVars_ess are triggered","value":true}}}
[5.2644s   ] [info    ] [configure_vmapS] amname: [null] ainame: [null] pname: [null]
[5.2648s   ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"addSchedVars_ess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/system/commands:runOpts_ess@enabled"
						}, {
							"uri":	"/system/commands:runOpts_ess"
						}, {
							"uri":	"/system/commands:runOpts_bms@enabled"
						}, {
							"uri":	"/system/commands:runOpts_bms"
						}, {
							"uri":	"/system/commands:runOpts_bms_1@enabled"
						}, {
							"uri":	"/system/commands:runOpts_bms_1"
						}, {
							"uri":	"/system/commands:runOpts_rack@enabled"
						}, {
							"uri":	"/system/commands:runOpts_rack"
						}, {
							"uri":	"/system/commands:runOpts_pcs@enabled"
						}, {
							"uri":	"/system/commands:runOpts_pcs"
						}, {
							"uri":	"/system/commands:runOpts_pcs_1@enabled"
						}, {
							"uri":	"/system/commands:runOpts_pcs_1"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"Sets /system/commands:runOpts_<asset> to add schedule variables to scheduler",
		"value":	true
	},
	"enableVars_ess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/config/ess:enable"
						}, {
							"uri":	"/config/ess:remote_control_enable"
						}, {
							"uri":	"/config/bms:enable"
						}, {
							"uri":	"/config/bms:enum_opt"
						}, {
							"uri":	"/config/bms_1:enable"
						}, {
							"uri":	"/config/bms_1:enum_opt"
						}, {
							"uri":	"/config/bms_1_rack_1:enable"
						}, {
							"uri":	"/config/bms_1_rack_1:enum_opt"
						}, {
							"uri":	"/config/bms_1_rack_2:enable"
						}, {
							"uri":	"/config/bms_1_rack_2:enum_opt"
						}, {
							"uri":	"/config/bms_1_rack_3:enable"
						}, {
							"uri":	"/config/bms_1_rack_3:enum_opt"
						}, {
							"uri":	"/config/pcs:enable"
						}, {
							"uri":	"/config/pcs:enum_opt"
						}, {
							"uri":	"/config/pcs_1:enable"
						}, {
							"uri":	"/config/pcs_1:enum_opt"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note1":	"Sets /config/<asset>:enable and /config/<asset>:enum_opt",
		"note2":	"Enable actions, if any, and other operations for variables that have the enable parameter",
		"value":	true
	},
	"link":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunAllLinks"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"Command variable used to link all variables defined in /links",
		"value":	true
	},
	"run":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunSched"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"Command variable used to start scheduled tasks",
		"value":	true
	},
	"stop":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"StopSched"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note":	"Command variable used to stop scheduled tasks",
		"value":	true
	},
	"vlink":	{
		"actions":	{
			"onSet":	[{
					"func":	[{
							"func":	"RunAllVLinks"
						}]
				}]
		},
		"enabled":	false,
		"ifChanged":	false,
		"note":	"Command variable used to link all variables defined in /vlinks",
		"value":	true
	}
}].
RunSched >>  [/system/commands:run] missing uri
StopSched >>  [/system/commands:stop] missing uri
[5.26619s  ] [info    ] [processRawMsg  ] ess_controller: process set body [{
	"triggerSysCmds_ess":	{
		"actions":	{
			"onSet":	[{
					"remap":	[{
							"uri":	"/system/commands:enableVars_ess@enabled"
						}, {
							"uri":	"/system/commands:enableVars_ess"
						}, {
							"uri":	"/system/commands:link@enabled"
						}, {
							"uri":	"/system/commands:link"
						}, {
							"uri":	"/system/commands:vlink@enabled"
						}, {
							"uri":	"/system/commands:vlink"
						}, {
							"uri":	"/system/commands:addSchedVars_ess@enabled"
						}, {
							"uri":	"/system/commands:addSchedVars_ess"
						}]
				}]
		},
		"enabled":	true,
		"ifChanged":	false,
		"note1":	"Trigger some variables defined in /system/commands",
		"note2":	"Specifically, enableVars_ess, link, vlink, and addSchedVars_ess are triggered",
		"value":	true
	}
}].
[5.26672s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_alllinks]
[5.26697s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_alllinks]
[5.26785s  ] [info    ] [RunAllLinks    ] found 9 keys
[5.26829s  ] [info    ] [RunAllLinks    ]  processing idx [00]  >> xx->aname :[/links/bms]->[bms] parent [ess]
[5.2746s   ] [info    ] [RunALink       ]  found am [bms]
[5.27535s  ] [info    ] [RunAllLinks    ]  processing idx [01]  >> xx->aname :[/links/bms_1]->[bms_1] parent [ess]
[5.2758s   ] [info    ] [RunALink       ]  found am [bms_1]
[5.27637s  ] [info    ] [RunAllLinks    ]  processing idx [02]  >> xx->aname :[/links/bms_1_rack_1]->[bms_1_rack_1] parent [ess]
[5.27675s  ] [info    ] [RunALink       ]  found ai [bms_1_rack_1]
[5.27744s  ] [info    ] [RunAllLinks    ]  processing idx [03]  >> xx->aname :[/links/bms_1_rack_2]->[bms_1_rack_2] parent [ess]
[5.27779s  ] [info    ] [RunALink       ]  found ai [bms_1_rack_2]
[5.27817s  ] [info    ] [RunAllLinks    ]  processing idx [04]  >> xx->aname :[/links/bms_1_rack_3]->[bms_1_rack_3] parent [ess]
[5.27857s  ] [info    ] [RunALink       ]  found ai [bms_1_rack_3]
[5.27947s  ] [info    ] [RunAllLinks    ]  processing idx [05]  >> xx->aname :[/links/ess]->[ess] parent [ess]
[5.27979s  ] [info    ] [RunALink       ]  found am [ess]
[5.2802s   ] [info    ] [RunAllLinks    ]  processing idx [06]  >> xx->aname :[/links/ess_1]->[ess_1] parent [ess]
[5.28056s  ] [info    ] [RunAllLinks    ]  no am forcing an am  [ess_1]
[5.28111s  ] [info    ] [RunAllLinks    ]  creating assetManager   [ess_1]
[5.28145s  ] [info    ] [RunALink       ]  found am [ess_1]
[5.28183s  ] [info    ] [RunAllLinks    ]  processing idx [07]  >> xx->aname :[/links/pcs]->[pcs] parent [ess]
[5.28216s  ] [info    ] [RunALink       ]  found am [pcs]
[5.28271s  ] [info    ] [RunAllLinks    ]  processing idx [08]  >> xx->aname :[/links/pcs_1]->[pcs_1] parent [ess]
[5.28303s  ] [info    ] [RunALink       ]  found am [pcs_1]
[5.28376s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_allvlinks]
[5.28406s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_allvlinks]
[5.28512s  ] [info    ] [RunAllVLinks   ] found 8 keys
[5.28585s  ] [info    ] [RunAllVLinks   ]  processing idx [0]  >> [/vlinks/bms] vmkey [bms]
[5.28673s  ] [info    ] [RunAllVLinks   ]  processing idx [1]  >> [/vlinks/bms_1] vmkey [bms_1]
[5.28737s  ] [info    ] [RunAllVLinks   ]  processing idx [2]  >> [/vlinks/bms_1_rack_1] vmkey [bms_1_rack_1]
[5.28797s  ] [info    ] [RunAllVLinks   ]  processing idx [3]  >> [/vlinks/bms_1_rack_2] vmkey [bms_1_rack_2]
[5.28854s  ] [info    ] [RunAllVLinks   ]  processing idx [4]  >> [/vlinks/bms_1_rack_3] vmkey [bms_1_rack_3]
[5.28907s  ] [info    ] [RunAllVLinks   ]  processing idx [5]  >> [/vlinks/ess] vmkey [ess]
[5.28944s  ] [info    ] [RunAllVLinks   ]  processing idx [6]  >> [/vlinks/pcs] vmkey [pcs]
[5.29076s  ] [info    ] [RunAllVLinks   ]  processing idx [7]  >> [/vlinks/pcs_1] vmkey [pcs_1]
[5.29217s  ] [info    ] [SchedItemOpts  ] @@@@@ [/system/commands:runOpts_ess] found cjopts ready to schedule res1 [0x0] tav [/system/commands:run]
[5.29295s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/ess/ess_1]
[5.29327s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/ess/ess_1]
[5.29433s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_ess]
[5.29461s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_ess]
[5.29499s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:CalculateVar_MaxChargePower]
[5.29531s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:CalculateVar_MaxChargePower]
[5.2956s   ] [info    ] [setupCalculateV] Setting up params for [/limits/ess:MaxChargePower]
[5.296s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:MaxChargePower]
[5.29626s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:MaxChargePower]
[5.29661s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:CalculateVar_MaxDischargePower]
[5.29689s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:CalculateVar_MaxDischargePower]
[5.29711s  ] [info    ] [setupCalculateV] Setting up params for [/limits/ess:MaxDischargePower]
[5.2974s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:MaxDischargePower]
[5.29769s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:MaxDischargePower]
[5.29801s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:heartbeat_to_ess_reload]
[5.29822s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:heartbeat_to_ess_reload]
[5.29851s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/alarms/ess:MonitorVarAlarm]
[5.29874s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/alarms/ess:MonitorVarAlarm]
[5.29902s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/faults/ess:MonitorVarFault]
[5.29931s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/faults/ess:MonitorVarFault]
[5.2996s   ] [info    ] [CheckMonitorVar] Fault Destination for ess with assetVar /site/ess:heartbeat_to_ess is /assets/ess/ess_1:faults
[5.29997s  ] [info    ] [CheckMonitorVar] Alarm Destination for ess with assetVar /site/ess:heartbeat_to_ess is /assets/ess/ess_1:alarms
[5.30034s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.30063s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.30098s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [Normal]
[5.3014s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [Normal]
[5.30166s  ] [info    ] [CheckMonitorVar] Not set up for [heartbeat_to_ess] reloadStr [heartbeat_to_ess_reload]
[5.3022s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:CalculateVar_InLocalMode]
[5.30253s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:CalculateVar_InLocalMode]
[5.30299s  ] [info    ] [setupCalculateV] Setting up params for [/status/ess:InLocalMode]
[5.30336s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:InLocalMode]
[5.30363s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:InLocalMode]
[5.30396s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:CalculateVar_IsAlarming]
[5.30418s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:CalculateVar_IsAlarming]
[5.30441s  ] [info    ] [setupCalculateV] Setting up params for [/status/ess:IsAlarming]
[5.30468s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:IsAlarming]
[5.30501s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:IsAlarming]
[5.3054s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:CalculateVar_IsFaulted]
[5.30571s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:CalculateVar_IsFaulted]
[5.30601s  ] [info    ] [setupCalculateV] Setting up params for [/status/ess:IsFaulted]
[5.30632s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:IsFaulted]
[5.30659s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:IsFaulted]
[5.30723s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_ess]
[5.30749s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_ess]
[5.30785s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/ess:CalculateVar_HeartbeatWrite]
[5.30816s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/ess:CalculateVar_HeartbeatWrite]
[5.30884s  ] [info    ] [setupCalculateV] Setting up params for [/status/ess:HeartbeatWrite]
[5.30914s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/ess:HeartbeatWrite]
[5.30943s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/ess:HeartbeatWrite]
[5.31032s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [updateHeartbeatWrite_ess]
[5.31072s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [updateHeartbeatWrite_ess]
[5.31131s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/site/ess]
[5.31189s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/site/ess]
[5.313s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubESS]
[5.31338s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubESS]
[5.31382s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_Every1000mS]
[5.31413s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_Every1000mS]
[5.31448s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_HandleCpuStats]
[5.31476s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_HandleCpuStats]
[5.31561s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [every1000ms_ess]
[5.31592s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [every1000ms_ess]
[5.31689s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[5.3172s   ] [info    ] [BatteryRackBala] Before Test
[5.31749s  ] [info    ] [TestVoltageArbi] TestVoltageArbitration
[5.31813s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[5.31887s  ] [info    ] [VoltageArbitrat] minVoltage 1004.5
[5.31927s  ] [info    ] [VoltageArbitrat] minVoltage 1004.5
[5.31968s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 95.5
[5.32033s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 95.5
[5.32147s  ] [info    ] [VoltageArbitrat] min 95.5
[5.32188s  ] [info    ] [VoltageArbitrat] bestVoltage 1004.5
[5.32227s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.32261s  ] [info    ] [PrintVoltageArb] 

Test Number #1 
Test Name: [1 Rack Open and Many Closed] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1004.5      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1004.5      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1004.5      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[5.32307s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[5.32415s  ] [info    ] [VoltageArbitrat] minVoltage 1200
[5.32446s  ] [info    ] [VoltageArbitrat] minVoltage 1230.3
[5.32475s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 100
[5.32499s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 130.29999999999995
[5.32526s  ] [info    ] [VoltageArbitrat] min 100
[5.32547s  ] [info    ] [VoltageArbitrat] bestVoltage 1200
[5.32582s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.32615s  ] [info    ] [PrintVoltageArb] 

Test Number #2 
Test Name: [2 Rack Open and Both Above Average] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1200      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1230.3      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1200      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1200      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[5.32653s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[5.32685s  ] [info    ] [VoltageArbitrat] minVoltage 1000.6
[5.32713s  ] [info    ] [VoltageArbitrat] minVoltage 1056.2
[5.32751s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 99.39999999999998
[5.32794s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 43.799999999999955
[5.32843s  ] [info    ] [VoltageArbitrat] min 43.799999999999955
[5.32883s  ] [info    ] [VoltageArbitrat] bestVoltage 1056.2
[5.3292s   ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.32962s  ] [info    ] [PrintVoltageArb] 

Test Number #3 
Test Name: [2 Rack Open and Both Below Average] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1000.6      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1056.2      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1056.2      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1056.2      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[5.33018s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[5.33057s  ] [info    ] [VoltageArbitrat] minVoltage 1040.8
[5.33128s  ] [info    ] [VoltageArbitrat] minVoltage 1111.1
[5.33158s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 59.200000000000045
[5.33187s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 11.099999999999909
[5.33221s  ] [info    ] [VoltageArbitrat] min 11.099999999999909
[5.33249s  ] [info    ] [VoltageArbitrat] bestVoltage 1111.1
[5.33277s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.33311s  ] [info    ] [PrintVoltageArb] 

Test Number #4 
Test Name: [2 Rack Open (1 above and 1 below average) and the above is closer] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1111.1      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1040.8      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1111.1      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1111.1      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[5.33341s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[5.33375s  ] [info    ] [VoltageArbitrat] minVoltage 1040.8
[5.33404s  ] [info    ] [VoltageArbitrat] minVoltage 1220.4
[5.3343s   ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 59.200000000000045
[5.34176s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 120.40000000000009
[5.34229s  ] [info    ] [VoltageArbitrat] min 59.200000000000045
[5.3426s   ] [info    ] [VoltageArbitrat] bestVoltage 1040.8
[5.34298s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.34342s  ] [info    ] [PrintVoltageArb] 

Test Number #5 
Test Name: [2 Rack Open (1 above and 1 below average) and the below is closer] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1220.4      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1040.8      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1040.8      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1040.8      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[5.34391s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.34427s  ] [info    ] [PrintVoltageArb] 

Test Number #6 
Test Name: [1 rack open and is within deadband] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1101      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false

Actual Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false
 


[5.34457s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[5.34486s  ] [info    ] [VoltageArbitrat] minVoltage 1234.5
[5.34511s  ] [info    ] [VoltageArbitrat] minVoltage 1234.5
[5.34533s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 134.5
[5.34548s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 134.5
[5.34699s  ] [info    ] [VoltageArbitrat] min 134.5
[5.34744s  ] [info    ] [VoltageArbitrat] bestVoltage 1234.5
[5.3477s   ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.34795s  ] [info    ] [PrintVoltageArb] 

Test Number #7 
Test Name: [2 Rack Open (both above), one is in the deadband and one is out] 

Starting Rack List: 
Rack #1        Voltage:1234.5      ContactorStatus:Open
Rack #2        Voltage:1101.3      ContactorStatus:Open
Rack #3        Voltage:1100      ContactorStatus:Closed
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1234.5      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1234.5      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[5.34827s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[5.34862s  ] [info    ] [VoltageArbitrat] minVoltage 970.3
[5.34901s  ] [info    ] [VoltageArbitrat] minVoltage 970.3
[5.34927s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 129.70000000000005
[5.34951s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 129.70000000000005
[5.34975s  ] [info    ] [VoltageArbitrat] min 129.70000000000005
[5.35001s  ] [info    ] [VoltageArbitrat] bestVoltage 970.3
[5.35023s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.35051s  ] [info    ] [PrintVoltageArb] 

Test Number #8 
Test Name: [2 Rack Open (both below), one is in the deadband and one is out] 

Starting Rack List: 
Rack #1        Voltage:1098.6      ContactorStatus:Open
Rack #2        Voltage:970.3      ContactorStatus:Open
Rack #3        Voltage:1100      ContactorStatus:Closed
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 970.3      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 970.3      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[5.35088s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.35121s  ] [info    ] [PrintVoltageArb] 

Test Number #9 
Test Name: [2 Rack Open (1 above 1 below), both are within the deadband] 

Starting Rack List: 
Rack #1        Voltage:1098.6      ContactorStatus:Open
Rack #2        Voltage:1100.9      ContactorStatus:Open
Rack #3        Voltage:1100      ContactorStatus:Closed
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false

Actual Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false
 


[5.3515s   ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.35181s  ] [info    ] [PrintVoltageArb] 

Test Number #10 
Test Name: [Ignore an open rack that has been configured to be so] 

Starting Rack List: 
Rack #1        Voltage:1098.6      ContactorStatus:Open
Rack #2        Voltage:1100.9      ContactorStatus:Open
Rack #3        Voltage:1100      ContactorStatus:Closed
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:960      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false

Actual Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false
 


[5.35213s  ] [info    ] [BatteryRackBala] After Test
[5.35243s  ] [info    ] [BatteryRackBala] reload == 1 | numRacks[9]
[5.35318s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[5.35355s  ] [info    ] [BatteryRackBala] Before Test
[5.35396s  ] [info    ] [TestVoltageArbi] TestVoltageArbitration
[5.35431s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[5.3547s   ] [info    ] [VoltageArbitrat] minVoltage 1004.5
[5.3551s   ] [info    ] [VoltageArbitrat] minVoltage 1004.5
[5.35542s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 95.5
[5.3558s   ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 95.5
[5.35614s  ] [info    ] [VoltageArbitrat] min 95.5
[5.35642s  ] [info    ] [VoltageArbitrat] bestVoltage 1004.5
[5.35665s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.35701s  ] [info    ] [PrintVoltageArb] 

Test Number #1 
Test Name: [1 Rack Open and Many Closed] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1004.5      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1004.5      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1004.5      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[5.35729s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[5.35759s  ] [info    ] [VoltageArbitrat] minVoltage 1200
[5.35791s  ] [info    ] [VoltageArbitrat] minVoltage 1230.3
[5.35819s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 100
[5.35854s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 130.29999999999995
[5.35887s  ] [info    ] [VoltageArbitrat] min 100
[5.35919s  ] [info    ] [VoltageArbitrat] bestVoltage 1200
[5.35951s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.35995s  ] [info    ] [PrintVoltageArb] 

Test Number #2 
Test Name: [2 Rack Open and Both Above Average] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1200      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1230.3      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1200      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1200      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[5.36055s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[5.36087s  ] [info    ] [VoltageArbitrat] minVoltage 1000.6
[5.36192s  ] [info    ] [VoltageArbitrat] minVoltage 1056.2
[5.36242s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 99.39999999999998
[5.36324s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 43.799999999999955
[5.36391s  ] [info    ] [VoltageArbitrat] min 43.799999999999955
[5.3645s   ] [info    ] [VoltageArbitrat] bestVoltage 1056.2
[5.36502s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.36579s  ] [info    ] [PrintVoltageArb] 

Test Number #3 
Test Name: [2 Rack Open and Both Below Average] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1000.6      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1056.2      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1056.2      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1056.2      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[5.36635s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[5.36682s  ] [info    ] [VoltageArbitrat] minVoltage 1040.8
[5.36809s  ] [info    ] [VoltageArbitrat] minVoltage 1111.1
[5.36855s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 59.200000000000045
[5.3689s   ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 11.099999999999909
[5.36927s  ] [info    ] [VoltageArbitrat] min 11.099999999999909
[5.37214s  ] [info    ] [VoltageArbitrat] bestVoltage 1111.1
[5.37312s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.3738s   ] [info    ] [PrintVoltageArb] 

Test Number #4 
Test Name: [2 Rack Open (1 above and 1 below average) and the above is closer] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1111.1      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1040.8      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1111.1      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1111.1      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[5.37432s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[5.37553s  ] [info    ] [VoltageArbitrat] minVoltage 1040.8
[5.37604s  ] [info    ] [VoltageArbitrat] minVoltage 1220.4
[5.37708s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 59.200000000000045
[5.37763s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 120.40000000000009
[5.37803s  ] [info    ] [VoltageArbitrat] min 59.200000000000045
[5.3784s   ] [info    ] [VoltageArbitrat] bestVoltage 1040.8
[5.37876s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.37918s  ] [info    ] [PrintVoltageArb] 

Test Number #5 
Test Name: [2 Rack Open (1 above and 1 below average) and the below is closer] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1220.4      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1040.8      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1040.8      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1040.8      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[5.3796s   ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.38008s  ] [info    ] [PrintVoltageArb] 

Test Number #6 
Test Name: [1 rack open and is within deadband] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1101      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false

Actual Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false
 


[5.38039s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[5.38074s  ] [info    ] [VoltageArbitrat] minVoltage 1234.5
[5.38102s  ] [info    ] [VoltageArbitrat] minVoltage 1234.5
[5.3813s   ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 134.5
[5.38157s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 134.5
[5.38184s  ] [info    ] [VoltageArbitrat] min 134.5
[5.38212s  ] [info    ] [VoltageArbitrat] bestVoltage 1234.5
[5.38246s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.38291s  ] [info    ] [PrintVoltageArb] 

Test Number #7 
Test Name: [2 Rack Open (both above), one is in the deadband and one is out] 

Starting Rack List: 
Rack #1        Voltage:1234.5      ContactorStatus:Open
Rack #2        Voltage:1101.3      ContactorStatus:Open
Rack #3        Voltage:1100      ContactorStatus:Closed
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1234.5      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1234.5      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[5.38929s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[5.38973s  ] [info    ] [VoltageArbitrat] minVoltage 970.3
[5.39074s  ] [info    ] [VoltageArbitrat] minVoltage 970.3
[5.39173s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 129.70000000000005
[5.3921s   ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 129.70000000000005
[5.39237s  ] [info    ] [VoltageArbitrat] min 129.70000000000005
[5.39329s  ] [info    ] [VoltageArbitrat] bestVoltage 970.3
[5.39376s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.39413s  ] [info    ] [PrintVoltageArb] 

Test Number #8 
Test Name: [2 Rack Open (both below), one is in the deadband and one is out] 

Starting Rack List: 
Rack #1        Voltage:1098.6      ContactorStatus:Open
Rack #2        Voltage:970.3      ContactorStatus:Open
Rack #3        Voltage:1100      ContactorStatus:Closed
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 970.3      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 970.3      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[5.39449s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.39495s  ] [info    ] [PrintVoltageArb] 

Test Number #9 
Test Name: [2 Rack Open (1 above 1 below), both are within the deadband] 

Starting Rack List: 
Rack #1        Voltage:1098.6      ContactorStatus:Open
Rack #2        Voltage:1100.9      ContactorStatus:Open
Rack #3        Voltage:1100      ContactorStatus:Closed
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false

Actual Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false
 


[5.39554s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[5.39681s  ] [info    ] [PrintVoltageArb] 

Test Number #10 
Test Name: [Ignore an open rack that has been configured to be so] 

Starting Rack List: 
Rack #1        Voltage:1098.6      ContactorStatus:Open
Rack #2        Voltage:1100.9      ContactorStatus:Open
Rack #3        Voltage:1100      ContactorStatus:Closed
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:960      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false

Actual Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false
 


[5.39788s  ] [info    ] [BatteryRackBala] After Test
[5.39854s  ] [info    ] [SchedItemOpts  ] @@@@@ [/system/commands:runOpts_bms] found cjopts ready to schedule res1 [0x0] tav [/system/commands:run]
[5.39927s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/summary]
[5.40058s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/summary]
[5.40182s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssetsSummary_bms]
[5.40218s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssetsSummary_bms]
[5.40274s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_ChargeCurrentLimit]
[5.40305s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_ChargeCurrentLimit]
[5.40335s  ] [info    ] [setupCalculateV] Setting up params for [/limits/bms:ChargeCurrentLimit]
[5.40364s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/limits/bms:ChargeCurrentLimit]. This indicates we are including all of asset instance's assetVars with name ChargeCurrentLimit for aggregation
[5.40387s  ] [info    ] [setupCalculateV] [/limits/bms:ChargeCurrentLimit] parent asset manager [bms] asset manager [bms_1]
[5.40421s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_ChargePowerLimit]
[5.40447s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_ChargePowerLimit]
[5.40561s  ] [info    ] [setupCalculateV] Setting up params for [/limits/bms:ChargePowerLimit]
[5.40595s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/limits/bms:ChargePowerLimit]. This indicates we are including all of asset instance's assetVars with name ChargePowerLimit for aggregation
[5.40646s  ] [info    ] [setupCalculateV] [/limits/bms:ChargePowerLimit] parent asset manager [bms] asset manager [bms_1]
[5.40703s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_DischargeCurrentLimit]
[5.40728s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_DischargeCurrentLimit]
[5.40759s  ] [info    ] [setupCalculateV] Setting up params for [/limits/bms:DischargeCurrentLimit]
[5.40786s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/limits/bms:DischargeCurrentLimit]. This indicates we are including all of asset instance's assetVars with name DischargeCurrentLimit for aggregation
[5.40811s  ] [info    ] [setupCalculateV] [/limits/bms:DischargeCurrentLimit] parent asset manager [bms] asset manager [bms_1]
[5.40847s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_DischargePowerLimit]
[5.40872s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_DischargePowerLimit]
[5.40896s  ] [info    ] [setupCalculateV] Setting up params for [/limits/bms:DischargePowerLimit]
[5.40919s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/limits/bms:DischargePowerLimit]. This indicates we are including all of asset instance's assetVars with name DischargePowerLimit for aggregation
[5.40945s  ] [info    ] [setupCalculateV] [/limits/bms:DischargePowerLimit] parent asset manager [bms] asset manager [bms_1]
[5.41049s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_AnyFireFaultActive]
[5.41096s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_AnyFireFaultActive]
[5.41145s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:AnyFireFaultActive]
[5.4119s   ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:AnyFireFaultActive]. This indicates we are including all of asset instance's assetVars with name AnyFireFaultActive for aggregation
[5.41257s  ] [info    ] [setupCalculateV] [/status/bms:AnyFireFaultActive] parent asset manager [bms] asset manager [bms_1]
[5.41317s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [AnyFireFaultActive] for [bms_1]
[5.4136s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:AnyFireFaultActive]
[5.41414s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:AnyFireFaultActive]
[5.41457s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:AnyFireFaultActive]
[5.41493s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:AnyFireFaultActive]
[5.41545s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_AvgCellTemp_Calculated]
[5.41591s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_AvgCellTemp_Calculated]
[5.41628s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:AvgCellTemp_Calculated]
[5.41657s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:AvgCellTemp_Calculated]. This indicates we are including all of asset instance's assetVars with name AvgCellTemp for aggregation
[5.41687s  ] [info    ] [setupCalculateV] [/status/bms:AvgCellTemp_Calculated] parent asset manager [bms] asset manager [bms_1]
[5.41713s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [AvgCellTemp] for [bms_1]
[5.41754s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:AvgCellTemp]
[5.41789s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:AvgCellTemp]
[5.41833s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:AvgCellTemp_Calculated]
[5.41876s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:AvgCellTemp_Calculated]
[5.41941s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_AvgCellVoltage_Calculated]
[5.42003s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_AvgCellVoltage_Calculated]
[5.4204s   ] [info    ] [setupCalculateV] Setting up params for [/status/bms:AvgCellVoltage_Calculated]
[5.42078s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:AvgCellVoltage_Calculated]. This indicates we are including all of asset instance's assetVars with name AvgCellVoltage for aggregation
[5.42125s  ] [info    ] [setupCalculateV] [/status/bms:AvgCellVoltage_Calculated] parent asset manager [bms] asset manager [bms_1]
[5.42165s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [AvgCellVoltage] for [bms_1]
[5.422s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:AvgCellVoltage]
[5.42235s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:AvgCellVoltage]
[5.42278s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:AvgCellVoltage_Calculated]
[5.42313s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:AvgCellVoltage_Calculated]
[5.42377s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_CellTempDelta_Calculated]
[5.42411s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_CellTempDelta_Calculated]
[5.42456s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:CellTempDelta_Calculated]
[5.42489s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:CellTempDelta_Calculated]. This indicates we are including all of asset instance's assetVars with name CellTempDelta for aggregation
[5.42517s  ] [info    ] [setupCalculateV] [/status/bms:CellTempDelta_Calculated] parent asset manager [bms] asset manager [bms_1]
[5.42551s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:CellTempDelta_Calculated]
[5.4258s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:CellTempDelta_Calculated]
[5.42626s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_CellVoltageDelta_Calculated]
[5.42649s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_CellVoltageDelta_Calculated]
[5.42724s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:CellVoltageDelta_Calculated]
[5.42756s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:CellVoltageDelta_Calculated]. This indicates we are including all of asset instance's assetVars with name CellVoltageDelta for aggregation
[5.42793s  ] [info    ] [setupCalculateV] [/status/bms:CellVoltageDelta_Calculated] parent asset manager [bms] asset manager [bms_1]
[5.42828s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:CellVoltageDelta_Calculated]
[5.42861s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:CellVoltageDelta_Calculated]
[5.429s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_ChargeableEnergy]
[5.42927s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_ChargeableEnergy]
[5.42977s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:ChargeableEnergy]
[5.43007s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:ChargeableEnergy]. This indicates we are including all of asset instance's assetVars with name ChargeableEnergy for aggregation
[5.43033s  ] [info    ] [setupCalculateV] [/status/bms:ChargeableEnergy] parent asset manager [bms] asset manager [bms_1]
[5.43062s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [ChargeableEnergy] for [bms_1]
[5.43088s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:ChargeableEnergy]
[5.43122s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:ChargeableEnergy]
[5.4315s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:ChargeableEnergy]
[5.43177s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:ChargeableEnergy]
[5.43219s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_CommsOK]
[5.43259s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_CommsOK]
[5.43285s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:CommsOK]
[5.43343s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:CommsOK]. This indicates we are including all of asset instance's assetVars with name CommsOK for aggregation
[5.43378s  ] [info    ] [setupCalculateV] [/status/bms:CommsOK] parent asset manager [bms] asset manager [bms_1]
[5.43406s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [CommsOK] for [bms_1]
[5.43432s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:CommsOK]
[5.43464s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:CommsOK]
[5.435s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:CommsOK]
[5.43529s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:CommsOK]
[5.4357s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_CurrentBeforeStopIsOK]
[5.43596s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_CurrentBeforeStopIsOK]
[5.43618s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:CurrentBeforeStopIsOK]
[5.43641s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:CurrentBeforeStopIsOK]. This indicates we are including all of asset instance's assetVars with name CurrentBeforeStopIsOK for aggregation
[5.43663s  ] [info    ] [setupCalculateV] [/status/bms:CurrentBeforeStopIsOK] parent asset manager [bms] asset manager [bms_1]
[5.43688s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [CurrentBeforeStopIsOK] for [bms_1]
[5.43715s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:CurrentBeforeStopIsOK]
[5.43745s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:CurrentBeforeStopIsOK]
[5.43779s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:CurrentBeforeStopIsOK]
[5.43805s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:CurrentBeforeStopIsOK]
[5.43837s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_DCCharging]
[5.4386s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_DCCharging]
[5.43887s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:DCCharging]
[5.43916s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:DCCharging]
[5.43941s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:DCCharging]
[5.43982s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_DCClosed]
[5.44042s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_DCClosed]
[5.44117s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:DCClosed]
[5.44221s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:DCClosed]. This indicates we are including all of asset instance's assetVars with name DCClosed for aggregation
[5.44266s  ] [info    ] [setupCalculateV] [/status/bms:DCClosed] parent asset manager [bms] asset manager [bms_1]
[5.44299s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [DCClosed] for [bms_1]
[5.44336s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:DCClosed]
[5.44372s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:DCClosed]
[5.44409s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:DCClosed]
[5.44449s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:DCClosed]
[5.44521s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_DCCurrent_Calculated]
[5.44565s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_DCCurrent_Calculated]
[5.44623s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:DCCurrent_Calculated]
[5.44675s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:DCCurrent_Calculated]. This indicates we are including all of asset instance's assetVars with name DCCurrent for aggregation
[5.44714s  ] [info    ] [setupCalculateV] [/status/bms:DCCurrent_Calculated] parent asset manager [bms] asset manager [bms_1]
[5.44756s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:DCCurrent_Calculated]
[5.448s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:DCCurrent_Calculated]
[5.44849s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_DCDischarging]
[5.44884s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_DCDischarging]
[5.44915s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:DCDischarging]
[5.44954s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:DCDischarging]
[5.44982s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:DCDischarging]
[5.45023s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_DCPower]
[5.45048s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_DCPower]
[5.45076s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:DCPower]
[5.45103s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:DCPower]. This indicates we are including all of asset instance's assetVars with name DCPower for aggregation
[5.45129s  ] [info    ] [setupCalculateV] [/status/bms:DCPower] parent asset manager [bms] asset manager [bms_1]
[5.45153s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [DCPower] for [bms_1]
[5.45183s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:DCPower]
[5.45207s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:DCPower]
[5.45233s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:DCPower]
[5.45256s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:DCPower]
[5.4529s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_DCVoltage_Calculated]
[5.4534s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_DCVoltage_Calculated]
[5.45367s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:DCVoltage_Calculated]
[5.45393s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:DCVoltage_Calculated]. This indicates we are including all of asset instance's assetVars with name DCVoltage for aggregation
[5.45416s  ] [info    ] [setupCalculateV] [/status/bms:DCVoltage_Calculated] parent asset manager [bms] asset manager [bms_1]
[5.4544s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:DCVoltage_Calculated]
[5.45473s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:DCVoltage_Calculated]
[5.45505s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_DischargeableEnergy]
[5.45528s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_DischargeableEnergy]
[5.4555s   ] [info    ] [setupCalculateV] Setting up params for [/status/bms:DischargeableEnergy]
[5.45575s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:DischargeableEnergy]. This indicates we are including all of asset instance's assetVars with name DischargeableEnergy for aggregation
[5.45605s  ] [info    ] [setupCalculateV] [/status/bms:DischargeableEnergy] parent asset manager [bms] asset manager [bms_1]
[5.45647s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [DischargeableEnergy] for [bms_1]
[5.45681s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:DischargeableEnergy]
[5.45704s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:DischargeableEnergy]
[5.45731s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:DischargeableEnergy]
[5.45759s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:DischargeableEnergy]
[5.45807s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_IsAlarming]
[5.45833s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_IsAlarming]
[5.45861s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:IsAlarming]
[5.45885s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:IsAlarming]
[5.45912s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:IsAlarming]
[5.45976s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_IsFaulted]
[5.46022s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_IsFaulted]
[5.46052s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:IsFaulted]
[5.46092s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:IsFaulted]
[5.46116s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:IsFaulted]
[5.4616s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_MaxCellTemp_Calculated]
[5.46207s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_MaxCellTemp_Calculated]
[5.46536s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:MaxCellTemp_Calculated]
[5.46557s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:MaxCellTemp_Calculated]. This indicates we are including all of asset instance's assetVars with name MaxCellTemp for aggregation
[5.46594s  ] [info    ] [setupCalculateV] [/status/bms:MaxCellTemp_Calculated] parent asset manager [bms] asset manager [bms_1]
[5.46614s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:MaxCellTemp_Calculated]
[5.46637s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:MaxCellTemp_Calculated]
[5.46668s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_MaxCellVoltage_Calculated]
[5.46698s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_MaxCellVoltage_Calculated]
[5.46725s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:MaxCellVoltage_Calculated]
[5.46755s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:MaxCellVoltage_Calculated]. This indicates we are including all of asset instance's assetVars with name MaxCellVoltage for aggregation
[5.46784s  ] [info    ] [setupCalculateV] [/status/bms:MaxCellVoltage_Calculated] parent asset manager [bms] asset manager [bms_1]
[5.46811s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:MaxCellVoltage_Calculated]
[5.46831s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:MaxCellVoltage_Calculated]
[5.46868s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_MinCellTemp_Calculated]
[5.46911s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_MinCellTemp_Calculated]
[5.46934s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:MinCellTemp_Calculated]
[5.4698s   ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:MinCellTemp_Calculated]. This indicates we are including all of asset instance's assetVars with name MinCellTemp for aggregation
[5.47011s  ] [info    ] [setupCalculateV] [/status/bms:MinCellTemp_Calculated] parent asset manager [bms] asset manager [bms_1]
[5.47049s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:MinCellTemp_Calculated]
[5.47085s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:MinCellTemp_Calculated]
[5.47157s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_MinCellVoltage_Calculated]
[5.47202s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_MinCellVoltage_Calculated]
[5.47269s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:MinCellVoltage_Calculated]
[5.47343s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:MinCellVoltage_Calculated]. This indicates we are including all of asset instance's assetVars with name MinCellVoltage for aggregation
[5.47402s  ] [info    ] [setupCalculateV] [/status/bms:MinCellVoltage_Calculated] parent asset manager [bms] asset manager [bms_1]
[5.47466s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:MinCellVoltage_Calculated]
[5.4751s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:MinCellVoltage_Calculated]
[5.47642s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_NumRacksOnline_Calculated]
[5.47758s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_NumRacksOnline_Calculated]
[5.47823s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:NumRacksOnline_Calculated]
[5.4788s   ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:NumRacksOnline_Calculated]. This indicates we are including all of asset instance's assetVars with name NumRacksOnline for aggregation
[5.47967s  ] [info    ] [setupCalculateV] [/status/bms:NumRacksOnline_Calculated] parent asset manager [bms] asset manager [bms_1]
[5.48071s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:NumRacksOnline_Calculated]
[5.48116s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:NumRacksOnline_Calculated]
[5.48185s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_NumRacksTotal]
[5.48224s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_NumRacksTotal]
[5.48263s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:NumRacksTotal]
[5.48296s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:NumRacksTotal]. This indicates we are including all of asset instance's assetVars with name NumRacksTotal for aggregation
[5.48327s  ] [info    ] [setupCalculateV] [/status/bms:NumRacksTotal] parent asset manager [bms] asset manager [bms_1]
[5.48356s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [NumRacksTotal] for [bms_1]
[5.48386s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:NumRacksTotal]
[5.4841s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:NumRacksTotal]
[5.4844s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:NumRacksTotal]
[5.48469s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:NumRacksTotal]
[5.48509s  ] [error   ] [setOutValue    ] Warning possible loopbackvar [/status/bms:NumRacksTotal] check abf->useAv [false]
[5.48542s  ] [error   ] [setOutValue    ] Warning possible loopbackvar [/status/bms:NumRacksTotal] no write
[5.48575s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_OverCurrentAlarm]
[5.48671s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_OverCurrentAlarm]
[5.48716s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:OverCurrentAlarm]
[5.48748s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:OverCurrentAlarm]
[5.4877s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:OverCurrentAlarm]
[5.48801s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_OverCurrentFault]
[5.48831s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_OverCurrentFault]
[5.48858s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:OverCurrentFault]
[5.48885s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:OverCurrentFault]
[5.4891s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:OverCurrentFault]
[5.48957s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_SOC_Calculated]
[5.48992s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_SOC_Calculated]
[5.49028s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:SOC_Calculated]
[5.49062s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:SOC_Calculated]. This indicates we are including all of asset instance's assetVars with name SOC for aggregation
[5.49093s  ] [info    ] [setupCalculateV] [/status/bms:SOC_Calculated] parent asset manager [bms] asset manager [bms_1]
[5.49166s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:SOC_Calculated]
[5.49196s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:SOC_Calculated]
[5.49237s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_SOH_Calculated]
[5.49263s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_SOH_Calculated]
[5.49296s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:SOH_Calculated]
[5.49331s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:SOH_Calculated]. This indicates we are including all of asset instance's assetVars with name SOH for aggregation
[5.4936s   ] [info    ] [setupCalculateV] [/status/bms:SOH_Calculated] parent asset manager [bms] asset manager [bms_1]
[5.49387s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:SOH_Calculated]
[5.49412s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:SOH_Calculated]
[5.49448s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_TotalAlarmCnt]
[5.49477s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_TotalAlarmCnt]
[5.4952s   ] [info    ] [setupCalculateV] Setting up params for [/status/bms:TotalAlarmCnt]
[5.49544s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:TotalAlarmCnt]. This indicates we are including all of asset instance's assetVars with name TotalAlarmCnt for aggregation
[5.49568s  ] [info    ] [setupCalculateV] [/status/bms:TotalAlarmCnt] parent asset manager [bms] asset manager [bms_1]
[5.4959s   ] [info    ] [setupCalculateV] Creating AM, default double assetVar [TotalAlarmCnt] for [bms_1]
[5.49616s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:TotalAlarmCnt]
[5.49652s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:TotalAlarmCnt]
[5.49678s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:TotalAlarmCnt]
[5.49699s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:TotalAlarmCnt]
[5.49729s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_TotalFaultCnt]
[5.49754s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_TotalFaultCnt]
[5.49778s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:TotalFaultCnt]
[5.49797s  ] [info    ] [setupCalculateV] Found the name of the asset [bms] in param [variable1] in [/status/bms:TotalFaultCnt]. This indicates we are including all of asset instance's assetVars with name TotalFaultCnt for aggregation
[5.49827s  ] [info    ] [setupCalculateV] [/status/bms:TotalFaultCnt] parent asset manager [bms] asset manager [bms_1]
[5.49855s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [TotalFaultCnt] for [bms_1]
[5.49887s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:TotalFaultCnt]
[5.49913s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:TotalFaultCnt]
[5.49945s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:TotalFaultCnt]
[5.49986s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:TotalFaultCnt]
[5.50025s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_UnderCurrentAlarm]
[5.50089s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_UnderCurrentAlarm]
[5.50118s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:UnderCurrentAlarm]
[5.50145s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:UnderCurrentAlarm]
[5.50168s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:UnderCurrentAlarm]
[5.50201s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_UnderCurrentFault]
[5.50223s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_UnderCurrentFault]
[5.50245s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:UnderCurrentFault]
[5.50266s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:UnderCurrentFault]
[5.50284s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:UnderCurrentFault]
[5.50396s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_bms]
[5.50423s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_bms]
[5.50454s  ] [info    ] [setParamfromAf ]  created var for uri [/components/bms] as [/components/bms:status]
[5.5048s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_bms]
[5.50501s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_bms]
[5.50527s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms:CalculateVar_HeartbeatWrite]
[5.50546s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms:CalculateVar_HeartbeatWrite]
[5.50568s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms:HeartbeatWrite]
[5.50619s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms:HeartbeatWrite]
[5.5103s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms:HeartbeatWrite]
[5.51135s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [updateHeartbeatWrite_bms]
[5.51189s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [updateHeartbeatWrite_bms]
[5.51274s  ] [info    ] [SchedItemOpts  ] @@@@@ [/system/commands:runOpts_bms_1] found cjopts ready to schedule res1 [0x0] tav [/system/commands:run]
[5.51327s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/bms_1]
[5.51354s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms/bms_1]
[5.51407s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_bms_1]
[5.51436s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_bms_1]
[5.51475s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CalculateVar_CloseContactorsEnable]
[5.51517s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CalculateVar_CloseContactorsEnable]
[5.51592s  ] [info    ] [setupCalculateV] Setting up params for [/controls/bms_1:CloseContactorsEnable]
[5.51622s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:CloseContactorsEnable]
[5.51654s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:CloseContactorsEnable]
[5.51693s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CalculateVar_OpenContactorsEnable]
[5.51721s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CalculateVar_OpenContactorsEnable]
[5.51763s  ] [info    ] [setupCalculateV] Setting up params for [/controls/bms_1:OpenContactorsEnable]
[5.51826s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:OpenContactorsEnable]
[5.51983s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:OpenContactorsEnable]
[5.52039s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CalculateVar_AnyFireFaultActive]
[5.52063s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CalculateVar_AnyFireFaultActive]
[5.5209s   ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1:AnyFireFaultActive]
[5.52118s  ] [info    ] [setupCalculateV] Found the name of the asset [bms_1] in param [variable1] in [/status/bms_1:AnyFireFaultActive]. This indicates we are including all of asset instance's assetVars with name AnyFireFaultActive for aggregation
[5.52141s  ] [info    ] [setupCalculateV] [/status/bms_1:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [bms_1_rack_1]
[5.52171s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [bms_1_rack_1]
[5.52201s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_1:AnyFireFaultActive]
[5.52231s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_1:AnyFireFaultActive]
[5.52265s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/bms_1_rack_1:AnyFireFaultActive] ptr am [0x0] ai [0x7f57e41007b0] 
[5.52295s  ] [info    ] [setupCalculateV] [/status/bms_1:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [bms_1_rack_2]
[5.52338s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [bms_1_rack_2]
[5.5238s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_2:AnyFireFaultActive]
[5.5241s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_2:AnyFireFaultActive]
[5.52466s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/bms_1_rack_2:AnyFireFaultActive] ptr am [0x0] ai [0x7f57e40b58e0] 
[5.52501s  ] [info    ] [setupCalculateV] [/status/bms_1:AnyFireFaultActive] asset manager [AnyFireFaultActive] asset instance [bms_1_rack_3]
[5.52532s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [AnyFireFaultActive] for [bms_1_rack_3]
[5.52579s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_3:AnyFireFaultActive]
[5.52617s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_3:AnyFireFaultActive]
[5.52654s  ] [info    ] [setupCalculateV] Checking AI assetVar [AnyFireFaultActive]  fname [/status/bms_1_rack_3:AnyFireFaultActive] ptr am [0x0] ai [0x7f57e42c4250] 
[5.52734s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CalculateVar_CellTempDelta_Calculated]
[5.52766s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CalculateVar_CellTempDelta_Calculated]
[5.52798s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1:CellTempDelta_Calculated]
[5.52834s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:CellTempDelta_Calculated]
[5.5286s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:CellTempDelta_Calculated]
[5.52899s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CalculateVar_CellVoltageDelta_Calculated]
[5.52923s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CalculateVar_CellVoltageDelta_Calculated]
[5.52945s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1:CellVoltageDelta_Calculated]
[5.52979s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:CellVoltageDelta_Calculated]
[5.53015s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:CellVoltageDelta_Calculated]
[5.53077s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CalculateVar_CurrentBeforeStopIsOK]
[5.53117s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CalculateVar_CurrentBeforeStopIsOK]
[5.53144s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1:CurrentBeforeStopIsOK]
[5.53177s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CalculateVar_DCCharging]
[5.53196s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CalculateVar_DCCharging]
[5.53215s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1:DCCharging]
[5.53237s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:DCCharging]
[5.53255s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:DCCharging]
[5.53284s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CalculateVar_DCDischarging]
[5.53301s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CalculateVar_DCDischarging]
[5.53324s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1:DCDischarging]
[5.53345s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:DCDischarging]
[5.53365s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:DCDischarging]
[5.53393s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CalculateVar_IsAlarming]
[5.53411s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CalculateVar_IsAlarming]
[5.53434s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1:IsAlarming]
[5.53455s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:IsAlarming]
[5.53473s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:IsAlarming]
[5.53497s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CalculateVar_IsFaulted]
[5.53515s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CalculateVar_IsFaulted]
[5.53535s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1:IsFaulted]
[5.53556s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:IsFaulted]
[5.53592s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:IsFaulted]
[5.5363s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CalculateVar_OverCurrentAlarm]
[5.53658s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CalculateVar_OverCurrentAlarm]
[5.5368s   ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1:OverCurrentAlarm]
[5.53706s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:OverCurrentAlarm]
[5.53732s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:OverCurrentAlarm]
[5.53765s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CalculateVar_OverCurrentFault]
[5.5381s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CalculateVar_OverCurrentFault]
[5.53839s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1:OverCurrentFault]
[5.5387s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:OverCurrentFault]
[5.53898s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:OverCurrentFault]
[5.53945s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CalculateVar_TotalAlarmCnt]
[5.53971s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CalculateVar_TotalAlarmCnt]
[5.53999s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1:TotalAlarmCnt]
[5.5402s   ] [info    ] [setupCalculateV] Found the name of the asset [bms_1] in param [variable1] in [/status/bms_1:TotalAlarmCnt]. This indicates we are including all of asset instance's assetVars with name TotalAlarmCnt for aggregation
[5.54042s  ] [info    ] [setupCalculateV] [/status/bms_1:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [bms_1_rack_1]
[5.54069s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [bms_1_rack_1]
[5.54096s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_1:TotalAlarmCnt]
[5.54122s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_1:TotalAlarmCnt]
[5.54152s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/bms_1_rack_1:TotalAlarmCnt] ptr am [0x0] ai [0x7f57e41007b0] 
[5.54173s  ] [info    ] [setupCalculateV] [/status/bms_1:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [bms_1_rack_2]
[5.54204s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [bms_1_rack_2]
[5.54229s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_2:TotalAlarmCnt]
[5.54259s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_2:TotalAlarmCnt]
[5.54289s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/bms_1_rack_2:TotalAlarmCnt] ptr am [0x0] ai [0x7f57e40b58e0] 
[5.54323s  ] [info    ] [setupCalculateV] [/status/bms_1:TotalAlarmCnt] asset manager [TotalAlarmCnt] asset instance [bms_1_rack_3]
[5.54348s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalAlarmCnt] for [bms_1_rack_3]
[5.54371s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_3:TotalAlarmCnt]
[5.54392s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_3:TotalAlarmCnt]
[5.54414s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalAlarmCnt]  fname [/status/bms_1_rack_3:TotalAlarmCnt] ptr am [0x0] ai [0x7f57e42c4250] 
[5.54446s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CalculateVar_TotalFaultCnt]
[5.54471s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CalculateVar_TotalFaultCnt]
[5.54499s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1:TotalFaultCnt]
[5.54538s  ] [info    ] [setupCalculateV] Found the name of the asset [bms_1] in param [variable1] in [/status/bms_1:TotalFaultCnt]. This indicates we are including all of asset instance's assetVars with name TotalFaultCnt for aggregation
[5.5456s   ] [info    ] [setupCalculateV] [/status/bms_1:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [bms_1_rack_1]
[5.54585s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [bms_1_rack_1]
[5.54653s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_1:TotalFaultCnt]
[5.54684s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_1:TotalFaultCnt]
[5.54717s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/bms_1_rack_1:TotalFaultCnt] ptr am [0x0] ai [0x7f57e41007b0] 
[5.54762s  ] [info    ] [setupCalculateV] [/status/bms_1:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [bms_1_rack_2]
[5.55017s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [bms_1_rack_2]
[5.55048s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_2:TotalFaultCnt]
[5.55073s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_2:TotalFaultCnt]
[5.55103s  ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/bms_1_rack_2:TotalFaultCnt] ptr am [0x0] ai [0x7f57e40b58e0] 
[5.5513s   ] [info    ] [setupCalculateV] [/status/bms_1:TotalFaultCnt] asset manager [TotalFaultCnt] asset instance [bms_1_rack_3]
[5.55158s  ] [info    ] [setupCalculateV] Creating AI default double assetVar [TotalFaultCnt] for [bms_1_rack_3]
[5.55181s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_3:TotalFaultCnt]
[5.55203s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_3:TotalFaultCnt]
[5.5523s   ] [info    ] [setupCalculateV] Checking AI assetVar [TotalFaultCnt]  fname [/status/bms_1_rack_3:TotalFaultCnt] ptr am [0x0] ai [0x7f57e42c4250] 
[5.55263s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CalculateVar_UnderCurrentAlarm]
[5.55289s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CalculateVar_UnderCurrentAlarm]
[5.55313s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1:UnderCurrentAlarm]
[5.55348s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:UnderCurrentAlarm]
[5.55373s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:UnderCurrentAlarm]
[5.55405s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CalculateVar_UnderCurrentFault]
[5.55428s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CalculateVar_UnderCurrentFault]
[5.55451s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1:UnderCurrentFault]
[5.55476s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:UnderCurrentFault]
[5.55495s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:UnderCurrentFault]
[5.55592s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_bms_1]
[5.55617s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_bms_1]
[5.55655s  ] [info    ] [setParamfromAf ]  created var for uri [/components/bms_1] as [/components/bms_1:status]
[5.5569s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_bms_1]
[5.55717s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_bms_1]
[5.55752s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1:CalculateVar_HeartbeatWrite]
[5.5578s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1:CalculateVar_HeartbeatWrite]
[5.55807s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1:HeartbeatWrite]
[5.55836s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1:HeartbeatWrite]
[5.55866s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1:HeartbeatWrite]
[5.55987s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [updateHeartbeatWrite_bms_1]
[5.56061s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [updateHeartbeatWrite_bms_1]
[5.56151s  ] [info    ] [SchedItemOpts  ] @@@@@ [/system/commands:runOpts_rack] found cjopts ready to schedule res1 [0x0] tav [/system/commands:run]
[5.56289s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms_1/rack_1]
[5.5633s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms_1/rack_1]
[5.56419s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_bms_1_rack_1]
[5.56455s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_bms_1_rack_1]
[5.56527s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/bms_1_rack_1:AnyFireFaultActive]  aname [bms_1_rack_1] av->am 0x0
[5.56591s  ] [warning ] [runMonitorList2] avm [/status/bms_1_rack_1:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms_1] to avm
[5.56681s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1_rack_1:CalculateVar_AnyFireFaultActive]
[5.56717s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1_rack_1:CalculateVar_AnyFireFaultActive]
[5.56768s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1_rack_1:AnyFireFaultActive]
[5.56808s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/bms_1_rack_1:CellTempDelta_Calculated]  aname [bms_1_rack_1] av->am 0x0
[5.56874s  ] [warning ] [runMonitorList2] avm [/status/bms_1_rack_1:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms_1] to avm
[5.57094s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1_rack_1:CalculateVar_CellTempDelta_Calculated]
[5.57144s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1_rack_1:CalculateVar_CellTempDelta_Calculated]
[5.57185s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1_rack_1:CellTempDelta_Calculated]
[5.57225s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_1:CellTempDelta_Calculated]
[5.57257s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_1:CellTempDelta_Calculated]
[5.57303s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/bms_1_rack_1:CellVoltageDelta_Calculated]  aname [bms_1_rack_1] av->am 0x0
[5.57335s  ] [warning ] [runMonitorList2] avm [/status/bms_1_rack_1:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms_1] to avm
[5.57372s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1_rack_1:CalculateVar_CellVoltageDelta_Calculated]
[5.57401s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1_rack_1:CalculateVar_CellVoltageDelta_Calculated]
[5.57433s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1_rack_1:CellVoltageDelta_Calculated]
[5.57514s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_1:CellVoltageDelta_Calculated]
[5.5755s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_1:CellVoltageDelta_Calculated]
[5.57594s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/bms_1_rack_1:TotalAlarmCnt]  aname [bms_1_rack_1] av->am 0x0
[5.57622s  ] [warning ] [runMonitorList2] avm [/status/bms_1_rack_1:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms_1] to avm
[5.57649s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1_rack_1:CalculateVar_TotalAlarmCnt]
[5.57673s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1_rack_1:CalculateVar_TotalAlarmCnt]
[5.57699s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1_rack_1:TotalAlarmCnt]
[5.57731s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/bms_1_rack_1:TotalFaultCnt]  aname [bms_1_rack_1] av->am 0x0
[5.57762s  ] [warning ] [runMonitorList2] avm [/status/bms_1_rack_1:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms_1] to avm
[5.57813s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1_rack_1:CalculateVar_TotalFaultCnt]
[5.57833s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1_rack_1:CalculateVar_TotalFaultCnt]
[5.57857s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1_rack_1:TotalFaultCnt]
[5.57905s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_bms_1_rack_1]
[5.57927s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_bms_1_rack_1]
[5.57962s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_bms_1_rack_1]
[5.57988s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_bms_1_rack_1]
[5.58026s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms_1/rack_2]
[5.58052s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms_1/rack_2]
[5.58105s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_bms_1_rack_2]
[5.58129s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_bms_1_rack_2]
[5.58165s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/bms_1_rack_2:AnyFireFaultActive]  aname [bms_1_rack_2] av->am 0x0
[5.5819s   ] [warning ] [runMonitorList2] avm [/status/bms_1_rack_2:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms_1] to avm
[5.58213s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1_rack_2:CalculateVar_AnyFireFaultActive]
[5.58241s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1_rack_2:CalculateVar_AnyFireFaultActive]
[5.58262s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1_rack_2:AnyFireFaultActive]
[5.58285s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/bms_1_rack_2:CellTempDelta_Calculated]  aname [bms_1_rack_2] av->am 0x0
[5.58303s  ] [warning ] [runMonitorList2] avm [/status/bms_1_rack_2:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms_1] to avm
[5.58324s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1_rack_2:CalculateVar_CellTempDelta_Calculated]
[5.58344s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1_rack_2:CalculateVar_CellTempDelta_Calculated]
[5.58372s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1_rack_2:CellTempDelta_Calculated]
[5.58392s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_2:CellTempDelta_Calculated]
[5.5841s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_2:CellTempDelta_Calculated]
[5.58432s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/bms_1_rack_2:CellVoltageDelta_Calculated]  aname [bms_1_rack_2] av->am 0x0
[5.5845s   ] [warning ] [runMonitorList2] avm [/status/bms_1_rack_2:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms_1] to avm
[5.58469s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1_rack_2:CalculateVar_CellVoltageDelta_Calculated]
[5.58487s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1_rack_2:CalculateVar_CellVoltageDelta_Calculated]
[5.58504s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1_rack_2:CellVoltageDelta_Calculated]
[5.58526s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_2:CellVoltageDelta_Calculated]
[5.58545s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_2:CellVoltageDelta_Calculated]
[5.5857s   ] [info    ] [runMonitorList2] try to fix up  am for [/status/bms_1_rack_2:TotalAlarmCnt]  aname [bms_1_rack_2] av->am 0x0
[5.58586s  ] [warning ] [runMonitorList2] avm [/status/bms_1_rack_2:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms_1] to avm
[5.58606s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1_rack_2:CalculateVar_TotalAlarmCnt]
[5.58623s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1_rack_2:CalculateVar_TotalAlarmCnt]
[5.58639s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1_rack_2:TotalAlarmCnt]
[5.58663s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/bms_1_rack_2:TotalFaultCnt]  aname [bms_1_rack_2] av->am 0x0
[5.58677s  ] [warning ] [runMonitorList2] avm [/status/bms_1_rack_2:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms_1] to avm
[5.58698s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1_rack_2:CalculateVar_TotalFaultCnt]
[5.58713s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1_rack_2:CalculateVar_TotalFaultCnt]
[5.58729s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1_rack_2:TotalFaultCnt]
[5.58761s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_bms_1_rack_2]
[5.58779s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_bms_1_rack_2]
[5.58807s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_bms_1_rack_2]
[5.58829s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_bms_1_rack_2]
[5.58868s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/bms_1/rack_3]
[5.58895s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/bms_1/rack_3]
[5.5897s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_bms_1_rack_3]
[5.59s     ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_bms_1_rack_3]
[5.59048s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/bms_1_rack_3:AnyFireFaultActive]  aname [bms_1_rack_3] av->am 0x0
[5.59075s  ] [warning ] [runMonitorList2] avm [/status/bms_1_rack_3:AnyFireFaultActive] is missing an asset manager (am). Assigning asset manager [bms_1] to avm
[5.59104s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1_rack_3:CalculateVar_AnyFireFaultActive]
[5.59131s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1_rack_3:CalculateVar_AnyFireFaultActive]
[5.5916s   ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1_rack_3:AnyFireFaultActive]
[5.59199s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/bms_1_rack_3:CellTempDelta_Calculated]  aname [bms_1_rack_3] av->am 0x0
[5.59224s  ] [warning ] [runMonitorList2] avm [/status/bms_1_rack_3:CellTempDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms_1] to avm
[5.59254s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1_rack_3:CalculateVar_CellTempDelta_Calculated]
[5.59285s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1_rack_3:CalculateVar_CellTempDelta_Calculated]
[5.59326s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1_rack_3:CellTempDelta_Calculated]
[5.59414s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_3:CellTempDelta_Calculated]
[5.59458s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_3:CellTempDelta_Calculated]
[5.59492s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/bms_1_rack_3:CellVoltageDelta_Calculated]  aname [bms_1_rack_3] av->am 0x0
[5.59519s  ] [warning ] [runMonitorList2] avm [/status/bms_1_rack_3:CellVoltageDelta_Calculated] is missing an asset manager (am). Assigning asset manager [bms_1] to avm
[5.59545s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1_rack_3:CalculateVar_CellVoltageDelta_Calculated]
[5.59569s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1_rack_3:CalculateVar_CellVoltageDelta_Calculated]
[5.59594s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1_rack_3:CellVoltageDelta_Calculated]
[5.59628s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/bms_1_rack_3:CellVoltageDelta_Calculated]
[5.59685s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/bms_1_rack_3:CellVoltageDelta_Calculated]
[5.59762s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/bms_1_rack_3:TotalAlarmCnt]  aname [bms_1_rack_3] av->am 0x0
[5.59795s  ] [warning ] [runMonitorList2] avm [/status/bms_1_rack_3:TotalAlarmCnt] is missing an asset manager (am). Assigning asset manager [bms_1] to avm
[5.59859s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1_rack_3:CalculateVar_TotalAlarmCnt]
[5.59885s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1_rack_3:CalculateVar_TotalAlarmCnt]
[5.59914s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1_rack_3:TotalAlarmCnt]
[5.59953s  ] [info    ] [runMonitorList2] try to fix up  am for [/status/bms_1_rack_3:TotalFaultCnt]  aname [bms_1_rack_3] av->am 0x0
[5.59987s  ] [warning ] [runMonitorList2] avm [/status/bms_1_rack_3:TotalFaultCnt] is missing an asset manager (am). Assigning asset manager [bms_1] to avm
[5.60023s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/bms_1_rack_3:CalculateVar_TotalFaultCnt]
[5.60054s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/bms_1_rack_3:CalculateVar_TotalFaultCnt]
[5.60086s  ] [info    ] [setupCalculateV] Setting up params for [/status/bms_1_rack_3:TotalFaultCnt]
[5.6015s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_bms_1_rack_3]
[5.60182s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_bms_1_rack_3]
[5.60245s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_bms_1_rack_3]
[5.6028s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_bms_1_rack_3]
[5.60322s  ] [info    ] [SchedItemOpts  ] @@@@@ [/system/commands:runOpts_pcs] found cjopts ready to schedule res1 [0x0] tav [/system/commands:run]
[5.60349s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/summary]
[5.60375s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/summary]
[5.60432s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssetsSummary_pcs]
[5.60454s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssetsSummary_pcs]
[5.60486s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerCmdConvert]
[5.60512s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerCmdConvert]
[5.60532s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ActivePowerCmdConvert]
[5.60557s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ActivePowerCmdConvert]
[5.60577s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ActivePowerCmdConvert]
[5.60602s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerCmdReal]
[5.6062s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerCmdReal]
[5.60642s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ActivePowerCmdReal]
[5.60666s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/controls/pcs:ActivePowerCmdReal]. This indicates we are including all of asset instance's assetVars with name ActivePowerCmdReal for aggregation
[5.60691s  ] [info    ] [setupCalculateV] [/controls/pcs:ActivePowerCmdReal] parent asset manager [pcs] asset manager [pcs_1]
[5.60718s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerRampRateCmdConvert]
[5.60738s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerRampRateCmdConvert]
[5.60757s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ActivePowerRampRateCmdConvert]
[5.60785s  ] [info    ] [setupCalculateV] assetVar param /controls/pcs:ActivePowerRampRate does not exist. Creating new one for am [pcs]
[5.60813s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ActivePowerRampRateCmdConvert]
[5.60836s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ActivePowerRampRateCmdConvert]
[5.60881s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ActivePowerRampRateCmd]
[5.60944s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [1] to [/controls/pcs:ActivePowerRampRateCmd]","severity":1}]
[5.61063s  ] [info    ] [record         ] Sent command value [1] to [/controls/pcs:ActivePowerRampRateCmd]
[5.61109s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ActivePowerRampRateCmdSuccess]
[5.61158s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ActivePowerRampRateCmdSuccess]
[5.61217s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [1] from [/controls/pcs:ActivePowerRampRateCmd]","severity":1}]
[5.61255s  ] [info    ] [record         ] Received command value [1] from [/controls/pcs:ActivePowerRampRateCmd]
[5.61289s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerSetpointEnable]
[5.61328s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerSetpointEnable]
[5.61364s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ActivePowerSetpointEnable]
[5.61391s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ActivePowerSetpointEnable]
[5.6142s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ActivePowerSetpointEnable]
[5.61455s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_FrequencySetpointEnable]
[5.61476s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_FrequencySetpointEnable]
[5.615s    ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:FrequencySetpointEnable]
[5.61522s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:FrequencySetpointEnable]
[5.61541s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:FrequencySetpointEnable]
[5.61567s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_GridFollowPQEnable]
[5.61592s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_GridFollowPQEnable]
[5.61613s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:GridFollowPQEnable]
[5.61631s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:GridFollowPQEnable]
[5.61647s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:GridFollowPQEnable]
[5.61676s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_GridFormVFEnable]
[5.61692s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_GridFormVFEnable]
[5.61707s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:GridFormVFEnable]
[5.61725s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:GridFormVFEnable]
[5.6174s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:GridFormVFEnable]
[5.61766s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_GridFormVSGEnable]
[5.61783s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_GridFormVSGEnable]
[5.61801s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:GridFormVSGEnable]
[5.61824s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:GridFormVSGEnable]
[5.61842s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:GridFormVSGEnable]
[5.61869s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerCmdConvert]
[5.61931s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerCmdConvert]
[5.61957s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ReactivePowerCmdConvert]
[5.6199s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ReactivePowerCmdConvert]
[5.62019s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ReactivePowerCmdConvert]
[5.62051s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerCmdReal]
[5.62073s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerCmdReal]
[5.62099s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ReactivePowerCmdReal]
[5.62121s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/controls/pcs:ReactivePowerCmdReal]. This indicates we are including all of asset instance's assetVars with name ReactivePowerCmdReal for aggregation
[5.62145s  ] [info    ] [setupCalculateV] [/controls/pcs:ReactivePowerCmdReal] parent asset manager [pcs] asset manager [pcs_1]
[5.62181s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerRampRateCmdConvert]
[5.62202s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerRampRateCmdConvert]
[5.62225s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ReactivePowerRampRateCmdConvert]
[5.62247s  ] [info    ] [setupCalculateV] assetVar param /controls/pcs:ReactivePowerRampRate does not exist. Creating new one for am [pcs]
[5.6227s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ReactivePowerRampRateCmdConvert]
[5.62291s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ReactivePowerRampRateCmdConvert]
[5.62322s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs] with [/controls/pcs:ReactivePowerRampRateCmd]
[5.62352s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Sent command value [1] to [/controls/pcs:ReactivePowerRampRateCmd]","severity":1}]
[5.62388s  ] [info    ] [record         ] Sent command value [1] to [/controls/pcs:ReactivePowerRampRateCmd]
[5.62434s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ReactivePowerRampRateCmdSuccess]
[5.62468s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ReactivePowerRampRateCmdSuccess]
[5.625s    ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs","message":"Received command value [1] from [/controls/pcs:ReactivePowerRampRateCmd]","severity":1}]
[5.62525s  ] [info    ] [record         ] Received command value [1] from [/controls/pcs:ReactivePowerRampRateCmd]
[5.62564s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerSetpointEnable]
[5.6259s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerSetpointEnable]
[5.62614s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:ReactivePowerSetpointEnable]
[5.62644s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ReactivePowerSetpointEnable]
[5.62688s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ReactivePowerSetpointEnable]
[5.62742s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_VoltageSetpointEnable]
[5.62763s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_VoltageSetpointEnable]
[5.62809s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs:VoltageSetpointEnable]
[5.62838s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:VoltageSetpointEnable]
[5.62862s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:VoltageSetpointEnable]
[5.62892s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_MaxPCSChargePower]
[5.62914s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_MaxPCSChargePower]
[5.62939s  ] [info    ] [setupCalculateV] Setting up params for [/limits/pcs:MaxPCSChargePower]
[5.62962s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/limits/pcs:MaxPCSChargePower]. This indicates we are including all of asset instance's assetVars with name MaxPCSChargePower for aggregation
[5.62987s  ] [info    ] [setupCalculateV] [/limits/pcs:MaxPCSChargePower] parent asset manager [pcs] asset manager [pcs_1]
[5.63021s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_MaxPCSDischargePower]
[5.63045s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_MaxPCSDischargePower]
[5.63075s  ] [info    ] [setupCalculateV] Setting up params for [/limits/pcs:MaxPCSDischargePower]
[5.63098s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/limits/pcs:MaxPCSDischargePower]. This indicates we are including all of asset instance's assetVars with name MaxPCSDischargePower for aggregation
[5.63118s  ] [info    ] [setupCalculateV] [/limits/pcs:MaxPCSDischargePower] parent asset manager [pcs] asset manager [pcs_1]
[5.63153s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_RatedActivePower]
[5.63181s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_RatedActivePower]
[5.6321s   ] [info    ] [setupCalculateV] Setting up params for [/limits/pcs:RatedActivePower]
[5.63243s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/limits/pcs:RatedActivePower]. This indicates we are including all of asset instance's assetVars with name RatedActivePower for aggregation
[5.63273s  ] [info    ] [setupCalculateV] [/limits/pcs:RatedActivePower] parent asset manager [pcs] asset manager [pcs_1]
[5.63305s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_RatedApparentPower]
[5.63334s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_RatedApparentPower]
[5.63361s  ] [info    ] [setupCalculateV] Setting up params for [/limits/pcs:RatedApparentPower]
[5.63386s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/limits/pcs:RatedApparentPower]. This indicates we are including all of asset instance's assetVars with name RatedApparentPower for aggregation
[5.63403s  ] [info    ] [setupCalculateV] [/limits/pcs:RatedApparentPower] parent asset manager [pcs] asset manager [pcs_1]
[5.6343s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_RatedReactivePower]
[5.63446s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_RatedReactivePower]
[5.63467s  ] [info    ] [setupCalculateV] Setting up params for [/limits/pcs:RatedReactivePower]
[5.63488s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/limits/pcs:RatedReactivePower]. This indicates we are including all of asset instance's assetVars with name RatedReactivePower for aggregation
[5.63509s  ] [info    ] [setupCalculateV] [/limits/pcs:RatedReactivePower] parent asset manager [pcs] asset manager [pcs_1]
[5.6354s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerRampRateFeedback]
[5.63564s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerRampRateFeedback]
[5.63589s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:ActivePowerRampRateFeedback]
[5.6361s   ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:ActivePowerRampRateFeedback]. This indicates we are including all of asset instance's assetVars with name ActivePowerRampRateFeedback for aggregation
[5.63631s  ] [info    ] [setupCalculateV] [/status/pcs:ActivePowerRampRateFeedback] parent asset manager [pcs] asset manager [pcs_1]
[5.63651s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [ActivePowerRampRateFeedback] for [pcs_1]
[5.63673s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:ActivePowerRampRateFeedback]
[5.6369s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:ActivePowerRampRateFeedback]
[5.63712s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ActivePowerRampRateFeedback]
[5.63731s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ActivePowerRampRateFeedback]
[5.63757s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerSetpointFeedback]
[5.63777s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ActivePowerSetpointFeedback]
[5.63798s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:ActivePowerSetpointFeedback]
[5.63821s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:ActivePowerSetpointFeedback]. This indicates we are including all of asset instance's assetVars with name ActivePowerSetpointFeedback for aggregation
[5.63841s  ] [info    ] [setupCalculateV] [/status/pcs:ActivePowerSetpointFeedback] parent asset manager [pcs] asset manager [pcs_1]
[5.63861s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [ActivePowerSetpointFeedback] for [pcs_1]
[5.63886s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:ActivePowerSetpointFeedback]
[5.63911s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:ActivePowerSetpointFeedback]
[5.63937s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ActivePowerSetpointFeedback]
[5.6396s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ActivePowerSetpointFeedback]
[5.63997s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ActivePower_Calculated]
[5.6409s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ActivePower_Calculated]
[5.64132s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:ActivePower_Calculated]
[5.64166s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:ActivePower_Calculated]. This indicates we are including all of asset instance's assetVars with name ActivePower for aggregation
[5.64193s  ] [info    ] [setupCalculateV] [/status/pcs:ActivePower_Calculated] parent asset manager [pcs] asset manager [pcs_1]
[5.64226s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ActivePower_Calculated]
[5.64279s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ActivePower_Calculated]
[5.64315s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ApparentPower]
[5.64354s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ApparentPower]
[5.64429s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:ApparentPower]
[5.64482s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:ApparentPower]. This indicates we are including all of asset instance's assetVars with name ApparentPower for aggregation
[5.64518s  ] [info    ] [setupCalculateV] [/status/pcs:ApparentPower] parent asset manager [pcs] asset manager [pcs_1]
[5.64557s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [ApparentPower] for [pcs_1]
[5.64596s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:ApparentPower]
[5.64652s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:ApparentPower]
[5.64707s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ApparentPower]
[5.64751s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ApparentPower]
[5.64836s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_AvgLineVoltage]
[5.64947s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_AvgLineVoltage]
[5.65002s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:AvgLineVoltage]
[5.65057s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:AvgLineVoltage]
[5.65088s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:AvgLineVoltage]
[5.65145s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_CommsOK]
[5.65185s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_CommsOK]
[5.65219s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:CommsOK]
[5.65251s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:CommsOK]. This indicates we are including all of asset instance's assetVars with name CommsOK for aggregation
[5.65288s  ] [info    ] [setupCalculateV] [/status/pcs:CommsOK] parent asset manager [pcs] asset manager [pcs_1]
[5.65322s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [CommsOK] for [pcs_1]
[5.65359s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:CommsOK]
[5.65389s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:CommsOK]
[5.65421s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:CommsOK]
[5.65449s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:CommsOK]
[5.65489s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_DCClosed]
[5.65524s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_DCClosed]
[5.65577s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:DCClosed]
[5.65635s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:DCClosed]. This indicates we are including all of asset instance's assetVars with name DCClosed for aggregation
[5.65703s  ] [info    ] [setupCalculateV] [/status/pcs:DCClosed] parent asset manager [pcs] asset manager [pcs_1]
[5.65745s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [DCClosed] for [pcs_1]
[5.65816s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:DCClosed]
[5.6586s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:DCClosed]
[5.65911s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:DCClosed]
[5.65952s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:DCClosed]
[5.66002s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_DCCurrent]
[5.66033s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_DCCurrent]
[5.6607s   ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:DCCurrent]
[5.6612s   ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:DCCurrent]. This indicates we are including all of asset instance's assetVars with name DCCurrent for aggregation
[5.66152s  ] [info    ] [setupCalculateV] [/status/pcs:DCCurrent] parent asset manager [pcs] asset manager [pcs_1]
[5.66179s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [DCCurrent] for [pcs_1]
[5.66214s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:DCCurrent]
[5.66252s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:DCCurrent]
[5.66283s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:DCCurrent]
[5.66308s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:DCCurrent]
[5.66372s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_DCPower]
[5.66399s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_DCPower]
[5.66427s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:DCPower]
[5.66454s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:DCPower]. This indicates we are including all of asset instance's assetVars with name DCPower for aggregation
[5.66481s  ] [info    ] [setupCalculateV] [/status/pcs:DCPower] parent asset manager [pcs] asset manager [pcs_1]
[5.66524s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [DCPower] for [pcs_1]
[5.6656s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:DCPower]
[5.66593s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:DCPower]
[5.66627s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:DCPower]
[5.66659s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:DCPower]
[5.66706s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_DCVoltage_Calculated]
[5.66738s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_DCVoltage_Calculated]
[5.66769s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:DCVoltage_Calculated]
[5.66799s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:DCVoltage_Calculated]. This indicates we are including all of asset instance's assetVars with name DCVoltage for aggregation
[5.66829s  ] [info    ] [setupCalculateV] [/status/pcs:DCVoltage_Calculated] parent asset manager [pcs] asset manager [pcs_1]
[5.66874s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:DCVoltage_Calculated]
[5.66911s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:DCVoltage_Calculated]
[5.6696s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_Frequency]
[5.67007s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_Frequency]
[5.67049s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:Frequency]
[5.6715s   ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:Frequency]. This indicates we are including all of asset instance's assetVars with name Frequency for aggregation
[5.67361s  ] [info    ] [setupCalculateV] [/status/pcs:Frequency] parent asset manager [pcs] asset manager [pcs_1]
[5.67432s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [Frequency] for [pcs_1]
[5.67537s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:Frequency]
[5.67678s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:Frequency]
[5.67742s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:Frequency]
[5.67797s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:Frequency]
[5.67866s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_FrequencySetpointFeedback]
[5.67911s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_FrequencySetpointFeedback]
[5.67949s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:FrequencySetpointFeedback]
[5.68006s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:FrequencySetpointFeedback]. This indicates we are including all of asset instance's assetVars with name FrequencySetpointFeedback for aggregation
[5.68041s  ] [info    ] [setupCalculateV] [/status/pcs:FrequencySetpointFeedback] parent asset manager [pcs] asset manager [pcs_1]
[5.68072s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [FrequencySetpointFeedback] for [pcs_1]
[5.68117s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:FrequencySetpointFeedback]
[5.68145s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:FrequencySetpointFeedback]
[5.68185s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:FrequencySetpointFeedback]
[5.68223s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:FrequencySetpointFeedback]
[5.68279s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_IsAlarming]
[5.68309s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_IsAlarming]
[5.68339s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:IsAlarming]
[5.68373s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:IsAlarming]
[5.684s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:IsAlarming]
[5.68439s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_IsFaulted]
[5.68467s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_IsFaulted]
[5.68495s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:IsFaulted]
[5.68524s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:IsFaulted]
[5.68552s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:IsFaulted]
[5.68625s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_L1Current]
[5.68654s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_L1Current]
[5.68687s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:L1Current]
[5.68744s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:L1Current]. This indicates we are including all of asset instance's assetVars with name L1Current for aggregation
[5.68772s  ] [info    ] [setupCalculateV] [/status/pcs:L1Current] parent asset manager [pcs] asset manager [pcs_1]
[5.68799s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [L1Current] for [pcs_1]
[5.68836s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:L1Current]
[5.68861s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:L1Current]
[5.6889s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:L1Current]
[5.68915s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:L1Current]
[5.68953s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_L1L2Voltage]
[5.68987s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_L1L2Voltage]
[5.6902s   ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:L1L2Voltage]
[5.69056s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:L1L2Voltage]. This indicates we are including all of asset instance's assetVars with name L1L2Voltage for aggregation
[5.69087s  ] [info    ] [setupCalculateV] [/status/pcs:L1L2Voltage] parent asset manager [pcs] asset manager [pcs_1]
[5.69121s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [L1L2Voltage] for [pcs_1]
[5.69152s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:L1L2Voltage]
[5.69181s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:L1L2Voltage]
[5.69223s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:L1L2Voltage]
[5.69264s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:L1L2Voltage]
[5.69385s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_L2Current]
[5.69432s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_L2Current]
[5.69487s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:L2Current]
[5.69531s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:L2Current]. This indicates we are including all of asset instance's assetVars with name L2Current for aggregation
[5.69568s  ] [info    ] [setupCalculateV] [/status/pcs:L2Current] parent asset manager [pcs] asset manager [pcs_1]
[5.69608s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [L2Current] for [pcs_1]
[5.69643s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:L2Current]
[5.69671s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:L2Current]
[5.6971s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:L2Current]
[5.69744s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:L2Current]
[5.69781s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_L2L3Voltage]
[5.69809s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_L2L3Voltage]
[5.6984s   ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:L2L3Voltage]
[5.69872s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:L2L3Voltage]. This indicates we are including all of asset instance's assetVars with name L2L3Voltage for aggregation
[5.699s    ] [info    ] [setupCalculateV] [/status/pcs:L2L3Voltage] parent asset manager [pcs] asset manager [pcs_1]
[5.6993s   ] [info    ] [setupCalculateV] Creating AM, default double assetVar [L2L3Voltage] for [pcs_1]
[5.6996s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:L2L3Voltage]
[5.69994s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:L2L3Voltage]
[5.70026s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:L2L3Voltage]
[5.70077s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:L2L3Voltage]
[5.70158s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_L3Current]
[5.70216s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_L3Current]
[5.70249s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:L3Current]
[5.70276s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:L3Current]. This indicates we are including all of asset instance's assetVars with name L3Current for aggregation
[5.70302s  ] [info    ] [setupCalculateV] [/status/pcs:L3Current] parent asset manager [pcs] asset manager [pcs_1]
[5.70327s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [L3Current] for [pcs_1]
[5.70357s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:L3Current]
[5.70388s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:L3Current]
[5.70418s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:L3Current]
[5.70445s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:L3Current]
[5.70511s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_L3L1Voltage]
[5.70539s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_L3L1Voltage]
[5.70578s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:L3L1Voltage]
[5.70605s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:L3L1Voltage]. This indicates we are including all of asset instance's assetVars with name L3L1Voltage for aggregation
[5.7063s   ] [info    ] [setupCalculateV] [/status/pcs:L3L1Voltage] parent asset manager [pcs] asset manager [pcs_1]
[5.70654s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [L3L1Voltage] for [pcs_1]
[5.707s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:L3L1Voltage]
[5.70717s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:L3L1Voltage]
[5.70742s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:L3L1Voltage]
[5.70813s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:L3L1Voltage]
[5.70846s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_MaxIGBTTemperature]
[5.70901s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_MaxIGBTTemperature]
[5.70923s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:MaxIGBTTemperature]
[5.70947s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:MaxIGBTTemperature]. This indicates we are including all of asset instance's assetVars with name MaxIGBTTemperature for aggregation
[5.71028s  ] [info    ] [setupCalculateV] [/status/pcs:MaxIGBTTemperature] parent asset manager [pcs] asset manager [pcs_1]
[5.71049s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [MaxIGBTTemperature] for [pcs_1]
[5.71099s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:MaxIGBTTemperature]
[5.71119s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:MaxIGBTTemperature]
[5.71143s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:MaxIGBTTemperature]
[5.71163s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:MaxIGBTTemperature]
[5.71187s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_PowerFactor]
[5.71226s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_PowerFactor]
[5.71246s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:PowerFactor]
[5.71264s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:PowerFactor]. This indicates we are including all of asset instance's assetVars with name PowerFactor for aggregation
[5.71285s  ] [info    ] [setupCalculateV] [/status/pcs:PowerFactor] parent asset manager [pcs] asset manager [pcs_1]
[5.71309s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [PowerFactor] for [pcs_1]
[5.71332s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:PowerFactor]
[5.71354s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:PowerFactor]
[5.71394s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:PowerFactor]
[5.71426s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:PowerFactor]
[5.71454s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePower]
[5.71482s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePower]
[5.71516s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:ReactivePower]
[5.71536s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:ReactivePower]. This indicates we are including all of asset instance's assetVars with name ReactivePower for aggregation
[5.71557s  ] [info    ] [setupCalculateV] [/status/pcs:ReactivePower] parent asset manager [pcs] asset manager [pcs_1]
[5.71587s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [ReactivePower] for [pcs_1]
[5.71611s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:ReactivePower]
[5.71633s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:ReactivePower]
[5.71674s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ReactivePower]
[5.71698s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ReactivePower]
[5.71727s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerRampRateFeedback]
[5.71752s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerRampRateFeedback]
[5.71783s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:ReactivePowerRampRateFeedback]
[5.71805s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:ReactivePowerRampRateFeedback]. This indicates we are including all of asset instance's assetVars with name ReactivePowerRampRateFeedback for aggregation
[5.7183s   ] [info    ] [setupCalculateV] [/status/pcs:ReactivePowerRampRateFeedback] parent asset manager [pcs] asset manager [pcs_1]
[5.71858s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [ReactivePowerRampRateFeedback] for [pcs_1]
[5.7189s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:ReactivePowerRampRateFeedback]
[5.71919s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:ReactivePowerRampRateFeedback]
[5.71978s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ReactivePowerRampRateFeedback]
[5.72068s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ReactivePowerRampRateFeedback]
[5.72126s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerSetpointFeedback]
[5.72163s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_ReactivePowerSetpointFeedback]
[5.72198s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:ReactivePowerSetpointFeedback]
[5.72225s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:ReactivePowerSetpointFeedback]. This indicates we are including all of asset instance's assetVars with name ReactivePowerSetpointFeedback for aggregation
[5.72281s  ] [info    ] [setupCalculateV] [/status/pcs:ReactivePowerSetpointFeedback] parent asset manager [pcs] asset manager [pcs_1]
[5.72317s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [ReactivePowerSetpointFeedback] for [pcs_1]
[5.72362s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:ReactivePowerSetpointFeedback]
[5.72482s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:ReactivePowerSetpointFeedback]
[5.72525s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:ReactivePowerSetpointFeedback]
[5.72554s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:ReactivePowerSetpointFeedback]
[5.726s    ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_TotalAlarmCnt]
[5.72631s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_TotalAlarmCnt]
[5.72681s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:TotalAlarmCnt]
[5.72728s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:TotalAlarmCnt]. This indicates we are including all of asset instance's assetVars with name TotalAlarmCnt for aggregation
[5.72768s  ] [info    ] [setupCalculateV] [/status/pcs:TotalAlarmCnt] parent asset manager [pcs] asset manager [pcs_1]
[5.72812s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [TotalAlarmCnt] for [pcs_1]
[5.72851s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:TotalAlarmCnt]
[5.72921s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:TotalAlarmCnt]
[5.73039s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:TotalAlarmCnt]
[5.73099s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:TotalAlarmCnt]
[5.73157s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_TotalFaultCnt]
[5.73219s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_TotalFaultCnt]
[5.73267s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:TotalFaultCnt]
[5.73297s  ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:TotalFaultCnt]. This indicates we are including all of asset instance's assetVars with name TotalFaultCnt for aggregation
[5.73323s  ] [info    ] [setupCalculateV] [/status/pcs:TotalFaultCnt] parent asset manager [pcs] asset manager [pcs_1]
[5.73347s  ] [info    ] [setupCalculateV] Creating AM, default double assetVar [TotalFaultCnt] for [pcs_1]
[5.73373s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:TotalFaultCnt]
[5.734s    ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:TotalFaultCnt]
[5.73429s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:TotalFaultCnt]
[5.73452s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:TotalFaultCnt]
[5.73481s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_VoltageSetpointFeedback]
[5.73504s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_VoltageSetpointFeedback]
[5.73528s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:VoltageSetpointFeedback]
[5.7355s   ] [info    ] [setupCalculateV] Found the name of the asset [pcs] in param [variable1] in [/status/pcs:VoltageSetpointFeedback]. This indicates we are including all of asset instance's assetVars with name VoltageSetpointFeedback for aggregation
[5.73572s  ] [info    ] [setupCalculateV] [/status/pcs:VoltageSetpointFeedback] parent asset manager [pcs] asset manager [pcs_1]
[5.736s    ] [info    ] [setupCalculateV] Creating AM, default double assetVar [VoltageSetpointFeedback] for [pcs_1]
[5.73629s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:VoltageSetpointFeedback]
[5.73653s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:VoltageSetpointFeedback]
[5.73679s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:VoltageSetpointFeedback]
[5.73732s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:VoltageSetpointFeedback]
[5.73913s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_pcs]
[5.73946s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_pcs]
[5.74004s  ] [info    ] [setParamfromAf ]  created var for uri [/components/pcs] as [/components/pcs:status]
[5.7405s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_pcs]
[5.74174s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_pcs]
[5.74223s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs:CalculateVar_HeartbeatWrite]
[5.74254s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs:CalculateVar_HeartbeatWrite]
[5.74291s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs:HeartbeatWrite]
[5.74324s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:HeartbeatWrite]
[5.7436s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:HeartbeatWrite]
[5.74412s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [updateHeartbeatWrite_pcs]
[5.74434s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [updateHeartbeatWrite_pcs]
[5.74493s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:StopEnable] tRun(mS) 495.081 loops 129
[5.74523s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 495.384 loops 130
[5.74551s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:StopEnable] tRun(mS) 495.663 loops 131
[5.74599s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:StandbyEnable] tRun(mS) 496.147 loops 132
[5.74632s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 496.473 loops 133
[5.74653s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs:StandbyEnable] tRun(mS) 496.691 loops 134
[5.74693s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:runOpts_pcs_1] tRun(mS) 497.079 loops 135
[5.74731s  ] [info    ] [SchedItemOpts  ] @@@@@ [/system/commands:runOpts_pcs_1] found cjopts ready to schedule res1 [0x0] tav [/system/commands:run]
[5.74776s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs_1:pubAssets_pcs_1] tRun(mS) 497.907 loops 136
[5.74802s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/pcs_1]
[5.74832s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/flex_pub:perf_/assets/pcs/pcs_1]
[5.74879s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 498.946 loops 137
[5.74909s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs_1:pubAssets_pcs_1] tRun(mS) 499.245 loops 138
[5.74946s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [pubAssets_pcs_1]
[5.74985s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [pubAssets_pcs_1]
[5.75104s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs_1:runMonitor_pcs_1] tRun(mS) 501.121 loops 139
[5.75209s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_ActivePowerCmdConvert]
[5.7525s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_ActivePowerCmdConvert]
[5.75419s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs_1:ActivePowerCmdConvert]
[5.75459s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:ActivePowerCmdConvert]
[5.75541s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:ActivePowerCmdConvert]
[5.75622s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_ActivePowerRampRateCmdConvert]
[5.75658s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_ActivePowerRampRateCmdConvert]
[5.75709s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs_1:ActivePowerRampRateCmdConvert]
[5.7575s   ] [info    ] [setupCalculateV] assetVar param /controls/pcs_1:ActivePowerRampRate does not exist. Creating new one for am [pcs_1]
[5.75789s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:ActivePowerRampRateCmdConvert]
[5.75822s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:ActivePowerRampRateCmdConvert]
[5.75862s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/controls/pcs_1:ActivePowerRampRateCmdConvert] tRun(mS) 508.769 loops 140
[5.759s    ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/controls/pcs_1:ActivePowerRampRateCmd] tRun(mS) 509.157 loops 141
[5.75937s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs_1] with [/controls/pcs_1:ActivePowerRampRateCmd]
[5.75988s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs_1","message":"Sent command value [1] to [/controls/pcs_1:ActivePowerRampRateCmd]","severity":1}]
[5.76027s  ] [info    ] [record         ] Sent command value [1] to [/controls/pcs_1:ActivePowerRampRateCmd]
[5.76073s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:ActivePowerRampRateCmdSuccess]
[5.76118s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:ActivePowerRampRateCmdSuccess]
[5.76162s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/status/pcs_1:ActivePowerRampRateCmdSuccess] tRun(mS) 511.772 loops 142
[5.76192s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs_1","message":"Received command value [1] from [/controls/pcs_1:ActivePowerRampRateCmd]","severity":1}]
[5.76232s  ] [info    ] [record         ] Received command value [1] from [/controls/pcs_1:ActivePowerRampRateCmd]
[5.76295s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_ActivePowerSetpointEnable]
[5.76332s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_ActivePowerSetpointEnable]
[5.76365s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs_1:ActivePowerSetpointEnable]
[5.76396s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:ActivePowerSetpointEnable]
[5.76418s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:ActivePowerSetpointEnable]
[5.76467s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_FrequencySetpointEnable]
[5.76499s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_FrequencySetpointEnable]
[5.76526s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs_1:FrequencySetpointEnable]
[5.76551s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:FrequencySetpointEnable]
[5.76574s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:FrequencySetpointEnable]
[5.76607s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_GridFollowPQEnable]
[5.76629s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_GridFollowPQEnable]
[5.7666s   ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs_1:GridFollowPQEnable]
[5.76702s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:GridFollowPQEnable]
[5.76733s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:GridFollowPQEnable]
[5.76769s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_GridFormVFEnable]
[5.76793s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_GridFormVFEnable]
[5.76815s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs_1:GridFormVFEnable]
[5.76845s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:GridFormVFEnable]
[5.76867s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:GridFormVFEnable]
[5.76902s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_GridFormVSGEnable]
[5.76925s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_GridFormVSGEnable]
[5.76945s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs_1:GridFormVSGEnable]
[5.76969s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:GridFormVSGEnable]
[5.7699s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:GridFormVSGEnable]
[5.77023s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_ReactivePowerCmdConvert]
[5.77047s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_ReactivePowerCmdConvert]
[5.7707s   ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs_1:ReactivePowerCmdConvert]
[5.77098s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:ReactivePowerCmdConvert]
[5.77119s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:ReactivePowerCmdConvert]
[5.77145s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_ReactivePowerRampRateCmdConvert]
[5.7717s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_ReactivePowerRampRateCmdConvert]
[5.7719s   ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs_1:ReactivePowerRampRateCmdConvert]
[5.7721s   ] [info    ] [setupCalculateV] assetVar param /controls/pcs_1:ReactivePowerRampRate does not exist. Creating new one for am [pcs_1]
[5.77233s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:ReactivePowerRampRateCmdConvert]
[5.77252s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:ReactivePowerRampRateCmdConvert]
[5.77276s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/controls/pcs_1:ReactivePowerRampRateCmdConvert] tRun(mS) 522.914 loops 143
[5.77299s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/controls/pcs_1:ReactivePowerRampRateCmd] tRun(mS) 523.147 loops 144
[5.77321s  ] [info    ] [sendCmd        ] Condition is satisfied for asset [pcs_1] with [/controls/pcs_1:ReactivePowerRampRateCmd]
[5.77353s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs_1","message":"Sent command value [1] to [/controls/pcs_1:ReactivePowerRampRateCmd]","severity":1}]
[5.77375s  ] [info    ] [record         ] Sent command value [1] to [/controls/pcs_1:ReactivePowerRampRateCmd]
[5.77402s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:ReactivePowerRampRateCmdSuccess]
[5.77426s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:ReactivePowerRampRateCmdSuccess]
[5.77476s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/status/pcs_1:ReactivePowerRampRateCmdSuccess] tRun(mS) 524.916 loops 145
[5.77501s  ] [info    ] [sendEvent      ] sending event  xxx >>>>>>>>>>>>>>>> [{"source":"pcs_1","message":"Received command value [1] from [/controls/pcs_1:ReactivePowerRampRateCmd]","severity":1}]
[5.77526s  ] [info    ] [record         ] Received command value [1] from [/controls/pcs_1:ReactivePowerRampRateCmd]
[5.77563s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_ReactivePowerSetpointEnable]
[5.77599s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_ReactivePowerSetpointEnable]
[5.77628s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs_1:ReactivePowerSetpointEnable]
[5.77675s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:ReactivePowerSetpointEnable]
[5.77713s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:ReactivePowerSetpointEnable]
[5.77764s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_StandbyEnable]
[5.77811s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_StandbyEnable]
[5.77867s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs_1:StandbyEnable]
[5.77915s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:StandbyEnable]
[5.7795s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:StandbyEnable]
[5.78018s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_StartEnable]
[5.78058s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_StartEnable]
[5.78089s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs_1:StartEnable]
[5.78117s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:StartEnable]
[5.78138s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:StartEnable]
[5.78196s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_StopEnable]
[5.78228s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_StopEnable]
[5.78258s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs_1:StopEnable]
[5.78287s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:StopEnable]
[5.78311s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:StopEnable]
[5.7838s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_VoltageSetpointEnable]
[5.78411s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_VoltageSetpointEnable]
[5.78441s  ] [info    ] [setupCalculateV] Setting up params for [/controls/pcs_1:VoltageSetpointEnable]
[5.78481s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:VoltageSetpointEnable]
[5.78519s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:VoltageSetpointEnable]
[5.78578s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_IsAlarming]
[5.78612s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_IsAlarming]
[5.78634s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs_1:IsAlarming]
[5.7866s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:IsAlarming]
[5.78694s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:IsAlarming]
[5.7873s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_IsFaulted]
[5.78751s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_IsFaulted]
[5.78777s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs_1:IsFaulted]
[5.78799s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:IsFaulted]
[5.7882s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:IsFaulted]
[5.78849s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_TotalAlarmCnt]
[5.80036s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_TotalAlarmCnt]
[5.80106s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs_1:TotalAlarmCnt]
[5.80184s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_TotalFaultCnt]
[5.80228s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_TotalFaultCnt]
[5.80262s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs_1:TotalFaultCnt]
[5.80307s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 553.220 loops 146
[5.80337s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs_1:runMonitor_pcs_1] tRun(mS) 553.523 loops 147
[5.80453s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [runMonitor_pcs_1]
[5.80476s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [runMonitor_pcs_1]
[5.80506s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs_1:checkInputs_pcs_1] tRun(mS) 555.207 loops 148
[5.80534s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 555.493 loops 149
[5.80555s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs_1:checkInputs_pcs_1] tRun(mS) 555.702 loops 150
[5.80575s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [checkInputs_pcs_1]
[5.80596s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [checkInputs_pcs_1]
[5.80627s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs_1:updateHeartbeatWrite_pcs_1] tRun(mS) 556.422 loops 151
[5.80663s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/reload/pcs_1:CalculateVar_HeartbeatWrite]
[5.80695s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/reload/pcs_1:CalculateVar_HeartbeatWrite]
[5.80722s  ] [info    ] [setupCalculateV] Setting up params for [/status/pcs_1:HeartbeatWrite]
[5.80753s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:HeartbeatWrite]
[5.80783s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:HeartbeatWrite]
[5.80819s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/status/pcs_1:HeartbeatWrite] tRun(mS) 558.340 loops 152
[5.80851s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 558.660 loops 153
[5.80877s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs_1:updateHeartbeatWrite_pcs_1] tRun(mS) 558.921 loops 154
[5.80907s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/status/pcs_1:HeartbeatWrite] tRun(mS) 559.226 loops 155
[5.80933s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [updateHeartbeatWrite_pcs_1]
[5.8104s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [updateHeartbeatWrite_pcs_1]
[5.81084s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs_1:handlePowerCmd_pcs_1] tRun(mS) 560.990 loops 156
[5.81144s  ] [info    ] [HandlePowerInit] RUNNING RELOAD 2 for pcs_1
[5.81166s  ] [info    ] [HandlePowerInit] Done checking hw and config
[5.81195s  ] [info    ] [HandlePowerInit] pcs_1 Found Pr_c [1200]
[5.81213s  ] [info    ] [HandlePowerInit] pcs_1 Found Qr_c [1100]
[5.81232s  ] [info    ] [HandlePowerInit] pcs_1 Found Sr_c [1350]
[5.8125s   ] [info    ] [HandlePowerInit] pcs_1 Found pfr_c [0.8]
[5.81269s  ] [info    ] [HandlePowerInit] Done initializing vars
[5.81288s  ] [info    ] [HandlePowerInit] pcs_1 No priority found in /config or /controls. Setting power priority for pcs_1 to default P P
[5.81305s  ] [info    ] [HandlePowerInit] Done initializing Priority
[5.81322s  ] [info    ] [HandlePowerInit] Done initializing Ps and Qs
[5.8134s   ] [info    ] [HandlePowerInit] Rated Active/Reactive/Apparent Powers set to 1200/1100/1350
[5.81357s  ] [info    ] [HandlePowerInit] Done initing vars
[5.81373s  ] [info    ] [HandlePowerInit] Done setting max Ps
[5.81394s  ] [info    ] [HandlePowerInit] Rated Power for pcs_1:
[5.81413s  ] [info    ] [HandlePowerInit]        Apparent Power  [1350]
[5.81429s  ] [info    ] [HandlePowerInit]        Reactive Power  [1100]
[5.81445s  ] [info    ] [HandlePowerInit] Max Powers for pcs_1:
[5.81463s  ] [info    ] [HandlePowerInit]        Charge Power    [-1200]
[5.81479s  ] [info    ] [HandlePowerInit]        Discharge Power [1200]
[5.81502s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/system/commands:run] tRun(mS) 565.177 loops 157
[5.81521s  ] [error   ] [runActValfromCj] ####### onSet action: Max Loops schedAv [/sched/fims:dummy] av [/sched/pcs_1:handlePowerCmd_pcs_1] tRun(mS) 565.362 loops 158
[5.8154s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [handlePowerCmd_pcs_1]
[5.81556s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [handlePowerCmd_pcs_1]
[5.95102s  ] [info    ] [LogInfo        ] [/status/pcs:SystemState] received a value of [Stop]
[5.95165s  ] [info    ] [setParamfromAf ]  created var for uri [/status/bms] as [/status/bms:Voltage]
[5.95301s  ] [error   ] [setOutValue    ] Warning possible loopbackvar [/components/pcs_registers_fast:current_status] check abf->useAv [true]
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[NestFactory] [39m[32mStarting Nest application...[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMongooseModule dependencies initialized[39m[38;5;3m +67ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPassportModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mLoggerFilterModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mBffModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mThrottlerModule dependencies initialized[39m[38;5;3m +29ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigHostModule dependencies initialized[39m[38;5;3m +2ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mLoggingModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mDiscoveryModule dependencies initialized[39m[38;5;3m +7ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mDBIModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppEnvModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mServeStaticModule dependencies initialized[39m[38;5;3m +4ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mConfigModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mEventsModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mPermissionsModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mScheduleModule dependencies initialized[39m[38;5;3m +14ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +3ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mThrottlerModule dependencies initialized[39m[38;5;3m +7ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mJwtModule dependencies initialized[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mDashboardsModule dependencies initialized[39m[38;5;3m +10ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mWebUIConfigModule dependencies initialized[39m[38;5;3m +2ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:27 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mLayoutsModule dependencies initialized[39m[38;5;3m +2ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAppModule dependencies initialized[39m[38;5;3m +20ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mLockModeModule dependencies initialized[39m[38;5;3m +11ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mDashboardModule dependencies initialized[39m[38;5;3m +15ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAuditLoggingModule dependencies initialized[39m[38;5;3m +3ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mSiteStatusModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAssetsPageModule dependencies initialized[39m[38;5;3m +6ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mSystemStatusModule dependencies initialized[39m[38;5;3m +2ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mLegacyRestModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mFimsModule dependencies initialized[39m[38;5;3m +0ms[39m
[6.41417s  ] [info    ] [BatteryRackBala] BatteryRackBalanceCoarse
[6.41477s  ] [info    ] [BatteryRackBala] Before Test
[6.41508s  ] [info    ] [TestVoltageArbi] TestVoltageArbitration
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mRestModule dependencies initialized[39m[38;5;3m +1ms[39m
[6.41539s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[6.41596s  ] [info    ] [VoltageArbitrat] minVoltage 1004.5
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAssetsModule dependencies initialized[39m[38;5;3m +1ms[39m
[6.41618s  ] [info    ] [VoltageArbitrat] minVoltage 1004.5
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mSchedulerModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mErcotOverrideModule dependencies initialized[39m[38;5;3m +0ms[39m
[6.41671s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 95.5
[6.41801s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 95.5
[6.41822s  ] [info    ] [VoltageArbitrat] min 95.5
[6.41843s  ] [info    ] [VoltageArbitrat] bestVoltage 1004.5
[6.41863s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[6.41908s  ] [info    ] [PrintVoltageArb] 

Test Number #1 
Test Name: [1 Rack Open and Many Closed] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1004.5      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1004.5      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1004.5      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[6.41932s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[6.41969s  ] [info    ] [VoltageArbitrat] minVoltage 1200
[6.41999s  ] [info    ] [VoltageArbitrat] minVoltage 1230.3
[6.42026s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 100
[6.42064s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 130.29999999999995
[6.42103s  ] [info    ] [VoltageArbitrat] min 100
[6.42131s  ] [info    ] [VoltageArbitrat] bestVoltage 1200
[6.42162s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[6.42205s  ] [info    ] [PrintVoltageArb] 

Test Number #2 
Test Name: [2 Rack Open and Both Above Average] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1200      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1230.3      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1200      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1200      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[6.42235s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[6.42261s  ] [info    ] [VoltageArbitrat] minVoltage 1000.6
[6.42286s  ] [info    ] [VoltageArbitrat] minVoltage 1056.2
[6.42311s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 99.39999999999998
[6.42357s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 43.799999999999955
[6.42383s  ] [info    ] [VoltageArbitrat] min 43.799999999999955
[6.42411s  ] [info    ] [VoltageArbitrat] bestVoltage 1056.2
[6.42428s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[6.42482s  ] [info    ] [PrintVoltageArb] 

Test Number #3 
Test Name: [2 Rack Open and Both Below Average] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1000.6      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1056.2      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1056.2      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1056.2      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[6.4251s   ] [info    ] [VoltageArbitrat] closedVoltage 1100
[6.42535s  ] [info    ] [VoltageArbitrat] minVoltage 1040.8
[6.42565s  ] [info    ] [VoltageArbitrat] minVoltage 1111.1
[6.42634s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 59.200000000000045
[6.4266s   ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 11.099999999999909
[6.42686s  ] [info    ] [VoltageArbitrat] min 11.099999999999909
[6.42716s  ] [info    ] [VoltageArbitrat] bestVoltage 1111.1
[6.42744s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[6.4278s   ] [info    ] [PrintVoltageArb] 

Test Number #4 
Test Name: [2 Rack Open (1 above and 1 below average) and the above is closer] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1111.1      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1040.8      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1111.1      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1111.1      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[6.42803s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[6.42823s  ] [info    ] [VoltageArbitrat] minVoltage 1040.8
[6.42844s  ] [info    ] [VoltageArbitrat] minVoltage 1220.4
[6.42871s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 59.200000000000045
[6.42895s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 120.40000000000009
[6.42915s  ] [info    ] [VoltageArbitrat] min 59.200000000000045
[6.42934s  ] [info    ] [VoltageArbitrat] bestVoltage 1040.8
[6.42953s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[6.42996s  ] [info    ] [PrintVoltageArb] 

Test Number #5 
Test Name: [2 Rack Open (1 above and 1 below average) and the below is closer] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1220.4      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1040.8      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1040.8      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1040.8      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[6.43017s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[6.43037s  ] [info    ] [PrintVoltageArb] 

Test Number #6 
Test Name: [1 rack open and is within deadband] 

Starting Rack List: 
Rack #1        Voltage:1100      ContactorStatus:Closed
Rack #2        Voltage:1100      ContactorStatus:Closed
Rack #3        Voltage:1101      ContactorStatus:Open
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false

Actual Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false
 


[6.43059s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[6.43108s  ] [info    ] [VoltageArbitrat] minVoltage 1234.5
[6.43137s  ] [info    ] [VoltageArbitrat] minVoltage 1234.5
[6.43158s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 134.5
[6.4318s   ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 134.5
[6.43201s  ] [info    ] [VoltageArbitrat] min 134.5
[6.43221s  ] [info    ] [VoltageArbitrat] bestVoltage 1234.5
[6.43251s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[6.4328s   ] [info    ] [PrintVoltageArb] 

Test Number #7 
Test Name: [2 Rack Open (both above), one is in the deadband and one is out] 

Starting Rack List: 
Rack #1        Voltage:1234.5      ContactorStatus:Open
Rack #2        Voltage:1101.3      ContactorStatus:Open
Rack #3        Voltage:1100      ContactorStatus:Closed
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 1234.5      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 1234.5      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[6.43305s  ] [info    ] [VoltageArbitrat] closedVoltage 1100
[6.43329s  ] [info    ] [VoltageArbitrat] minVoltage 970.3
[6.43352s  ] [info    ] [VoltageArbitrat] minVoltage 970.3
[6.43376s  ] [info    ] [VoltageArbitrat] minVoltageDiffFromClosed 129.70000000000005
[6.43399s  ] [info    ] [VoltageArbitrat] maxVoltageDiffFromClosed 129.70000000000005
[6.43423s  ] [info    ] [VoltageArbitrat] min 129.70000000000005
[6.43447s  ] [info    ] [VoltageArbitrat] bestVoltage 970.3
[6.43467s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[6.43488s  ] [info    ] [PrintVoltageArb] 

Test Number #8 
Test Name: [2 Rack Open (both below), one is in the deadband and one is out] 

Starting Rack List: 
Rack #1        Voltage:1098.6      ContactorStatus:Open
Rack #2        Voltage:970.3      ContactorStatus:Open
Rack #3        Voltage:1100      ContactorStatus:Closed
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: 970.3      
Closed Rack Average Voltage: 1100      
Balancing Needed: true

Actual Result: 
Target Voltage: 970.3      
Closed Rack Average Voltage: 1100      
Balancing Needed: true
 


[6.4355s   ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[6.43573s  ] [info    ] [PrintVoltageArb] 

Test Number #9 
Test Name: [2 Rack Open (1 above 1 below), both are within the deadband] 

Starting Rack List: 
Rack #1        Voltage:1098.6      ContactorStatus:Open
Rack #2        Voltage:1100.9      ContactorStatus:Open
Rack #3        Voltage:1100      ContactorStatus:Closed
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:1100      ContactorStatus:Closed
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false

Actual Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false
 


[6.43591s  ] [info    ] [PrintVoltageArb] PrintVoltageArbitrationTestCaseResult
[6.43611s  ] [info    ] [PrintVoltageArb] 

Test Number #10 
Test Name: [Ignore an open rack that has been configured to be so] 

Starting Rack List: 
Rack #1        Voltage:1098.6      ContactorStatus:Open
Rack #2        Voltage:1100.9      ContactorStatus:Open
Rack #3        Voltage:1100      ContactorStatus:Closed
Rack #4        Voltage:1100.1      ContactorStatus:Closed
Rack #5        Voltage:960      ContactorStatus:Open
Rack #6        Voltage:1099.9      ContactorStatus:Closed

Expected Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false

Actual Result: 
Target Voltage: -1      
Closed Rack Average Voltage: 1100      
Balancing Needed: false
 


[6.43629s  ] [info    ] [BatteryRackBala] After Test
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMongooseCoreModule dependencies initialized[39m[38;5;3m +33ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMongooseModule dependencies initialized[39m[38;5;3m +14ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mMongooseModule dependencies initialized[39m[38;5;3m +3ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mSiteAdminsModule dependencies initialized[39m[38;5;3m +17ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mUsersModule dependencies initialized[39m[38;5;3m +2ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[InstanceLoader] [39m[32mAuthModule dependencies initialized[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mAuditLoggingGateway subscribed to the "audit-logging" message[39m[38;5;3m +116ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mFimsGateway subscribed to the "request" message[39m[38;5;3m +7ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mFimsGateway subscribed to the "fimsNoReply" message[39m[38;5;3m +8ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mFimsGateway subscribed to the "subscribe" message[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mLayoutsGateway subscribed to the "layouts" message[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mAssetsPageGateway subscribed to the "assetsPage" message[39m[38;5;3m +3ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mLockModeGateway subscribed to the "lockMode" message[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mSchedulerGateway subscribed to the "scheduler" message[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mDashboardGateway subscribed to the "dashboard" message[39m[38;5;3m +2ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mSiteStatusGateway subscribed to the "sitestatus" message[39m[38;5;3m +8ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mErcotOverrideGateway subscribed to the "ercotOverride" message[39m[38;5;3m +8ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[WebSocketsController] [39m[32mSystemStatusGateway subscribed to the "systemStatus" message[39m[38;5;3m +6ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mUsersController {/api/users}:[39m[38;5;3m +3ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users, GET} route[39m[38;5;3m +3ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id, PUT} route[39m[38;5;3m +4ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id, DELETE} route[39m[38;5;3m +4ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/users/:id, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mSiteAdminsController {/api/site-admins}:[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/site-admins, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/site-admins, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/site-admins/radius-test, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAuditLoggingController {/api/audit-logging}:[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/audit-logging, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mFimsController {/api/fims}:[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/fims/one-time-auth, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/fims/get, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/fims/set, PUT} route[39m[38;5;3m +4ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/fims/post, POST} route[39m[38;5;3m +9ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/fims/delete, DELETE} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAuthController {/api}:[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/login, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/login/mfa, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/login/passExp, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/refresh_token, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/authenticate-user-token, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/logout, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mAssetsController {/api/assets}:[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/assets, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/assets, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mLayoutsController {/api/layouts}:[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/layouts, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/layouts, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mDashboardsController {/api}:[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/dashboards, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/dashboards, POST} route[39m[38;5;3m +2ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mRestController {/api/rest/v2}:[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/rest/v2/:endpoint(*), POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/rest/v2/:endpoint(*), GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/rest/v2/:endpoint(*), PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/rest/v2/:endpoint(*), DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mLegacyRestController {/api/rest/v1}:[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/rest/v1/:endpoint(*), GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/rest/v1/:endpoint(*)/:value, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mLegacyRestController {/api/rest}:[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/rest/:endpoint(*), GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/rest/:endpoint(*)/:value, PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mSchedulerController {/api/scheduler}:[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/events, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/events/:siteId/:eventId, DELETE} route[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/events/:siteId, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/events/:siteId/:eventId, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/events/:siteId/:eventId/exceptions, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/modes, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/modes/:modeId, DELETE} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/modes, POST} route[39m[38;5;3m +2ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/modes/:modeId, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/configuration, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/configuration, POST} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/timezones, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/scheduler/connected, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mEventsController {/api/events}:[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/events, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mSiteStatusController {/api}:[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/sitestatus, GET} route[39m[38;5;3m +4ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mErcotOverrideController {/api/ercot-override}:[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/ercot-override/sites, GET} route[39m[38;5;3m +2ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/ercot-override/variable-names, GET} route[39m[38;5;3m +2ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/ercot-override/variable-values/:id, GET} route[39m[38;5;3m +2ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/ercot-override/override-value/:id/:name, POST} route[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mSystemStatusController {/api/system-status}:[39m[38;5;3m +2ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/system-status, GET} route[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/system-status/:serviceName/start, PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/system-status/:serviceName/stop, PUT} route[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/system-status/:serviceName/restart, PUT} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RoutesResolver] [39m[32mWebUIConfigController {/api}:[39m[38;5;3m +0ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/web-ui-config, GET} route[39m[38;5;3m +1ms[39m
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[RouterExplorer] [39m[32mMapped {/api/login-info, GET} route[39m[38;5;3m +0ms[39m
Users found in Database:  1
[32m[Nest] 27608  - [39m01/23/2024, 8:19:28 PM [32m    LOG[39m [38;5;3m[NestApplication] [39m[32mNest application successfully started[39m[38;5;3m +91ms[39m
web_server listening on port 443
[6.85672s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs:FaultShutdown]
[6.8583s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs:FaultShutdown]
[6.9246s   ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/status/pcs_1:FaultShutdown]
[6.9254s   ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/status/pcs_1:FaultShutdown]
[33.3326s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_config_after_30s]
[33.3333s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_config_after_30s]
[33.407s   ] [info    ] [write_cjson    ] Wrote 974441 bytes to file /var/log/ess_controller/run_configs_ess_after_30_seconds.json
[34.3325s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_config_after_31s]
[34.3332s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_config_after_31s]
[34.3447s  ] [info    ] [Every1000mS    ] Wrote 478576 bytes to file /var/log/ess_controller/run_configs_ess_after_31_seconds.json
[35.3327s  ] [info    ] [setVal         ] setVal setting lVal->valuestring to  [/perf/ess:perf_config_after_32s]
[35.3344s  ] [info    ] [setVal         ] setVal setting aVal->valuestring to  [/perf/ess:perf_config_after_32s]
[35.4384s  ] [info    ] [write_cjson    ] Wrote 975037 bytes to file /var/log/ess_controller/run_configs_ess_after_32_seconds.json
